/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "5a74");
/******/ })
/************************************************************************/
/******/ ({

/***/ "00ee":
/***/ (function(module, exports, __webpack_require__) {

var wellKnownSymbol = __webpack_require__("b622");

var TO_STRING_TAG = wellKnownSymbol('toStringTag');
var test = {};

test[TO_STRING_TAG] = 'z';

module.exports = String(test) === '[object z]';


/***/ }),

/***/ "0366":
/***/ (function(module, exports, __webpack_require__) {

var aFunction = __webpack_require__("1c0b");

// optional / simple context binding
module.exports = function (fn, that, length) {
  aFunction(fn);
  if (that === undefined) return fn;
  switch (length) {
    case 0: return function () {
      return fn.call(that);
    };
    case 1: return function (a) {
      return fn.call(that, a);
    };
    case 2: return function (a, b) {
      return fn.call(that, a, b);
    };
    case 3: return function (a, b, c) {
      return fn.call(that, a, b, c);
    };
  }
  return function (/* ...args */) {
    return fn.apply(that, arguments);
  };
};


/***/ }),

/***/ "0538":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var aFunction = __webpack_require__("1c0b");
var isObject = __webpack_require__("861d");

var slice = [].slice;
var factories = {};

var construct = function (C, argsLength, args) {
  if (!(argsLength in factories)) {
    for (var list = [], i = 0; i < argsLength; i++) list[i] = 'a[' + i + ']';
    // eslint-disable-next-line no-new-func
    factories[argsLength] = Function('C,a', 'return new C(' + list.join(',') + ')');
  } return factories[argsLength](C, args);
};

// `Function.prototype.bind` method implementation
// https://tc39.github.io/ecma262/#sec-function.prototype.bind
module.exports = Function.bind || function bind(that /* , ...args */) {
  var fn = aFunction(this);
  var partArgs = slice.call(arguments, 1);
  var boundFunction = function bound(/* args... */) {
    var args = partArgs.concat(slice.call(arguments));
    return this instanceof boundFunction ? construct(fn, args.length, args) : fn.apply(that, args);
  };
  if (isObject(fn.prototype)) boundFunction.prototype = fn.prototype;
  return boundFunction;
};


/***/ }),

/***/ "057f":
/***/ (function(module, exports, __webpack_require__) {

var toIndexedObject = __webpack_require__("fc6a");
var nativeGetOwnPropertyNames = __webpack_require__("241c").f;

var toString = {}.toString;

var windowNames = typeof window == 'object' && window && Object.getOwnPropertyNames
  ? Object.getOwnPropertyNames(window) : [];

var getWindowNames = function (it) {
  try {
    return nativeGetOwnPropertyNames(it);
  } catch (error) {
    return windowNames.slice();
  }
};

// fallback for IE11 buggy Object.getOwnPropertyNames with iframe and window
module.exports.f = function getOwnPropertyNames(it) {
  return windowNames && toString.call(it) == '[object Window]'
    ? getWindowNames(it)
    : nativeGetOwnPropertyNames(toIndexedObject(it));
};


/***/ }),

/***/ "06cf":
/***/ (function(module, exports, __webpack_require__) {

var DESCRIPTORS = __webpack_require__("83ab");
var propertyIsEnumerableModule = __webpack_require__("d1e7");
var createPropertyDescriptor = __webpack_require__("5c6c");
var toIndexedObject = __webpack_require__("fc6a");
var toPrimitive = __webpack_require__("c04e");
var has = __webpack_require__("5135");
var IE8_DOM_DEFINE = __webpack_require__("0cfb");

var nativeGetOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;

// `Object.getOwnPropertyDescriptor` method
// https://tc39.github.io/ecma262/#sec-object.getownpropertydescriptor
exports.f = DESCRIPTORS ? nativeGetOwnPropertyDescriptor : function getOwnPropertyDescriptor(O, P) {
  O = toIndexedObject(O);
  P = toPrimitive(P, true);
  if (IE8_DOM_DEFINE) try {
    return nativeGetOwnPropertyDescriptor(O, P);
  } catch (error) { /* empty */ }
  if (has(O, P)) return createPropertyDescriptor(!propertyIsEnumerableModule.f.call(O, P), O[P]);
};


/***/ }),

/***/ "0a06":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__("c532");
var buildURL = __webpack_require__("30b5");
var InterceptorManager = __webpack_require__("f6b4");
var dispatchRequest = __webpack_require__("5270");
var mergeConfig = __webpack_require__("4a7b");

/**
 * Create a new instance of Axios
 *
 * @param {Object} instanceConfig The default config for the instance
 */
function Axios(instanceConfig) {
  this.defaults = instanceConfig;
  this.interceptors = {
    request: new InterceptorManager(),
    response: new InterceptorManager()
  };
}

/**
 * Dispatch a request
 *
 * @param {Object} config The config specific for this request (merged with this.defaults)
 */
Axios.prototype.request = function request(config) {
  /*eslint no-param-reassign:0*/
  // Allow for axios('example/url'[, config]) a la fetch API
  if (typeof config === 'string') {
    config = arguments[1] || {};
    config.url = arguments[0];
  } else {
    config = config || {};
  }

  config = mergeConfig(this.defaults, config);

  // Set config.method
  if (config.method) {
    config.method = config.method.toLowerCase();
  } else if (this.defaults.method) {
    config.method = this.defaults.method.toLowerCase();
  } else {
    config.method = 'get';
  }

  // Hook up interceptors middleware
  var chain = [dispatchRequest, undefined];
  var promise = Promise.resolve(config);

  this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {
    chain.unshift(interceptor.fulfilled, interceptor.rejected);
  });

  this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {
    chain.push(interceptor.fulfilled, interceptor.rejected);
  });

  while (chain.length) {
    promise = promise.then(chain.shift(), chain.shift());
  }

  return promise;
};

Axios.prototype.getUri = function getUri(config) {
  config = mergeConfig(this.defaults, config);
  return buildURL(config.url, config.params, config.paramsSerializer).replace(/^\?/, '');
};

// Provide aliases for supported request methods
utils.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {
  /*eslint func-names:0*/
  Axios.prototype[method] = function(url, config) {
    return this.request(utils.merge(config || {}, {
      method: method,
      url: url
    }));
  };
});

utils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {
  /*eslint func-names:0*/
  Axios.prototype[method] = function(url, data, config) {
    return this.request(utils.merge(config || {}, {
      method: method,
      url: url,
      data: data
    }));
  };
});

module.exports = Axios;


/***/ }),

/***/ "0cfb":
/***/ (function(module, exports, __webpack_require__) {

var DESCRIPTORS = __webpack_require__("83ab");
var fails = __webpack_require__("d039");
var createElement = __webpack_require__("cc12");

// Thank's IE8 for his funny defineProperty
module.exports = !DESCRIPTORS && !fails(function () {
  return Object.defineProperty(createElement('div'), 'a', {
    get: function () { return 7; }
  }).a != 7;
});


/***/ }),

/***/ "0d3b":
/***/ (function(module, exports, __webpack_require__) {

var fails = __webpack_require__("d039");
var wellKnownSymbol = __webpack_require__("b622");
var IS_PURE = __webpack_require__("c430");

var ITERATOR = wellKnownSymbol('iterator');

module.exports = !fails(function () {
  var url = new URL('b?a=1&b=2&c=3', 'http://a');
  var searchParams = url.searchParams;
  var result = '';
  url.pathname = 'c%20d';
  searchParams.forEach(function (value, key) {
    searchParams['delete']('b');
    result += key + value;
  });
  return (IS_PURE && !url.toJSON)
    || !searchParams.sort
    || url.href !== 'http://a/c%20d?a=1&c=3'
    || searchParams.get('c') !== '3'
    || String(new URLSearchParams('?a=1')) !== 'a=1'
    || !searchParams[ITERATOR]
    // throws in Edge
    || new URL('https://a@b').username !== 'a'
    || new URLSearchParams(new URLSearchParams('a=b')).get('a') !== 'b'
    // not punycoded in Edge
    || new URL('http://тест').host !== 'xn--e1aybc'
    // not escaped in Chrome 62-
    || new URL('http://a#б').hash !== '#%D0%B1'
    // fails in Chrome 66-
    || result !== 'a1c3'
    // throws in Safari
    || new URL('http://x', undefined).host !== 'x';
});


/***/ }),

/***/ "0df6":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
 * Syntactic sugar for invoking a function and expanding an array for arguments.
 *
 * Common use case would be to use `Function.prototype.apply`.
 *
 *  ```js
 *  function f(x, y, z) {}
 *  var args = [1, 2, 3];
 *  f.apply(null, args);
 *  ```
 *
 * With `spread` this example can be re-written.
 *
 *  ```js
 *  spread(function(x, y, z) {})([1, 2, 3]);
 *  ```
 *
 * @param {Function} callback
 * @returns {Function}
 */
module.exports = function spread(callback) {
  return function wrap(arr) {
    return callback.apply(null, arr);
  };
};


/***/ }),

/***/ "0e40":
/***/ (function(module) {

module.exports = JSON.parse("{\"altitude\":\"Altitude\",\"difficulty\":\"Difficulty\",\"location\":\"Place\",\"phone\":\"Phone\",\"web\":\"Web\",\"categories\":\"Categories\",\"lastChange\":\"Last update\",\"scheduleTypes\":{\"1\":\"Open\",\"2\":\"Closed\"},\"timeCodes\":{\"1\":\"General opening hours\",\"2\":\"Warm meals\",\"3\":\"Pizza\",\"4\":\"Snacks\"},\"scheduleDays\":{\"Monday\":\"Mon\",\"Tuesday\":\"Tue\",\"Wednesday\":\"Wed\",\"Thuresday\":\"Thu\",\"Friday\":\"Fri\",\"Saturday\":\"Sat\",\"Sunday\":\"Sun\"},\"mainType\":\"Main Category\",\"subType\":\"Subcategory\",\"altitudeDifference\":\"Height difference\",\"altitudeHighestPoint\":\"Highest point\",\"altitudeLowestPoint\":\"Lowest point\",\"Gastronomy\":\"Gastronomy\",\"Activity\":\"Activities\",\"props\":{},\"yes\":\"Yes\",\"paging\":{\"next\":\"Next\",\"back\":\"Back\"},\"noResults\":\"Nothing could be found, refine your search\",\"recipes\":\"Recipes\",\"preparationTime\":\"Preparation time\",\"persons\":\"Persons\",\"back\":\"Back\",\"searchRecipe\":\"Search recipe\",\"ingredients\":\"Ingredients\",\"noItemData\":\"No data available for the set language\"}");

/***/ }),

/***/ "1276":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var fixRegExpWellKnownSymbolLogic = __webpack_require__("d784");
var isRegExp = __webpack_require__("44e7");
var anObject = __webpack_require__("825a");
var requireObjectCoercible = __webpack_require__("1d80");
var speciesConstructor = __webpack_require__("4840");
var advanceStringIndex = __webpack_require__("8aa5");
var toLength = __webpack_require__("50c4");
var callRegExpExec = __webpack_require__("14c3");
var regexpExec = __webpack_require__("9263");
var fails = __webpack_require__("d039");

var arrayPush = [].push;
var min = Math.min;
var MAX_UINT32 = 0xFFFFFFFF;

// babel-minify transpiles RegExp('x', 'y') -> /x/y and it causes SyntaxError
var SUPPORTS_Y = !fails(function () { return !RegExp(MAX_UINT32, 'y'); });

// @@split logic
fixRegExpWellKnownSymbolLogic('split', 2, function (SPLIT, nativeSplit, maybeCallNative) {
  var internalSplit;
  if (
    'abbc'.split(/(b)*/)[1] == 'c' ||
    'test'.split(/(?:)/, -1).length != 4 ||
    'ab'.split(/(?:ab)*/).length != 2 ||
    '.'.split(/(.?)(.?)/).length != 4 ||
    '.'.split(/()()/).length > 1 ||
    ''.split(/.?/).length
  ) {
    // based on es5-shim implementation, need to rework it
    internalSplit = function (separator, limit) {
      var string = String(requireObjectCoercible(this));
      var lim = limit === undefined ? MAX_UINT32 : limit >>> 0;
      if (lim === 0) return [];
      if (separator === undefined) return [string];
      // If `separator` is not a regex, use native split
      if (!isRegExp(separator)) {
        return nativeSplit.call(string, separator, lim);
      }
      var output = [];
      var flags = (separator.ignoreCase ? 'i' : '') +
                  (separator.multiline ? 'm' : '') +
                  (separator.unicode ? 'u' : '') +
                  (separator.sticky ? 'y' : '');
      var lastLastIndex = 0;
      // Make `global` and avoid `lastIndex` issues by working with a copy
      var separatorCopy = new RegExp(separator.source, flags + 'g');
      var match, lastIndex, lastLength;
      while (match = regexpExec.call(separatorCopy, string)) {
        lastIndex = separatorCopy.lastIndex;
        if (lastIndex > lastLastIndex) {
          output.push(string.slice(lastLastIndex, match.index));
          if (match.length > 1 && match.index < string.length) arrayPush.apply(output, match.slice(1));
          lastLength = match[0].length;
          lastLastIndex = lastIndex;
          if (output.length >= lim) break;
        }
        if (separatorCopy.lastIndex === match.index) separatorCopy.lastIndex++; // Avoid an infinite loop
      }
      if (lastLastIndex === string.length) {
        if (lastLength || !separatorCopy.test('')) output.push('');
      } else output.push(string.slice(lastLastIndex));
      return output.length > lim ? output.slice(0, lim) : output;
    };
  // Chakra, V8
  } else if ('0'.split(undefined, 0).length) {
    internalSplit = function (separator, limit) {
      return separator === undefined && limit === 0 ? [] : nativeSplit.call(this, separator, limit);
    };
  } else internalSplit = nativeSplit;

  return [
    // `String.prototype.split` method
    // https://tc39.github.io/ecma262/#sec-string.prototype.split
    function split(separator, limit) {
      var O = requireObjectCoercible(this);
      var splitter = separator == undefined ? undefined : separator[SPLIT];
      return splitter !== undefined
        ? splitter.call(separator, O, limit)
        : internalSplit.call(String(O), separator, limit);
    },
    // `RegExp.prototype[@@split]` method
    // https://tc39.github.io/ecma262/#sec-regexp.prototype-@@split
    //
    // NOTE: This cannot be properly polyfilled in engines that don't support
    // the 'y' flag.
    function (regexp, limit) {
      var res = maybeCallNative(internalSplit, regexp, this, limit, internalSplit !== nativeSplit);
      if (res.done) return res.value;

      var rx = anObject(regexp);
      var S = String(this);
      var C = speciesConstructor(rx, RegExp);

      var unicodeMatching = rx.unicode;
      var flags = (rx.ignoreCase ? 'i' : '') +
                  (rx.multiline ? 'm' : '') +
                  (rx.unicode ? 'u' : '') +
                  (SUPPORTS_Y ? 'y' : 'g');

      // ^(? + rx + ) is needed, in combination with some S slicing, to
      // simulate the 'y' flag.
      var splitter = new C(SUPPORTS_Y ? rx : '^(?:' + rx.source + ')', flags);
      var lim = limit === undefined ? MAX_UINT32 : limit >>> 0;
      if (lim === 0) return [];
      if (S.length === 0) return callRegExpExec(splitter, S) === null ? [S] : [];
      var p = 0;
      var q = 0;
      var A = [];
      while (q < S.length) {
        splitter.lastIndex = SUPPORTS_Y ? q : 0;
        var z = callRegExpExec(splitter, SUPPORTS_Y ? S : S.slice(q));
        var e;
        if (
          z === null ||
          (e = min(toLength(splitter.lastIndex + (SUPPORTS_Y ? 0 : q)), S.length)) === p
        ) {
          q = advanceStringIndex(S, q, unicodeMatching);
        } else {
          A.push(S.slice(p, q));
          if (A.length === lim) return A;
          for (var i = 1; i <= z.length - 1; i++) {
            A.push(z[i]);
            if (A.length === lim) return A;
          }
          q = p = e;
        }
      }
      A.push(S.slice(p));
      return A;
    }
  ];
}, !SUPPORTS_Y);


/***/ }),

/***/ "129f":
/***/ (function(module, exports) {

// `SameValue` abstract operation
// https://tc39.github.io/ecma262/#sec-samevalue
module.exports = Object.is || function is(x, y) {
  // eslint-disable-next-line no-self-compare
  return x === y ? x !== 0 || 1 / x === 1 / y : x != x && y != y;
};


/***/ }),

/***/ "14c3":
/***/ (function(module, exports, __webpack_require__) {

var classof = __webpack_require__("c6b6");
var regexpExec = __webpack_require__("9263");

// `RegExpExec` abstract operation
// https://tc39.github.io/ecma262/#sec-regexpexec
module.exports = function (R, S) {
  var exec = R.exec;
  if (typeof exec === 'function') {
    var result = exec.call(R, S);
    if (typeof result !== 'object') {
      throw TypeError('RegExp exec method returned something other than an Object or null');
    }
    return result;
  }

  if (classof(R) !== 'RegExp') {
    throw TypeError('RegExp#exec called on incompatible receiver');
  }

  return regexpExec.call(R, S);
};



/***/ }),

/***/ "159b":
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__("da84");
var DOMIterables = __webpack_require__("fdbc");
var forEach = __webpack_require__("17c2");
var createNonEnumerableProperty = __webpack_require__("9112");

for (var COLLECTION_NAME in DOMIterables) {
  var Collection = global[COLLECTION_NAME];
  var CollectionPrototype = Collection && Collection.prototype;
  // some Chrome versions have non-configurable methods on DOMTokenList
  if (CollectionPrototype && CollectionPrototype.forEach !== forEach) try {
    createNonEnumerableProperty(CollectionPrototype, 'forEach', forEach);
  } catch (error) {
    CollectionPrototype.forEach = forEach;
  }
}


/***/ }),

/***/ "17c2":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $forEach = __webpack_require__("b727").forEach;
var arrayMethodIsStrict = __webpack_require__("a640");
var arrayMethodUsesToLength = __webpack_require__("ae40");

var STRICT_METHOD = arrayMethodIsStrict('forEach');
var USES_TO_LENGTH = arrayMethodUsesToLength('forEach');

// `Array.prototype.forEach` method implementation
// https://tc39.github.io/ecma262/#sec-array.prototype.foreach
module.exports = (!STRICT_METHOD || !USES_TO_LENGTH) ? function forEach(callbackfn /* , thisArg */) {
  return $forEach(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);
} : [].forEach;


/***/ }),

/***/ "185c":
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__("99af");

__webpack_require__("cca6");

var _objectSpread = __webpack_require__("ded3");

var _objectWithoutProperties = __webpack_require__("4082");

module.exports = {
  functional: true,
  render: function render(_h, _vm) {
    var _c = _vm._c,
        _v = _vm._v,
        data = _vm.data,
        _vm$children = _vm.children,
        children = _vm$children === void 0 ? [] : _vm$children;

    var classNames = data.class,
        staticClass = data.staticClass,
        style = data.style,
        staticStyle = data.staticStyle,
        _data$attrs = data.attrs,
        attrs = _data$attrs === void 0 ? {} : _data$attrs,
        rest = _objectWithoutProperties(data, ["class", "staticClass", "style", "staticStyle", "attrs"]);

    return _c('svg', _objectSpread({
      class: [classNames, staticClass],
      style: [style, staticStyle],
      attrs: Object.assign({
        "xmlns": "http://www.w3.org/2000/svg",
        "width": "16",
        "height": "16"
      }, attrs)
    }, rest), children.concat([_c('path', {
      attrs: {
        "fill": "none",
        "d": "M0 0h16v16H0z"
      }
    }), _c('path', {
      attrs: {
        "d": "M9.629 7.763a2.381 2.381 0 10-2.375-2.382 2.385 2.385 0 002.375 2.382zm0 2.165c-1.573 0-4.75.8-4.75 2.381V13.5h9.5v-1.191c0-1.577-3.177-2.381-4.75-2.381z",
        "stroke": "#000",
        "stroke-width": "1.25",
        "fill": "none"
      }
    }), _c('path', {
      attrs: {
        "d": "M3.945 7.388V5.425h-.982v1.963H1.001v.981h1.962v1.963h.981V8.369h1.963v-.981z"
      }
    })]));
  }
};

/***/ }),

/***/ "19aa":
/***/ (function(module, exports) {

module.exports = function (it, Constructor, name) {
  if (!(it instanceof Constructor)) {
    throw TypeError('Incorrect ' + (name ? name + ' ' : '') + 'invocation');
  } return it;
};


/***/ }),

/***/ "1be4":
/***/ (function(module, exports, __webpack_require__) {

var getBuiltIn = __webpack_require__("d066");

module.exports = getBuiltIn('document', 'documentElement');


/***/ }),

/***/ "1c0b":
/***/ (function(module, exports) {

module.exports = function (it) {
  if (typeof it != 'function') {
    throw TypeError(String(it) + ' is not a function');
  } return it;
};


/***/ }),

/***/ "1c7e":
/***/ (function(module, exports, __webpack_require__) {

var wellKnownSymbol = __webpack_require__("b622");

var ITERATOR = wellKnownSymbol('iterator');
var SAFE_CLOSING = false;

try {
  var called = 0;
  var iteratorWithReturn = {
    next: function () {
      return { done: !!called++ };
    },
    'return': function () {
      SAFE_CLOSING = true;
    }
  };
  iteratorWithReturn[ITERATOR] = function () {
    return this;
  };
  // eslint-disable-next-line no-throw-literal
  Array.from(iteratorWithReturn, function () { throw 2; });
} catch (error) { /* empty */ }

module.exports = function (exec, SKIP_CLOSING) {
  if (!SKIP_CLOSING && !SAFE_CLOSING) return false;
  var ITERATION_SUPPORT = false;
  try {
    var object = {};
    object[ITERATOR] = function () {
      return {
        next: function () {
          return { done: ITERATION_SUPPORT = true };
        }
      };
    };
    exec(object);
  } catch (error) { /* empty */ }
  return ITERATION_SUPPORT;
};


/***/ }),

/***/ "1cdc":
/***/ (function(module, exports, __webpack_require__) {

var userAgent = __webpack_require__("342f");

module.exports = /(iphone|ipod|ipad).*applewebkit/i.test(userAgent);


/***/ }),

/***/ "1d2b":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


module.exports = function bind(fn, thisArg) {
  return function wrap() {
    var args = new Array(arguments.length);
    for (var i = 0; i < args.length; i++) {
      args[i] = arguments[i];
    }
    return fn.apply(thisArg, args);
  };
};


/***/ }),

/***/ "1d80":
/***/ (function(module, exports) {

// `RequireObjectCoercible` abstract operation
// https://tc39.github.io/ecma262/#sec-requireobjectcoercible
module.exports = function (it) {
  if (it == undefined) throw TypeError("Can't call method on " + it);
  return it;
};


/***/ }),

/***/ "1dde":
/***/ (function(module, exports, __webpack_require__) {

var fails = __webpack_require__("d039");
var wellKnownSymbol = __webpack_require__("b622");
var V8_VERSION = __webpack_require__("2d00");

var SPECIES = wellKnownSymbol('species');

module.exports = function (METHOD_NAME) {
  // We can't use this feature detection in V8 since it causes
  // deoptimization and serious performance degradation
  // https://github.com/zloirock/core-js/issues/677
  return V8_VERSION >= 51 || !fails(function () {
    var array = [];
    var constructor = array.constructor = {};
    constructor[SPECIES] = function () {
      return { foo: 1 };
    };
    return array[METHOD_NAME](Boolean).foo !== 1;
  });
};


/***/ }),

/***/ "2083":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_vue_style_loader_index_js_ref_6_oneOf_1_0_node_modules_css_loader_dist_cjs_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_2_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_3_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_App_vue_vue_type_style_index_0_lang_css_shadow__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("f457");
/* harmony import */ var _node_modules_vue_style_loader_index_js_ref_6_oneOf_1_0_node_modules_css_loader_dist_cjs_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_2_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_3_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_App_vue_vue_type_style_index_0_lang_css_shadow__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_vue_style_loader_index_js_ref_6_oneOf_1_0_node_modules_css_loader_dist_cjs_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_2_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_3_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_App_vue_vue_type_style_index_0_lang_css_shadow__WEBPACK_IMPORTED_MODULE_0__);
/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _node_modules_vue_style_loader_index_js_ref_6_oneOf_1_0_node_modules_css_loader_dist_cjs_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_2_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_3_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_App_vue_vue_type_style_index_0_lang_css_shadow__WEBPACK_IMPORTED_MODULE_0__) if(["default"].indexOf(__WEBPACK_IMPORT_KEY__) < 0) (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _node_modules_vue_style_loader_index_js_ref_6_oneOf_1_0_node_modules_css_loader_dist_cjs_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_2_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_3_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_App_vue_vue_type_style_index_0_lang_css_shadow__WEBPACK_IMPORTED_MODULE_0__[key]; }) }(__WEBPACK_IMPORT_KEY__));


/***/ }),

/***/ "2266":
/***/ (function(module, exports, __webpack_require__) {

var anObject = __webpack_require__("825a");
var isArrayIteratorMethod = __webpack_require__("e95a");
var toLength = __webpack_require__("50c4");
var bind = __webpack_require__("0366");
var getIteratorMethod = __webpack_require__("35a1");
var iteratorClose = __webpack_require__("2a62");

var Result = function (stopped, result) {
  this.stopped = stopped;
  this.result = result;
};

module.exports = function (iterable, unboundFunction, options) {
  var that = options && options.that;
  var AS_ENTRIES = !!(options && options.AS_ENTRIES);
  var IS_ITERATOR = !!(options && options.IS_ITERATOR);
  var INTERRUPTED = !!(options && options.INTERRUPTED);
  var fn = bind(unboundFunction, that, 1 + AS_ENTRIES + INTERRUPTED);
  var iterator, iterFn, index, length, result, next, step;

  var stop = function (condition) {
    if (iterator) iteratorClose(iterator);
    return new Result(true, condition);
  };

  var callFn = function (value) {
    if (AS_ENTRIES) {
      anObject(value);
      return INTERRUPTED ? fn(value[0], value[1], stop) : fn(value[0], value[1]);
    } return INTERRUPTED ? fn(value, stop) : fn(value);
  };

  if (IS_ITERATOR) {
    iterator = iterable;
  } else {
    iterFn = getIteratorMethod(iterable);
    if (typeof iterFn != 'function') throw TypeError('Target is not iterable');
    // optimisation for array iterators
    if (isArrayIteratorMethod(iterFn)) {
      for (index = 0, length = toLength(iterable.length); length > index; index++) {
        result = callFn(iterable[index]);
        if (result && result instanceof Result) return result;
      } return new Result(false);
    }
    iterator = iterFn.call(iterable);
  }

  next = iterator.next;
  while (!(step = next.call(iterator)).done) {
    try {
      result = callFn(step.value);
    } catch (error) {
      iteratorClose(iterator);
      throw error;
    }
    if (typeof result == 'object' && result && result instanceof Result) return result;
  } return new Result(false);
};


/***/ }),

/***/ "23cb":
/***/ (function(module, exports, __webpack_require__) {

var toInteger = __webpack_require__("a691");

var max = Math.max;
var min = Math.min;

// Helper for a popular repeating case of the spec:
// Let integer be ? ToInteger(index).
// If integer < 0, let result be max((length + integer), 0); else let result be min(integer, length).
module.exports = function (index, length) {
  var integer = toInteger(index);
  return integer < 0 ? max(integer + length, 0) : min(integer, length);
};


/***/ }),

/***/ "23e7":
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__("da84");
var getOwnPropertyDescriptor = __webpack_require__("06cf").f;
var createNonEnumerableProperty = __webpack_require__("9112");
var redefine = __webpack_require__("6eeb");
var setGlobal = __webpack_require__("ce4e");
var copyConstructorProperties = __webpack_require__("e893");
var isForced = __webpack_require__("94ca");

/*
  options.target      - name of the target object
  options.global      - target is the global object
  options.stat        - export as static methods of target
  options.proto       - export as prototype methods of target
  options.real        - real prototype method for the `pure` version
  options.forced      - export even if the native feature is available
  options.bind        - bind methods to the target, required for the `pure` version
  options.wrap        - wrap constructors to preventing global pollution, required for the `pure` version
  options.unsafe      - use the simple assignment of property instead of delete + defineProperty
  options.sham        - add a flag to not completely full polyfills
  options.enumerable  - export as enumerable property
  options.noTargetGet - prevent calling a getter on target
*/
module.exports = function (options, source) {
  var TARGET = options.target;
  var GLOBAL = options.global;
  var STATIC = options.stat;
  var FORCED, target, key, targetProperty, sourceProperty, descriptor;
  if (GLOBAL) {
    target = global;
  } else if (STATIC) {
    target = global[TARGET] || setGlobal(TARGET, {});
  } else {
    target = (global[TARGET] || {}).prototype;
  }
  if (target) for (key in source) {
    sourceProperty = source[key];
    if (options.noTargetGet) {
      descriptor = getOwnPropertyDescriptor(target, key);
      targetProperty = descriptor && descriptor.value;
    } else targetProperty = target[key];
    FORCED = isForced(GLOBAL ? key : TARGET + (STATIC ? '.' : '#') + key, options.forced);
    // contained in target
    if (!FORCED && targetProperty !== undefined) {
      if (typeof sourceProperty === typeof targetProperty) continue;
      copyConstructorProperties(sourceProperty, targetProperty);
    }
    // add a flag to not completely full polyfills
    if (options.sham || (targetProperty && targetProperty.sham)) {
      createNonEnumerableProperty(sourceProperty, 'sham', true);
    }
    // extend global
    redefine(target, key, sourceProperty, options);
  }
};


/***/ }),

/***/ "241c":
/***/ (function(module, exports, __webpack_require__) {

var internalObjectKeys = __webpack_require__("ca84");
var enumBugKeys = __webpack_require__("7839");

var hiddenKeys = enumBugKeys.concat('length', 'prototype');

// `Object.getOwnPropertyNames` method
// https://tc39.github.io/ecma262/#sec-object.getownpropertynames
exports.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {
  return internalObjectKeys(O, hiddenKeys);
};


/***/ }),

/***/ "2444":
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {

var utils = __webpack_require__("c532");
var normalizeHeaderName = __webpack_require__("c8af");

var DEFAULT_CONTENT_TYPE = {
  'Content-Type': 'application/x-www-form-urlencoded'
};

function setContentTypeIfUnset(headers, value) {
  if (!utils.isUndefined(headers) && utils.isUndefined(headers['Content-Type'])) {
    headers['Content-Type'] = value;
  }
}

function getDefaultAdapter() {
  var adapter;
  if (typeof XMLHttpRequest !== 'undefined') {
    // For browsers use XHR adapter
    adapter = __webpack_require__("b50d");
  } else if (typeof process !== 'undefined' && Object.prototype.toString.call(process) === '[object process]') {
    // For node use HTTP adapter
    adapter = __webpack_require__("b50d");
  }
  return adapter;
}

var defaults = {
  adapter: getDefaultAdapter(),

  transformRequest: [function transformRequest(data, headers) {
    normalizeHeaderName(headers, 'Accept');
    normalizeHeaderName(headers, 'Content-Type');
    if (utils.isFormData(data) ||
      utils.isArrayBuffer(data) ||
      utils.isBuffer(data) ||
      utils.isStream(data) ||
      utils.isFile(data) ||
      utils.isBlob(data)
    ) {
      return data;
    }
    if (utils.isArrayBufferView(data)) {
      return data.buffer;
    }
    if (utils.isURLSearchParams(data)) {
      setContentTypeIfUnset(headers, 'application/x-www-form-urlencoded;charset=utf-8');
      return data.toString();
    }
    if (utils.isObject(data)) {
      setContentTypeIfUnset(headers, 'application/json;charset=utf-8');
      return JSON.stringify(data);
    }
    return data;
  }],

  transformResponse: [function transformResponse(data) {
    /*eslint no-param-reassign:0*/
    if (typeof data === 'string') {
      try {
        data = JSON.parse(data);
      } catch (e) { /* Ignore */ }
    }
    return data;
  }],

  /**
   * A timeout in milliseconds to abort a request. If set to 0 (default) a
   * timeout is not created.
   */
  timeout: 0,

  xsrfCookieName: 'XSRF-TOKEN',
  xsrfHeaderName: 'X-XSRF-TOKEN',

  maxContentLength: -1,

  validateStatus: function validateStatus(status) {
    return status >= 200 && status < 300;
  }
};

defaults.headers = {
  common: {
    'Accept': 'application/json, text/plain, */*'
  }
};

utils.forEach(['delete', 'get', 'head'], function forEachMethodNoData(method) {
  defaults.headers[method] = {};
});

utils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {
  defaults.headers[method] = utils.merge(DEFAULT_CONTENT_TYPE);
});

module.exports = defaults;

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__("4362")))

/***/ }),

/***/ "24fb":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/*
  MIT License http://www.opensource.org/licenses/mit-license.php
  Author Tobias Koppers @sokra
*/
// css base code, injected by the css-loader
// eslint-disable-next-line func-names
module.exports = function (useSourceMap) {
  var list = []; // return the list of modules as css string

  list.toString = function toString() {
    return this.map(function (item) {
      var content = cssWithMappingToString(item, useSourceMap);

      if (item[2]) {
        return "@media ".concat(item[2], " {").concat(content, "}");
      }

      return content;
    }).join('');
  }; // import a list of modules into the list
  // eslint-disable-next-line func-names


  list.i = function (modules, mediaQuery, dedupe) {
    if (typeof modules === 'string') {
      // eslint-disable-next-line no-param-reassign
      modules = [[null, modules, '']];
    }

    var alreadyImportedModules = {};

    if (dedupe) {
      for (var i = 0; i < this.length; i++) {
        // eslint-disable-next-line prefer-destructuring
        var id = this[i][0];

        if (id != null) {
          alreadyImportedModules[id] = true;
        }
      }
    }

    for (var _i = 0; _i < modules.length; _i++) {
      var item = [].concat(modules[_i]);

      if (dedupe && alreadyImportedModules[item[0]]) {
        // eslint-disable-next-line no-continue
        continue;
      }

      if (mediaQuery) {
        if (!item[2]) {
          item[2] = mediaQuery;
        } else {
          item[2] = "".concat(mediaQuery, " and ").concat(item[2]);
        }
      }

      list.push(item);
    }
  };

  return list;
};

function cssWithMappingToString(item, useSourceMap) {
  var content = item[1] || ''; // eslint-disable-next-line prefer-destructuring

  var cssMapping = item[3];

  if (!cssMapping) {
    return content;
  }

  if (useSourceMap && typeof btoa === 'function') {
    var sourceMapping = toComment(cssMapping);
    var sourceURLs = cssMapping.sources.map(function (source) {
      return "/*# sourceURL=".concat(cssMapping.sourceRoot || '').concat(source, " */");
    });
    return [content].concat(sourceURLs).concat([sourceMapping]).join('\n');
  }

  return [content].join('\n');
} // Adapted from convert-source-map (MIT)


function toComment(sourceMap) {
  // eslint-disable-next-line no-undef
  var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));
  var data = "sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(base64);
  return "/*# ".concat(data, " */");
}

/***/ }),

/***/ "2570":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_vue_style_loader_index_js_ref_6_oneOf_1_0_node_modules_css_loader_dist_cjs_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_2_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_3_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_Paging_vue_vue_type_style_index_0_id_356619ac_scoped_true_lang_css___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("5903");
/* harmony import */ var _node_modules_vue_style_loader_index_js_ref_6_oneOf_1_0_node_modules_css_loader_dist_cjs_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_2_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_3_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_Paging_vue_vue_type_style_index_0_id_356619ac_scoped_true_lang_css___WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_vue_style_loader_index_js_ref_6_oneOf_1_0_node_modules_css_loader_dist_cjs_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_2_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_3_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_Paging_vue_vue_type_style_index_0_id_356619ac_scoped_true_lang_css___WEBPACK_IMPORTED_MODULE_0__);
/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _node_modules_vue_style_loader_index_js_ref_6_oneOf_1_0_node_modules_css_loader_dist_cjs_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_2_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_3_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_Paging_vue_vue_type_style_index_0_id_356619ac_scoped_true_lang_css___WEBPACK_IMPORTED_MODULE_0__) if(["default"].indexOf(__WEBPACK_IMPORT_KEY__) < 0) (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _node_modules_vue_style_loader_index_js_ref_6_oneOf_1_0_node_modules_css_loader_dist_cjs_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_2_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_3_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_Paging_vue_vue_type_style_index_0_id_356619ac_scoped_true_lang_css___WEBPACK_IMPORTED_MODULE_0__[key]; }) }(__WEBPACK_IMPORT_KEY__));


/***/ }),

/***/ "25f0":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var redefine = __webpack_require__("6eeb");
var anObject = __webpack_require__("825a");
var fails = __webpack_require__("d039");
var flags = __webpack_require__("ad6d");

var TO_STRING = 'toString';
var RegExpPrototype = RegExp.prototype;
var nativeToString = RegExpPrototype[TO_STRING];

var NOT_GENERIC = fails(function () { return nativeToString.call({ source: 'a', flags: 'b' }) != '/a/b'; });
// FF44- RegExp#toString has a wrong name
var INCORRECT_NAME = nativeToString.name != TO_STRING;

// `RegExp.prototype.toString` method
// https://tc39.github.io/ecma262/#sec-regexp.prototype.tostring
if (NOT_GENERIC || INCORRECT_NAME) {
  redefine(RegExp.prototype, TO_STRING, function toString() {
    var R = anObject(this);
    var p = String(R.source);
    var rf = R.flags;
    var f = String(rf === undefined && R instanceof RegExp && !('flags' in RegExpPrototype) ? flags.call(R) : rf);
    return '/' + p + '/' + f;
  }, { unsafe: true });
}


/***/ }),

/***/ "2626":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var getBuiltIn = __webpack_require__("d066");
var definePropertyModule = __webpack_require__("9bf2");
var wellKnownSymbol = __webpack_require__("b622");
var DESCRIPTORS = __webpack_require__("83ab");

var SPECIES = wellKnownSymbol('species');

module.exports = function (CONSTRUCTOR_NAME) {
  var Constructor = getBuiltIn(CONSTRUCTOR_NAME);
  var defineProperty = definePropertyModule.f;

  if (DESCRIPTORS && Constructor && !Constructor[SPECIES]) {
    defineProperty(Constructor, SPECIES, {
      configurable: true,
      get: function () { return this; }
    });
  }
};


/***/ }),

/***/ "274c":
/***/ (function(module) {

module.exports = JSON.parse("{\"altitude\":\"Altitudine\",\"difficulty\":\"Difficoltà\",\"location\":\"Luogo\",\"phone\":\"Telefono\",\"web\":\"Web\",\"categories\":\"Categorie\",\"lastChange\":\"Ultimo aggiornamento\",\"scheduleTypes\":{\"1\":\"Aperto\",\"2\":\"Chiuso\"},\"timeCodes\":{\"1\":\"Orari di apertura generali\",\"2\":\"Pasti caldi\",\"3\":\"Pizza\",\"4\":\"Snacks\"},\"scheduleDays\":{\"Monday\":\"Lun\",\"Tuesday\":\"Mar\",\"Wednesday\":\"Mer\",\"Thuresday\":\"Gio\",\"Friday\":\"Ven\",\"Saturday\":\"Sab\",\"Sunday\":\"Do\"},\"mainType\":\"Categoria Principale\",\"subType\":\"Sottocategoria\",\"altitudeDifference\":\"Differenza di altezza\",\"altitudeHighestPoint\":\"Punto più alto\",\"altitudeLowestPoint\":\"Punto più basso\",\"Gastronomy\":\"Gastronomia\",\"Activity\":\"Attività\",\"props\":{},\"yes\":\"Si\",\"paging\":{\"next\":\"Continua\",\"back\":\"Indietro\"},\"noResults\":\"Non è stato trovato nulla, affina la tua ricerca\",\"recipes\":\"Ricette\",\"preparationTime\":\"Tempo di preparazione\",\"persons\":\"Persone\",\"back\":\"Indietro\",\"searchRecipe\":\"Ricerche di ricette\",\"ingredients\":\"Ingredienti\",\"noItemData\":\"Nessun dato disponibile per la lingua impostata\"}");

/***/ }),

/***/ "28f1":
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__("99af");

__webpack_require__("cca6");

var _objectSpread = __webpack_require__("ded3");

var _objectWithoutProperties = __webpack_require__("4082");

module.exports = {
  functional: true,
  render: function render(_h, _vm) {
    var _c = _vm._c,
        _v = _vm._v,
        data = _vm.data,
        _vm$children = _vm.children,
        children = _vm$children === void 0 ? [] : _vm$children;

    var classNames = data.class,
        staticClass = data.staticClass,
        style = data.style,
        staticStyle = data.staticStyle,
        _data$attrs = data.attrs,
        attrs = _data$attrs === void 0 ? {} : _data$attrs,
        rest = _objectWithoutProperties(data, ["class", "staticClass", "style", "staticStyle", "attrs"]);

    return _c('svg', _objectSpread({
      class: [classNames, staticClass],
      style: [style, staticStyle],
      attrs: Object.assign({
        "xmlns": "http://www.w3.org/2000/svg",
        "width": "16",
        "height": "16"
      }, attrs)
    }, rest), children.concat([_c('path', {
      attrs: {
        "d": "M10.7 5.2A3.847 3.847 0 007.8 4v4.1L5 11a4.2 4.2 0 005.8.1 4.137 4.137 0 00-.1-5.9z"
      }
    }), _c('path', {
      attrs: {
        "d": "M8 2.2A5.8 5.8 0 002.2 8a5.7 5.7 0 005.7 5.7A5.751 5.751 0 008 2.2M8 1a6.957 6.957 0 017 7 6.957 6.957 0 01-7 7 6.957 6.957 0 01-7-7 6.957 6.957 0 017-7z"
      }
    }), _c('path', {
      attrs: {
        "fill": "none",
        "d": "M0 0h16v16H0z"
      }
    })]));
  }
};

/***/ }),

/***/ "2a62":
/***/ (function(module, exports, __webpack_require__) {

var anObject = __webpack_require__("825a");

module.exports = function (iterator) {
  var returnMethod = iterator['return'];
  if (returnMethod !== undefined) {
    return anObject(returnMethod.call(iterator)).value;
  }
};


/***/ }),

/***/ "2b0e":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(global) {/*!
 * Vue.js v2.6.12
 * (c) 2014-2020 Evan You
 * Released under the MIT License.
 */
/*  */

var emptyObject = Object.freeze({});

// These helpers produce better VM code in JS engines due to their
// explicitness and function inlining.
function isUndef (v) {
  return v === undefined || v === null
}

function isDef (v) {
  return v !== undefined && v !== null
}

function isTrue (v) {
  return v === true
}

function isFalse (v) {
  return v === false
}

/**
 * Check if value is primitive.
 */
function isPrimitive (value) {
  return (
    typeof value === 'string' ||
    typeof value === 'number' ||
    // $flow-disable-line
    typeof value === 'symbol' ||
    typeof value === 'boolean'
  )
}

/**
 * Quick object check - this is primarily used to tell
 * Objects from primitive values when we know the value
 * is a JSON-compliant type.
 */
function isObject (obj) {
  return obj !== null && typeof obj === 'object'
}

/**
 * Get the raw type string of a value, e.g., [object Object].
 */
var _toString = Object.prototype.toString;

function toRawType (value) {
  return _toString.call(value).slice(8, -1)
}

/**
 * Strict object type check. Only returns true
 * for plain JavaScript objects.
 */
function isPlainObject (obj) {
  return _toString.call(obj) === '[object Object]'
}

function isRegExp (v) {
  return _toString.call(v) === '[object RegExp]'
}

/**
 * Check if val is a valid array index.
 */
function isValidArrayIndex (val) {
  var n = parseFloat(String(val));
  return n >= 0 && Math.floor(n) === n && isFinite(val)
}

function isPromise (val) {
  return (
    isDef(val) &&
    typeof val.then === 'function' &&
    typeof val.catch === 'function'
  )
}

/**
 * Convert a value to a string that is actually rendered.
 */
function toString (val) {
  return val == null
    ? ''
    : Array.isArray(val) || (isPlainObject(val) && val.toString === _toString)
      ? JSON.stringify(val, null, 2)
      : String(val)
}

/**
 * Convert an input value to a number for persistence.
 * If the conversion fails, return original string.
 */
function toNumber (val) {
  var n = parseFloat(val);
  return isNaN(n) ? val : n
}

/**
 * Make a map and return a function for checking if a key
 * is in that map.
 */
function makeMap (
  str,
  expectsLowerCase
) {
  var map = Object.create(null);
  var list = str.split(',');
  for (var i = 0; i < list.length; i++) {
    map[list[i]] = true;
  }
  return expectsLowerCase
    ? function (val) { return map[val.toLowerCase()]; }
    : function (val) { return map[val]; }
}

/**
 * Check if a tag is a built-in tag.
 */
var isBuiltInTag = makeMap('slot,component', true);

/**
 * Check if an attribute is a reserved attribute.
 */
var isReservedAttribute = makeMap('key,ref,slot,slot-scope,is');

/**
 * Remove an item from an array.
 */
function remove (arr, item) {
  if (arr.length) {
    var index = arr.indexOf(item);
    if (index > -1) {
      return arr.splice(index, 1)
    }
  }
}

/**
 * Check whether an object has the property.
 */
var hasOwnProperty = Object.prototype.hasOwnProperty;
function hasOwn (obj, key) {
  return hasOwnProperty.call(obj, key)
}

/**
 * Create a cached version of a pure function.
 */
function cached (fn) {
  var cache = Object.create(null);
  return (function cachedFn (str) {
    var hit = cache[str];
    return hit || (cache[str] = fn(str))
  })
}

/**
 * Camelize a hyphen-delimited string.
 */
var camelizeRE = /-(\w)/g;
var camelize = cached(function (str) {
  return str.replace(camelizeRE, function (_, c) { return c ? c.toUpperCase() : ''; })
});

/**
 * Capitalize a string.
 */
var capitalize = cached(function (str) {
  return str.charAt(0).toUpperCase() + str.slice(1)
});

/**
 * Hyphenate a camelCase string.
 */
var hyphenateRE = /\B([A-Z])/g;
var hyphenate = cached(function (str) {
  return str.replace(hyphenateRE, '-$1').toLowerCase()
});

/**
 * Simple bind polyfill for environments that do not support it,
 * e.g., PhantomJS 1.x. Technically, we don't need this anymore
 * since native bind is now performant enough in most browsers.
 * But removing it would mean breaking code that was able to run in
 * PhantomJS 1.x, so this must be kept for backward compatibility.
 */

/* istanbul ignore next */
function polyfillBind (fn, ctx) {
  function boundFn (a) {
    var l = arguments.length;
    return l
      ? l > 1
        ? fn.apply(ctx, arguments)
        : fn.call(ctx, a)
      : fn.call(ctx)
  }

  boundFn._length = fn.length;
  return boundFn
}

function nativeBind (fn, ctx) {
  return fn.bind(ctx)
}

var bind = Function.prototype.bind
  ? nativeBind
  : polyfillBind;

/**
 * Convert an Array-like object to a real Array.
 */
function toArray (list, start) {
  start = start || 0;
  var i = list.length - start;
  var ret = new Array(i);
  while (i--) {
    ret[i] = list[i + start];
  }
  return ret
}

/**
 * Mix properties into target object.
 */
function extend (to, _from) {
  for (var key in _from) {
    to[key] = _from[key];
  }
  return to
}

/**
 * Merge an Array of Objects into a single Object.
 */
function toObject (arr) {
  var res = {};
  for (var i = 0; i < arr.length; i++) {
    if (arr[i]) {
      extend(res, arr[i]);
    }
  }
  return res
}

/* eslint-disable no-unused-vars */

/**
 * Perform no operation.
 * Stubbing args to make Flow happy without leaving useless transpiled code
 * with ...rest (https://flow.org/blog/2017/05/07/Strict-Function-Call-Arity/).
 */
function noop (a, b, c) {}

/**
 * Always return false.
 */
var no = function (a, b, c) { return false; };

/* eslint-enable no-unused-vars */

/**
 * Return the same value.
 */
var identity = function (_) { return _; };

/**
 * Check if two values are loosely equal - that is,
 * if they are plain objects, do they have the same shape?
 */
function looseEqual (a, b) {
  if (a === b) { return true }
  var isObjectA = isObject(a);
  var isObjectB = isObject(b);
  if (isObjectA && isObjectB) {
    try {
      var isArrayA = Array.isArray(a);
      var isArrayB = Array.isArray(b);
      if (isArrayA && isArrayB) {
        return a.length === b.length && a.every(function (e, i) {
          return looseEqual(e, b[i])
        })
      } else if (a instanceof Date && b instanceof Date) {
        return a.getTime() === b.getTime()
      } else if (!isArrayA && !isArrayB) {
        var keysA = Object.keys(a);
        var keysB = Object.keys(b);
        return keysA.length === keysB.length && keysA.every(function (key) {
          return looseEqual(a[key], b[key])
        })
      } else {
        /* istanbul ignore next */
        return false
      }
    } catch (e) {
      /* istanbul ignore next */
      return false
    }
  } else if (!isObjectA && !isObjectB) {
    return String(a) === String(b)
  } else {
    return false
  }
}

/**
 * Return the first index at which a loosely equal value can be
 * found in the array (if value is a plain object, the array must
 * contain an object of the same shape), or -1 if it is not present.
 */
function looseIndexOf (arr, val) {
  for (var i = 0; i < arr.length; i++) {
    if (looseEqual(arr[i], val)) { return i }
  }
  return -1
}

/**
 * Ensure a function is called only once.
 */
function once (fn) {
  var called = false;
  return function () {
    if (!called) {
      called = true;
      fn.apply(this, arguments);
    }
  }
}

var SSR_ATTR = 'data-server-rendered';

var ASSET_TYPES = [
  'component',
  'directive',
  'filter'
];

var LIFECYCLE_HOOKS = [
  'beforeCreate',
  'created',
  'beforeMount',
  'mounted',
  'beforeUpdate',
  'updated',
  'beforeDestroy',
  'destroyed',
  'activated',
  'deactivated',
  'errorCaptured',
  'serverPrefetch'
];

/*  */



var config = ({
  /**
   * Option merge strategies (used in core/util/options)
   */
  // $flow-disable-line
  optionMergeStrategies: Object.create(null),

  /**
   * Whether to suppress warnings.
   */
  silent: false,

  /**
   * Show production mode tip message on boot?
   */
  productionTip: "production" !== 'production',

  /**
   * Whether to enable devtools
   */
  devtools: "production" !== 'production',

  /**
   * Whether to record perf
   */
  performance: false,

  /**
   * Error handler for watcher errors
   */
  errorHandler: null,

  /**
   * Warn handler for watcher warns
   */
  warnHandler: null,

  /**
   * Ignore certain custom elements
   */
  ignoredElements: [],

  /**
   * Custom user key aliases for v-on
   */
  // $flow-disable-line
  keyCodes: Object.create(null),

  /**
   * Check if a tag is reserved so that it cannot be registered as a
   * component. This is platform-dependent and may be overwritten.
   */
  isReservedTag: no,

  /**
   * Check if an attribute is reserved so that it cannot be used as a component
   * prop. This is platform-dependent and may be overwritten.
   */
  isReservedAttr: no,

  /**
   * Check if a tag is an unknown element.
   * Platform-dependent.
   */
  isUnknownElement: no,

  /**
   * Get the namespace of an element
   */
  getTagNamespace: noop,

  /**
   * Parse the real tag name for the specific platform.
   */
  parsePlatformTagName: identity,

  /**
   * Check if an attribute must be bound using property, e.g. value
   * Platform-dependent.
   */
  mustUseProp: no,

  /**
   * Perform updates asynchronously. Intended to be used by Vue Test Utils
   * This will significantly reduce performance if set to false.
   */
  async: true,

  /**
   * Exposed for legacy reasons
   */
  _lifecycleHooks: LIFECYCLE_HOOKS
});

/*  */

/**
 * unicode letters used for parsing html tags, component names and property paths.
 * using https://www.w3.org/TR/html53/semantics-scripting.html#potentialcustomelementname
 * skipping \u10000-\uEFFFF due to it freezing up PhantomJS
 */
var unicodeRegExp = /a-zA-Z\u00B7\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u037D\u037F-\u1FFF\u200C-\u200D\u203F-\u2040\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD/;

/**
 * Check if a string starts with $ or _
 */
function isReserved (str) {
  var c = (str + '').charCodeAt(0);
  return c === 0x24 || c === 0x5F
}

/**
 * Define a property.
 */
function def (obj, key, val, enumerable) {
  Object.defineProperty(obj, key, {
    value: val,
    enumerable: !!enumerable,
    writable: true,
    configurable: true
  });
}

/**
 * Parse simple path.
 */
var bailRE = new RegExp(("[^" + (unicodeRegExp.source) + ".$_\\d]"));
function parsePath (path) {
  if (bailRE.test(path)) {
    return
  }
  var segments = path.split('.');
  return function (obj) {
    for (var i = 0; i < segments.length; i++) {
      if (!obj) { return }
      obj = obj[segments[i]];
    }
    return obj
  }
}

/*  */

// can we use __proto__?
var hasProto = '__proto__' in {};

// Browser environment sniffing
var inBrowser = typeof window !== 'undefined';
var inWeex = typeof WXEnvironment !== 'undefined' && !!WXEnvironment.platform;
var weexPlatform = inWeex && WXEnvironment.platform.toLowerCase();
var UA = inBrowser && window.navigator.userAgent.toLowerCase();
var isIE = UA && /msie|trident/.test(UA);
var isIE9 = UA && UA.indexOf('msie 9.0') > 0;
var isEdge = UA && UA.indexOf('edge/') > 0;
var isAndroid = (UA && UA.indexOf('android') > 0) || (weexPlatform === 'android');
var isIOS = (UA && /iphone|ipad|ipod|ios/.test(UA)) || (weexPlatform === 'ios');
var isChrome = UA && /chrome\/\d+/.test(UA) && !isEdge;
var isPhantomJS = UA && /phantomjs/.test(UA);
var isFF = UA && UA.match(/firefox\/(\d+)/);

// Firefox has a "watch" function on Object.prototype...
var nativeWatch = ({}).watch;

var supportsPassive = false;
if (inBrowser) {
  try {
    var opts = {};
    Object.defineProperty(opts, 'passive', ({
      get: function get () {
        /* istanbul ignore next */
        supportsPassive = true;
      }
    })); // https://github.com/facebook/flow/issues/285
    window.addEventListener('test-passive', null, opts);
  } catch (e) {}
}

// this needs to be lazy-evaled because vue may be required before
// vue-server-renderer can set VUE_ENV
var _isServer;
var isServerRendering = function () {
  if (_isServer === undefined) {
    /* istanbul ignore if */
    if (!inBrowser && !inWeex && typeof global !== 'undefined') {
      // detect presence of vue-server-renderer and avoid
      // Webpack shimming the process
      _isServer = global['process'] && global['process'].env.VUE_ENV === 'server';
    } else {
      _isServer = false;
    }
  }
  return _isServer
};

// detect devtools
var devtools = inBrowser && window.__VUE_DEVTOOLS_GLOBAL_HOOK__;

/* istanbul ignore next */
function isNative (Ctor) {
  return typeof Ctor === 'function' && /native code/.test(Ctor.toString())
}

var hasSymbol =
  typeof Symbol !== 'undefined' && isNative(Symbol) &&
  typeof Reflect !== 'undefined' && isNative(Reflect.ownKeys);

var _Set;
/* istanbul ignore if */ // $flow-disable-line
if (typeof Set !== 'undefined' && isNative(Set)) {
  // use native Set when available.
  _Set = Set;
} else {
  // a non-standard Set polyfill that only works with primitive keys.
  _Set = /*@__PURE__*/(function () {
    function Set () {
      this.set = Object.create(null);
    }
    Set.prototype.has = function has (key) {
      return this.set[key] === true
    };
    Set.prototype.add = function add (key) {
      this.set[key] = true;
    };
    Set.prototype.clear = function clear () {
      this.set = Object.create(null);
    };

    return Set;
  }());
}

/*  */

var warn = noop;
var tip = noop;
var generateComponentTrace = (noop); // work around flow check
var formatComponentName = (noop);

if (false) { var repeat, classify, classifyRE, hasConsole; }

/*  */

var uid = 0;

/**
 * A dep is an observable that can have multiple
 * directives subscribing to it.
 */
var Dep = function Dep () {
  this.id = uid++;
  this.subs = [];
};

Dep.prototype.addSub = function addSub (sub) {
  this.subs.push(sub);
};

Dep.prototype.removeSub = function removeSub (sub) {
  remove(this.subs, sub);
};

Dep.prototype.depend = function depend () {
  if (Dep.target) {
    Dep.target.addDep(this);
  }
};

Dep.prototype.notify = function notify () {
  // stabilize the subscriber list first
  var subs = this.subs.slice();
  if (false) {}
  for (var i = 0, l = subs.length; i < l; i++) {
    subs[i].update();
  }
};

// The current target watcher being evaluated.
// This is globally unique because only one watcher
// can be evaluated at a time.
Dep.target = null;
var targetStack = [];

function pushTarget (target) {
  targetStack.push(target);
  Dep.target = target;
}

function popTarget () {
  targetStack.pop();
  Dep.target = targetStack[targetStack.length - 1];
}

/*  */

var VNode = function VNode (
  tag,
  data,
  children,
  text,
  elm,
  context,
  componentOptions,
  asyncFactory
) {
  this.tag = tag;
  this.data = data;
  this.children = children;
  this.text = text;
  this.elm = elm;
  this.ns = undefined;
  this.context = context;
  this.fnContext = undefined;
  this.fnOptions = undefined;
  this.fnScopeId = undefined;
  this.key = data && data.key;
  this.componentOptions = componentOptions;
  this.componentInstance = undefined;
  this.parent = undefined;
  this.raw = false;
  this.isStatic = false;
  this.isRootInsert = true;
  this.isComment = false;
  this.isCloned = false;
  this.isOnce = false;
  this.asyncFactory = asyncFactory;
  this.asyncMeta = undefined;
  this.isAsyncPlaceholder = false;
};

var prototypeAccessors = { child: { configurable: true } };

// DEPRECATED: alias for componentInstance for backwards compat.
/* istanbul ignore next */
prototypeAccessors.child.get = function () {
  return this.componentInstance
};

Object.defineProperties( VNode.prototype, prototypeAccessors );

var createEmptyVNode = function (text) {
  if ( text === void 0 ) text = '';

  var node = new VNode();
  node.text = text;
  node.isComment = true;
  return node
};

function createTextVNode (val) {
  return new VNode(undefined, undefined, undefined, String(val))
}

// optimized shallow clone
// used for static nodes and slot nodes because they may be reused across
// multiple renders, cloning them avoids errors when DOM manipulations rely
// on their elm reference.
function cloneVNode (vnode) {
  var cloned = new VNode(
    vnode.tag,
    vnode.data,
    // #7975
    // clone children array to avoid mutating original in case of cloning
    // a child.
    vnode.children && vnode.children.slice(),
    vnode.text,
    vnode.elm,
    vnode.context,
    vnode.componentOptions,
    vnode.asyncFactory
  );
  cloned.ns = vnode.ns;
  cloned.isStatic = vnode.isStatic;
  cloned.key = vnode.key;
  cloned.isComment = vnode.isComment;
  cloned.fnContext = vnode.fnContext;
  cloned.fnOptions = vnode.fnOptions;
  cloned.fnScopeId = vnode.fnScopeId;
  cloned.asyncMeta = vnode.asyncMeta;
  cloned.isCloned = true;
  return cloned
}

/*
 * not type checking this file because flow doesn't play well with
 * dynamically accessing methods on Array prototype
 */

var arrayProto = Array.prototype;
var arrayMethods = Object.create(arrayProto);

var methodsToPatch = [
  'push',
  'pop',
  'shift',
  'unshift',
  'splice',
  'sort',
  'reverse'
];

/**
 * Intercept mutating methods and emit events
 */
methodsToPatch.forEach(function (method) {
  // cache original method
  var original = arrayProto[method];
  def(arrayMethods, method, function mutator () {
    var args = [], len = arguments.length;
    while ( len-- ) args[ len ] = arguments[ len ];

    var result = original.apply(this, args);
    var ob = this.__ob__;
    var inserted;
    switch (method) {
      case 'push':
      case 'unshift':
        inserted = args;
        break
      case 'splice':
        inserted = args.slice(2);
        break
    }
    if (inserted) { ob.observeArray(inserted); }
    // notify change
    ob.dep.notify();
    return result
  });
});

/*  */

var arrayKeys = Object.getOwnPropertyNames(arrayMethods);

/**
 * In some cases we may want to disable observation inside a component's
 * update computation.
 */
var shouldObserve = true;

function toggleObserving (value) {
  shouldObserve = value;
}

/**
 * Observer class that is attached to each observed
 * object. Once attached, the observer converts the target
 * object's property keys into getter/setters that
 * collect dependencies and dispatch updates.
 */
var Observer = function Observer (value) {
  this.value = value;
  this.dep = new Dep();
  this.vmCount = 0;
  def(value, '__ob__', this);
  if (Array.isArray(value)) {
    if (hasProto) {
      protoAugment(value, arrayMethods);
    } else {
      copyAugment(value, arrayMethods, arrayKeys);
    }
    this.observeArray(value);
  } else {
    this.walk(value);
  }
};

/**
 * Walk through all properties and convert them into
 * getter/setters. This method should only be called when
 * value type is Object.
 */
Observer.prototype.walk = function walk (obj) {
  var keys = Object.keys(obj);
  for (var i = 0; i < keys.length; i++) {
    defineReactive$$1(obj, keys[i]);
  }
};

/**
 * Observe a list of Array items.
 */
Observer.prototype.observeArray = function observeArray (items) {
  for (var i = 0, l = items.length; i < l; i++) {
    observe(items[i]);
  }
};

// helpers

/**
 * Augment a target Object or Array by intercepting
 * the prototype chain using __proto__
 */
function protoAugment (target, src) {
  /* eslint-disable no-proto */
  target.__proto__ = src;
  /* eslint-enable no-proto */
}

/**
 * Augment a target Object or Array by defining
 * hidden properties.
 */
/* istanbul ignore next */
function copyAugment (target, src, keys) {
  for (var i = 0, l = keys.length; i < l; i++) {
    var key = keys[i];
    def(target, key, src[key]);
  }
}

/**
 * Attempt to create an observer instance for a value,
 * returns the new observer if successfully observed,
 * or the existing observer if the value already has one.
 */
function observe (value, asRootData) {
  if (!isObject(value) || value instanceof VNode) {
    return
  }
  var ob;
  if (hasOwn(value, '__ob__') && value.__ob__ instanceof Observer) {
    ob = value.__ob__;
  } else if (
    shouldObserve &&
    !isServerRendering() &&
    (Array.isArray(value) || isPlainObject(value)) &&
    Object.isExtensible(value) &&
    !value._isVue
  ) {
    ob = new Observer(value);
  }
  if (asRootData && ob) {
    ob.vmCount++;
  }
  return ob
}

/**
 * Define a reactive property on an Object.
 */
function defineReactive$$1 (
  obj,
  key,
  val,
  customSetter,
  shallow
) {
  var dep = new Dep();

  var property = Object.getOwnPropertyDescriptor(obj, key);
  if (property && property.configurable === false) {
    return
  }

  // cater for pre-defined getter/setters
  var getter = property && property.get;
  var setter = property && property.set;
  if ((!getter || setter) && arguments.length === 2) {
    val = obj[key];
  }

  var childOb = !shallow && observe(val);
  Object.defineProperty(obj, key, {
    enumerable: true,
    configurable: true,
    get: function reactiveGetter () {
      var value = getter ? getter.call(obj) : val;
      if (Dep.target) {
        dep.depend();
        if (childOb) {
          childOb.dep.depend();
          if (Array.isArray(value)) {
            dependArray(value);
          }
        }
      }
      return value
    },
    set: function reactiveSetter (newVal) {
      var value = getter ? getter.call(obj) : val;
      /* eslint-disable no-self-compare */
      if (newVal === value || (newVal !== newVal && value !== value)) {
        return
      }
      /* eslint-enable no-self-compare */
      if (false) {}
      // #7981: for accessor properties without setter
      if (getter && !setter) { return }
      if (setter) {
        setter.call(obj, newVal);
      } else {
        val = newVal;
      }
      childOb = !shallow && observe(newVal);
      dep.notify();
    }
  });
}

/**
 * Set a property on an object. Adds the new property and
 * triggers change notification if the property doesn't
 * already exist.
 */
function set (target, key, val) {
  if (false
  ) {}
  if (Array.isArray(target) && isValidArrayIndex(key)) {
    target.length = Math.max(target.length, key);
    target.splice(key, 1, val);
    return val
  }
  if (key in target && !(key in Object.prototype)) {
    target[key] = val;
    return val
  }
  var ob = (target).__ob__;
  if (target._isVue || (ob && ob.vmCount)) {
     false && false;
    return val
  }
  if (!ob) {
    target[key] = val;
    return val
  }
  defineReactive$$1(ob.value, key, val);
  ob.dep.notify();
  return val
}

/**
 * Delete a property and trigger change if necessary.
 */
function del (target, key) {
  if (false
  ) {}
  if (Array.isArray(target) && isValidArrayIndex(key)) {
    target.splice(key, 1);
    return
  }
  var ob = (target).__ob__;
  if (target._isVue || (ob && ob.vmCount)) {
     false && false;
    return
  }
  if (!hasOwn(target, key)) {
    return
  }
  delete target[key];
  if (!ob) {
    return
  }
  ob.dep.notify();
}

/**
 * Collect dependencies on array elements when the array is touched, since
 * we cannot intercept array element access like property getters.
 */
function dependArray (value) {
  for (var e = (void 0), i = 0, l = value.length; i < l; i++) {
    e = value[i];
    e && e.__ob__ && e.__ob__.dep.depend();
    if (Array.isArray(e)) {
      dependArray(e);
    }
  }
}

/*  */

/**
 * Option overwriting strategies are functions that handle
 * how to merge a parent option value and a child option
 * value into the final value.
 */
var strats = config.optionMergeStrategies;

/**
 * Options with restrictions
 */
if (false) {}

/**
 * Helper that recursively merges two data objects together.
 */
function mergeData (to, from) {
  if (!from) { return to }
  var key, toVal, fromVal;

  var keys = hasSymbol
    ? Reflect.ownKeys(from)
    : Object.keys(from);

  for (var i = 0; i < keys.length; i++) {
    key = keys[i];
    // in case the object is already observed...
    if (key === '__ob__') { continue }
    toVal = to[key];
    fromVal = from[key];
    if (!hasOwn(to, key)) {
      set(to, key, fromVal);
    } else if (
      toVal !== fromVal &&
      isPlainObject(toVal) &&
      isPlainObject(fromVal)
    ) {
      mergeData(toVal, fromVal);
    }
  }
  return to
}

/**
 * Data
 */
function mergeDataOrFn (
  parentVal,
  childVal,
  vm
) {
  if (!vm) {
    // in a Vue.extend merge, both should be functions
    if (!childVal) {
      return parentVal
    }
    if (!parentVal) {
      return childVal
    }
    // when parentVal & childVal are both present,
    // we need to return a function that returns the
    // merged result of both functions... no need to
    // check if parentVal is a function here because
    // it has to be a function to pass previous merges.
    return function mergedDataFn () {
      return mergeData(
        typeof childVal === 'function' ? childVal.call(this, this) : childVal,
        typeof parentVal === 'function' ? parentVal.call(this, this) : parentVal
      )
    }
  } else {
    return function mergedInstanceDataFn () {
      // instance merge
      var instanceData = typeof childVal === 'function'
        ? childVal.call(vm, vm)
        : childVal;
      var defaultData = typeof parentVal === 'function'
        ? parentVal.call(vm, vm)
        : parentVal;
      if (instanceData) {
        return mergeData(instanceData, defaultData)
      } else {
        return defaultData
      }
    }
  }
}

strats.data = function (
  parentVal,
  childVal,
  vm
) {
  if (!vm) {
    if (childVal && typeof childVal !== 'function') {
       false && false;

      return parentVal
    }
    return mergeDataOrFn(parentVal, childVal)
  }

  return mergeDataOrFn(parentVal, childVal, vm)
};

/**
 * Hooks and props are merged as arrays.
 */
function mergeHook (
  parentVal,
  childVal
) {
  var res = childVal
    ? parentVal
      ? parentVal.concat(childVal)
      : Array.isArray(childVal)
        ? childVal
        : [childVal]
    : parentVal;
  return res
    ? dedupeHooks(res)
    : res
}

function dedupeHooks (hooks) {
  var res = [];
  for (var i = 0; i < hooks.length; i++) {
    if (res.indexOf(hooks[i]) === -1) {
      res.push(hooks[i]);
    }
  }
  return res
}

LIFECYCLE_HOOKS.forEach(function (hook) {
  strats[hook] = mergeHook;
});

/**
 * Assets
 *
 * When a vm is present (instance creation), we need to do
 * a three-way merge between constructor options, instance
 * options and parent options.
 */
function mergeAssets (
  parentVal,
  childVal,
  vm,
  key
) {
  var res = Object.create(parentVal || null);
  if (childVal) {
     false && false;
    return extend(res, childVal)
  } else {
    return res
  }
}

ASSET_TYPES.forEach(function (type) {
  strats[type + 's'] = mergeAssets;
});

/**
 * Watchers.
 *
 * Watchers hashes should not overwrite one
 * another, so we merge them as arrays.
 */
strats.watch = function (
  parentVal,
  childVal,
  vm,
  key
) {
  // work around Firefox's Object.prototype.watch...
  if (parentVal === nativeWatch) { parentVal = undefined; }
  if (childVal === nativeWatch) { childVal = undefined; }
  /* istanbul ignore if */
  if (!childVal) { return Object.create(parentVal || null) }
  if (false) {}
  if (!parentVal) { return childVal }
  var ret = {};
  extend(ret, parentVal);
  for (var key$1 in childVal) {
    var parent = ret[key$1];
    var child = childVal[key$1];
    if (parent && !Array.isArray(parent)) {
      parent = [parent];
    }
    ret[key$1] = parent
      ? parent.concat(child)
      : Array.isArray(child) ? child : [child];
  }
  return ret
};

/**
 * Other object hashes.
 */
strats.props =
strats.methods =
strats.inject =
strats.computed = function (
  parentVal,
  childVal,
  vm,
  key
) {
  if (childVal && "production" !== 'production') {
    assertObjectType(key, childVal, vm);
  }
  if (!parentVal) { return childVal }
  var ret = Object.create(null);
  extend(ret, parentVal);
  if (childVal) { extend(ret, childVal); }
  return ret
};
strats.provide = mergeDataOrFn;

/**
 * Default strategy.
 */
var defaultStrat = function (parentVal, childVal) {
  return childVal === undefined
    ? parentVal
    : childVal
};

/**
 * Validate component names
 */
function checkComponents (options) {
  for (var key in options.components) {
    validateComponentName(key);
  }
}

function validateComponentName (name) {
  if (!new RegExp(("^[a-zA-Z][\\-\\.0-9_" + (unicodeRegExp.source) + "]*$")).test(name)) {
    warn(
      'Invalid component name: "' + name + '". Component names ' +
      'should conform to valid custom element name in html5 specification.'
    );
  }
  if (isBuiltInTag(name) || config.isReservedTag(name)) {
    warn(
      'Do not use built-in or reserved HTML elements as component ' +
      'id: ' + name
    );
  }
}

/**
 * Ensure all props option syntax are normalized into the
 * Object-based format.
 */
function normalizeProps (options, vm) {
  var props = options.props;
  if (!props) { return }
  var res = {};
  var i, val, name;
  if (Array.isArray(props)) {
    i = props.length;
    while (i--) {
      val = props[i];
      if (typeof val === 'string') {
        name = camelize(val);
        res[name] = { type: null };
      } else if (false) {}
    }
  } else if (isPlainObject(props)) {
    for (var key in props) {
      val = props[key];
      name = camelize(key);
      res[name] = isPlainObject(val)
        ? val
        : { type: val };
    }
  } else if (false) {}
  options.props = res;
}

/**
 * Normalize all injections into Object-based format
 */
function normalizeInject (options, vm) {
  var inject = options.inject;
  if (!inject) { return }
  var normalized = options.inject = {};
  if (Array.isArray(inject)) {
    for (var i = 0; i < inject.length; i++) {
      normalized[inject[i]] = { from: inject[i] };
    }
  } else if (isPlainObject(inject)) {
    for (var key in inject) {
      var val = inject[key];
      normalized[key] = isPlainObject(val)
        ? extend({ from: key }, val)
        : { from: val };
    }
  } else if (false) {}
}

/**
 * Normalize raw function directives into object format.
 */
function normalizeDirectives (options) {
  var dirs = options.directives;
  if (dirs) {
    for (var key in dirs) {
      var def$$1 = dirs[key];
      if (typeof def$$1 === 'function') {
        dirs[key] = { bind: def$$1, update: def$$1 };
      }
    }
  }
}

function assertObjectType (name, value, vm) {
  if (!isPlainObject(value)) {
    warn(
      "Invalid value for option \"" + name + "\": expected an Object, " +
      "but got " + (toRawType(value)) + ".",
      vm
    );
  }
}

/**
 * Merge two option objects into a new one.
 * Core utility used in both instantiation and inheritance.
 */
function mergeOptions (
  parent,
  child,
  vm
) {
  if (false) {}

  if (typeof child === 'function') {
    child = child.options;
  }

  normalizeProps(child, vm);
  normalizeInject(child, vm);
  normalizeDirectives(child);

  // Apply extends and mixins on the child options,
  // but only if it is a raw options object that isn't
  // the result of another mergeOptions call.
  // Only merged options has the _base property.
  if (!child._base) {
    if (child.extends) {
      parent = mergeOptions(parent, child.extends, vm);
    }
    if (child.mixins) {
      for (var i = 0, l = child.mixins.length; i < l; i++) {
        parent = mergeOptions(parent, child.mixins[i], vm);
      }
    }
  }

  var options = {};
  var key;
  for (key in parent) {
    mergeField(key);
  }
  for (key in child) {
    if (!hasOwn(parent, key)) {
      mergeField(key);
    }
  }
  function mergeField (key) {
    var strat = strats[key] || defaultStrat;
    options[key] = strat(parent[key], child[key], vm, key);
  }
  return options
}

/**
 * Resolve an asset.
 * This function is used because child instances need access
 * to assets defined in its ancestor chain.
 */
function resolveAsset (
  options,
  type,
  id,
  warnMissing
) {
  /* istanbul ignore if */
  if (typeof id !== 'string') {
    return
  }
  var assets = options[type];
  // check local registration variations first
  if (hasOwn(assets, id)) { return assets[id] }
  var camelizedId = camelize(id);
  if (hasOwn(assets, camelizedId)) { return assets[camelizedId] }
  var PascalCaseId = capitalize(camelizedId);
  if (hasOwn(assets, PascalCaseId)) { return assets[PascalCaseId] }
  // fallback to prototype chain
  var res = assets[id] || assets[camelizedId] || assets[PascalCaseId];
  if (false) {}
  return res
}

/*  */



function validateProp (
  key,
  propOptions,
  propsData,
  vm
) {
  var prop = propOptions[key];
  var absent = !hasOwn(propsData, key);
  var value = propsData[key];
  // boolean casting
  var booleanIndex = getTypeIndex(Boolean, prop.type);
  if (booleanIndex > -1) {
    if (absent && !hasOwn(prop, 'default')) {
      value = false;
    } else if (value === '' || value === hyphenate(key)) {
      // only cast empty string / same name to boolean if
      // boolean has higher priority
      var stringIndex = getTypeIndex(String, prop.type);
      if (stringIndex < 0 || booleanIndex < stringIndex) {
        value = true;
      }
    }
  }
  // check default value
  if (value === undefined) {
    value = getPropDefaultValue(vm, prop, key);
    // since the default value is a fresh copy,
    // make sure to observe it.
    var prevShouldObserve = shouldObserve;
    toggleObserving(true);
    observe(value);
    toggleObserving(prevShouldObserve);
  }
  if (
    false
  ) {}
  return value
}

/**
 * Get the default value of a prop.
 */
function getPropDefaultValue (vm, prop, key) {
  // no default, return undefined
  if (!hasOwn(prop, 'default')) {
    return undefined
  }
  var def = prop.default;
  // warn against non-factory defaults for Object & Array
  if (false) {}
  // the raw prop value was also undefined from previous render,
  // return previous default value to avoid unnecessary watcher trigger
  if (vm && vm.$options.propsData &&
    vm.$options.propsData[key] === undefined &&
    vm._props[key] !== undefined
  ) {
    return vm._props[key]
  }
  // call factory function for non-Function types
  // a value is Function if its prototype is function even across different execution context
  return typeof def === 'function' && getType(prop.type) !== 'Function'
    ? def.call(vm)
    : def
}

/**
 * Assert whether a prop is valid.
 */
function assertProp (
  prop,
  name,
  value,
  vm,
  absent
) {
  if (prop.required && absent) {
    warn(
      'Missing required prop: "' + name + '"',
      vm
    );
    return
  }
  if (value == null && !prop.required) {
    return
  }
  var type = prop.type;
  var valid = !type || type === true;
  var expectedTypes = [];
  if (type) {
    if (!Array.isArray(type)) {
      type = [type];
    }
    for (var i = 0; i < type.length && !valid; i++) {
      var assertedType = assertType(value, type[i]);
      expectedTypes.push(assertedType.expectedType || '');
      valid = assertedType.valid;
    }
  }

  if (!valid) {
    warn(
      getInvalidTypeMessage(name, value, expectedTypes),
      vm
    );
    return
  }
  var validator = prop.validator;
  if (validator) {
    if (!validator(value)) {
      warn(
        'Invalid prop: custom validator check failed for prop "' + name + '".',
        vm
      );
    }
  }
}

var simpleCheckRE = /^(String|Number|Boolean|Function|Symbol)$/;

function assertType (value, type) {
  var valid;
  var expectedType = getType(type);
  if (simpleCheckRE.test(expectedType)) {
    var t = typeof value;
    valid = t === expectedType.toLowerCase();
    // for primitive wrapper objects
    if (!valid && t === 'object') {
      valid = value instanceof type;
    }
  } else if (expectedType === 'Object') {
    valid = isPlainObject(value);
  } else if (expectedType === 'Array') {
    valid = Array.isArray(value);
  } else {
    valid = value instanceof type;
  }
  return {
    valid: valid,
    expectedType: expectedType
  }
}

/**
 * Use function string name to check built-in types,
 * because a simple equality check will fail when running
 * across different vms / iframes.
 */
function getType (fn) {
  var match = fn && fn.toString().match(/^\s*function (\w+)/);
  return match ? match[1] : ''
}

function isSameType (a, b) {
  return getType(a) === getType(b)
}

function getTypeIndex (type, expectedTypes) {
  if (!Array.isArray(expectedTypes)) {
    return isSameType(expectedTypes, type) ? 0 : -1
  }
  for (var i = 0, len = expectedTypes.length; i < len; i++) {
    if (isSameType(expectedTypes[i], type)) {
      return i
    }
  }
  return -1
}

function getInvalidTypeMessage (name, value, expectedTypes) {
  var message = "Invalid prop: type check failed for prop \"" + name + "\"." +
    " Expected " + (expectedTypes.map(capitalize).join(', '));
  var expectedType = expectedTypes[0];
  var receivedType = toRawType(value);
  var expectedValue = styleValue(value, expectedType);
  var receivedValue = styleValue(value, receivedType);
  // check if we need to specify expected value
  if (expectedTypes.length === 1 &&
      isExplicable(expectedType) &&
      !isBoolean(expectedType, receivedType)) {
    message += " with value " + expectedValue;
  }
  message += ", got " + receivedType + " ";
  // check if we need to specify received value
  if (isExplicable(receivedType)) {
    message += "with value " + receivedValue + ".";
  }
  return message
}

function styleValue (value, type) {
  if (type === 'String') {
    return ("\"" + value + "\"")
  } else if (type === 'Number') {
    return ("" + (Number(value)))
  } else {
    return ("" + value)
  }
}

function isExplicable (value) {
  var explicitTypes = ['string', 'number', 'boolean'];
  return explicitTypes.some(function (elem) { return value.toLowerCase() === elem; })
}

function isBoolean () {
  var args = [], len = arguments.length;
  while ( len-- ) args[ len ] = arguments[ len ];

  return args.some(function (elem) { return elem.toLowerCase() === 'boolean'; })
}

/*  */

function handleError (err, vm, info) {
  // Deactivate deps tracking while processing error handler to avoid possible infinite rendering.
  // See: https://github.com/vuejs/vuex/issues/1505
  pushTarget();
  try {
    if (vm) {
      var cur = vm;
      while ((cur = cur.$parent)) {
        var hooks = cur.$options.errorCaptured;
        if (hooks) {
          for (var i = 0; i < hooks.length; i++) {
            try {
              var capture = hooks[i].call(cur, err, vm, info) === false;
              if (capture) { return }
            } catch (e) {
              globalHandleError(e, cur, 'errorCaptured hook');
            }
          }
        }
      }
    }
    globalHandleError(err, vm, info);
  } finally {
    popTarget();
  }
}

function invokeWithErrorHandling (
  handler,
  context,
  args,
  vm,
  info
) {
  var res;
  try {
    res = args ? handler.apply(context, args) : handler.call(context);
    if (res && !res._isVue && isPromise(res) && !res._handled) {
      res.catch(function (e) { return handleError(e, vm, info + " (Promise/async)"); });
      // issue #9511
      // avoid catch triggering multiple times when nested calls
      res._handled = true;
    }
  } catch (e) {
    handleError(e, vm, info);
  }
  return res
}

function globalHandleError (err, vm, info) {
  if (config.errorHandler) {
    try {
      return config.errorHandler.call(null, err, vm, info)
    } catch (e) {
      // if the user intentionally throws the original error in the handler,
      // do not log it twice
      if (e !== err) {
        logError(e, null, 'config.errorHandler');
      }
    }
  }
  logError(err, vm, info);
}

function logError (err, vm, info) {
  if (false) {}
  /* istanbul ignore else */
  if ((inBrowser || inWeex) && typeof console !== 'undefined') {
    console.error(err);
  } else {
    throw err
  }
}

/*  */

var isUsingMicroTask = false;

var callbacks = [];
var pending = false;

function flushCallbacks () {
  pending = false;
  var copies = callbacks.slice(0);
  callbacks.length = 0;
  for (var i = 0; i < copies.length; i++) {
    copies[i]();
  }
}

// Here we have async deferring wrappers using microtasks.
// In 2.5 we used (macro) tasks (in combination with microtasks).
// However, it has subtle problems when state is changed right before repaint
// (e.g. #6813, out-in transitions).
// Also, using (macro) tasks in event handler would cause some weird behaviors
// that cannot be circumvented (e.g. #7109, #7153, #7546, #7834, #8109).
// So we now use microtasks everywhere, again.
// A major drawback of this tradeoff is that there are some scenarios
// where microtasks have too high a priority and fire in between supposedly
// sequential events (e.g. #4521, #6690, which have workarounds)
// or even between bubbling of the same event (#6566).
var timerFunc;

// The nextTick behavior leverages the microtask queue, which can be accessed
// via either native Promise.then or MutationObserver.
// MutationObserver has wider support, however it is seriously bugged in
// UIWebView in iOS >= 9.3.3 when triggered in touch event handlers. It
// completely stops working after triggering a few times... so, if native
// Promise is available, we will use it:
/* istanbul ignore next, $flow-disable-line */
if (typeof Promise !== 'undefined' && isNative(Promise)) {
  var p = Promise.resolve();
  timerFunc = function () {
    p.then(flushCallbacks);
    // In problematic UIWebViews, Promise.then doesn't completely break, but
    // it can get stuck in a weird state where callbacks are pushed into the
    // microtask queue but the queue isn't being flushed, until the browser
    // needs to do some other work, e.g. handle a timer. Therefore we can
    // "force" the microtask queue to be flushed by adding an empty timer.
    if (isIOS) { setTimeout(noop); }
  };
  isUsingMicroTask = true;
} else if (!isIE && typeof MutationObserver !== 'undefined' && (
  isNative(MutationObserver) ||
  // PhantomJS and iOS 7.x
  MutationObserver.toString() === '[object MutationObserverConstructor]'
)) {
  // Use MutationObserver where native Promise is not available,
  // e.g. PhantomJS, iOS7, Android 4.4
  // (#6466 MutationObserver is unreliable in IE11)
  var counter = 1;
  var observer = new MutationObserver(flushCallbacks);
  var textNode = document.createTextNode(String(counter));
  observer.observe(textNode, {
    characterData: true
  });
  timerFunc = function () {
    counter = (counter + 1) % 2;
    textNode.data = String(counter);
  };
  isUsingMicroTask = true;
} else if (typeof setImmediate !== 'undefined' && isNative(setImmediate)) {
  // Fallback to setImmediate.
  // Technically it leverages the (macro) task queue,
  // but it is still a better choice than setTimeout.
  timerFunc = function () {
    setImmediate(flushCallbacks);
  };
} else {
  // Fallback to setTimeout.
  timerFunc = function () {
    setTimeout(flushCallbacks, 0);
  };
}

function nextTick (cb, ctx) {
  var _resolve;
  callbacks.push(function () {
    if (cb) {
      try {
        cb.call(ctx);
      } catch (e) {
        handleError(e, ctx, 'nextTick');
      }
    } else if (_resolve) {
      _resolve(ctx);
    }
  });
  if (!pending) {
    pending = true;
    timerFunc();
  }
  // $flow-disable-line
  if (!cb && typeof Promise !== 'undefined') {
    return new Promise(function (resolve) {
      _resolve = resolve;
    })
  }
}

/*  */

/* not type checking this file because flow doesn't play well with Proxy */

var initProxy;

if (false) { var getHandler, hasHandler, isBuiltInModifier, hasProxy, warnReservedPrefix, warnNonPresent, allowedGlobals; }

/*  */

var seenObjects = new _Set();

/**
 * Recursively traverse an object to evoke all converted
 * getters, so that every nested property inside the object
 * is collected as a "deep" dependency.
 */
function traverse (val) {
  _traverse(val, seenObjects);
  seenObjects.clear();
}

function _traverse (val, seen) {
  var i, keys;
  var isA = Array.isArray(val);
  if ((!isA && !isObject(val)) || Object.isFrozen(val) || val instanceof VNode) {
    return
  }
  if (val.__ob__) {
    var depId = val.__ob__.dep.id;
    if (seen.has(depId)) {
      return
    }
    seen.add(depId);
  }
  if (isA) {
    i = val.length;
    while (i--) { _traverse(val[i], seen); }
  } else {
    keys = Object.keys(val);
    i = keys.length;
    while (i--) { _traverse(val[keys[i]], seen); }
  }
}

var mark;
var measure;

if (false) { var perf; }

/*  */

var normalizeEvent = cached(function (name) {
  var passive = name.charAt(0) === '&';
  name = passive ? name.slice(1) : name;
  var once$$1 = name.charAt(0) === '~'; // Prefixed last, checked first
  name = once$$1 ? name.slice(1) : name;
  var capture = name.charAt(0) === '!';
  name = capture ? name.slice(1) : name;
  return {
    name: name,
    once: once$$1,
    capture: capture,
    passive: passive
  }
});

function createFnInvoker (fns, vm) {
  function invoker () {
    var arguments$1 = arguments;

    var fns = invoker.fns;
    if (Array.isArray(fns)) {
      var cloned = fns.slice();
      for (var i = 0; i < cloned.length; i++) {
        invokeWithErrorHandling(cloned[i], null, arguments$1, vm, "v-on handler");
      }
    } else {
      // return handler return value for single handlers
      return invokeWithErrorHandling(fns, null, arguments, vm, "v-on handler")
    }
  }
  invoker.fns = fns;
  return invoker
}

function updateListeners (
  on,
  oldOn,
  add,
  remove$$1,
  createOnceHandler,
  vm
) {
  var name, def$$1, cur, old, event;
  for (name in on) {
    def$$1 = cur = on[name];
    old = oldOn[name];
    event = normalizeEvent(name);
    if (isUndef(cur)) {
       false && false;
    } else if (isUndef(old)) {
      if (isUndef(cur.fns)) {
        cur = on[name] = createFnInvoker(cur, vm);
      }
      if (isTrue(event.once)) {
        cur = on[name] = createOnceHandler(event.name, cur, event.capture);
      }
      add(event.name, cur, event.capture, event.passive, event.params);
    } else if (cur !== old) {
      old.fns = cur;
      on[name] = old;
    }
  }
  for (name in oldOn) {
    if (isUndef(on[name])) {
      event = normalizeEvent(name);
      remove$$1(event.name, oldOn[name], event.capture);
    }
  }
}

/*  */

function mergeVNodeHook (def, hookKey, hook) {
  if (def instanceof VNode) {
    def = def.data.hook || (def.data.hook = {});
  }
  var invoker;
  var oldHook = def[hookKey];

  function wrappedHook () {
    hook.apply(this, arguments);
    // important: remove merged hook to ensure it's called only once
    // and prevent memory leak
    remove(invoker.fns, wrappedHook);
  }

  if (isUndef(oldHook)) {
    // no existing hook
    invoker = createFnInvoker([wrappedHook]);
  } else {
    /* istanbul ignore if */
    if (isDef(oldHook.fns) && isTrue(oldHook.merged)) {
      // already a merged invoker
      invoker = oldHook;
      invoker.fns.push(wrappedHook);
    } else {
      // existing plain hook
      invoker = createFnInvoker([oldHook, wrappedHook]);
    }
  }

  invoker.merged = true;
  def[hookKey] = invoker;
}

/*  */

function extractPropsFromVNodeData (
  data,
  Ctor,
  tag
) {
  // we are only extracting raw values here.
  // validation and default values are handled in the child
  // component itself.
  var propOptions = Ctor.options.props;
  if (isUndef(propOptions)) {
    return
  }
  var res = {};
  var attrs = data.attrs;
  var props = data.props;
  if (isDef(attrs) || isDef(props)) {
    for (var key in propOptions) {
      var altKey = hyphenate(key);
      if (false) { var keyInLowerCase; }
      checkProp(res, props, key, altKey, true) ||
      checkProp(res, attrs, key, altKey, false);
    }
  }
  return res
}

function checkProp (
  res,
  hash,
  key,
  altKey,
  preserve
) {
  if (isDef(hash)) {
    if (hasOwn(hash, key)) {
      res[key] = hash[key];
      if (!preserve) {
        delete hash[key];
      }
      return true
    } else if (hasOwn(hash, altKey)) {
      res[key] = hash[altKey];
      if (!preserve) {
        delete hash[altKey];
      }
      return true
    }
  }
  return false
}

/*  */

// The template compiler attempts to minimize the need for normalization by
// statically analyzing the template at compile time.
//
// For plain HTML markup, normalization can be completely skipped because the
// generated render function is guaranteed to return Array<VNode>. There are
// two cases where extra normalization is needed:

// 1. When the children contains components - because a functional component
// may return an Array instead of a single root. In this case, just a simple
// normalization is needed - if any child is an Array, we flatten the whole
// thing with Array.prototype.concat. It is guaranteed to be only 1-level deep
// because functional components already normalize their own children.
function simpleNormalizeChildren (children) {
  for (var i = 0; i < children.length; i++) {
    if (Array.isArray(children[i])) {
      return Array.prototype.concat.apply([], children)
    }
  }
  return children
}

// 2. When the children contains constructs that always generated nested Arrays,
// e.g. <template>, <slot>, v-for, or when the children is provided by user
// with hand-written render functions / JSX. In such cases a full normalization
// is needed to cater to all possible types of children values.
function normalizeChildren (children) {
  return isPrimitive(children)
    ? [createTextVNode(children)]
    : Array.isArray(children)
      ? normalizeArrayChildren(children)
      : undefined
}

function isTextNode (node) {
  return isDef(node) && isDef(node.text) && isFalse(node.isComment)
}

function normalizeArrayChildren (children, nestedIndex) {
  var res = [];
  var i, c, lastIndex, last;
  for (i = 0; i < children.length; i++) {
    c = children[i];
    if (isUndef(c) || typeof c === 'boolean') { continue }
    lastIndex = res.length - 1;
    last = res[lastIndex];
    //  nested
    if (Array.isArray(c)) {
      if (c.length > 0) {
        c = normalizeArrayChildren(c, ((nestedIndex || '') + "_" + i));
        // merge adjacent text nodes
        if (isTextNode(c[0]) && isTextNode(last)) {
          res[lastIndex] = createTextVNode(last.text + (c[0]).text);
          c.shift();
        }
        res.push.apply(res, c);
      }
    } else if (isPrimitive(c)) {
      if (isTextNode(last)) {
        // merge adjacent text nodes
        // this is necessary for SSR hydration because text nodes are
        // essentially merged when rendered to HTML strings
        res[lastIndex] = createTextVNode(last.text + c);
      } else if (c !== '') {
        // convert primitive to vnode
        res.push(createTextVNode(c));
      }
    } else {
      if (isTextNode(c) && isTextNode(last)) {
        // merge adjacent text nodes
        res[lastIndex] = createTextVNode(last.text + c.text);
      } else {
        // default key for nested array children (likely generated by v-for)
        if (isTrue(children._isVList) &&
          isDef(c.tag) &&
          isUndef(c.key) &&
          isDef(nestedIndex)) {
          c.key = "__vlist" + nestedIndex + "_" + i + "__";
        }
        res.push(c);
      }
    }
  }
  return res
}

/*  */

function initProvide (vm) {
  var provide = vm.$options.provide;
  if (provide) {
    vm._provided = typeof provide === 'function'
      ? provide.call(vm)
      : provide;
  }
}

function initInjections (vm) {
  var result = resolveInject(vm.$options.inject, vm);
  if (result) {
    toggleObserving(false);
    Object.keys(result).forEach(function (key) {
      /* istanbul ignore else */
      if (false) {} else {
        defineReactive$$1(vm, key, result[key]);
      }
    });
    toggleObserving(true);
  }
}

function resolveInject (inject, vm) {
  if (inject) {
    // inject is :any because flow is not smart enough to figure out cached
    var result = Object.create(null);
    var keys = hasSymbol
      ? Reflect.ownKeys(inject)
      : Object.keys(inject);

    for (var i = 0; i < keys.length; i++) {
      var key = keys[i];
      // #6574 in case the inject object is observed...
      if (key === '__ob__') { continue }
      var provideKey = inject[key].from;
      var source = vm;
      while (source) {
        if (source._provided && hasOwn(source._provided, provideKey)) {
          result[key] = source._provided[provideKey];
          break
        }
        source = source.$parent;
      }
      if (!source) {
        if ('default' in inject[key]) {
          var provideDefault = inject[key].default;
          result[key] = typeof provideDefault === 'function'
            ? provideDefault.call(vm)
            : provideDefault;
        } else if (false) {}
      }
    }
    return result
  }
}

/*  */



/**
 * Runtime helper for resolving raw children VNodes into a slot object.
 */
function resolveSlots (
  children,
  context
) {
  if (!children || !children.length) {
    return {}
  }
  var slots = {};
  for (var i = 0, l = children.length; i < l; i++) {
    var child = children[i];
    var data = child.data;
    // remove slot attribute if the node is resolved as a Vue slot node
    if (data && data.attrs && data.attrs.slot) {
      delete data.attrs.slot;
    }
    // named slots should only be respected if the vnode was rendered in the
    // same context.
    if ((child.context === context || child.fnContext === context) &&
      data && data.slot != null
    ) {
      var name = data.slot;
      var slot = (slots[name] || (slots[name] = []));
      if (child.tag === 'template') {
        slot.push.apply(slot, child.children || []);
      } else {
        slot.push(child);
      }
    } else {
      (slots.default || (slots.default = [])).push(child);
    }
  }
  // ignore slots that contains only whitespace
  for (var name$1 in slots) {
    if (slots[name$1].every(isWhitespace)) {
      delete slots[name$1];
    }
  }
  return slots
}

function isWhitespace (node) {
  return (node.isComment && !node.asyncFactory) || node.text === ' '
}

/*  */

function normalizeScopedSlots (
  slots,
  normalSlots,
  prevSlots
) {
  var res;
  var hasNormalSlots = Object.keys(normalSlots).length > 0;
  var isStable = slots ? !!slots.$stable : !hasNormalSlots;
  var key = slots && slots.$key;
  if (!slots) {
    res = {};
  } else if (slots._normalized) {
    // fast path 1: child component re-render only, parent did not change
    return slots._normalized
  } else if (
    isStable &&
    prevSlots &&
    prevSlots !== emptyObject &&
    key === prevSlots.$key &&
    !hasNormalSlots &&
    !prevSlots.$hasNormal
  ) {
    // fast path 2: stable scoped slots w/ no normal slots to proxy,
    // only need to normalize once
    return prevSlots
  } else {
    res = {};
    for (var key$1 in slots) {
      if (slots[key$1] && key$1[0] !== '$') {
        res[key$1] = normalizeScopedSlot(normalSlots, key$1, slots[key$1]);
      }
    }
  }
  // expose normal slots on scopedSlots
  for (var key$2 in normalSlots) {
    if (!(key$2 in res)) {
      res[key$2] = proxyNormalSlot(normalSlots, key$2);
    }
  }
  // avoriaz seems to mock a non-extensible $scopedSlots object
  // and when that is passed down this would cause an error
  if (slots && Object.isExtensible(slots)) {
    (slots)._normalized = res;
  }
  def(res, '$stable', isStable);
  def(res, '$key', key);
  def(res, '$hasNormal', hasNormalSlots);
  return res
}

function normalizeScopedSlot(normalSlots, key, fn) {
  var normalized = function () {
    var res = arguments.length ? fn.apply(null, arguments) : fn({});
    res = res && typeof res === 'object' && !Array.isArray(res)
      ? [res] // single vnode
      : normalizeChildren(res);
    return res && (
      res.length === 0 ||
      (res.length === 1 && res[0].isComment) // #9658
    ) ? undefined
      : res
  };
  // this is a slot using the new v-slot syntax without scope. although it is
  // compiled as a scoped slot, render fn users would expect it to be present
  // on this.$slots because the usage is semantically a normal slot.
  if (fn.proxy) {
    Object.defineProperty(normalSlots, key, {
      get: normalized,
      enumerable: true,
      configurable: true
    });
  }
  return normalized
}

function proxyNormalSlot(slots, key) {
  return function () { return slots[key]; }
}

/*  */

/**
 * Runtime helper for rendering v-for lists.
 */
function renderList (
  val,
  render
) {
  var ret, i, l, keys, key;
  if (Array.isArray(val) || typeof val === 'string') {
    ret = new Array(val.length);
    for (i = 0, l = val.length; i < l; i++) {
      ret[i] = render(val[i], i);
    }
  } else if (typeof val === 'number') {
    ret = new Array(val);
    for (i = 0; i < val; i++) {
      ret[i] = render(i + 1, i);
    }
  } else if (isObject(val)) {
    if (hasSymbol && val[Symbol.iterator]) {
      ret = [];
      var iterator = val[Symbol.iterator]();
      var result = iterator.next();
      while (!result.done) {
        ret.push(render(result.value, ret.length));
        result = iterator.next();
      }
    } else {
      keys = Object.keys(val);
      ret = new Array(keys.length);
      for (i = 0, l = keys.length; i < l; i++) {
        key = keys[i];
        ret[i] = render(val[key], key, i);
      }
    }
  }
  if (!isDef(ret)) {
    ret = [];
  }
  (ret)._isVList = true;
  return ret
}

/*  */

/**
 * Runtime helper for rendering <slot>
 */
function renderSlot (
  name,
  fallback,
  props,
  bindObject
) {
  var scopedSlotFn = this.$scopedSlots[name];
  var nodes;
  if (scopedSlotFn) { // scoped slot
    props = props || {};
    if (bindObject) {
      if (false) {}
      props = extend(extend({}, bindObject), props);
    }
    nodes = scopedSlotFn(props) || fallback;
  } else {
    nodes = this.$slots[name] || fallback;
  }

  var target = props && props.slot;
  if (target) {
    return this.$createElement('template', { slot: target }, nodes)
  } else {
    return nodes
  }
}

/*  */

/**
 * Runtime helper for resolving filters
 */
function resolveFilter (id) {
  return resolveAsset(this.$options, 'filters', id, true) || identity
}

/*  */

function isKeyNotMatch (expect, actual) {
  if (Array.isArray(expect)) {
    return expect.indexOf(actual) === -1
  } else {
    return expect !== actual
  }
}

/**
 * Runtime helper for checking keyCodes from config.
 * exposed as Vue.prototype._k
 * passing in eventKeyName as last argument separately for backwards compat
 */
function checkKeyCodes (
  eventKeyCode,
  key,
  builtInKeyCode,
  eventKeyName,
  builtInKeyName
) {
  var mappedKeyCode = config.keyCodes[key] || builtInKeyCode;
  if (builtInKeyName && eventKeyName && !config.keyCodes[key]) {
    return isKeyNotMatch(builtInKeyName, eventKeyName)
  } else if (mappedKeyCode) {
    return isKeyNotMatch(mappedKeyCode, eventKeyCode)
  } else if (eventKeyName) {
    return hyphenate(eventKeyName) !== key
  }
}

/*  */

/**
 * Runtime helper for merging v-bind="object" into a VNode's data.
 */
function bindObjectProps (
  data,
  tag,
  value,
  asProp,
  isSync
) {
  if (value) {
    if (!isObject(value)) {
       false && false;
    } else {
      if (Array.isArray(value)) {
        value = toObject(value);
      }
      var hash;
      var loop = function ( key ) {
        if (
          key === 'class' ||
          key === 'style' ||
          isReservedAttribute(key)
        ) {
          hash = data;
        } else {
          var type = data.attrs && data.attrs.type;
          hash = asProp || config.mustUseProp(tag, type, key)
            ? data.domProps || (data.domProps = {})
            : data.attrs || (data.attrs = {});
        }
        var camelizedKey = camelize(key);
        var hyphenatedKey = hyphenate(key);
        if (!(camelizedKey in hash) && !(hyphenatedKey in hash)) {
          hash[key] = value[key];

          if (isSync) {
            var on = data.on || (data.on = {});
            on[("update:" + key)] = function ($event) {
              value[key] = $event;
            };
          }
        }
      };

      for (var key in value) loop( key );
    }
  }
  return data
}

/*  */

/**
 * Runtime helper for rendering static trees.
 */
function renderStatic (
  index,
  isInFor
) {
  var cached = this._staticTrees || (this._staticTrees = []);
  var tree = cached[index];
  // if has already-rendered static tree and not inside v-for,
  // we can reuse the same tree.
  if (tree && !isInFor) {
    return tree
  }
  // otherwise, render a fresh tree.
  tree = cached[index] = this.$options.staticRenderFns[index].call(
    this._renderProxy,
    null,
    this // for render fns generated for functional component templates
  );
  markStatic(tree, ("__static__" + index), false);
  return tree
}

/**
 * Runtime helper for v-once.
 * Effectively it means marking the node as static with a unique key.
 */
function markOnce (
  tree,
  index,
  key
) {
  markStatic(tree, ("__once__" + index + (key ? ("_" + key) : "")), true);
  return tree
}

function markStatic (
  tree,
  key,
  isOnce
) {
  if (Array.isArray(tree)) {
    for (var i = 0; i < tree.length; i++) {
      if (tree[i] && typeof tree[i] !== 'string') {
        markStaticNode(tree[i], (key + "_" + i), isOnce);
      }
    }
  } else {
    markStaticNode(tree, key, isOnce);
  }
}

function markStaticNode (node, key, isOnce) {
  node.isStatic = true;
  node.key = key;
  node.isOnce = isOnce;
}

/*  */

function bindObjectListeners (data, value) {
  if (value) {
    if (!isPlainObject(value)) {
       false && false;
    } else {
      var on = data.on = data.on ? extend({}, data.on) : {};
      for (var key in value) {
        var existing = on[key];
        var ours = value[key];
        on[key] = existing ? [].concat(existing, ours) : ours;
      }
    }
  }
  return data
}

/*  */

function resolveScopedSlots (
  fns, // see flow/vnode
  res,
  // the following are added in 2.6
  hasDynamicKeys,
  contentHashKey
) {
  res = res || { $stable: !hasDynamicKeys };
  for (var i = 0; i < fns.length; i++) {
    var slot = fns[i];
    if (Array.isArray(slot)) {
      resolveScopedSlots(slot, res, hasDynamicKeys);
    } else if (slot) {
      // marker for reverse proxying v-slot without scope on this.$slots
      if (slot.proxy) {
        slot.fn.proxy = true;
      }
      res[slot.key] = slot.fn;
    }
  }
  if (contentHashKey) {
    (res).$key = contentHashKey;
  }
  return res
}

/*  */

function bindDynamicKeys (baseObj, values) {
  for (var i = 0; i < values.length; i += 2) {
    var key = values[i];
    if (typeof key === 'string' && key) {
      baseObj[values[i]] = values[i + 1];
    } else if (false) {}
  }
  return baseObj
}

// helper to dynamically append modifier runtime markers to event names.
// ensure only append when value is already string, otherwise it will be cast
// to string and cause the type check to miss.
function prependModifier (value, symbol) {
  return typeof value === 'string' ? symbol + value : value
}

/*  */

function installRenderHelpers (target) {
  target._o = markOnce;
  target._n = toNumber;
  target._s = toString;
  target._l = renderList;
  target._t = renderSlot;
  target._q = looseEqual;
  target._i = looseIndexOf;
  target._m = renderStatic;
  target._f = resolveFilter;
  target._k = checkKeyCodes;
  target._b = bindObjectProps;
  target._v = createTextVNode;
  target._e = createEmptyVNode;
  target._u = resolveScopedSlots;
  target._g = bindObjectListeners;
  target._d = bindDynamicKeys;
  target._p = prependModifier;
}

/*  */

function FunctionalRenderContext (
  data,
  props,
  children,
  parent,
  Ctor
) {
  var this$1 = this;

  var options = Ctor.options;
  // ensure the createElement function in functional components
  // gets a unique context - this is necessary for correct named slot check
  var contextVm;
  if (hasOwn(parent, '_uid')) {
    contextVm = Object.create(parent);
    // $flow-disable-line
    contextVm._original = parent;
  } else {
    // the context vm passed in is a functional context as well.
    // in this case we want to make sure we are able to get a hold to the
    // real context instance.
    contextVm = parent;
    // $flow-disable-line
    parent = parent._original;
  }
  var isCompiled = isTrue(options._compiled);
  var needNormalization = !isCompiled;

  this.data = data;
  this.props = props;
  this.children = children;
  this.parent = parent;
  this.listeners = data.on || emptyObject;
  this.injections = resolveInject(options.inject, parent);
  this.slots = function () {
    if (!this$1.$slots) {
      normalizeScopedSlots(
        data.scopedSlots,
        this$1.$slots = resolveSlots(children, parent)
      );
    }
    return this$1.$slots
  };

  Object.defineProperty(this, 'scopedSlots', ({
    enumerable: true,
    get: function get () {
      return normalizeScopedSlots(data.scopedSlots, this.slots())
    }
  }));

  // support for compiled functional template
  if (isCompiled) {
    // exposing $options for renderStatic()
    this.$options = options;
    // pre-resolve slots for renderSlot()
    this.$slots = this.slots();
    this.$scopedSlots = normalizeScopedSlots(data.scopedSlots, this.$slots);
  }

  if (options._scopeId) {
    this._c = function (a, b, c, d) {
      var vnode = createElement(contextVm, a, b, c, d, needNormalization);
      if (vnode && !Array.isArray(vnode)) {
        vnode.fnScopeId = options._scopeId;
        vnode.fnContext = parent;
      }
      return vnode
    };
  } else {
    this._c = function (a, b, c, d) { return createElement(contextVm, a, b, c, d, needNormalization); };
  }
}

installRenderHelpers(FunctionalRenderContext.prototype);

function createFunctionalComponent (
  Ctor,
  propsData,
  data,
  contextVm,
  children
) {
  var options = Ctor.options;
  var props = {};
  var propOptions = options.props;
  if (isDef(propOptions)) {
    for (var key in propOptions) {
      props[key] = validateProp(key, propOptions, propsData || emptyObject);
    }
  } else {
    if (isDef(data.attrs)) { mergeProps(props, data.attrs); }
    if (isDef(data.props)) { mergeProps(props, data.props); }
  }

  var renderContext = new FunctionalRenderContext(
    data,
    props,
    children,
    contextVm,
    Ctor
  );

  var vnode = options.render.call(null, renderContext._c, renderContext);

  if (vnode instanceof VNode) {
    return cloneAndMarkFunctionalResult(vnode, data, renderContext.parent, options, renderContext)
  } else if (Array.isArray(vnode)) {
    var vnodes = normalizeChildren(vnode) || [];
    var res = new Array(vnodes.length);
    for (var i = 0; i < vnodes.length; i++) {
      res[i] = cloneAndMarkFunctionalResult(vnodes[i], data, renderContext.parent, options, renderContext);
    }
    return res
  }
}

function cloneAndMarkFunctionalResult (vnode, data, contextVm, options, renderContext) {
  // #7817 clone node before setting fnContext, otherwise if the node is reused
  // (e.g. it was from a cached normal slot) the fnContext causes named slots
  // that should not be matched to match.
  var clone = cloneVNode(vnode);
  clone.fnContext = contextVm;
  clone.fnOptions = options;
  if (false) {}
  if (data.slot) {
    (clone.data || (clone.data = {})).slot = data.slot;
  }
  return clone
}

function mergeProps (to, from) {
  for (var key in from) {
    to[camelize(key)] = from[key];
  }
}

/*  */

/*  */

/*  */

/*  */

// inline hooks to be invoked on component VNodes during patch
var componentVNodeHooks = {
  init: function init (vnode, hydrating) {
    if (
      vnode.componentInstance &&
      !vnode.componentInstance._isDestroyed &&
      vnode.data.keepAlive
    ) {
      // kept-alive components, treat as a patch
      var mountedNode = vnode; // work around flow
      componentVNodeHooks.prepatch(mountedNode, mountedNode);
    } else {
      var child = vnode.componentInstance = createComponentInstanceForVnode(
        vnode,
        activeInstance
      );
      child.$mount(hydrating ? vnode.elm : undefined, hydrating);
    }
  },

  prepatch: function prepatch (oldVnode, vnode) {
    var options = vnode.componentOptions;
    var child = vnode.componentInstance = oldVnode.componentInstance;
    updateChildComponent(
      child,
      options.propsData, // updated props
      options.listeners, // updated listeners
      vnode, // new parent vnode
      options.children // new children
    );
  },

  insert: function insert (vnode) {
    var context = vnode.context;
    var componentInstance = vnode.componentInstance;
    if (!componentInstance._isMounted) {
      componentInstance._isMounted = true;
      callHook(componentInstance, 'mounted');
    }
    if (vnode.data.keepAlive) {
      if (context._isMounted) {
        // vue-router#1212
        // During updates, a kept-alive component's child components may
        // change, so directly walking the tree here may call activated hooks
        // on incorrect children. Instead we push them into a queue which will
        // be processed after the whole patch process ended.
        queueActivatedComponent(componentInstance);
      } else {
        activateChildComponent(componentInstance, true /* direct */);
      }
    }
  },

  destroy: function destroy (vnode) {
    var componentInstance = vnode.componentInstance;
    if (!componentInstance._isDestroyed) {
      if (!vnode.data.keepAlive) {
        componentInstance.$destroy();
      } else {
        deactivateChildComponent(componentInstance, true /* direct */);
      }
    }
  }
};

var hooksToMerge = Object.keys(componentVNodeHooks);

function createComponent (
  Ctor,
  data,
  context,
  children,
  tag
) {
  if (isUndef(Ctor)) {
    return
  }

  var baseCtor = context.$options._base;

  // plain options object: turn it into a constructor
  if (isObject(Ctor)) {
    Ctor = baseCtor.extend(Ctor);
  }

  // if at this stage it's not a constructor or an async component factory,
  // reject.
  if (typeof Ctor !== 'function') {
    if (false) {}
    return
  }

  // async component
  var asyncFactory;
  if (isUndef(Ctor.cid)) {
    asyncFactory = Ctor;
    Ctor = resolveAsyncComponent(asyncFactory, baseCtor);
    if (Ctor === undefined) {
      // return a placeholder node for async component, which is rendered
      // as a comment node but preserves all the raw information for the node.
      // the information will be used for async server-rendering and hydration.
      return createAsyncPlaceholder(
        asyncFactory,
        data,
        context,
        children,
        tag
      )
    }
  }

  data = data || {};

  // resolve constructor options in case global mixins are applied after
  // component constructor creation
  resolveConstructorOptions(Ctor);

  // transform component v-model data into props & events
  if (isDef(data.model)) {
    transformModel(Ctor.options, data);
  }

  // extract props
  var propsData = extractPropsFromVNodeData(data, Ctor, tag);

  // functional component
  if (isTrue(Ctor.options.functional)) {
    return createFunctionalComponent(Ctor, propsData, data, context, children)
  }

  // extract listeners, since these needs to be treated as
  // child component listeners instead of DOM listeners
  var listeners = data.on;
  // replace with listeners with .native modifier
  // so it gets processed during parent component patch.
  data.on = data.nativeOn;

  if (isTrue(Ctor.options.abstract)) {
    // abstract components do not keep anything
    // other than props & listeners & slot

    // work around flow
    var slot = data.slot;
    data = {};
    if (slot) {
      data.slot = slot;
    }
  }

  // install component management hooks onto the placeholder node
  installComponentHooks(data);

  // return a placeholder vnode
  var name = Ctor.options.name || tag;
  var vnode = new VNode(
    ("vue-component-" + (Ctor.cid) + (name ? ("-" + name) : '')),
    data, undefined, undefined, undefined, context,
    { Ctor: Ctor, propsData: propsData, listeners: listeners, tag: tag, children: children },
    asyncFactory
  );

  return vnode
}

function createComponentInstanceForVnode (
  vnode, // we know it's MountedComponentVNode but flow doesn't
  parent // activeInstance in lifecycle state
) {
  var options = {
    _isComponent: true,
    _parentVnode: vnode,
    parent: parent
  };
  // check inline-template render functions
  var inlineTemplate = vnode.data.inlineTemplate;
  if (isDef(inlineTemplate)) {
    options.render = inlineTemplate.render;
    options.staticRenderFns = inlineTemplate.staticRenderFns;
  }
  return new vnode.componentOptions.Ctor(options)
}

function installComponentHooks (data) {
  var hooks = data.hook || (data.hook = {});
  for (var i = 0; i < hooksToMerge.length; i++) {
    var key = hooksToMerge[i];
    var existing = hooks[key];
    var toMerge = componentVNodeHooks[key];
    if (existing !== toMerge && !(existing && existing._merged)) {
      hooks[key] = existing ? mergeHook$1(toMerge, existing) : toMerge;
    }
  }
}

function mergeHook$1 (f1, f2) {
  var merged = function (a, b) {
    // flow complains about extra args which is why we use any
    f1(a, b);
    f2(a, b);
  };
  merged._merged = true;
  return merged
}

// transform component v-model info (value and callback) into
// prop and event handler respectively.
function transformModel (options, data) {
  var prop = (options.model && options.model.prop) || 'value';
  var event = (options.model && options.model.event) || 'input'
  ;(data.attrs || (data.attrs = {}))[prop] = data.model.value;
  var on = data.on || (data.on = {});
  var existing = on[event];
  var callback = data.model.callback;
  if (isDef(existing)) {
    if (
      Array.isArray(existing)
        ? existing.indexOf(callback) === -1
        : existing !== callback
    ) {
      on[event] = [callback].concat(existing);
    }
  } else {
    on[event] = callback;
  }
}

/*  */

var SIMPLE_NORMALIZE = 1;
var ALWAYS_NORMALIZE = 2;

// wrapper function for providing a more flexible interface
// without getting yelled at by flow
function createElement (
  context,
  tag,
  data,
  children,
  normalizationType,
  alwaysNormalize
) {
  if (Array.isArray(data) || isPrimitive(data)) {
    normalizationType = children;
    children = data;
    data = undefined;
  }
  if (isTrue(alwaysNormalize)) {
    normalizationType = ALWAYS_NORMALIZE;
  }
  return _createElement(context, tag, data, children, normalizationType)
}

function _createElement (
  context,
  tag,
  data,
  children,
  normalizationType
) {
  if (isDef(data) && isDef((data).__ob__)) {
     false && false;
    return createEmptyVNode()
  }
  // object syntax in v-bind
  if (isDef(data) && isDef(data.is)) {
    tag = data.is;
  }
  if (!tag) {
    // in case of component :is set to falsy value
    return createEmptyVNode()
  }
  // warn against non-primitive key
  if (false
  ) {}
  // support single function children as default scoped slot
  if (Array.isArray(children) &&
    typeof children[0] === 'function'
  ) {
    data = data || {};
    data.scopedSlots = { default: children[0] };
    children.length = 0;
  }
  if (normalizationType === ALWAYS_NORMALIZE) {
    children = normalizeChildren(children);
  } else if (normalizationType === SIMPLE_NORMALIZE) {
    children = simpleNormalizeChildren(children);
  }
  var vnode, ns;
  if (typeof tag === 'string') {
    var Ctor;
    ns = (context.$vnode && context.$vnode.ns) || config.getTagNamespace(tag);
    if (config.isReservedTag(tag)) {
      // platform built-in elements
      if (false) {}
      vnode = new VNode(
        config.parsePlatformTagName(tag), data, children,
        undefined, undefined, context
      );
    } else if ((!data || !data.pre) && isDef(Ctor = resolveAsset(context.$options, 'components', tag))) {
      // component
      vnode = createComponent(Ctor, data, context, children, tag);
    } else {
      // unknown or unlisted namespaced elements
      // check at runtime because it may get assigned a namespace when its
      // parent normalizes children
      vnode = new VNode(
        tag, data, children,
        undefined, undefined, context
      );
    }
  } else {
    // direct component options / constructor
    vnode = createComponent(tag, data, context, children);
  }
  if (Array.isArray(vnode)) {
    return vnode
  } else if (isDef(vnode)) {
    if (isDef(ns)) { applyNS(vnode, ns); }
    if (isDef(data)) { registerDeepBindings(data); }
    return vnode
  } else {
    return createEmptyVNode()
  }
}

function applyNS (vnode, ns, force) {
  vnode.ns = ns;
  if (vnode.tag === 'foreignObject') {
    // use default namespace inside foreignObject
    ns = undefined;
    force = true;
  }
  if (isDef(vnode.children)) {
    for (var i = 0, l = vnode.children.length; i < l; i++) {
      var child = vnode.children[i];
      if (isDef(child.tag) && (
        isUndef(child.ns) || (isTrue(force) && child.tag !== 'svg'))) {
        applyNS(child, ns, force);
      }
    }
  }
}

// ref #5318
// necessary to ensure parent re-render when deep bindings like :style and
// :class are used on slot nodes
function registerDeepBindings (data) {
  if (isObject(data.style)) {
    traverse(data.style);
  }
  if (isObject(data.class)) {
    traverse(data.class);
  }
}

/*  */

function initRender (vm) {
  vm._vnode = null; // the root of the child tree
  vm._staticTrees = null; // v-once cached trees
  var options = vm.$options;
  var parentVnode = vm.$vnode = options._parentVnode; // the placeholder node in parent tree
  var renderContext = parentVnode && parentVnode.context;
  vm.$slots = resolveSlots(options._renderChildren, renderContext);
  vm.$scopedSlots = emptyObject;
  // bind the createElement fn to this instance
  // so that we get proper render context inside it.
  // args order: tag, data, children, normalizationType, alwaysNormalize
  // internal version is used by render functions compiled from templates
  vm._c = function (a, b, c, d) { return createElement(vm, a, b, c, d, false); };
  // normalization is always applied for the public version, used in
  // user-written render functions.
  vm.$createElement = function (a, b, c, d) { return createElement(vm, a, b, c, d, true); };

  // $attrs & $listeners are exposed for easier HOC creation.
  // they need to be reactive so that HOCs using them are always updated
  var parentData = parentVnode && parentVnode.data;

  /* istanbul ignore else */
  if (false) {} else {
    defineReactive$$1(vm, '$attrs', parentData && parentData.attrs || emptyObject, null, true);
    defineReactive$$1(vm, '$listeners', options._parentListeners || emptyObject, null, true);
  }
}

var currentRenderingInstance = null;

function renderMixin (Vue) {
  // install runtime convenience helpers
  installRenderHelpers(Vue.prototype);

  Vue.prototype.$nextTick = function (fn) {
    return nextTick(fn, this)
  };

  Vue.prototype._render = function () {
    var vm = this;
    var ref = vm.$options;
    var render = ref.render;
    var _parentVnode = ref._parentVnode;

    if (_parentVnode) {
      vm.$scopedSlots = normalizeScopedSlots(
        _parentVnode.data.scopedSlots,
        vm.$slots,
        vm.$scopedSlots
      );
    }

    // set parent vnode. this allows render functions to have access
    // to the data on the placeholder node.
    vm.$vnode = _parentVnode;
    // render self
    var vnode;
    try {
      // There's no need to maintain a stack because all render fns are called
      // separately from one another. Nested component's render fns are called
      // when parent component is patched.
      currentRenderingInstance = vm;
      vnode = render.call(vm._renderProxy, vm.$createElement);
    } catch (e) {
      handleError(e, vm, "render");
      // return error render result,
      // or previous vnode to prevent render error causing blank component
      /* istanbul ignore else */
      if (false) {} else {
        vnode = vm._vnode;
      }
    } finally {
      currentRenderingInstance = null;
    }
    // if the returned array contains only a single node, allow it
    if (Array.isArray(vnode) && vnode.length === 1) {
      vnode = vnode[0];
    }
    // return empty vnode in case the render function errored out
    if (!(vnode instanceof VNode)) {
      if (false) {}
      vnode = createEmptyVNode();
    }
    // set parent
    vnode.parent = _parentVnode;
    return vnode
  };
}

/*  */

function ensureCtor (comp, base) {
  if (
    comp.__esModule ||
    (hasSymbol && comp[Symbol.toStringTag] === 'Module')
  ) {
    comp = comp.default;
  }
  return isObject(comp)
    ? base.extend(comp)
    : comp
}

function createAsyncPlaceholder (
  factory,
  data,
  context,
  children,
  tag
) {
  var node = createEmptyVNode();
  node.asyncFactory = factory;
  node.asyncMeta = { data: data, context: context, children: children, tag: tag };
  return node
}

function resolveAsyncComponent (
  factory,
  baseCtor
) {
  if (isTrue(factory.error) && isDef(factory.errorComp)) {
    return factory.errorComp
  }

  if (isDef(factory.resolved)) {
    return factory.resolved
  }

  var owner = currentRenderingInstance;
  if (owner && isDef(factory.owners) && factory.owners.indexOf(owner) === -1) {
    // already pending
    factory.owners.push(owner);
  }

  if (isTrue(factory.loading) && isDef(factory.loadingComp)) {
    return factory.loadingComp
  }

  if (owner && !isDef(factory.owners)) {
    var owners = factory.owners = [owner];
    var sync = true;
    var timerLoading = null;
    var timerTimeout = null

    ;(owner).$on('hook:destroyed', function () { return remove(owners, owner); });

    var forceRender = function (renderCompleted) {
      for (var i = 0, l = owners.length; i < l; i++) {
        (owners[i]).$forceUpdate();
      }

      if (renderCompleted) {
        owners.length = 0;
        if (timerLoading !== null) {
          clearTimeout(timerLoading);
          timerLoading = null;
        }
        if (timerTimeout !== null) {
          clearTimeout(timerTimeout);
          timerTimeout = null;
        }
      }
    };

    var resolve = once(function (res) {
      // cache resolved
      factory.resolved = ensureCtor(res, baseCtor);
      // invoke callbacks only if this is not a synchronous resolve
      // (async resolves are shimmed as synchronous during SSR)
      if (!sync) {
        forceRender(true);
      } else {
        owners.length = 0;
      }
    });

    var reject = once(function (reason) {
       false && false;
      if (isDef(factory.errorComp)) {
        factory.error = true;
        forceRender(true);
      }
    });

    var res = factory(resolve, reject);

    if (isObject(res)) {
      if (isPromise(res)) {
        // () => Promise
        if (isUndef(factory.resolved)) {
          res.then(resolve, reject);
        }
      } else if (isPromise(res.component)) {
        res.component.then(resolve, reject);

        if (isDef(res.error)) {
          factory.errorComp = ensureCtor(res.error, baseCtor);
        }

        if (isDef(res.loading)) {
          factory.loadingComp = ensureCtor(res.loading, baseCtor);
          if (res.delay === 0) {
            factory.loading = true;
          } else {
            timerLoading = setTimeout(function () {
              timerLoading = null;
              if (isUndef(factory.resolved) && isUndef(factory.error)) {
                factory.loading = true;
                forceRender(false);
              }
            }, res.delay || 200);
          }
        }

        if (isDef(res.timeout)) {
          timerTimeout = setTimeout(function () {
            timerTimeout = null;
            if (isUndef(factory.resolved)) {
              reject(
                 false
                  ? (undefined)
                  : null
              );
            }
          }, res.timeout);
        }
      }
    }

    sync = false;
    // return in case resolved synchronously
    return factory.loading
      ? factory.loadingComp
      : factory.resolved
  }
}

/*  */

function isAsyncPlaceholder (node) {
  return node.isComment && node.asyncFactory
}

/*  */

function getFirstComponentChild (children) {
  if (Array.isArray(children)) {
    for (var i = 0; i < children.length; i++) {
      var c = children[i];
      if (isDef(c) && (isDef(c.componentOptions) || isAsyncPlaceholder(c))) {
        return c
      }
    }
  }
}

/*  */

/*  */

function initEvents (vm) {
  vm._events = Object.create(null);
  vm._hasHookEvent = false;
  // init parent attached events
  var listeners = vm.$options._parentListeners;
  if (listeners) {
    updateComponentListeners(vm, listeners);
  }
}

var target;

function add (event, fn) {
  target.$on(event, fn);
}

function remove$1 (event, fn) {
  target.$off(event, fn);
}

function createOnceHandler (event, fn) {
  var _target = target;
  return function onceHandler () {
    var res = fn.apply(null, arguments);
    if (res !== null) {
      _target.$off(event, onceHandler);
    }
  }
}

function updateComponentListeners (
  vm,
  listeners,
  oldListeners
) {
  target = vm;
  updateListeners(listeners, oldListeners || {}, add, remove$1, createOnceHandler, vm);
  target = undefined;
}

function eventsMixin (Vue) {
  var hookRE = /^hook:/;
  Vue.prototype.$on = function (event, fn) {
    var vm = this;
    if (Array.isArray(event)) {
      for (var i = 0, l = event.length; i < l; i++) {
        vm.$on(event[i], fn);
      }
    } else {
      (vm._events[event] || (vm._events[event] = [])).push(fn);
      // optimize hook:event cost by using a boolean flag marked at registration
      // instead of a hash lookup
      if (hookRE.test(event)) {
        vm._hasHookEvent = true;
      }
    }
    return vm
  };

  Vue.prototype.$once = function (event, fn) {
    var vm = this;
    function on () {
      vm.$off(event, on);
      fn.apply(vm, arguments);
    }
    on.fn = fn;
    vm.$on(event, on);
    return vm
  };

  Vue.prototype.$off = function (event, fn) {
    var vm = this;
    // all
    if (!arguments.length) {
      vm._events = Object.create(null);
      return vm
    }
    // array of events
    if (Array.isArray(event)) {
      for (var i$1 = 0, l = event.length; i$1 < l; i$1++) {
        vm.$off(event[i$1], fn);
      }
      return vm
    }
    // specific event
    var cbs = vm._events[event];
    if (!cbs) {
      return vm
    }
    if (!fn) {
      vm._events[event] = null;
      return vm
    }
    // specific handler
    var cb;
    var i = cbs.length;
    while (i--) {
      cb = cbs[i];
      if (cb === fn || cb.fn === fn) {
        cbs.splice(i, 1);
        break
      }
    }
    return vm
  };

  Vue.prototype.$emit = function (event) {
    var vm = this;
    if (false) { var lowerCaseEvent; }
    var cbs = vm._events[event];
    if (cbs) {
      cbs = cbs.length > 1 ? toArray(cbs) : cbs;
      var args = toArray(arguments, 1);
      var info = "event handler for \"" + event + "\"";
      for (var i = 0, l = cbs.length; i < l; i++) {
        invokeWithErrorHandling(cbs[i], vm, args, vm, info);
      }
    }
    return vm
  };
}

/*  */

var activeInstance = null;
var isUpdatingChildComponent = false;

function setActiveInstance(vm) {
  var prevActiveInstance = activeInstance;
  activeInstance = vm;
  return function () {
    activeInstance = prevActiveInstance;
  }
}

function initLifecycle (vm) {
  var options = vm.$options;

  // locate first non-abstract parent
  var parent = options.parent;
  if (parent && !options.abstract) {
    while (parent.$options.abstract && parent.$parent) {
      parent = parent.$parent;
    }
    parent.$children.push(vm);
  }

  vm.$parent = parent;
  vm.$root = parent ? parent.$root : vm;

  vm.$children = [];
  vm.$refs = {};

  vm._watcher = null;
  vm._inactive = null;
  vm._directInactive = false;
  vm._isMounted = false;
  vm._isDestroyed = false;
  vm._isBeingDestroyed = false;
}

function lifecycleMixin (Vue) {
  Vue.prototype._update = function (vnode, hydrating) {
    var vm = this;
    var prevEl = vm.$el;
    var prevVnode = vm._vnode;
    var restoreActiveInstance = setActiveInstance(vm);
    vm._vnode = vnode;
    // Vue.prototype.__patch__ is injected in entry points
    // based on the rendering backend used.
    if (!prevVnode) {
      // initial render
      vm.$el = vm.__patch__(vm.$el, vnode, hydrating, false /* removeOnly */);
    } else {
      // updates
      vm.$el = vm.__patch__(prevVnode, vnode);
    }
    restoreActiveInstance();
    // update __vue__ reference
    if (prevEl) {
      prevEl.__vue__ = null;
    }
    if (vm.$el) {
      vm.$el.__vue__ = vm;
    }
    // if parent is an HOC, update its $el as well
    if (vm.$vnode && vm.$parent && vm.$vnode === vm.$parent._vnode) {
      vm.$parent.$el = vm.$el;
    }
    // updated hook is called by the scheduler to ensure that children are
    // updated in a parent's updated hook.
  };

  Vue.prototype.$forceUpdate = function () {
    var vm = this;
    if (vm._watcher) {
      vm._watcher.update();
    }
  };

  Vue.prototype.$destroy = function () {
    var vm = this;
    if (vm._isBeingDestroyed) {
      return
    }
    callHook(vm, 'beforeDestroy');
    vm._isBeingDestroyed = true;
    // remove self from parent
    var parent = vm.$parent;
    if (parent && !parent._isBeingDestroyed && !vm.$options.abstract) {
      remove(parent.$children, vm);
    }
    // teardown watchers
    if (vm._watcher) {
      vm._watcher.teardown();
    }
    var i = vm._watchers.length;
    while (i--) {
      vm._watchers[i].teardown();
    }
    // remove reference from data ob
    // frozen object may not have observer.
    if (vm._data.__ob__) {
      vm._data.__ob__.vmCount--;
    }
    // call the last hook...
    vm._isDestroyed = true;
    // invoke destroy hooks on current rendered tree
    vm.__patch__(vm._vnode, null);
    // fire destroyed hook
    callHook(vm, 'destroyed');
    // turn off all instance listeners.
    vm.$off();
    // remove __vue__ reference
    if (vm.$el) {
      vm.$el.__vue__ = null;
    }
    // release circular reference (#6759)
    if (vm.$vnode) {
      vm.$vnode.parent = null;
    }
  };
}

function mountComponent (
  vm,
  el,
  hydrating
) {
  vm.$el = el;
  if (!vm.$options.render) {
    vm.$options.render = createEmptyVNode;
    if (false) {}
  }
  callHook(vm, 'beforeMount');

  var updateComponent;
  /* istanbul ignore if */
  if (false) {} else {
    updateComponent = function () {
      vm._update(vm._render(), hydrating);
    };
  }

  // we set this to vm._watcher inside the watcher's constructor
  // since the watcher's initial patch may call $forceUpdate (e.g. inside child
  // component's mounted hook), which relies on vm._watcher being already defined
  new Watcher(vm, updateComponent, noop, {
    before: function before () {
      if (vm._isMounted && !vm._isDestroyed) {
        callHook(vm, 'beforeUpdate');
      }
    }
  }, true /* isRenderWatcher */);
  hydrating = false;

  // manually mounted instance, call mounted on self
  // mounted is called for render-created child components in its inserted hook
  if (vm.$vnode == null) {
    vm._isMounted = true;
    callHook(vm, 'mounted');
  }
  return vm
}

function updateChildComponent (
  vm,
  propsData,
  listeners,
  parentVnode,
  renderChildren
) {
  if (false) {}

  // determine whether component has slot children
  // we need to do this before overwriting $options._renderChildren.

  // check if there are dynamic scopedSlots (hand-written or compiled but with
  // dynamic slot names). Static scoped slots compiled from template has the
  // "$stable" marker.
  var newScopedSlots = parentVnode.data.scopedSlots;
  var oldScopedSlots = vm.$scopedSlots;
  var hasDynamicScopedSlot = !!(
    (newScopedSlots && !newScopedSlots.$stable) ||
    (oldScopedSlots !== emptyObject && !oldScopedSlots.$stable) ||
    (newScopedSlots && vm.$scopedSlots.$key !== newScopedSlots.$key)
  );

  // Any static slot children from the parent may have changed during parent's
  // update. Dynamic scoped slots may also have changed. In such cases, a forced
  // update is necessary to ensure correctness.
  var needsForceUpdate = !!(
    renderChildren ||               // has new static slots
    vm.$options._renderChildren ||  // has old static slots
    hasDynamicScopedSlot
  );

  vm.$options._parentVnode = parentVnode;
  vm.$vnode = parentVnode; // update vm's placeholder node without re-render

  if (vm._vnode) { // update child tree's parent
    vm._vnode.parent = parentVnode;
  }
  vm.$options._renderChildren = renderChildren;

  // update $attrs and $listeners hash
  // these are also reactive so they may trigger child update if the child
  // used them during render
  vm.$attrs = parentVnode.data.attrs || emptyObject;
  vm.$listeners = listeners || emptyObject;

  // update props
  if (propsData && vm.$options.props) {
    toggleObserving(false);
    var props = vm._props;
    var propKeys = vm.$options._propKeys || [];
    for (var i = 0; i < propKeys.length; i++) {
      var key = propKeys[i];
      var propOptions = vm.$options.props; // wtf flow?
      props[key] = validateProp(key, propOptions, propsData, vm);
    }
    toggleObserving(true);
    // keep a copy of raw propsData
    vm.$options.propsData = propsData;
  }

  // update listeners
  listeners = listeners || emptyObject;
  var oldListeners = vm.$options._parentListeners;
  vm.$options._parentListeners = listeners;
  updateComponentListeners(vm, listeners, oldListeners);

  // resolve slots + force update if has children
  if (needsForceUpdate) {
    vm.$slots = resolveSlots(renderChildren, parentVnode.context);
    vm.$forceUpdate();
  }

  if (false) {}
}

function isInInactiveTree (vm) {
  while (vm && (vm = vm.$parent)) {
    if (vm._inactive) { return true }
  }
  return false
}

function activateChildComponent (vm, direct) {
  if (direct) {
    vm._directInactive = false;
    if (isInInactiveTree(vm)) {
      return
    }
  } else if (vm._directInactive) {
    return
  }
  if (vm._inactive || vm._inactive === null) {
    vm._inactive = false;
    for (var i = 0; i < vm.$children.length; i++) {
      activateChildComponent(vm.$children[i]);
    }
    callHook(vm, 'activated');
  }
}

function deactivateChildComponent (vm, direct) {
  if (direct) {
    vm._directInactive = true;
    if (isInInactiveTree(vm)) {
      return
    }
  }
  if (!vm._inactive) {
    vm._inactive = true;
    for (var i = 0; i < vm.$children.length; i++) {
      deactivateChildComponent(vm.$children[i]);
    }
    callHook(vm, 'deactivated');
  }
}

function callHook (vm, hook) {
  // #7573 disable dep collection when invoking lifecycle hooks
  pushTarget();
  var handlers = vm.$options[hook];
  var info = hook + " hook";
  if (handlers) {
    for (var i = 0, j = handlers.length; i < j; i++) {
      invokeWithErrorHandling(handlers[i], vm, null, vm, info);
    }
  }
  if (vm._hasHookEvent) {
    vm.$emit('hook:' + hook);
  }
  popTarget();
}

/*  */

var MAX_UPDATE_COUNT = 100;

var queue = [];
var activatedChildren = [];
var has = {};
var circular = {};
var waiting = false;
var flushing = false;
var index = 0;

/**
 * Reset the scheduler's state.
 */
function resetSchedulerState () {
  index = queue.length = activatedChildren.length = 0;
  has = {};
  if (false) {}
  waiting = flushing = false;
}

// Async edge case #6566 requires saving the timestamp when event listeners are
// attached. However, calling performance.now() has a perf overhead especially
// if the page has thousands of event listeners. Instead, we take a timestamp
// every time the scheduler flushes and use that for all event listeners
// attached during that flush.
var currentFlushTimestamp = 0;

// Async edge case fix requires storing an event listener's attach timestamp.
var getNow = Date.now;

// Determine what event timestamp the browser is using. Annoyingly, the
// timestamp can either be hi-res (relative to page load) or low-res
// (relative to UNIX epoch), so in order to compare time we have to use the
// same timestamp type when saving the flush timestamp.
// All IE versions use low-res event timestamps, and have problematic clock
// implementations (#9632)
if (inBrowser && !isIE) {
  var performance = window.performance;
  if (
    performance &&
    typeof performance.now === 'function' &&
    getNow() > document.createEvent('Event').timeStamp
  ) {
    // if the event timestamp, although evaluated AFTER the Date.now(), is
    // smaller than it, it means the event is using a hi-res timestamp,
    // and we need to use the hi-res version for event listener timestamps as
    // well.
    getNow = function () { return performance.now(); };
  }
}

/**
 * Flush both queues and run the watchers.
 */
function flushSchedulerQueue () {
  currentFlushTimestamp = getNow();
  flushing = true;
  var watcher, id;

  // Sort queue before flush.
  // This ensures that:
  // 1. Components are updated from parent to child. (because parent is always
  //    created before the child)
  // 2. A component's user watchers are run before its render watcher (because
  //    user watchers are created before the render watcher)
  // 3. If a component is destroyed during a parent component's watcher run,
  //    its watchers can be skipped.
  queue.sort(function (a, b) { return a.id - b.id; });

  // do not cache length because more watchers might be pushed
  // as we run existing watchers
  for (index = 0; index < queue.length; index++) {
    watcher = queue[index];
    if (watcher.before) {
      watcher.before();
    }
    id = watcher.id;
    has[id] = null;
    watcher.run();
    // in dev build, check and stop circular updates.
    if (false) {}
  }

  // keep copies of post queues before resetting state
  var activatedQueue = activatedChildren.slice();
  var updatedQueue = queue.slice();

  resetSchedulerState();

  // call component updated and activated hooks
  callActivatedHooks(activatedQueue);
  callUpdatedHooks(updatedQueue);

  // devtool hook
  /* istanbul ignore if */
  if (devtools && config.devtools) {
    devtools.emit('flush');
  }
}

function callUpdatedHooks (queue) {
  var i = queue.length;
  while (i--) {
    var watcher = queue[i];
    var vm = watcher.vm;
    if (vm._watcher === watcher && vm._isMounted && !vm._isDestroyed) {
      callHook(vm, 'updated');
    }
  }
}

/**
 * Queue a kept-alive component that was activated during patch.
 * The queue will be processed after the entire tree has been patched.
 */
function queueActivatedComponent (vm) {
  // setting _inactive to false here so that a render function can
  // rely on checking whether it's in an inactive tree (e.g. router-view)
  vm._inactive = false;
  activatedChildren.push(vm);
}

function callActivatedHooks (queue) {
  for (var i = 0; i < queue.length; i++) {
    queue[i]._inactive = true;
    activateChildComponent(queue[i], true /* true */);
  }
}

/**
 * Push a watcher into the watcher queue.
 * Jobs with duplicate IDs will be skipped unless it's
 * pushed when the queue is being flushed.
 */
function queueWatcher (watcher) {
  var id = watcher.id;
  if (has[id] == null) {
    has[id] = true;
    if (!flushing) {
      queue.push(watcher);
    } else {
      // if already flushing, splice the watcher based on its id
      // if already past its id, it will be run next immediately.
      var i = queue.length - 1;
      while (i > index && queue[i].id > watcher.id) {
        i--;
      }
      queue.splice(i + 1, 0, watcher);
    }
    // queue the flush
    if (!waiting) {
      waiting = true;

      if (false) {}
      nextTick(flushSchedulerQueue);
    }
  }
}

/*  */



var uid$2 = 0;

/**
 * A watcher parses an expression, collects dependencies,
 * and fires callback when the expression value changes.
 * This is used for both the $watch() api and directives.
 */
var Watcher = function Watcher (
  vm,
  expOrFn,
  cb,
  options,
  isRenderWatcher
) {
  this.vm = vm;
  if (isRenderWatcher) {
    vm._watcher = this;
  }
  vm._watchers.push(this);
  // options
  if (options) {
    this.deep = !!options.deep;
    this.user = !!options.user;
    this.lazy = !!options.lazy;
    this.sync = !!options.sync;
    this.before = options.before;
  } else {
    this.deep = this.user = this.lazy = this.sync = false;
  }
  this.cb = cb;
  this.id = ++uid$2; // uid for batching
  this.active = true;
  this.dirty = this.lazy; // for lazy watchers
  this.deps = [];
  this.newDeps = [];
  this.depIds = new _Set();
  this.newDepIds = new _Set();
  this.expression =  false
    ? undefined
    : '';
  // parse expression for getter
  if (typeof expOrFn === 'function') {
    this.getter = expOrFn;
  } else {
    this.getter = parsePath(expOrFn);
    if (!this.getter) {
      this.getter = noop;
       false && false;
    }
  }
  this.value = this.lazy
    ? undefined
    : this.get();
};

/**
 * Evaluate the getter, and re-collect dependencies.
 */
Watcher.prototype.get = function get () {
  pushTarget(this);
  var value;
  var vm = this.vm;
  try {
    value = this.getter.call(vm, vm);
  } catch (e) {
    if (this.user) {
      handleError(e, vm, ("getter for watcher \"" + (this.expression) + "\""));
    } else {
      throw e
    }
  } finally {
    // "touch" every property so they are all tracked as
    // dependencies for deep watching
    if (this.deep) {
      traverse(value);
    }
    popTarget();
    this.cleanupDeps();
  }
  return value
};

/**
 * Add a dependency to this directive.
 */
Watcher.prototype.addDep = function addDep (dep) {
  var id = dep.id;
  if (!this.newDepIds.has(id)) {
    this.newDepIds.add(id);
    this.newDeps.push(dep);
    if (!this.depIds.has(id)) {
      dep.addSub(this);
    }
  }
};

/**
 * Clean up for dependency collection.
 */
Watcher.prototype.cleanupDeps = function cleanupDeps () {
  var i = this.deps.length;
  while (i--) {
    var dep = this.deps[i];
    if (!this.newDepIds.has(dep.id)) {
      dep.removeSub(this);
    }
  }
  var tmp = this.depIds;
  this.depIds = this.newDepIds;
  this.newDepIds = tmp;
  this.newDepIds.clear();
  tmp = this.deps;
  this.deps = this.newDeps;
  this.newDeps = tmp;
  this.newDeps.length = 0;
};

/**
 * Subscriber interface.
 * Will be called when a dependency changes.
 */
Watcher.prototype.update = function update () {
  /* istanbul ignore else */
  if (this.lazy) {
    this.dirty = true;
  } else if (this.sync) {
    this.run();
  } else {
    queueWatcher(this);
  }
};

/**
 * Scheduler job interface.
 * Will be called by the scheduler.
 */
Watcher.prototype.run = function run () {
  if (this.active) {
    var value = this.get();
    if (
      value !== this.value ||
      // Deep watchers and watchers on Object/Arrays should fire even
      // when the value is the same, because the value may
      // have mutated.
      isObject(value) ||
      this.deep
    ) {
      // set new value
      var oldValue = this.value;
      this.value = value;
      if (this.user) {
        try {
          this.cb.call(this.vm, value, oldValue);
        } catch (e) {
          handleError(e, this.vm, ("callback for watcher \"" + (this.expression) + "\""));
        }
      } else {
        this.cb.call(this.vm, value, oldValue);
      }
    }
  }
};

/**
 * Evaluate the value of the watcher.
 * This only gets called for lazy watchers.
 */
Watcher.prototype.evaluate = function evaluate () {
  this.value = this.get();
  this.dirty = false;
};

/**
 * Depend on all deps collected by this watcher.
 */
Watcher.prototype.depend = function depend () {
  var i = this.deps.length;
  while (i--) {
    this.deps[i].depend();
  }
};

/**
 * Remove self from all dependencies' subscriber list.
 */
Watcher.prototype.teardown = function teardown () {
  if (this.active) {
    // remove self from vm's watcher list
    // this is a somewhat expensive operation so we skip it
    // if the vm is being destroyed.
    if (!this.vm._isBeingDestroyed) {
      remove(this.vm._watchers, this);
    }
    var i = this.deps.length;
    while (i--) {
      this.deps[i].removeSub(this);
    }
    this.active = false;
  }
};

/*  */

var sharedPropertyDefinition = {
  enumerable: true,
  configurable: true,
  get: noop,
  set: noop
};

function proxy (target, sourceKey, key) {
  sharedPropertyDefinition.get = function proxyGetter () {
    return this[sourceKey][key]
  };
  sharedPropertyDefinition.set = function proxySetter (val) {
    this[sourceKey][key] = val;
  };
  Object.defineProperty(target, key, sharedPropertyDefinition);
}

function initState (vm) {
  vm._watchers = [];
  var opts = vm.$options;
  if (opts.props) { initProps(vm, opts.props); }
  if (opts.methods) { initMethods(vm, opts.methods); }
  if (opts.data) {
    initData(vm);
  } else {
    observe(vm._data = {}, true /* asRootData */);
  }
  if (opts.computed) { initComputed(vm, opts.computed); }
  if (opts.watch && opts.watch !== nativeWatch) {
    initWatch(vm, opts.watch);
  }
}

function initProps (vm, propsOptions) {
  var propsData = vm.$options.propsData || {};
  var props = vm._props = {};
  // cache prop keys so that future props updates can iterate using Array
  // instead of dynamic object key enumeration.
  var keys = vm.$options._propKeys = [];
  var isRoot = !vm.$parent;
  // root instance props should be converted
  if (!isRoot) {
    toggleObserving(false);
  }
  var loop = function ( key ) {
    keys.push(key);
    var value = validateProp(key, propsOptions, propsData, vm);
    /* istanbul ignore else */
    if (false) { var hyphenatedKey; } else {
      defineReactive$$1(props, key, value);
    }
    // static props are already proxied on the component's prototype
    // during Vue.extend(). We only need to proxy props defined at
    // instantiation here.
    if (!(key in vm)) {
      proxy(vm, "_props", key);
    }
  };

  for (var key in propsOptions) loop( key );
  toggleObserving(true);
}

function initData (vm) {
  var data = vm.$options.data;
  data = vm._data = typeof data === 'function'
    ? getData(data, vm)
    : data || {};
  if (!isPlainObject(data)) {
    data = {};
     false && false;
  }
  // proxy data on instance
  var keys = Object.keys(data);
  var props = vm.$options.props;
  var methods = vm.$options.methods;
  var i = keys.length;
  while (i--) {
    var key = keys[i];
    if (false) {}
    if (props && hasOwn(props, key)) {
       false && false;
    } else if (!isReserved(key)) {
      proxy(vm, "_data", key);
    }
  }
  // observe data
  observe(data, true /* asRootData */);
}

function getData (data, vm) {
  // #7573 disable dep collection when invoking data getters
  pushTarget();
  try {
    return data.call(vm, vm)
  } catch (e) {
    handleError(e, vm, "data()");
    return {}
  } finally {
    popTarget();
  }
}

var computedWatcherOptions = { lazy: true };

function initComputed (vm, computed) {
  // $flow-disable-line
  var watchers = vm._computedWatchers = Object.create(null);
  // computed properties are just getters during SSR
  var isSSR = isServerRendering();

  for (var key in computed) {
    var userDef = computed[key];
    var getter = typeof userDef === 'function' ? userDef : userDef.get;
    if (false) {}

    if (!isSSR) {
      // create internal watcher for the computed property.
      watchers[key] = new Watcher(
        vm,
        getter || noop,
        noop,
        computedWatcherOptions
      );
    }

    // component-defined computed properties are already defined on the
    // component prototype. We only need to define computed properties defined
    // at instantiation here.
    if (!(key in vm)) {
      defineComputed(vm, key, userDef);
    } else if (false) {}
  }
}

function defineComputed (
  target,
  key,
  userDef
) {
  var shouldCache = !isServerRendering();
  if (typeof userDef === 'function') {
    sharedPropertyDefinition.get = shouldCache
      ? createComputedGetter(key)
      : createGetterInvoker(userDef);
    sharedPropertyDefinition.set = noop;
  } else {
    sharedPropertyDefinition.get = userDef.get
      ? shouldCache && userDef.cache !== false
        ? createComputedGetter(key)
        : createGetterInvoker(userDef.get)
      : noop;
    sharedPropertyDefinition.set = userDef.set || noop;
  }
  if (false) {}
  Object.defineProperty(target, key, sharedPropertyDefinition);
}

function createComputedGetter (key) {
  return function computedGetter () {
    var watcher = this._computedWatchers && this._computedWatchers[key];
    if (watcher) {
      if (watcher.dirty) {
        watcher.evaluate();
      }
      if (Dep.target) {
        watcher.depend();
      }
      return watcher.value
    }
  }
}

function createGetterInvoker(fn) {
  return function computedGetter () {
    return fn.call(this, this)
  }
}

function initMethods (vm, methods) {
  var props = vm.$options.props;
  for (var key in methods) {
    if (false) {}
    vm[key] = typeof methods[key] !== 'function' ? noop : bind(methods[key], vm);
  }
}

function initWatch (vm, watch) {
  for (var key in watch) {
    var handler = watch[key];
    if (Array.isArray(handler)) {
      for (var i = 0; i < handler.length; i++) {
        createWatcher(vm, key, handler[i]);
      }
    } else {
      createWatcher(vm, key, handler);
    }
  }
}

function createWatcher (
  vm,
  expOrFn,
  handler,
  options
) {
  if (isPlainObject(handler)) {
    options = handler;
    handler = handler.handler;
  }
  if (typeof handler === 'string') {
    handler = vm[handler];
  }
  return vm.$watch(expOrFn, handler, options)
}

function stateMixin (Vue) {
  // flow somehow has problems with directly declared definition object
  // when using Object.defineProperty, so we have to procedurally build up
  // the object here.
  var dataDef = {};
  dataDef.get = function () { return this._data };
  var propsDef = {};
  propsDef.get = function () { return this._props };
  if (false) {}
  Object.defineProperty(Vue.prototype, '$data', dataDef);
  Object.defineProperty(Vue.prototype, '$props', propsDef);

  Vue.prototype.$set = set;
  Vue.prototype.$delete = del;

  Vue.prototype.$watch = function (
    expOrFn,
    cb,
    options
  ) {
    var vm = this;
    if (isPlainObject(cb)) {
      return createWatcher(vm, expOrFn, cb, options)
    }
    options = options || {};
    options.user = true;
    var watcher = new Watcher(vm, expOrFn, cb, options);
    if (options.immediate) {
      try {
        cb.call(vm, watcher.value);
      } catch (error) {
        handleError(error, vm, ("callback for immediate watcher \"" + (watcher.expression) + "\""));
      }
    }
    return function unwatchFn () {
      watcher.teardown();
    }
  };
}

/*  */

var uid$3 = 0;

function initMixin (Vue) {
  Vue.prototype._init = function (options) {
    var vm = this;
    // a uid
    vm._uid = uid$3++;

    var startTag, endTag;
    /* istanbul ignore if */
    if (false) {}

    // a flag to avoid this being observed
    vm._isVue = true;
    // merge options
    if (options && options._isComponent) {
      // optimize internal component instantiation
      // since dynamic options merging is pretty slow, and none of the
      // internal component options needs special treatment.
      initInternalComponent(vm, options);
    } else {
      vm.$options = mergeOptions(
        resolveConstructorOptions(vm.constructor),
        options || {},
        vm
      );
    }
    /* istanbul ignore else */
    if (false) {} else {
      vm._renderProxy = vm;
    }
    // expose real self
    vm._self = vm;
    initLifecycle(vm);
    initEvents(vm);
    initRender(vm);
    callHook(vm, 'beforeCreate');
    initInjections(vm); // resolve injections before data/props
    initState(vm);
    initProvide(vm); // resolve provide after data/props
    callHook(vm, 'created');

    /* istanbul ignore if */
    if (false) {}

    if (vm.$options.el) {
      vm.$mount(vm.$options.el);
    }
  };
}

function initInternalComponent (vm, options) {
  var opts = vm.$options = Object.create(vm.constructor.options);
  // doing this because it's faster than dynamic enumeration.
  var parentVnode = options._parentVnode;
  opts.parent = options.parent;
  opts._parentVnode = parentVnode;

  var vnodeComponentOptions = parentVnode.componentOptions;
  opts.propsData = vnodeComponentOptions.propsData;
  opts._parentListeners = vnodeComponentOptions.listeners;
  opts._renderChildren = vnodeComponentOptions.children;
  opts._componentTag = vnodeComponentOptions.tag;

  if (options.render) {
    opts.render = options.render;
    opts.staticRenderFns = options.staticRenderFns;
  }
}

function resolveConstructorOptions (Ctor) {
  var options = Ctor.options;
  if (Ctor.super) {
    var superOptions = resolveConstructorOptions(Ctor.super);
    var cachedSuperOptions = Ctor.superOptions;
    if (superOptions !== cachedSuperOptions) {
      // super option changed,
      // need to resolve new options.
      Ctor.superOptions = superOptions;
      // check if there are any late-modified/attached options (#4976)
      var modifiedOptions = resolveModifiedOptions(Ctor);
      // update base extend options
      if (modifiedOptions) {
        extend(Ctor.extendOptions, modifiedOptions);
      }
      options = Ctor.options = mergeOptions(superOptions, Ctor.extendOptions);
      if (options.name) {
        options.components[options.name] = Ctor;
      }
    }
  }
  return options
}

function resolveModifiedOptions (Ctor) {
  var modified;
  var latest = Ctor.options;
  var sealed = Ctor.sealedOptions;
  for (var key in latest) {
    if (latest[key] !== sealed[key]) {
      if (!modified) { modified = {}; }
      modified[key] = latest[key];
    }
  }
  return modified
}

function Vue (options) {
  if (false
  ) {}
  this._init(options);
}

initMixin(Vue);
stateMixin(Vue);
eventsMixin(Vue);
lifecycleMixin(Vue);
renderMixin(Vue);

/*  */

function initUse (Vue) {
  Vue.use = function (plugin) {
    var installedPlugins = (this._installedPlugins || (this._installedPlugins = []));
    if (installedPlugins.indexOf(plugin) > -1) {
      return this
    }

    // additional parameters
    var args = toArray(arguments, 1);
    args.unshift(this);
    if (typeof plugin.install === 'function') {
      plugin.install.apply(plugin, args);
    } else if (typeof plugin === 'function') {
      plugin.apply(null, args);
    }
    installedPlugins.push(plugin);
    return this
  };
}

/*  */

function initMixin$1 (Vue) {
  Vue.mixin = function (mixin) {
    this.options = mergeOptions(this.options, mixin);
    return this
  };
}

/*  */

function initExtend (Vue) {
  /**
   * Each instance constructor, including Vue, has a unique
   * cid. This enables us to create wrapped "child
   * constructors" for prototypal inheritance and cache them.
   */
  Vue.cid = 0;
  var cid = 1;

  /**
   * Class inheritance
   */
  Vue.extend = function (extendOptions) {
    extendOptions = extendOptions || {};
    var Super = this;
    var SuperId = Super.cid;
    var cachedCtors = extendOptions._Ctor || (extendOptions._Ctor = {});
    if (cachedCtors[SuperId]) {
      return cachedCtors[SuperId]
    }

    var name = extendOptions.name || Super.options.name;
    if (false) {}

    var Sub = function VueComponent (options) {
      this._init(options);
    };
    Sub.prototype = Object.create(Super.prototype);
    Sub.prototype.constructor = Sub;
    Sub.cid = cid++;
    Sub.options = mergeOptions(
      Super.options,
      extendOptions
    );
    Sub['super'] = Super;

    // For props and computed properties, we define the proxy getters on
    // the Vue instances at extension time, on the extended prototype. This
    // avoids Object.defineProperty calls for each instance created.
    if (Sub.options.props) {
      initProps$1(Sub);
    }
    if (Sub.options.computed) {
      initComputed$1(Sub);
    }

    // allow further extension/mixin/plugin usage
    Sub.extend = Super.extend;
    Sub.mixin = Super.mixin;
    Sub.use = Super.use;

    // create asset registers, so extended classes
    // can have their private assets too.
    ASSET_TYPES.forEach(function (type) {
      Sub[type] = Super[type];
    });
    // enable recursive self-lookup
    if (name) {
      Sub.options.components[name] = Sub;
    }

    // keep a reference to the super options at extension time.
    // later at instantiation we can check if Super's options have
    // been updated.
    Sub.superOptions = Super.options;
    Sub.extendOptions = extendOptions;
    Sub.sealedOptions = extend({}, Sub.options);

    // cache constructor
    cachedCtors[SuperId] = Sub;
    return Sub
  };
}

function initProps$1 (Comp) {
  var props = Comp.options.props;
  for (var key in props) {
    proxy(Comp.prototype, "_props", key);
  }
}

function initComputed$1 (Comp) {
  var computed = Comp.options.computed;
  for (var key in computed) {
    defineComputed(Comp.prototype, key, computed[key]);
  }
}

/*  */

function initAssetRegisters (Vue) {
  /**
   * Create asset registration methods.
   */
  ASSET_TYPES.forEach(function (type) {
    Vue[type] = function (
      id,
      definition
    ) {
      if (!definition) {
        return this.options[type + 's'][id]
      } else {
        /* istanbul ignore if */
        if (false) {}
        if (type === 'component' && isPlainObject(definition)) {
          definition.name = definition.name || id;
          definition = this.options._base.extend(definition);
        }
        if (type === 'directive' && typeof definition === 'function') {
          definition = { bind: definition, update: definition };
        }
        this.options[type + 's'][id] = definition;
        return definition
      }
    };
  });
}

/*  */



function getComponentName (opts) {
  return opts && (opts.Ctor.options.name || opts.tag)
}

function matches (pattern, name) {
  if (Array.isArray(pattern)) {
    return pattern.indexOf(name) > -1
  } else if (typeof pattern === 'string') {
    return pattern.split(',').indexOf(name) > -1
  } else if (isRegExp(pattern)) {
    return pattern.test(name)
  }
  /* istanbul ignore next */
  return false
}

function pruneCache (keepAliveInstance, filter) {
  var cache = keepAliveInstance.cache;
  var keys = keepAliveInstance.keys;
  var _vnode = keepAliveInstance._vnode;
  for (var key in cache) {
    var cachedNode = cache[key];
    if (cachedNode) {
      var name = getComponentName(cachedNode.componentOptions);
      if (name && !filter(name)) {
        pruneCacheEntry(cache, key, keys, _vnode);
      }
    }
  }
}

function pruneCacheEntry (
  cache,
  key,
  keys,
  current
) {
  var cached$$1 = cache[key];
  if (cached$$1 && (!current || cached$$1.tag !== current.tag)) {
    cached$$1.componentInstance.$destroy();
  }
  cache[key] = null;
  remove(keys, key);
}

var patternTypes = [String, RegExp, Array];

var KeepAlive = {
  name: 'keep-alive',
  abstract: true,

  props: {
    include: patternTypes,
    exclude: patternTypes,
    max: [String, Number]
  },

  created: function created () {
    this.cache = Object.create(null);
    this.keys = [];
  },

  destroyed: function destroyed () {
    for (var key in this.cache) {
      pruneCacheEntry(this.cache, key, this.keys);
    }
  },

  mounted: function mounted () {
    var this$1 = this;

    this.$watch('include', function (val) {
      pruneCache(this$1, function (name) { return matches(val, name); });
    });
    this.$watch('exclude', function (val) {
      pruneCache(this$1, function (name) { return !matches(val, name); });
    });
  },

  render: function render () {
    var slot = this.$slots.default;
    var vnode = getFirstComponentChild(slot);
    var componentOptions = vnode && vnode.componentOptions;
    if (componentOptions) {
      // check pattern
      var name = getComponentName(componentOptions);
      var ref = this;
      var include = ref.include;
      var exclude = ref.exclude;
      if (
        // not included
        (include && (!name || !matches(include, name))) ||
        // excluded
        (exclude && name && matches(exclude, name))
      ) {
        return vnode
      }

      var ref$1 = this;
      var cache = ref$1.cache;
      var keys = ref$1.keys;
      var key = vnode.key == null
        // same constructor may get registered as different local components
        // so cid alone is not enough (#3269)
        ? componentOptions.Ctor.cid + (componentOptions.tag ? ("::" + (componentOptions.tag)) : '')
        : vnode.key;
      if (cache[key]) {
        vnode.componentInstance = cache[key].componentInstance;
        // make current key freshest
        remove(keys, key);
        keys.push(key);
      } else {
        cache[key] = vnode;
        keys.push(key);
        // prune oldest entry
        if (this.max && keys.length > parseInt(this.max)) {
          pruneCacheEntry(cache, keys[0], keys, this._vnode);
        }
      }

      vnode.data.keepAlive = true;
    }
    return vnode || (slot && slot[0])
  }
};

var builtInComponents = {
  KeepAlive: KeepAlive
};

/*  */

function initGlobalAPI (Vue) {
  // config
  var configDef = {};
  configDef.get = function () { return config; };
  if (false) {}
  Object.defineProperty(Vue, 'config', configDef);

  // exposed util methods.
  // NOTE: these are not considered part of the public API - avoid relying on
  // them unless you are aware of the risk.
  Vue.util = {
    warn: warn,
    extend: extend,
    mergeOptions: mergeOptions,
    defineReactive: defineReactive$$1
  };

  Vue.set = set;
  Vue.delete = del;
  Vue.nextTick = nextTick;

  // 2.6 explicit observable API
  Vue.observable = function (obj) {
    observe(obj);
    return obj
  };

  Vue.options = Object.create(null);
  ASSET_TYPES.forEach(function (type) {
    Vue.options[type + 's'] = Object.create(null);
  });

  // this is used to identify the "base" constructor to extend all plain-object
  // components with in Weex's multi-instance scenarios.
  Vue.options._base = Vue;

  extend(Vue.options.components, builtInComponents);

  initUse(Vue);
  initMixin$1(Vue);
  initExtend(Vue);
  initAssetRegisters(Vue);
}

initGlobalAPI(Vue);

Object.defineProperty(Vue.prototype, '$isServer', {
  get: isServerRendering
});

Object.defineProperty(Vue.prototype, '$ssrContext', {
  get: function get () {
    /* istanbul ignore next */
    return this.$vnode && this.$vnode.ssrContext
  }
});

// expose FunctionalRenderContext for ssr runtime helper installation
Object.defineProperty(Vue, 'FunctionalRenderContext', {
  value: FunctionalRenderContext
});

Vue.version = '2.6.12';

/*  */

// these are reserved for web because they are directly compiled away
// during template compilation
var isReservedAttr = makeMap('style,class');

// attributes that should be using props for binding
var acceptValue = makeMap('input,textarea,option,select,progress');
var mustUseProp = function (tag, type, attr) {
  return (
    (attr === 'value' && acceptValue(tag)) && type !== 'button' ||
    (attr === 'selected' && tag === 'option') ||
    (attr === 'checked' && tag === 'input') ||
    (attr === 'muted' && tag === 'video')
  )
};

var isEnumeratedAttr = makeMap('contenteditable,draggable,spellcheck');

var isValidContentEditableValue = makeMap('events,caret,typing,plaintext-only');

var convertEnumeratedValue = function (key, value) {
  return isFalsyAttrValue(value) || value === 'false'
    ? 'false'
    // allow arbitrary string value for contenteditable
    : key === 'contenteditable' && isValidContentEditableValue(value)
      ? value
      : 'true'
};

var isBooleanAttr = makeMap(
  'allowfullscreen,async,autofocus,autoplay,checked,compact,controls,declare,' +
  'default,defaultchecked,defaultmuted,defaultselected,defer,disabled,' +
  'enabled,formnovalidate,hidden,indeterminate,inert,ismap,itemscope,loop,multiple,' +
  'muted,nohref,noresize,noshade,novalidate,nowrap,open,pauseonexit,readonly,' +
  'required,reversed,scoped,seamless,selected,sortable,translate,' +
  'truespeed,typemustmatch,visible'
);

var xlinkNS = 'http://www.w3.org/1999/xlink';

var isXlink = function (name) {
  return name.charAt(5) === ':' && name.slice(0, 5) === 'xlink'
};

var getXlinkProp = function (name) {
  return isXlink(name) ? name.slice(6, name.length) : ''
};

var isFalsyAttrValue = function (val) {
  return val == null || val === false
};

/*  */

function genClassForVnode (vnode) {
  var data = vnode.data;
  var parentNode = vnode;
  var childNode = vnode;
  while (isDef(childNode.componentInstance)) {
    childNode = childNode.componentInstance._vnode;
    if (childNode && childNode.data) {
      data = mergeClassData(childNode.data, data);
    }
  }
  while (isDef(parentNode = parentNode.parent)) {
    if (parentNode && parentNode.data) {
      data = mergeClassData(data, parentNode.data);
    }
  }
  return renderClass(data.staticClass, data.class)
}

function mergeClassData (child, parent) {
  return {
    staticClass: concat(child.staticClass, parent.staticClass),
    class: isDef(child.class)
      ? [child.class, parent.class]
      : parent.class
  }
}

function renderClass (
  staticClass,
  dynamicClass
) {
  if (isDef(staticClass) || isDef(dynamicClass)) {
    return concat(staticClass, stringifyClass(dynamicClass))
  }
  /* istanbul ignore next */
  return ''
}

function concat (a, b) {
  return a ? b ? (a + ' ' + b) : a : (b || '')
}

function stringifyClass (value) {
  if (Array.isArray(value)) {
    return stringifyArray(value)
  }
  if (isObject(value)) {
    return stringifyObject(value)
  }
  if (typeof value === 'string') {
    return value
  }
  /* istanbul ignore next */
  return ''
}

function stringifyArray (value) {
  var res = '';
  var stringified;
  for (var i = 0, l = value.length; i < l; i++) {
    if (isDef(stringified = stringifyClass(value[i])) && stringified !== '') {
      if (res) { res += ' '; }
      res += stringified;
    }
  }
  return res
}

function stringifyObject (value) {
  var res = '';
  for (var key in value) {
    if (value[key]) {
      if (res) { res += ' '; }
      res += key;
    }
  }
  return res
}

/*  */

var namespaceMap = {
  svg: 'http://www.w3.org/2000/svg',
  math: 'http://www.w3.org/1998/Math/MathML'
};

var isHTMLTag = makeMap(
  'html,body,base,head,link,meta,style,title,' +
  'address,article,aside,footer,header,h1,h2,h3,h4,h5,h6,hgroup,nav,section,' +
  'div,dd,dl,dt,figcaption,figure,picture,hr,img,li,main,ol,p,pre,ul,' +
  'a,b,abbr,bdi,bdo,br,cite,code,data,dfn,em,i,kbd,mark,q,rp,rt,rtc,ruby,' +
  's,samp,small,span,strong,sub,sup,time,u,var,wbr,area,audio,map,track,video,' +
  'embed,object,param,source,canvas,script,noscript,del,ins,' +
  'caption,col,colgroup,table,thead,tbody,td,th,tr,' +
  'button,datalist,fieldset,form,input,label,legend,meter,optgroup,option,' +
  'output,progress,select,textarea,' +
  'details,dialog,menu,menuitem,summary,' +
  'content,element,shadow,template,blockquote,iframe,tfoot'
);

// this map is intentionally selective, only covering SVG elements that may
// contain child elements.
var isSVG = makeMap(
  'svg,animate,circle,clippath,cursor,defs,desc,ellipse,filter,font-face,' +
  'foreignObject,g,glyph,image,line,marker,mask,missing-glyph,path,pattern,' +
  'polygon,polyline,rect,switch,symbol,text,textpath,tspan,use,view',
  true
);

var isReservedTag = function (tag) {
  return isHTMLTag(tag) || isSVG(tag)
};

function getTagNamespace (tag) {
  if (isSVG(tag)) {
    return 'svg'
  }
  // basic support for MathML
  // note it doesn't support other MathML elements being component roots
  if (tag === 'math') {
    return 'math'
  }
}

var unknownElementCache = Object.create(null);
function isUnknownElement (tag) {
  /* istanbul ignore if */
  if (!inBrowser) {
    return true
  }
  if (isReservedTag(tag)) {
    return false
  }
  tag = tag.toLowerCase();
  /* istanbul ignore if */
  if (unknownElementCache[tag] != null) {
    return unknownElementCache[tag]
  }
  var el = document.createElement(tag);
  if (tag.indexOf('-') > -1) {
    // http://stackoverflow.com/a/28210364/1070244
    return (unknownElementCache[tag] = (
      el.constructor === window.HTMLUnknownElement ||
      el.constructor === window.HTMLElement
    ))
  } else {
    return (unknownElementCache[tag] = /HTMLUnknownElement/.test(el.toString()))
  }
}

var isTextInputType = makeMap('text,number,password,search,email,tel,url');

/*  */

/**
 * Query an element selector if it's not an element already.
 */
function query (el) {
  if (typeof el === 'string') {
    var selected = document.querySelector(el);
    if (!selected) {
       false && false;
      return document.createElement('div')
    }
    return selected
  } else {
    return el
  }
}

/*  */

function createElement$1 (tagName, vnode) {
  var elm = document.createElement(tagName);
  if (tagName !== 'select') {
    return elm
  }
  // false or null will remove the attribute but undefined will not
  if (vnode.data && vnode.data.attrs && vnode.data.attrs.multiple !== undefined) {
    elm.setAttribute('multiple', 'multiple');
  }
  return elm
}

function createElementNS (namespace, tagName) {
  return document.createElementNS(namespaceMap[namespace], tagName)
}

function createTextNode (text) {
  return document.createTextNode(text)
}

function createComment (text) {
  return document.createComment(text)
}

function insertBefore (parentNode, newNode, referenceNode) {
  parentNode.insertBefore(newNode, referenceNode);
}

function removeChild (node, child) {
  node.removeChild(child);
}

function appendChild (node, child) {
  node.appendChild(child);
}

function parentNode (node) {
  return node.parentNode
}

function nextSibling (node) {
  return node.nextSibling
}

function tagName (node) {
  return node.tagName
}

function setTextContent (node, text) {
  node.textContent = text;
}

function setStyleScope (node, scopeId) {
  node.setAttribute(scopeId, '');
}

var nodeOps = /*#__PURE__*/Object.freeze({
  createElement: createElement$1,
  createElementNS: createElementNS,
  createTextNode: createTextNode,
  createComment: createComment,
  insertBefore: insertBefore,
  removeChild: removeChild,
  appendChild: appendChild,
  parentNode: parentNode,
  nextSibling: nextSibling,
  tagName: tagName,
  setTextContent: setTextContent,
  setStyleScope: setStyleScope
});

/*  */

var ref = {
  create: function create (_, vnode) {
    registerRef(vnode);
  },
  update: function update (oldVnode, vnode) {
    if (oldVnode.data.ref !== vnode.data.ref) {
      registerRef(oldVnode, true);
      registerRef(vnode);
    }
  },
  destroy: function destroy (vnode) {
    registerRef(vnode, true);
  }
};

function registerRef (vnode, isRemoval) {
  var key = vnode.data.ref;
  if (!isDef(key)) { return }

  var vm = vnode.context;
  var ref = vnode.componentInstance || vnode.elm;
  var refs = vm.$refs;
  if (isRemoval) {
    if (Array.isArray(refs[key])) {
      remove(refs[key], ref);
    } else if (refs[key] === ref) {
      refs[key] = undefined;
    }
  } else {
    if (vnode.data.refInFor) {
      if (!Array.isArray(refs[key])) {
        refs[key] = [ref];
      } else if (refs[key].indexOf(ref) < 0) {
        // $flow-disable-line
        refs[key].push(ref);
      }
    } else {
      refs[key] = ref;
    }
  }
}

/**
 * Virtual DOM patching algorithm based on Snabbdom by
 * Simon Friis Vindum (@paldepind)
 * Licensed under the MIT License
 * https://github.com/paldepind/snabbdom/blob/master/LICENSE
 *
 * modified by Evan You (@yyx990803)
 *
 * Not type-checking this because this file is perf-critical and the cost
 * of making flow understand it is not worth it.
 */

var emptyNode = new VNode('', {}, []);

var hooks = ['create', 'activate', 'update', 'remove', 'destroy'];

function sameVnode (a, b) {
  return (
    a.key === b.key && (
      (
        a.tag === b.tag &&
        a.isComment === b.isComment &&
        isDef(a.data) === isDef(b.data) &&
        sameInputType(a, b)
      ) || (
        isTrue(a.isAsyncPlaceholder) &&
        a.asyncFactory === b.asyncFactory &&
        isUndef(b.asyncFactory.error)
      )
    )
  )
}

function sameInputType (a, b) {
  if (a.tag !== 'input') { return true }
  var i;
  var typeA = isDef(i = a.data) && isDef(i = i.attrs) && i.type;
  var typeB = isDef(i = b.data) && isDef(i = i.attrs) && i.type;
  return typeA === typeB || isTextInputType(typeA) && isTextInputType(typeB)
}

function createKeyToOldIdx (children, beginIdx, endIdx) {
  var i, key;
  var map = {};
  for (i = beginIdx; i <= endIdx; ++i) {
    key = children[i].key;
    if (isDef(key)) { map[key] = i; }
  }
  return map
}

function createPatchFunction (backend) {
  var i, j;
  var cbs = {};

  var modules = backend.modules;
  var nodeOps = backend.nodeOps;

  for (i = 0; i < hooks.length; ++i) {
    cbs[hooks[i]] = [];
    for (j = 0; j < modules.length; ++j) {
      if (isDef(modules[j][hooks[i]])) {
        cbs[hooks[i]].push(modules[j][hooks[i]]);
      }
    }
  }

  function emptyNodeAt (elm) {
    return new VNode(nodeOps.tagName(elm).toLowerCase(), {}, [], undefined, elm)
  }

  function createRmCb (childElm, listeners) {
    function remove$$1 () {
      if (--remove$$1.listeners === 0) {
        removeNode(childElm);
      }
    }
    remove$$1.listeners = listeners;
    return remove$$1
  }

  function removeNode (el) {
    var parent = nodeOps.parentNode(el);
    // element may have already been removed due to v-html / v-text
    if (isDef(parent)) {
      nodeOps.removeChild(parent, el);
    }
  }

  function isUnknownElement$$1 (vnode, inVPre) {
    return (
      !inVPre &&
      !vnode.ns &&
      !(
        config.ignoredElements.length &&
        config.ignoredElements.some(function (ignore) {
          return isRegExp(ignore)
            ? ignore.test(vnode.tag)
            : ignore === vnode.tag
        })
      ) &&
      config.isUnknownElement(vnode.tag)
    )
  }

  var creatingElmInVPre = 0;

  function createElm (
    vnode,
    insertedVnodeQueue,
    parentElm,
    refElm,
    nested,
    ownerArray,
    index
  ) {
    if (isDef(vnode.elm) && isDef(ownerArray)) {
      // This vnode was used in a previous render!
      // now it's used as a new node, overwriting its elm would cause
      // potential patch errors down the road when it's used as an insertion
      // reference node. Instead, we clone the node on-demand before creating
      // associated DOM element for it.
      vnode = ownerArray[index] = cloneVNode(vnode);
    }

    vnode.isRootInsert = !nested; // for transition enter check
    if (createComponent(vnode, insertedVnodeQueue, parentElm, refElm)) {
      return
    }

    var data = vnode.data;
    var children = vnode.children;
    var tag = vnode.tag;
    if (isDef(tag)) {
      if (false) {}

      vnode.elm = vnode.ns
        ? nodeOps.createElementNS(vnode.ns, tag)
        : nodeOps.createElement(tag, vnode);
      setScope(vnode);

      /* istanbul ignore if */
      {
        createChildren(vnode, children, insertedVnodeQueue);
        if (isDef(data)) {
          invokeCreateHooks(vnode, insertedVnodeQueue);
        }
        insert(parentElm, vnode.elm, refElm);
      }

      if (false) {}
    } else if (isTrue(vnode.isComment)) {
      vnode.elm = nodeOps.createComment(vnode.text);
      insert(parentElm, vnode.elm, refElm);
    } else {
      vnode.elm = nodeOps.createTextNode(vnode.text);
      insert(parentElm, vnode.elm, refElm);
    }
  }

  function createComponent (vnode, insertedVnodeQueue, parentElm, refElm) {
    var i = vnode.data;
    if (isDef(i)) {
      var isReactivated = isDef(vnode.componentInstance) && i.keepAlive;
      if (isDef(i = i.hook) && isDef(i = i.init)) {
        i(vnode, false /* hydrating */);
      }
      // after calling the init hook, if the vnode is a child component
      // it should've created a child instance and mounted it. the child
      // component also has set the placeholder vnode's elm.
      // in that case we can just return the element and be done.
      if (isDef(vnode.componentInstance)) {
        initComponent(vnode, insertedVnodeQueue);
        insert(parentElm, vnode.elm, refElm);
        if (isTrue(isReactivated)) {
          reactivateComponent(vnode, insertedVnodeQueue, parentElm, refElm);
        }
        return true
      }
    }
  }

  function initComponent (vnode, insertedVnodeQueue) {
    if (isDef(vnode.data.pendingInsert)) {
      insertedVnodeQueue.push.apply(insertedVnodeQueue, vnode.data.pendingInsert);
      vnode.data.pendingInsert = null;
    }
    vnode.elm = vnode.componentInstance.$el;
    if (isPatchable(vnode)) {
      invokeCreateHooks(vnode, insertedVnodeQueue);
      setScope(vnode);
    } else {
      // empty component root.
      // skip all element-related modules except for ref (#3455)
      registerRef(vnode);
      // make sure to invoke the insert hook
      insertedVnodeQueue.push(vnode);
    }
  }

  function reactivateComponent (vnode, insertedVnodeQueue, parentElm, refElm) {
    var i;
    // hack for #4339: a reactivated component with inner transition
    // does not trigger because the inner node's created hooks are not called
    // again. It's not ideal to involve module-specific logic in here but
    // there doesn't seem to be a better way to do it.
    var innerNode = vnode;
    while (innerNode.componentInstance) {
      innerNode = innerNode.componentInstance._vnode;
      if (isDef(i = innerNode.data) && isDef(i = i.transition)) {
        for (i = 0; i < cbs.activate.length; ++i) {
          cbs.activate[i](emptyNode, innerNode);
        }
        insertedVnodeQueue.push(innerNode);
        break
      }
    }
    // unlike a newly created component,
    // a reactivated keep-alive component doesn't insert itself
    insert(parentElm, vnode.elm, refElm);
  }

  function insert (parent, elm, ref$$1) {
    if (isDef(parent)) {
      if (isDef(ref$$1)) {
        if (nodeOps.parentNode(ref$$1) === parent) {
          nodeOps.insertBefore(parent, elm, ref$$1);
        }
      } else {
        nodeOps.appendChild(parent, elm);
      }
    }
  }

  function createChildren (vnode, children, insertedVnodeQueue) {
    if (Array.isArray(children)) {
      if (false) {}
      for (var i = 0; i < children.length; ++i) {
        createElm(children[i], insertedVnodeQueue, vnode.elm, null, true, children, i);
      }
    } else if (isPrimitive(vnode.text)) {
      nodeOps.appendChild(vnode.elm, nodeOps.createTextNode(String(vnode.text)));
    }
  }

  function isPatchable (vnode) {
    while (vnode.componentInstance) {
      vnode = vnode.componentInstance._vnode;
    }
    return isDef(vnode.tag)
  }

  function invokeCreateHooks (vnode, insertedVnodeQueue) {
    for (var i$1 = 0; i$1 < cbs.create.length; ++i$1) {
      cbs.create[i$1](emptyNode, vnode);
    }
    i = vnode.data.hook; // Reuse variable
    if (isDef(i)) {
      if (isDef(i.create)) { i.create(emptyNode, vnode); }
      if (isDef(i.insert)) { insertedVnodeQueue.push(vnode); }
    }
  }

  // set scope id attribute for scoped CSS.
  // this is implemented as a special case to avoid the overhead
  // of going through the normal attribute patching process.
  function setScope (vnode) {
    var i;
    if (isDef(i = vnode.fnScopeId)) {
      nodeOps.setStyleScope(vnode.elm, i);
    } else {
      var ancestor = vnode;
      while (ancestor) {
        if (isDef(i = ancestor.context) && isDef(i = i.$options._scopeId)) {
          nodeOps.setStyleScope(vnode.elm, i);
        }
        ancestor = ancestor.parent;
      }
    }
    // for slot content they should also get the scopeId from the host instance.
    if (isDef(i = activeInstance) &&
      i !== vnode.context &&
      i !== vnode.fnContext &&
      isDef(i = i.$options._scopeId)
    ) {
      nodeOps.setStyleScope(vnode.elm, i);
    }
  }

  function addVnodes (parentElm, refElm, vnodes, startIdx, endIdx, insertedVnodeQueue) {
    for (; startIdx <= endIdx; ++startIdx) {
      createElm(vnodes[startIdx], insertedVnodeQueue, parentElm, refElm, false, vnodes, startIdx);
    }
  }

  function invokeDestroyHook (vnode) {
    var i, j;
    var data = vnode.data;
    if (isDef(data)) {
      if (isDef(i = data.hook) && isDef(i = i.destroy)) { i(vnode); }
      for (i = 0; i < cbs.destroy.length; ++i) { cbs.destroy[i](vnode); }
    }
    if (isDef(i = vnode.children)) {
      for (j = 0; j < vnode.children.length; ++j) {
        invokeDestroyHook(vnode.children[j]);
      }
    }
  }

  function removeVnodes (vnodes, startIdx, endIdx) {
    for (; startIdx <= endIdx; ++startIdx) {
      var ch = vnodes[startIdx];
      if (isDef(ch)) {
        if (isDef(ch.tag)) {
          removeAndInvokeRemoveHook(ch);
          invokeDestroyHook(ch);
        } else { // Text node
          removeNode(ch.elm);
        }
      }
    }
  }

  function removeAndInvokeRemoveHook (vnode, rm) {
    if (isDef(rm) || isDef(vnode.data)) {
      var i;
      var listeners = cbs.remove.length + 1;
      if (isDef(rm)) {
        // we have a recursively passed down rm callback
        // increase the listeners count
        rm.listeners += listeners;
      } else {
        // directly removing
        rm = createRmCb(vnode.elm, listeners);
      }
      // recursively invoke hooks on child component root node
      if (isDef(i = vnode.componentInstance) && isDef(i = i._vnode) && isDef(i.data)) {
        removeAndInvokeRemoveHook(i, rm);
      }
      for (i = 0; i < cbs.remove.length; ++i) {
        cbs.remove[i](vnode, rm);
      }
      if (isDef(i = vnode.data.hook) && isDef(i = i.remove)) {
        i(vnode, rm);
      } else {
        rm();
      }
    } else {
      removeNode(vnode.elm);
    }
  }

  function updateChildren (parentElm, oldCh, newCh, insertedVnodeQueue, removeOnly) {
    var oldStartIdx = 0;
    var newStartIdx = 0;
    var oldEndIdx = oldCh.length - 1;
    var oldStartVnode = oldCh[0];
    var oldEndVnode = oldCh[oldEndIdx];
    var newEndIdx = newCh.length - 1;
    var newStartVnode = newCh[0];
    var newEndVnode = newCh[newEndIdx];
    var oldKeyToIdx, idxInOld, vnodeToMove, refElm;

    // removeOnly is a special flag used only by <transition-group>
    // to ensure removed elements stay in correct relative positions
    // during leaving transitions
    var canMove = !removeOnly;

    if (false) {}

    while (oldStartIdx <= oldEndIdx && newStartIdx <= newEndIdx) {
      if (isUndef(oldStartVnode)) {
        oldStartVnode = oldCh[++oldStartIdx]; // Vnode has been moved left
      } else if (isUndef(oldEndVnode)) {
        oldEndVnode = oldCh[--oldEndIdx];
      } else if (sameVnode(oldStartVnode, newStartVnode)) {
        patchVnode(oldStartVnode, newStartVnode, insertedVnodeQueue, newCh, newStartIdx);
        oldStartVnode = oldCh[++oldStartIdx];
        newStartVnode = newCh[++newStartIdx];
      } else if (sameVnode(oldEndVnode, newEndVnode)) {
        patchVnode(oldEndVnode, newEndVnode, insertedVnodeQueue, newCh, newEndIdx);
        oldEndVnode = oldCh[--oldEndIdx];
        newEndVnode = newCh[--newEndIdx];
      } else if (sameVnode(oldStartVnode, newEndVnode)) { // Vnode moved right
        patchVnode(oldStartVnode, newEndVnode, insertedVnodeQueue, newCh, newEndIdx);
        canMove && nodeOps.insertBefore(parentElm, oldStartVnode.elm, nodeOps.nextSibling(oldEndVnode.elm));
        oldStartVnode = oldCh[++oldStartIdx];
        newEndVnode = newCh[--newEndIdx];
      } else if (sameVnode(oldEndVnode, newStartVnode)) { // Vnode moved left
        patchVnode(oldEndVnode, newStartVnode, insertedVnodeQueue, newCh, newStartIdx);
        canMove && nodeOps.insertBefore(parentElm, oldEndVnode.elm, oldStartVnode.elm);
        oldEndVnode = oldCh[--oldEndIdx];
        newStartVnode = newCh[++newStartIdx];
      } else {
        if (isUndef(oldKeyToIdx)) { oldKeyToIdx = createKeyToOldIdx(oldCh, oldStartIdx, oldEndIdx); }
        idxInOld = isDef(newStartVnode.key)
          ? oldKeyToIdx[newStartVnode.key]
          : findIdxInOld(newStartVnode, oldCh, oldStartIdx, oldEndIdx);
        if (isUndef(idxInOld)) { // New element
          createElm(newStartVnode, insertedVnodeQueue, parentElm, oldStartVnode.elm, false, newCh, newStartIdx);
        } else {
          vnodeToMove = oldCh[idxInOld];
          if (sameVnode(vnodeToMove, newStartVnode)) {
            patchVnode(vnodeToMove, newStartVnode, insertedVnodeQueue, newCh, newStartIdx);
            oldCh[idxInOld] = undefined;
            canMove && nodeOps.insertBefore(parentElm, vnodeToMove.elm, oldStartVnode.elm);
          } else {
            // same key but different element. treat as new element
            createElm(newStartVnode, insertedVnodeQueue, parentElm, oldStartVnode.elm, false, newCh, newStartIdx);
          }
        }
        newStartVnode = newCh[++newStartIdx];
      }
    }
    if (oldStartIdx > oldEndIdx) {
      refElm = isUndef(newCh[newEndIdx + 1]) ? null : newCh[newEndIdx + 1].elm;
      addVnodes(parentElm, refElm, newCh, newStartIdx, newEndIdx, insertedVnodeQueue);
    } else if (newStartIdx > newEndIdx) {
      removeVnodes(oldCh, oldStartIdx, oldEndIdx);
    }
  }

  function checkDuplicateKeys (children) {
    var seenKeys = {};
    for (var i = 0; i < children.length; i++) {
      var vnode = children[i];
      var key = vnode.key;
      if (isDef(key)) {
        if (seenKeys[key]) {
          warn(
            ("Duplicate keys detected: '" + key + "'. This may cause an update error."),
            vnode.context
          );
        } else {
          seenKeys[key] = true;
        }
      }
    }
  }

  function findIdxInOld (node, oldCh, start, end) {
    for (var i = start; i < end; i++) {
      var c = oldCh[i];
      if (isDef(c) && sameVnode(node, c)) { return i }
    }
  }

  function patchVnode (
    oldVnode,
    vnode,
    insertedVnodeQueue,
    ownerArray,
    index,
    removeOnly
  ) {
    if (oldVnode === vnode) {
      return
    }

    if (isDef(vnode.elm) && isDef(ownerArray)) {
      // clone reused vnode
      vnode = ownerArray[index] = cloneVNode(vnode);
    }

    var elm = vnode.elm = oldVnode.elm;

    if (isTrue(oldVnode.isAsyncPlaceholder)) {
      if (isDef(vnode.asyncFactory.resolved)) {
        hydrate(oldVnode.elm, vnode, insertedVnodeQueue);
      } else {
        vnode.isAsyncPlaceholder = true;
      }
      return
    }

    // reuse element for static trees.
    // note we only do this if the vnode is cloned -
    // if the new node is not cloned it means the render functions have been
    // reset by the hot-reload-api and we need to do a proper re-render.
    if (isTrue(vnode.isStatic) &&
      isTrue(oldVnode.isStatic) &&
      vnode.key === oldVnode.key &&
      (isTrue(vnode.isCloned) || isTrue(vnode.isOnce))
    ) {
      vnode.componentInstance = oldVnode.componentInstance;
      return
    }

    var i;
    var data = vnode.data;
    if (isDef(data) && isDef(i = data.hook) && isDef(i = i.prepatch)) {
      i(oldVnode, vnode);
    }

    var oldCh = oldVnode.children;
    var ch = vnode.children;
    if (isDef(data) && isPatchable(vnode)) {
      for (i = 0; i < cbs.update.length; ++i) { cbs.update[i](oldVnode, vnode); }
      if (isDef(i = data.hook) && isDef(i = i.update)) { i(oldVnode, vnode); }
    }
    if (isUndef(vnode.text)) {
      if (isDef(oldCh) && isDef(ch)) {
        if (oldCh !== ch) { updateChildren(elm, oldCh, ch, insertedVnodeQueue, removeOnly); }
      } else if (isDef(ch)) {
        if (false) {}
        if (isDef(oldVnode.text)) { nodeOps.setTextContent(elm, ''); }
        addVnodes(elm, null, ch, 0, ch.length - 1, insertedVnodeQueue);
      } else if (isDef(oldCh)) {
        removeVnodes(oldCh, 0, oldCh.length - 1);
      } else if (isDef(oldVnode.text)) {
        nodeOps.setTextContent(elm, '');
      }
    } else if (oldVnode.text !== vnode.text) {
      nodeOps.setTextContent(elm, vnode.text);
    }
    if (isDef(data)) {
      if (isDef(i = data.hook) && isDef(i = i.postpatch)) { i(oldVnode, vnode); }
    }
  }

  function invokeInsertHook (vnode, queue, initial) {
    // delay insert hooks for component root nodes, invoke them after the
    // element is really inserted
    if (isTrue(initial) && isDef(vnode.parent)) {
      vnode.parent.data.pendingInsert = queue;
    } else {
      for (var i = 0; i < queue.length; ++i) {
        queue[i].data.hook.insert(queue[i]);
      }
    }
  }

  var hydrationBailed = false;
  // list of modules that can skip create hook during hydration because they
  // are already rendered on the client or has no need for initialization
  // Note: style is excluded because it relies on initial clone for future
  // deep updates (#7063).
  var isRenderedModule = makeMap('attrs,class,staticClass,staticStyle,key');

  // Note: this is a browser-only function so we can assume elms are DOM nodes.
  function hydrate (elm, vnode, insertedVnodeQueue, inVPre) {
    var i;
    var tag = vnode.tag;
    var data = vnode.data;
    var children = vnode.children;
    inVPre = inVPre || (data && data.pre);
    vnode.elm = elm;

    if (isTrue(vnode.isComment) && isDef(vnode.asyncFactory)) {
      vnode.isAsyncPlaceholder = true;
      return true
    }
    // assert node match
    if (false) {}
    if (isDef(data)) {
      if (isDef(i = data.hook) && isDef(i = i.init)) { i(vnode, true /* hydrating */); }
      if (isDef(i = vnode.componentInstance)) {
        // child component. it should have hydrated its own tree.
        initComponent(vnode, insertedVnodeQueue);
        return true
      }
    }
    if (isDef(tag)) {
      if (isDef(children)) {
        // empty element, allow client to pick up and populate children
        if (!elm.hasChildNodes()) {
          createChildren(vnode, children, insertedVnodeQueue);
        } else {
          // v-html and domProps: innerHTML
          if (isDef(i = data) && isDef(i = i.domProps) && isDef(i = i.innerHTML)) {
            if (i !== elm.innerHTML) {
              /* istanbul ignore if */
              if (false
              ) {}
              return false
            }
          } else {
            // iterate and compare children lists
            var childrenMatch = true;
            var childNode = elm.firstChild;
            for (var i$1 = 0; i$1 < children.length; i$1++) {
              if (!childNode || !hydrate(childNode, children[i$1], insertedVnodeQueue, inVPre)) {
                childrenMatch = false;
                break
              }
              childNode = childNode.nextSibling;
            }
            // if childNode is not null, it means the actual childNodes list is
            // longer than the virtual children list.
            if (!childrenMatch || childNode) {
              /* istanbul ignore if */
              if (false
              ) {}
              return false
            }
          }
        }
      }
      if (isDef(data)) {
        var fullInvoke = false;
        for (var key in data) {
          if (!isRenderedModule(key)) {
            fullInvoke = true;
            invokeCreateHooks(vnode, insertedVnodeQueue);
            break
          }
        }
        if (!fullInvoke && data['class']) {
          // ensure collecting deps for deep class bindings for future updates
          traverse(data['class']);
        }
      }
    } else if (elm.data !== vnode.text) {
      elm.data = vnode.text;
    }
    return true
  }

  function assertNodeMatch (node, vnode, inVPre) {
    if (isDef(vnode.tag)) {
      return vnode.tag.indexOf('vue-component') === 0 || (
        !isUnknownElement$$1(vnode, inVPre) &&
        vnode.tag.toLowerCase() === (node.tagName && node.tagName.toLowerCase())
      )
    } else {
      return node.nodeType === (vnode.isComment ? 8 : 3)
    }
  }

  return function patch (oldVnode, vnode, hydrating, removeOnly) {
    if (isUndef(vnode)) {
      if (isDef(oldVnode)) { invokeDestroyHook(oldVnode); }
      return
    }

    var isInitialPatch = false;
    var insertedVnodeQueue = [];

    if (isUndef(oldVnode)) {
      // empty mount (likely as component), create new root element
      isInitialPatch = true;
      createElm(vnode, insertedVnodeQueue);
    } else {
      var isRealElement = isDef(oldVnode.nodeType);
      if (!isRealElement && sameVnode(oldVnode, vnode)) {
        // patch existing root node
        patchVnode(oldVnode, vnode, insertedVnodeQueue, null, null, removeOnly);
      } else {
        if (isRealElement) {
          // mounting to a real element
          // check if this is server-rendered content and if we can perform
          // a successful hydration.
          if (oldVnode.nodeType === 1 && oldVnode.hasAttribute(SSR_ATTR)) {
            oldVnode.removeAttribute(SSR_ATTR);
            hydrating = true;
          }
          if (isTrue(hydrating)) {
            if (hydrate(oldVnode, vnode, insertedVnodeQueue)) {
              invokeInsertHook(vnode, insertedVnodeQueue, true);
              return oldVnode
            } else if (false) {}
          }
          // either not server-rendered, or hydration failed.
          // create an empty node and replace it
          oldVnode = emptyNodeAt(oldVnode);
        }

        // replacing existing element
        var oldElm = oldVnode.elm;
        var parentElm = nodeOps.parentNode(oldElm);

        // create new node
        createElm(
          vnode,
          insertedVnodeQueue,
          // extremely rare edge case: do not insert if old element is in a
          // leaving transition. Only happens when combining transition +
          // keep-alive + HOCs. (#4590)
          oldElm._leaveCb ? null : parentElm,
          nodeOps.nextSibling(oldElm)
        );

        // update parent placeholder node element, recursively
        if (isDef(vnode.parent)) {
          var ancestor = vnode.parent;
          var patchable = isPatchable(vnode);
          while (ancestor) {
            for (var i = 0; i < cbs.destroy.length; ++i) {
              cbs.destroy[i](ancestor);
            }
            ancestor.elm = vnode.elm;
            if (patchable) {
              for (var i$1 = 0; i$1 < cbs.create.length; ++i$1) {
                cbs.create[i$1](emptyNode, ancestor);
              }
              // #6513
              // invoke insert hooks that may have been merged by create hooks.
              // e.g. for directives that uses the "inserted" hook.
              var insert = ancestor.data.hook.insert;
              if (insert.merged) {
                // start at index 1 to avoid re-invoking component mounted hook
                for (var i$2 = 1; i$2 < insert.fns.length; i$2++) {
                  insert.fns[i$2]();
                }
              }
            } else {
              registerRef(ancestor);
            }
            ancestor = ancestor.parent;
          }
        }

        // destroy old node
        if (isDef(parentElm)) {
          removeVnodes([oldVnode], 0, 0);
        } else if (isDef(oldVnode.tag)) {
          invokeDestroyHook(oldVnode);
        }
      }
    }

    invokeInsertHook(vnode, insertedVnodeQueue, isInitialPatch);
    return vnode.elm
  }
}

/*  */

var directives = {
  create: updateDirectives,
  update: updateDirectives,
  destroy: function unbindDirectives (vnode) {
    updateDirectives(vnode, emptyNode);
  }
};

function updateDirectives (oldVnode, vnode) {
  if (oldVnode.data.directives || vnode.data.directives) {
    _update(oldVnode, vnode);
  }
}

function _update (oldVnode, vnode) {
  var isCreate = oldVnode === emptyNode;
  var isDestroy = vnode === emptyNode;
  var oldDirs = normalizeDirectives$1(oldVnode.data.directives, oldVnode.context);
  var newDirs = normalizeDirectives$1(vnode.data.directives, vnode.context);

  var dirsWithInsert = [];
  var dirsWithPostpatch = [];

  var key, oldDir, dir;
  for (key in newDirs) {
    oldDir = oldDirs[key];
    dir = newDirs[key];
    if (!oldDir) {
      // new directive, bind
      callHook$1(dir, 'bind', vnode, oldVnode);
      if (dir.def && dir.def.inserted) {
        dirsWithInsert.push(dir);
      }
    } else {
      // existing directive, update
      dir.oldValue = oldDir.value;
      dir.oldArg = oldDir.arg;
      callHook$1(dir, 'update', vnode, oldVnode);
      if (dir.def && dir.def.componentUpdated) {
        dirsWithPostpatch.push(dir);
      }
    }
  }

  if (dirsWithInsert.length) {
    var callInsert = function () {
      for (var i = 0; i < dirsWithInsert.length; i++) {
        callHook$1(dirsWithInsert[i], 'inserted', vnode, oldVnode);
      }
    };
    if (isCreate) {
      mergeVNodeHook(vnode, 'insert', callInsert);
    } else {
      callInsert();
    }
  }

  if (dirsWithPostpatch.length) {
    mergeVNodeHook(vnode, 'postpatch', function () {
      for (var i = 0; i < dirsWithPostpatch.length; i++) {
        callHook$1(dirsWithPostpatch[i], 'componentUpdated', vnode, oldVnode);
      }
    });
  }

  if (!isCreate) {
    for (key in oldDirs) {
      if (!newDirs[key]) {
        // no longer present, unbind
        callHook$1(oldDirs[key], 'unbind', oldVnode, oldVnode, isDestroy);
      }
    }
  }
}

var emptyModifiers = Object.create(null);

function normalizeDirectives$1 (
  dirs,
  vm
) {
  var res = Object.create(null);
  if (!dirs) {
    // $flow-disable-line
    return res
  }
  var i, dir;
  for (i = 0; i < dirs.length; i++) {
    dir = dirs[i];
    if (!dir.modifiers) {
      // $flow-disable-line
      dir.modifiers = emptyModifiers;
    }
    res[getRawDirName(dir)] = dir;
    dir.def = resolveAsset(vm.$options, 'directives', dir.name, true);
  }
  // $flow-disable-line
  return res
}

function getRawDirName (dir) {
  return dir.rawName || ((dir.name) + "." + (Object.keys(dir.modifiers || {}).join('.')))
}

function callHook$1 (dir, hook, vnode, oldVnode, isDestroy) {
  var fn = dir.def && dir.def[hook];
  if (fn) {
    try {
      fn(vnode.elm, dir, vnode, oldVnode, isDestroy);
    } catch (e) {
      handleError(e, vnode.context, ("directive " + (dir.name) + " " + hook + " hook"));
    }
  }
}

var baseModules = [
  ref,
  directives
];

/*  */

function updateAttrs (oldVnode, vnode) {
  var opts = vnode.componentOptions;
  if (isDef(opts) && opts.Ctor.options.inheritAttrs === false) {
    return
  }
  if (isUndef(oldVnode.data.attrs) && isUndef(vnode.data.attrs)) {
    return
  }
  var key, cur, old;
  var elm = vnode.elm;
  var oldAttrs = oldVnode.data.attrs || {};
  var attrs = vnode.data.attrs || {};
  // clone observed objects, as the user probably wants to mutate it
  if (isDef(attrs.__ob__)) {
    attrs = vnode.data.attrs = extend({}, attrs);
  }

  for (key in attrs) {
    cur = attrs[key];
    old = oldAttrs[key];
    if (old !== cur) {
      setAttr(elm, key, cur);
    }
  }
  // #4391: in IE9, setting type can reset value for input[type=radio]
  // #6666: IE/Edge forces progress value down to 1 before setting a max
  /* istanbul ignore if */
  if ((isIE || isEdge) && attrs.value !== oldAttrs.value) {
    setAttr(elm, 'value', attrs.value);
  }
  for (key in oldAttrs) {
    if (isUndef(attrs[key])) {
      if (isXlink(key)) {
        elm.removeAttributeNS(xlinkNS, getXlinkProp(key));
      } else if (!isEnumeratedAttr(key)) {
        elm.removeAttribute(key);
      }
    }
  }
}

function setAttr (el, key, value) {
  if (el.tagName.indexOf('-') > -1) {
    baseSetAttr(el, key, value);
  } else if (isBooleanAttr(key)) {
    // set attribute for blank value
    // e.g. <option disabled>Select one</option>
    if (isFalsyAttrValue(value)) {
      el.removeAttribute(key);
    } else {
      // technically allowfullscreen is a boolean attribute for <iframe>,
      // but Flash expects a value of "true" when used on <embed> tag
      value = key === 'allowfullscreen' && el.tagName === 'EMBED'
        ? 'true'
        : key;
      el.setAttribute(key, value);
    }
  } else if (isEnumeratedAttr(key)) {
    el.setAttribute(key, convertEnumeratedValue(key, value));
  } else if (isXlink(key)) {
    if (isFalsyAttrValue(value)) {
      el.removeAttributeNS(xlinkNS, getXlinkProp(key));
    } else {
      el.setAttributeNS(xlinkNS, key, value);
    }
  } else {
    baseSetAttr(el, key, value);
  }
}

function baseSetAttr (el, key, value) {
  if (isFalsyAttrValue(value)) {
    el.removeAttribute(key);
  } else {
    // #7138: IE10 & 11 fires input event when setting placeholder on
    // <textarea>... block the first input event and remove the blocker
    // immediately.
    /* istanbul ignore if */
    if (
      isIE && !isIE9 &&
      el.tagName === 'TEXTAREA' &&
      key === 'placeholder' && value !== '' && !el.__ieph
    ) {
      var blocker = function (e) {
        e.stopImmediatePropagation();
        el.removeEventListener('input', blocker);
      };
      el.addEventListener('input', blocker);
      // $flow-disable-line
      el.__ieph = true; /* IE placeholder patched */
    }
    el.setAttribute(key, value);
  }
}

var attrs = {
  create: updateAttrs,
  update: updateAttrs
};

/*  */

function updateClass (oldVnode, vnode) {
  var el = vnode.elm;
  var data = vnode.data;
  var oldData = oldVnode.data;
  if (
    isUndef(data.staticClass) &&
    isUndef(data.class) && (
      isUndef(oldData) || (
        isUndef(oldData.staticClass) &&
        isUndef(oldData.class)
      )
    )
  ) {
    return
  }

  var cls = genClassForVnode(vnode);

  // handle transition classes
  var transitionClass = el._transitionClasses;
  if (isDef(transitionClass)) {
    cls = concat(cls, stringifyClass(transitionClass));
  }

  // set the class
  if (cls !== el._prevClass) {
    el.setAttribute('class', cls);
    el._prevClass = cls;
  }
}

var klass = {
  create: updateClass,
  update: updateClass
};

/*  */

/*  */

/*  */

/*  */

// in some cases, the event used has to be determined at runtime
// so we used some reserved tokens during compile.
var RANGE_TOKEN = '__r';
var CHECKBOX_RADIO_TOKEN = '__c';

/*  */

// normalize v-model event tokens that can only be determined at runtime.
// it's important to place the event as the first in the array because
// the whole point is ensuring the v-model callback gets called before
// user-attached handlers.
function normalizeEvents (on) {
  /* istanbul ignore if */
  if (isDef(on[RANGE_TOKEN])) {
    // IE input[type=range] only supports `change` event
    var event = isIE ? 'change' : 'input';
    on[event] = [].concat(on[RANGE_TOKEN], on[event] || []);
    delete on[RANGE_TOKEN];
  }
  // This was originally intended to fix #4521 but no longer necessary
  // after 2.5. Keeping it for backwards compat with generated code from < 2.4
  /* istanbul ignore if */
  if (isDef(on[CHECKBOX_RADIO_TOKEN])) {
    on.change = [].concat(on[CHECKBOX_RADIO_TOKEN], on.change || []);
    delete on[CHECKBOX_RADIO_TOKEN];
  }
}

var target$1;

function createOnceHandler$1 (event, handler, capture) {
  var _target = target$1; // save current target element in closure
  return function onceHandler () {
    var res = handler.apply(null, arguments);
    if (res !== null) {
      remove$2(event, onceHandler, capture, _target);
    }
  }
}

// #9446: Firefox <= 53 (in particular, ESR 52) has incorrect Event.timeStamp
// implementation and does not fire microtasks in between event propagation, so
// safe to exclude.
var useMicrotaskFix = isUsingMicroTask && !(isFF && Number(isFF[1]) <= 53);

function add$1 (
  name,
  handler,
  capture,
  passive
) {
  // async edge case #6566: inner click event triggers patch, event handler
  // attached to outer element during patch, and triggered again. This
  // happens because browsers fire microtask ticks between event propagation.
  // the solution is simple: we save the timestamp when a handler is attached,
  // and the handler would only fire if the event passed to it was fired
  // AFTER it was attached.
  if (useMicrotaskFix) {
    var attachedTimestamp = currentFlushTimestamp;
    var original = handler;
    handler = original._wrapper = function (e) {
      if (
        // no bubbling, should always fire.
        // this is just a safety net in case event.timeStamp is unreliable in
        // certain weird environments...
        e.target === e.currentTarget ||
        // event is fired after handler attachment
        e.timeStamp >= attachedTimestamp ||
        // bail for environments that have buggy event.timeStamp implementations
        // #9462 iOS 9 bug: event.timeStamp is 0 after history.pushState
        // #9681 QtWebEngine event.timeStamp is negative value
        e.timeStamp <= 0 ||
        // #9448 bail if event is fired in another document in a multi-page
        // electron/nw.js app, since event.timeStamp will be using a different
        // starting reference
        e.target.ownerDocument !== document
      ) {
        return original.apply(this, arguments)
      }
    };
  }
  target$1.addEventListener(
    name,
    handler,
    supportsPassive
      ? { capture: capture, passive: passive }
      : capture
  );
}

function remove$2 (
  name,
  handler,
  capture,
  _target
) {
  (_target || target$1).removeEventListener(
    name,
    handler._wrapper || handler,
    capture
  );
}

function updateDOMListeners (oldVnode, vnode) {
  if (isUndef(oldVnode.data.on) && isUndef(vnode.data.on)) {
    return
  }
  var on = vnode.data.on || {};
  var oldOn = oldVnode.data.on || {};
  target$1 = vnode.elm;
  normalizeEvents(on);
  updateListeners(on, oldOn, add$1, remove$2, createOnceHandler$1, vnode.context);
  target$1 = undefined;
}

var events = {
  create: updateDOMListeners,
  update: updateDOMListeners
};

/*  */

var svgContainer;

function updateDOMProps (oldVnode, vnode) {
  if (isUndef(oldVnode.data.domProps) && isUndef(vnode.data.domProps)) {
    return
  }
  var key, cur;
  var elm = vnode.elm;
  var oldProps = oldVnode.data.domProps || {};
  var props = vnode.data.domProps || {};
  // clone observed objects, as the user probably wants to mutate it
  if (isDef(props.__ob__)) {
    props = vnode.data.domProps = extend({}, props);
  }

  for (key in oldProps) {
    if (!(key in props)) {
      elm[key] = '';
    }
  }

  for (key in props) {
    cur = props[key];
    // ignore children if the node has textContent or innerHTML,
    // as these will throw away existing DOM nodes and cause removal errors
    // on subsequent patches (#3360)
    if (key === 'textContent' || key === 'innerHTML') {
      if (vnode.children) { vnode.children.length = 0; }
      if (cur === oldProps[key]) { continue }
      // #6601 work around Chrome version <= 55 bug where single textNode
      // replaced by innerHTML/textContent retains its parentNode property
      if (elm.childNodes.length === 1) {
        elm.removeChild(elm.childNodes[0]);
      }
    }

    if (key === 'value' && elm.tagName !== 'PROGRESS') {
      // store value as _value as well since
      // non-string values will be stringified
      elm._value = cur;
      // avoid resetting cursor position when value is the same
      var strCur = isUndef(cur) ? '' : String(cur);
      if (shouldUpdateValue(elm, strCur)) {
        elm.value = strCur;
      }
    } else if (key === 'innerHTML' && isSVG(elm.tagName) && isUndef(elm.innerHTML)) {
      // IE doesn't support innerHTML for SVG elements
      svgContainer = svgContainer || document.createElement('div');
      svgContainer.innerHTML = "<svg>" + cur + "</svg>";
      var svg = svgContainer.firstChild;
      while (elm.firstChild) {
        elm.removeChild(elm.firstChild);
      }
      while (svg.firstChild) {
        elm.appendChild(svg.firstChild);
      }
    } else if (
      // skip the update if old and new VDOM state is the same.
      // `value` is handled separately because the DOM value may be temporarily
      // out of sync with VDOM state due to focus, composition and modifiers.
      // This  #4521 by skipping the unnecessary `checked` update.
      cur !== oldProps[key]
    ) {
      // some property updates can throw
      // e.g. `value` on <progress> w/ non-finite value
      try {
        elm[key] = cur;
      } catch (e) {}
    }
  }
}

// check platforms/web/util/attrs.js acceptValue


function shouldUpdateValue (elm, checkVal) {
  return (!elm.composing && (
    elm.tagName === 'OPTION' ||
    isNotInFocusAndDirty(elm, checkVal) ||
    isDirtyWithModifiers(elm, checkVal)
  ))
}

function isNotInFocusAndDirty (elm, checkVal) {
  // return true when textbox (.number and .trim) loses focus and its value is
  // not equal to the updated value
  var notInFocus = true;
  // #6157
  // work around IE bug when accessing document.activeElement in an iframe
  try { notInFocus = document.activeElement !== elm; } catch (e) {}
  return notInFocus && elm.value !== checkVal
}

function isDirtyWithModifiers (elm, newVal) {
  var value = elm.value;
  var modifiers = elm._vModifiers; // injected by v-model runtime
  if (isDef(modifiers)) {
    if (modifiers.number) {
      return toNumber(value) !== toNumber(newVal)
    }
    if (modifiers.trim) {
      return value.trim() !== newVal.trim()
    }
  }
  return value !== newVal
}

var domProps = {
  create: updateDOMProps,
  update: updateDOMProps
};

/*  */

var parseStyleText = cached(function (cssText) {
  var res = {};
  var listDelimiter = /;(?![^(]*\))/g;
  var propertyDelimiter = /:(.+)/;
  cssText.split(listDelimiter).forEach(function (item) {
    if (item) {
      var tmp = item.split(propertyDelimiter);
      tmp.length > 1 && (res[tmp[0].trim()] = tmp[1].trim());
    }
  });
  return res
});

// merge static and dynamic style data on the same vnode
function normalizeStyleData (data) {
  var style = normalizeStyleBinding(data.style);
  // static style is pre-processed into an object during compilation
  // and is always a fresh object, so it's safe to merge into it
  return data.staticStyle
    ? extend(data.staticStyle, style)
    : style
}

// normalize possible array / string values into Object
function normalizeStyleBinding (bindingStyle) {
  if (Array.isArray(bindingStyle)) {
    return toObject(bindingStyle)
  }
  if (typeof bindingStyle === 'string') {
    return parseStyleText(bindingStyle)
  }
  return bindingStyle
}

/**
 * parent component style should be after child's
 * so that parent component's style could override it
 */
function getStyle (vnode, checkChild) {
  var res = {};
  var styleData;

  if (checkChild) {
    var childNode = vnode;
    while (childNode.componentInstance) {
      childNode = childNode.componentInstance._vnode;
      if (
        childNode && childNode.data &&
        (styleData = normalizeStyleData(childNode.data))
      ) {
        extend(res, styleData);
      }
    }
  }

  if ((styleData = normalizeStyleData(vnode.data))) {
    extend(res, styleData);
  }

  var parentNode = vnode;
  while ((parentNode = parentNode.parent)) {
    if (parentNode.data && (styleData = normalizeStyleData(parentNode.data))) {
      extend(res, styleData);
    }
  }
  return res
}

/*  */

var cssVarRE = /^--/;
var importantRE = /\s*!important$/;
var setProp = function (el, name, val) {
  /* istanbul ignore if */
  if (cssVarRE.test(name)) {
    el.style.setProperty(name, val);
  } else if (importantRE.test(val)) {
    el.style.setProperty(hyphenate(name), val.replace(importantRE, ''), 'important');
  } else {
    var normalizedName = normalize(name);
    if (Array.isArray(val)) {
      // Support values array created by autoprefixer, e.g.
      // {display: ["-webkit-box", "-ms-flexbox", "flex"]}
      // Set them one by one, and the browser will only set those it can recognize
      for (var i = 0, len = val.length; i < len; i++) {
        el.style[normalizedName] = val[i];
      }
    } else {
      el.style[normalizedName] = val;
    }
  }
};

var vendorNames = ['Webkit', 'Moz', 'ms'];

var emptyStyle;
var normalize = cached(function (prop) {
  emptyStyle = emptyStyle || document.createElement('div').style;
  prop = camelize(prop);
  if (prop !== 'filter' && (prop in emptyStyle)) {
    return prop
  }
  var capName = prop.charAt(0).toUpperCase() + prop.slice(1);
  for (var i = 0; i < vendorNames.length; i++) {
    var name = vendorNames[i] + capName;
    if (name in emptyStyle) {
      return name
    }
  }
});

function updateStyle (oldVnode, vnode) {
  var data = vnode.data;
  var oldData = oldVnode.data;

  if (isUndef(data.staticStyle) && isUndef(data.style) &&
    isUndef(oldData.staticStyle) && isUndef(oldData.style)
  ) {
    return
  }

  var cur, name;
  var el = vnode.elm;
  var oldStaticStyle = oldData.staticStyle;
  var oldStyleBinding = oldData.normalizedStyle || oldData.style || {};

  // if static style exists, stylebinding already merged into it when doing normalizeStyleData
  var oldStyle = oldStaticStyle || oldStyleBinding;

  var style = normalizeStyleBinding(vnode.data.style) || {};

  // store normalized style under a different key for next diff
  // make sure to clone it if it's reactive, since the user likely wants
  // to mutate it.
  vnode.data.normalizedStyle = isDef(style.__ob__)
    ? extend({}, style)
    : style;

  var newStyle = getStyle(vnode, true);

  for (name in oldStyle) {
    if (isUndef(newStyle[name])) {
      setProp(el, name, '');
    }
  }
  for (name in newStyle) {
    cur = newStyle[name];
    if (cur !== oldStyle[name]) {
      // ie9 setting to null has no effect, must use empty string
      setProp(el, name, cur == null ? '' : cur);
    }
  }
}

var style = {
  create: updateStyle,
  update: updateStyle
};

/*  */

var whitespaceRE = /\s+/;

/**
 * Add class with compatibility for SVG since classList is not supported on
 * SVG elements in IE
 */
function addClass (el, cls) {
  /* istanbul ignore if */
  if (!cls || !(cls = cls.trim())) {
    return
  }

  /* istanbul ignore else */
  if (el.classList) {
    if (cls.indexOf(' ') > -1) {
      cls.split(whitespaceRE).forEach(function (c) { return el.classList.add(c); });
    } else {
      el.classList.add(cls);
    }
  } else {
    var cur = " " + (el.getAttribute('class') || '') + " ";
    if (cur.indexOf(' ' + cls + ' ') < 0) {
      el.setAttribute('class', (cur + cls).trim());
    }
  }
}

/**
 * Remove class with compatibility for SVG since classList is not supported on
 * SVG elements in IE
 */
function removeClass (el, cls) {
  /* istanbul ignore if */
  if (!cls || !(cls = cls.trim())) {
    return
  }

  /* istanbul ignore else */
  if (el.classList) {
    if (cls.indexOf(' ') > -1) {
      cls.split(whitespaceRE).forEach(function (c) { return el.classList.remove(c); });
    } else {
      el.classList.remove(cls);
    }
    if (!el.classList.length) {
      el.removeAttribute('class');
    }
  } else {
    var cur = " " + (el.getAttribute('class') || '') + " ";
    var tar = ' ' + cls + ' ';
    while (cur.indexOf(tar) >= 0) {
      cur = cur.replace(tar, ' ');
    }
    cur = cur.trim();
    if (cur) {
      el.setAttribute('class', cur);
    } else {
      el.removeAttribute('class');
    }
  }
}

/*  */

function resolveTransition (def$$1) {
  if (!def$$1) {
    return
  }
  /* istanbul ignore else */
  if (typeof def$$1 === 'object') {
    var res = {};
    if (def$$1.css !== false) {
      extend(res, autoCssTransition(def$$1.name || 'v'));
    }
    extend(res, def$$1);
    return res
  } else if (typeof def$$1 === 'string') {
    return autoCssTransition(def$$1)
  }
}

var autoCssTransition = cached(function (name) {
  return {
    enterClass: (name + "-enter"),
    enterToClass: (name + "-enter-to"),
    enterActiveClass: (name + "-enter-active"),
    leaveClass: (name + "-leave"),
    leaveToClass: (name + "-leave-to"),
    leaveActiveClass: (name + "-leave-active")
  }
});

var hasTransition = inBrowser && !isIE9;
var TRANSITION = 'transition';
var ANIMATION = 'animation';

// Transition property/event sniffing
var transitionProp = 'transition';
var transitionEndEvent = 'transitionend';
var animationProp = 'animation';
var animationEndEvent = 'animationend';
if (hasTransition) {
  /* istanbul ignore if */
  if (window.ontransitionend === undefined &&
    window.onwebkittransitionend !== undefined
  ) {
    transitionProp = 'WebkitTransition';
    transitionEndEvent = 'webkitTransitionEnd';
  }
  if (window.onanimationend === undefined &&
    window.onwebkitanimationend !== undefined
  ) {
    animationProp = 'WebkitAnimation';
    animationEndEvent = 'webkitAnimationEnd';
  }
}

// binding to window is necessary to make hot reload work in IE in strict mode
var raf = inBrowser
  ? window.requestAnimationFrame
    ? window.requestAnimationFrame.bind(window)
    : setTimeout
  : /* istanbul ignore next */ function (fn) { return fn(); };

function nextFrame (fn) {
  raf(function () {
    raf(fn);
  });
}

function addTransitionClass (el, cls) {
  var transitionClasses = el._transitionClasses || (el._transitionClasses = []);
  if (transitionClasses.indexOf(cls) < 0) {
    transitionClasses.push(cls);
    addClass(el, cls);
  }
}

function removeTransitionClass (el, cls) {
  if (el._transitionClasses) {
    remove(el._transitionClasses, cls);
  }
  removeClass(el, cls);
}

function whenTransitionEnds (
  el,
  expectedType,
  cb
) {
  var ref = getTransitionInfo(el, expectedType);
  var type = ref.type;
  var timeout = ref.timeout;
  var propCount = ref.propCount;
  if (!type) { return cb() }
  var event = type === TRANSITION ? transitionEndEvent : animationEndEvent;
  var ended = 0;
  var end = function () {
    el.removeEventListener(event, onEnd);
    cb();
  };
  var onEnd = function (e) {
    if (e.target === el) {
      if (++ended >= propCount) {
        end();
      }
    }
  };
  setTimeout(function () {
    if (ended < propCount) {
      end();
    }
  }, timeout + 1);
  el.addEventListener(event, onEnd);
}

var transformRE = /\b(transform|all)(,|$)/;

function getTransitionInfo (el, expectedType) {
  var styles = window.getComputedStyle(el);
  // JSDOM may return undefined for transition properties
  var transitionDelays = (styles[transitionProp + 'Delay'] || '').split(', ');
  var transitionDurations = (styles[transitionProp + 'Duration'] || '').split(', ');
  var transitionTimeout = getTimeout(transitionDelays, transitionDurations);
  var animationDelays = (styles[animationProp + 'Delay'] || '').split(', ');
  var animationDurations = (styles[animationProp + 'Duration'] || '').split(', ');
  var animationTimeout = getTimeout(animationDelays, animationDurations);

  var type;
  var timeout = 0;
  var propCount = 0;
  /* istanbul ignore if */
  if (expectedType === TRANSITION) {
    if (transitionTimeout > 0) {
      type = TRANSITION;
      timeout = transitionTimeout;
      propCount = transitionDurations.length;
    }
  } else if (expectedType === ANIMATION) {
    if (animationTimeout > 0) {
      type = ANIMATION;
      timeout = animationTimeout;
      propCount = animationDurations.length;
    }
  } else {
    timeout = Math.max(transitionTimeout, animationTimeout);
    type = timeout > 0
      ? transitionTimeout > animationTimeout
        ? TRANSITION
        : ANIMATION
      : null;
    propCount = type
      ? type === TRANSITION
        ? transitionDurations.length
        : animationDurations.length
      : 0;
  }
  var hasTransform =
    type === TRANSITION &&
    transformRE.test(styles[transitionProp + 'Property']);
  return {
    type: type,
    timeout: timeout,
    propCount: propCount,
    hasTransform: hasTransform
  }
}

function getTimeout (delays, durations) {
  /* istanbul ignore next */
  while (delays.length < durations.length) {
    delays = delays.concat(delays);
  }

  return Math.max.apply(null, durations.map(function (d, i) {
    return toMs(d) + toMs(delays[i])
  }))
}

// Old versions of Chromium (below 61.0.3163.100) formats floating pointer numbers
// in a locale-dependent way, using a comma instead of a dot.
// If comma is not replaced with a dot, the input will be rounded down (i.e. acting
// as a floor function) causing unexpected behaviors
function toMs (s) {
  return Number(s.slice(0, -1).replace(',', '.')) * 1000
}

/*  */

function enter (vnode, toggleDisplay) {
  var el = vnode.elm;

  // call leave callback now
  if (isDef(el._leaveCb)) {
    el._leaveCb.cancelled = true;
    el._leaveCb();
  }

  var data = resolveTransition(vnode.data.transition);
  if (isUndef(data)) {
    return
  }

  /* istanbul ignore if */
  if (isDef(el._enterCb) || el.nodeType !== 1) {
    return
  }

  var css = data.css;
  var type = data.type;
  var enterClass = data.enterClass;
  var enterToClass = data.enterToClass;
  var enterActiveClass = data.enterActiveClass;
  var appearClass = data.appearClass;
  var appearToClass = data.appearToClass;
  var appearActiveClass = data.appearActiveClass;
  var beforeEnter = data.beforeEnter;
  var enter = data.enter;
  var afterEnter = data.afterEnter;
  var enterCancelled = data.enterCancelled;
  var beforeAppear = data.beforeAppear;
  var appear = data.appear;
  var afterAppear = data.afterAppear;
  var appearCancelled = data.appearCancelled;
  var duration = data.duration;

  // activeInstance will always be the <transition> component managing this
  // transition. One edge case to check is when the <transition> is placed
  // as the root node of a child component. In that case we need to check
  // <transition>'s parent for appear check.
  var context = activeInstance;
  var transitionNode = activeInstance.$vnode;
  while (transitionNode && transitionNode.parent) {
    context = transitionNode.context;
    transitionNode = transitionNode.parent;
  }

  var isAppear = !context._isMounted || !vnode.isRootInsert;

  if (isAppear && !appear && appear !== '') {
    return
  }

  var startClass = isAppear && appearClass
    ? appearClass
    : enterClass;
  var activeClass = isAppear && appearActiveClass
    ? appearActiveClass
    : enterActiveClass;
  var toClass = isAppear && appearToClass
    ? appearToClass
    : enterToClass;

  var beforeEnterHook = isAppear
    ? (beforeAppear || beforeEnter)
    : beforeEnter;
  var enterHook = isAppear
    ? (typeof appear === 'function' ? appear : enter)
    : enter;
  var afterEnterHook = isAppear
    ? (afterAppear || afterEnter)
    : afterEnter;
  var enterCancelledHook = isAppear
    ? (appearCancelled || enterCancelled)
    : enterCancelled;

  var explicitEnterDuration = toNumber(
    isObject(duration)
      ? duration.enter
      : duration
  );

  if (false) {}

  var expectsCSS = css !== false && !isIE9;
  var userWantsControl = getHookArgumentsLength(enterHook);

  var cb = el._enterCb = once(function () {
    if (expectsCSS) {
      removeTransitionClass(el, toClass);
      removeTransitionClass(el, activeClass);
    }
    if (cb.cancelled) {
      if (expectsCSS) {
        removeTransitionClass(el, startClass);
      }
      enterCancelledHook && enterCancelledHook(el);
    } else {
      afterEnterHook && afterEnterHook(el);
    }
    el._enterCb = null;
  });

  if (!vnode.data.show) {
    // remove pending leave element on enter by injecting an insert hook
    mergeVNodeHook(vnode, 'insert', function () {
      var parent = el.parentNode;
      var pendingNode = parent && parent._pending && parent._pending[vnode.key];
      if (pendingNode &&
        pendingNode.tag === vnode.tag &&
        pendingNode.elm._leaveCb
      ) {
        pendingNode.elm._leaveCb();
      }
      enterHook && enterHook(el, cb);
    });
  }

  // start enter transition
  beforeEnterHook && beforeEnterHook(el);
  if (expectsCSS) {
    addTransitionClass(el, startClass);
    addTransitionClass(el, activeClass);
    nextFrame(function () {
      removeTransitionClass(el, startClass);
      if (!cb.cancelled) {
        addTransitionClass(el, toClass);
        if (!userWantsControl) {
          if (isValidDuration(explicitEnterDuration)) {
            setTimeout(cb, explicitEnterDuration);
          } else {
            whenTransitionEnds(el, type, cb);
          }
        }
      }
    });
  }

  if (vnode.data.show) {
    toggleDisplay && toggleDisplay();
    enterHook && enterHook(el, cb);
  }

  if (!expectsCSS && !userWantsControl) {
    cb();
  }
}

function leave (vnode, rm) {
  var el = vnode.elm;

  // call enter callback now
  if (isDef(el._enterCb)) {
    el._enterCb.cancelled = true;
    el._enterCb();
  }

  var data = resolveTransition(vnode.data.transition);
  if (isUndef(data) || el.nodeType !== 1) {
    return rm()
  }

  /* istanbul ignore if */
  if (isDef(el._leaveCb)) {
    return
  }

  var css = data.css;
  var type = data.type;
  var leaveClass = data.leaveClass;
  var leaveToClass = data.leaveToClass;
  var leaveActiveClass = data.leaveActiveClass;
  var beforeLeave = data.beforeLeave;
  var leave = data.leave;
  var afterLeave = data.afterLeave;
  var leaveCancelled = data.leaveCancelled;
  var delayLeave = data.delayLeave;
  var duration = data.duration;

  var expectsCSS = css !== false && !isIE9;
  var userWantsControl = getHookArgumentsLength(leave);

  var explicitLeaveDuration = toNumber(
    isObject(duration)
      ? duration.leave
      : duration
  );

  if (false) {}

  var cb = el._leaveCb = once(function () {
    if (el.parentNode && el.parentNode._pending) {
      el.parentNode._pending[vnode.key] = null;
    }
    if (expectsCSS) {
      removeTransitionClass(el, leaveToClass);
      removeTransitionClass(el, leaveActiveClass);
    }
    if (cb.cancelled) {
      if (expectsCSS) {
        removeTransitionClass(el, leaveClass);
      }
      leaveCancelled && leaveCancelled(el);
    } else {
      rm();
      afterLeave && afterLeave(el);
    }
    el._leaveCb = null;
  });

  if (delayLeave) {
    delayLeave(performLeave);
  } else {
    performLeave();
  }

  function performLeave () {
    // the delayed leave may have already been cancelled
    if (cb.cancelled) {
      return
    }
    // record leaving element
    if (!vnode.data.show && el.parentNode) {
      (el.parentNode._pending || (el.parentNode._pending = {}))[(vnode.key)] = vnode;
    }
    beforeLeave && beforeLeave(el);
    if (expectsCSS) {
      addTransitionClass(el, leaveClass);
      addTransitionClass(el, leaveActiveClass);
      nextFrame(function () {
        removeTransitionClass(el, leaveClass);
        if (!cb.cancelled) {
          addTransitionClass(el, leaveToClass);
          if (!userWantsControl) {
            if (isValidDuration(explicitLeaveDuration)) {
              setTimeout(cb, explicitLeaveDuration);
            } else {
              whenTransitionEnds(el, type, cb);
            }
          }
        }
      });
    }
    leave && leave(el, cb);
    if (!expectsCSS && !userWantsControl) {
      cb();
    }
  }
}

// only used in dev mode
function checkDuration (val, name, vnode) {
  if (typeof val !== 'number') {
    warn(
      "<transition> explicit " + name + " duration is not a valid number - " +
      "got " + (JSON.stringify(val)) + ".",
      vnode.context
    );
  } else if (isNaN(val)) {
    warn(
      "<transition> explicit " + name + " duration is NaN - " +
      'the duration expression might be incorrect.',
      vnode.context
    );
  }
}

function isValidDuration (val) {
  return typeof val === 'number' && !isNaN(val)
}

/**
 * Normalize a transition hook's argument length. The hook may be:
 * - a merged hook (invoker) with the original in .fns
 * - a wrapped component method (check ._length)
 * - a plain function (.length)
 */
function getHookArgumentsLength (fn) {
  if (isUndef(fn)) {
    return false
  }
  var invokerFns = fn.fns;
  if (isDef(invokerFns)) {
    // invoker
    return getHookArgumentsLength(
      Array.isArray(invokerFns)
        ? invokerFns[0]
        : invokerFns
    )
  } else {
    return (fn._length || fn.length) > 1
  }
}

function _enter (_, vnode) {
  if (vnode.data.show !== true) {
    enter(vnode);
  }
}

var transition = inBrowser ? {
  create: _enter,
  activate: _enter,
  remove: function remove$$1 (vnode, rm) {
    /* istanbul ignore else */
    if (vnode.data.show !== true) {
      leave(vnode, rm);
    } else {
      rm();
    }
  }
} : {};

var platformModules = [
  attrs,
  klass,
  events,
  domProps,
  style,
  transition
];

/*  */

// the directive module should be applied last, after all
// built-in modules have been applied.
var modules = platformModules.concat(baseModules);

var patch = createPatchFunction({ nodeOps: nodeOps, modules: modules });

/**
 * Not type checking this file because flow doesn't like attaching
 * properties to Elements.
 */

/* istanbul ignore if */
if (isIE9) {
  // http://www.matts411.com/post/internet-explorer-9-oninput/
  document.addEventListener('selectionchange', function () {
    var el = document.activeElement;
    if (el && el.vmodel) {
      trigger(el, 'input');
    }
  });
}

var directive = {
  inserted: function inserted (el, binding, vnode, oldVnode) {
    if (vnode.tag === 'select') {
      // #6903
      if (oldVnode.elm && !oldVnode.elm._vOptions) {
        mergeVNodeHook(vnode, 'postpatch', function () {
          directive.componentUpdated(el, binding, vnode);
        });
      } else {
        setSelected(el, binding, vnode.context);
      }
      el._vOptions = [].map.call(el.options, getValue);
    } else if (vnode.tag === 'textarea' || isTextInputType(el.type)) {
      el._vModifiers = binding.modifiers;
      if (!binding.modifiers.lazy) {
        el.addEventListener('compositionstart', onCompositionStart);
        el.addEventListener('compositionend', onCompositionEnd);
        // Safari < 10.2 & UIWebView doesn't fire compositionend when
        // switching focus before confirming composition choice
        // this also fixes the issue where some browsers e.g. iOS Chrome
        // fires "change" instead of "input" on autocomplete.
        el.addEventListener('change', onCompositionEnd);
        /* istanbul ignore if */
        if (isIE9) {
          el.vmodel = true;
        }
      }
    }
  },

  componentUpdated: function componentUpdated (el, binding, vnode) {
    if (vnode.tag === 'select') {
      setSelected(el, binding, vnode.context);
      // in case the options rendered by v-for have changed,
      // it's possible that the value is out-of-sync with the rendered options.
      // detect such cases and filter out values that no longer has a matching
      // option in the DOM.
      var prevOptions = el._vOptions;
      var curOptions = el._vOptions = [].map.call(el.options, getValue);
      if (curOptions.some(function (o, i) { return !looseEqual(o, prevOptions[i]); })) {
        // trigger change event if
        // no matching option found for at least one value
        var needReset = el.multiple
          ? binding.value.some(function (v) { return hasNoMatchingOption(v, curOptions); })
          : binding.value !== binding.oldValue && hasNoMatchingOption(binding.value, curOptions);
        if (needReset) {
          trigger(el, 'change');
        }
      }
    }
  }
};

function setSelected (el, binding, vm) {
  actuallySetSelected(el, binding, vm);
  /* istanbul ignore if */
  if (isIE || isEdge) {
    setTimeout(function () {
      actuallySetSelected(el, binding, vm);
    }, 0);
  }
}

function actuallySetSelected (el, binding, vm) {
  var value = binding.value;
  var isMultiple = el.multiple;
  if (isMultiple && !Array.isArray(value)) {
     false && false;
    return
  }
  var selected, option;
  for (var i = 0, l = el.options.length; i < l; i++) {
    option = el.options[i];
    if (isMultiple) {
      selected = looseIndexOf(value, getValue(option)) > -1;
      if (option.selected !== selected) {
        option.selected = selected;
      }
    } else {
      if (looseEqual(getValue(option), value)) {
        if (el.selectedIndex !== i) {
          el.selectedIndex = i;
        }
        return
      }
    }
  }
  if (!isMultiple) {
    el.selectedIndex = -1;
  }
}

function hasNoMatchingOption (value, options) {
  return options.every(function (o) { return !looseEqual(o, value); })
}

function getValue (option) {
  return '_value' in option
    ? option._value
    : option.value
}

function onCompositionStart (e) {
  e.target.composing = true;
}

function onCompositionEnd (e) {
  // prevent triggering an input event for no reason
  if (!e.target.composing) { return }
  e.target.composing = false;
  trigger(e.target, 'input');
}

function trigger (el, type) {
  var e = document.createEvent('HTMLEvents');
  e.initEvent(type, true, true);
  el.dispatchEvent(e);
}

/*  */

// recursively search for possible transition defined inside the component root
function locateNode (vnode) {
  return vnode.componentInstance && (!vnode.data || !vnode.data.transition)
    ? locateNode(vnode.componentInstance._vnode)
    : vnode
}

var show = {
  bind: function bind (el, ref, vnode) {
    var value = ref.value;

    vnode = locateNode(vnode);
    var transition$$1 = vnode.data && vnode.data.transition;
    var originalDisplay = el.__vOriginalDisplay =
      el.style.display === 'none' ? '' : el.style.display;
    if (value && transition$$1) {
      vnode.data.show = true;
      enter(vnode, function () {
        el.style.display = originalDisplay;
      });
    } else {
      el.style.display = value ? originalDisplay : 'none';
    }
  },

  update: function update (el, ref, vnode) {
    var value = ref.value;
    var oldValue = ref.oldValue;

    /* istanbul ignore if */
    if (!value === !oldValue) { return }
    vnode = locateNode(vnode);
    var transition$$1 = vnode.data && vnode.data.transition;
    if (transition$$1) {
      vnode.data.show = true;
      if (value) {
        enter(vnode, function () {
          el.style.display = el.__vOriginalDisplay;
        });
      } else {
        leave(vnode, function () {
          el.style.display = 'none';
        });
      }
    } else {
      el.style.display = value ? el.__vOriginalDisplay : 'none';
    }
  },

  unbind: function unbind (
    el,
    binding,
    vnode,
    oldVnode,
    isDestroy
  ) {
    if (!isDestroy) {
      el.style.display = el.__vOriginalDisplay;
    }
  }
};

var platformDirectives = {
  model: directive,
  show: show
};

/*  */

var transitionProps = {
  name: String,
  appear: Boolean,
  css: Boolean,
  mode: String,
  type: String,
  enterClass: String,
  leaveClass: String,
  enterToClass: String,
  leaveToClass: String,
  enterActiveClass: String,
  leaveActiveClass: String,
  appearClass: String,
  appearActiveClass: String,
  appearToClass: String,
  duration: [Number, String, Object]
};

// in case the child is also an abstract component, e.g. <keep-alive>
// we want to recursively retrieve the real component to be rendered
function getRealChild (vnode) {
  var compOptions = vnode && vnode.componentOptions;
  if (compOptions && compOptions.Ctor.options.abstract) {
    return getRealChild(getFirstComponentChild(compOptions.children))
  } else {
    return vnode
  }
}

function extractTransitionData (comp) {
  var data = {};
  var options = comp.$options;
  // props
  for (var key in options.propsData) {
    data[key] = comp[key];
  }
  // events.
  // extract listeners and pass them directly to the transition methods
  var listeners = options._parentListeners;
  for (var key$1 in listeners) {
    data[camelize(key$1)] = listeners[key$1];
  }
  return data
}

function placeholder (h, rawChild) {
  if (/\d-keep-alive$/.test(rawChild.tag)) {
    return h('keep-alive', {
      props: rawChild.componentOptions.propsData
    })
  }
}

function hasParentTransition (vnode) {
  while ((vnode = vnode.parent)) {
    if (vnode.data.transition) {
      return true
    }
  }
}

function isSameChild (child, oldChild) {
  return oldChild.key === child.key && oldChild.tag === child.tag
}

var isNotTextNode = function (c) { return c.tag || isAsyncPlaceholder(c); };

var isVShowDirective = function (d) { return d.name === 'show'; };

var Transition = {
  name: 'transition',
  props: transitionProps,
  abstract: true,

  render: function render (h) {
    var this$1 = this;

    var children = this.$slots.default;
    if (!children) {
      return
    }

    // filter out text nodes (possible whitespaces)
    children = children.filter(isNotTextNode);
    /* istanbul ignore if */
    if (!children.length) {
      return
    }

    // warn multiple elements
    if (false) {}

    var mode = this.mode;

    // warn invalid mode
    if (false
    ) {}

    var rawChild = children[0];

    // if this is a component root node and the component's
    // parent container node also has transition, skip.
    if (hasParentTransition(this.$vnode)) {
      return rawChild
    }

    // apply transition data to child
    // use getRealChild() to ignore abstract components e.g. keep-alive
    var child = getRealChild(rawChild);
    /* istanbul ignore if */
    if (!child) {
      return rawChild
    }

    if (this._leaving) {
      return placeholder(h, rawChild)
    }

    // ensure a key that is unique to the vnode type and to this transition
    // component instance. This key will be used to remove pending leaving nodes
    // during entering.
    var id = "__transition-" + (this._uid) + "-";
    child.key = child.key == null
      ? child.isComment
        ? id + 'comment'
        : id + child.tag
      : isPrimitive(child.key)
        ? (String(child.key).indexOf(id) === 0 ? child.key : id + child.key)
        : child.key;

    var data = (child.data || (child.data = {})).transition = extractTransitionData(this);
    var oldRawChild = this._vnode;
    var oldChild = getRealChild(oldRawChild);

    // mark v-show
    // so that the transition module can hand over the control to the directive
    if (child.data.directives && child.data.directives.some(isVShowDirective)) {
      child.data.show = true;
    }

    if (
      oldChild &&
      oldChild.data &&
      !isSameChild(child, oldChild) &&
      !isAsyncPlaceholder(oldChild) &&
      // #6687 component root is a comment node
      !(oldChild.componentInstance && oldChild.componentInstance._vnode.isComment)
    ) {
      // replace old child transition data with fresh one
      // important for dynamic transitions!
      var oldData = oldChild.data.transition = extend({}, data);
      // handle transition mode
      if (mode === 'out-in') {
        // return placeholder node and queue update when leave finishes
        this._leaving = true;
        mergeVNodeHook(oldData, 'afterLeave', function () {
          this$1._leaving = false;
          this$1.$forceUpdate();
        });
        return placeholder(h, rawChild)
      } else if (mode === 'in-out') {
        if (isAsyncPlaceholder(child)) {
          return oldRawChild
        }
        var delayedLeave;
        var performLeave = function () { delayedLeave(); };
        mergeVNodeHook(data, 'afterEnter', performLeave);
        mergeVNodeHook(data, 'enterCancelled', performLeave);
        mergeVNodeHook(oldData, 'delayLeave', function (leave) { delayedLeave = leave; });
      }
    }

    return rawChild
  }
};

/*  */

var props = extend({
  tag: String,
  moveClass: String
}, transitionProps);

delete props.mode;

var TransitionGroup = {
  props: props,

  beforeMount: function beforeMount () {
    var this$1 = this;

    var update = this._update;
    this._update = function (vnode, hydrating) {
      var restoreActiveInstance = setActiveInstance(this$1);
      // force removing pass
      this$1.__patch__(
        this$1._vnode,
        this$1.kept,
        false, // hydrating
        true // removeOnly (!important, avoids unnecessary moves)
      );
      this$1._vnode = this$1.kept;
      restoreActiveInstance();
      update.call(this$1, vnode, hydrating);
    };
  },

  render: function render (h) {
    var tag = this.tag || this.$vnode.data.tag || 'span';
    var map = Object.create(null);
    var prevChildren = this.prevChildren = this.children;
    var rawChildren = this.$slots.default || [];
    var children = this.children = [];
    var transitionData = extractTransitionData(this);

    for (var i = 0; i < rawChildren.length; i++) {
      var c = rawChildren[i];
      if (c.tag) {
        if (c.key != null && String(c.key).indexOf('__vlist') !== 0) {
          children.push(c);
          map[c.key] = c
          ;(c.data || (c.data = {})).transition = transitionData;
        } else if (false) { var name, opts; }
      }
    }

    if (prevChildren) {
      var kept = [];
      var removed = [];
      for (var i$1 = 0; i$1 < prevChildren.length; i$1++) {
        var c$1 = prevChildren[i$1];
        c$1.data.transition = transitionData;
        c$1.data.pos = c$1.elm.getBoundingClientRect();
        if (map[c$1.key]) {
          kept.push(c$1);
        } else {
          removed.push(c$1);
        }
      }
      this.kept = h(tag, null, kept);
      this.removed = removed;
    }

    return h(tag, null, children)
  },

  updated: function updated () {
    var children = this.prevChildren;
    var moveClass = this.moveClass || ((this.name || 'v') + '-move');
    if (!children.length || !this.hasMove(children[0].elm, moveClass)) {
      return
    }

    // we divide the work into three loops to avoid mixing DOM reads and writes
    // in each iteration - which helps prevent layout thrashing.
    children.forEach(callPendingCbs);
    children.forEach(recordPosition);
    children.forEach(applyTranslation);

    // force reflow to put everything in position
    // assign to this to avoid being removed in tree-shaking
    // $flow-disable-line
    this._reflow = document.body.offsetHeight;

    children.forEach(function (c) {
      if (c.data.moved) {
        var el = c.elm;
        var s = el.style;
        addTransitionClass(el, moveClass);
        s.transform = s.WebkitTransform = s.transitionDuration = '';
        el.addEventListener(transitionEndEvent, el._moveCb = function cb (e) {
          if (e && e.target !== el) {
            return
          }
          if (!e || /transform$/.test(e.propertyName)) {
            el.removeEventListener(transitionEndEvent, cb);
            el._moveCb = null;
            removeTransitionClass(el, moveClass);
          }
        });
      }
    });
  },

  methods: {
    hasMove: function hasMove (el, moveClass) {
      /* istanbul ignore if */
      if (!hasTransition) {
        return false
      }
      /* istanbul ignore if */
      if (this._hasMove) {
        return this._hasMove
      }
      // Detect whether an element with the move class applied has
      // CSS transitions. Since the element may be inside an entering
      // transition at this very moment, we make a clone of it and remove
      // all other transition classes applied to ensure only the move class
      // is applied.
      var clone = el.cloneNode();
      if (el._transitionClasses) {
        el._transitionClasses.forEach(function (cls) { removeClass(clone, cls); });
      }
      addClass(clone, moveClass);
      clone.style.display = 'none';
      this.$el.appendChild(clone);
      var info = getTransitionInfo(clone);
      this.$el.removeChild(clone);
      return (this._hasMove = info.hasTransform)
    }
  }
};

function callPendingCbs (c) {
  /* istanbul ignore if */
  if (c.elm._moveCb) {
    c.elm._moveCb();
  }
  /* istanbul ignore if */
  if (c.elm._enterCb) {
    c.elm._enterCb();
  }
}

function recordPosition (c) {
  c.data.newPos = c.elm.getBoundingClientRect();
}

function applyTranslation (c) {
  var oldPos = c.data.pos;
  var newPos = c.data.newPos;
  var dx = oldPos.left - newPos.left;
  var dy = oldPos.top - newPos.top;
  if (dx || dy) {
    c.data.moved = true;
    var s = c.elm.style;
    s.transform = s.WebkitTransform = "translate(" + dx + "px," + dy + "px)";
    s.transitionDuration = '0s';
  }
}

var platformComponents = {
  Transition: Transition,
  TransitionGroup: TransitionGroup
};

/*  */

// install platform specific utils
Vue.config.mustUseProp = mustUseProp;
Vue.config.isReservedTag = isReservedTag;
Vue.config.isReservedAttr = isReservedAttr;
Vue.config.getTagNamespace = getTagNamespace;
Vue.config.isUnknownElement = isUnknownElement;

// install platform runtime directives & components
extend(Vue.options.directives, platformDirectives);
extend(Vue.options.components, platformComponents);

// install platform patch function
Vue.prototype.__patch__ = inBrowser ? patch : noop;

// public mount method
Vue.prototype.$mount = function (
  el,
  hydrating
) {
  el = el && inBrowser ? query(el) : undefined;
  return mountComponent(this, el, hydrating)
};

// devtools global hook
/* istanbul ignore next */
if (inBrowser) {
  setTimeout(function () {
    if (config.devtools) {
      if (devtools) {
        devtools.emit('init', Vue);
      } else if (
        false
      ) {}
    }
    if (false
    ) {}
  }, 0);
}

/*  */

/* harmony default export */ __webpack_exports__["a"] = (Vue);

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__("c8ba")))

/***/ }),

/***/ "2b3d":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// TODO: in core-js@4, move /modules/ dependencies to public entries for better optimization by tools like `preset-env`
__webpack_require__("3ca3");
var $ = __webpack_require__("23e7");
var DESCRIPTORS = __webpack_require__("83ab");
var USE_NATIVE_URL = __webpack_require__("0d3b");
var global = __webpack_require__("da84");
var defineProperties = __webpack_require__("37e8");
var redefine = __webpack_require__("6eeb");
var anInstance = __webpack_require__("19aa");
var has = __webpack_require__("5135");
var assign = __webpack_require__("60da");
var arrayFrom = __webpack_require__("4df4");
var codeAt = __webpack_require__("6547").codeAt;
var toASCII = __webpack_require__("5fb2");
var setToStringTag = __webpack_require__("d44e");
var URLSearchParamsModule = __webpack_require__("9861");
var InternalStateModule = __webpack_require__("69f3");

var NativeURL = global.URL;
var URLSearchParams = URLSearchParamsModule.URLSearchParams;
var getInternalSearchParamsState = URLSearchParamsModule.getState;
var setInternalState = InternalStateModule.set;
var getInternalURLState = InternalStateModule.getterFor('URL');
var floor = Math.floor;
var pow = Math.pow;

var INVALID_AUTHORITY = 'Invalid authority';
var INVALID_SCHEME = 'Invalid scheme';
var INVALID_HOST = 'Invalid host';
var INVALID_PORT = 'Invalid port';

var ALPHA = /[A-Za-z]/;
var ALPHANUMERIC = /[\d+-.A-Za-z]/;
var DIGIT = /\d/;
var HEX_START = /^(0x|0X)/;
var OCT = /^[0-7]+$/;
var DEC = /^\d+$/;
var HEX = /^[\dA-Fa-f]+$/;
// eslint-disable-next-line no-control-regex
var FORBIDDEN_HOST_CODE_POINT = /[\u0000\u0009\u000A\u000D #%/:?@[\\]]/;
// eslint-disable-next-line no-control-regex
var FORBIDDEN_HOST_CODE_POINT_EXCLUDING_PERCENT = /[\u0000\u0009\u000A\u000D #/:?@[\\]]/;
// eslint-disable-next-line no-control-regex
var LEADING_AND_TRAILING_C0_CONTROL_OR_SPACE = /^[\u0000-\u001F ]+|[\u0000-\u001F ]+$/g;
// eslint-disable-next-line no-control-regex
var TAB_AND_NEW_LINE = /[\u0009\u000A\u000D]/g;
var EOF;

var parseHost = function (url, input) {
  var result, codePoints, index;
  if (input.charAt(0) == '[') {
    if (input.charAt(input.length - 1) != ']') return INVALID_HOST;
    result = parseIPv6(input.slice(1, -1));
    if (!result) return INVALID_HOST;
    url.host = result;
  // opaque host
  } else if (!isSpecial(url)) {
    if (FORBIDDEN_HOST_CODE_POINT_EXCLUDING_PERCENT.test(input)) return INVALID_HOST;
    result = '';
    codePoints = arrayFrom(input);
    for (index = 0; index < codePoints.length; index++) {
      result += percentEncode(codePoints[index], C0ControlPercentEncodeSet);
    }
    url.host = result;
  } else {
    input = toASCII(input);
    if (FORBIDDEN_HOST_CODE_POINT.test(input)) return INVALID_HOST;
    result = parseIPv4(input);
    if (result === null) return INVALID_HOST;
    url.host = result;
  }
};

var parseIPv4 = function (input) {
  var parts = input.split('.');
  var partsLength, numbers, index, part, radix, number, ipv4;
  if (parts.length && parts[parts.length - 1] == '') {
    parts.pop();
  }
  partsLength = parts.length;
  if (partsLength > 4) return input;
  numbers = [];
  for (index = 0; index < partsLength; index++) {
    part = parts[index];
    if (part == '') return input;
    radix = 10;
    if (part.length > 1 && part.charAt(0) == '0') {
      radix = HEX_START.test(part) ? 16 : 8;
      part = part.slice(radix == 8 ? 1 : 2);
    }
    if (part === '') {
      number = 0;
    } else {
      if (!(radix == 10 ? DEC : radix == 8 ? OCT : HEX).test(part)) return input;
      number = parseInt(part, radix);
    }
    numbers.push(number);
  }
  for (index = 0; index < partsLength; index++) {
    number = numbers[index];
    if (index == partsLength - 1) {
      if (number >= pow(256, 5 - partsLength)) return null;
    } else if (number > 255) return null;
  }
  ipv4 = numbers.pop();
  for (index = 0; index < numbers.length; index++) {
    ipv4 += numbers[index] * pow(256, 3 - index);
  }
  return ipv4;
};

// eslint-disable-next-line max-statements
var parseIPv6 = function (input) {
  var address = [0, 0, 0, 0, 0, 0, 0, 0];
  var pieceIndex = 0;
  var compress = null;
  var pointer = 0;
  var value, length, numbersSeen, ipv4Piece, number, swaps, swap;

  var char = function () {
    return input.charAt(pointer);
  };

  if (char() == ':') {
    if (input.charAt(1) != ':') return;
    pointer += 2;
    pieceIndex++;
    compress = pieceIndex;
  }
  while (char()) {
    if (pieceIndex == 8) return;
    if (char() == ':') {
      if (compress !== null) return;
      pointer++;
      pieceIndex++;
      compress = pieceIndex;
      continue;
    }
    value = length = 0;
    while (length < 4 && HEX.test(char())) {
      value = value * 16 + parseInt(char(), 16);
      pointer++;
      length++;
    }
    if (char() == '.') {
      if (length == 0) return;
      pointer -= length;
      if (pieceIndex > 6) return;
      numbersSeen = 0;
      while (char()) {
        ipv4Piece = null;
        if (numbersSeen > 0) {
          if (char() == '.' && numbersSeen < 4) pointer++;
          else return;
        }
        if (!DIGIT.test(char())) return;
        while (DIGIT.test(char())) {
          number = parseInt(char(), 10);
          if (ipv4Piece === null) ipv4Piece = number;
          else if (ipv4Piece == 0) return;
          else ipv4Piece = ipv4Piece * 10 + number;
          if (ipv4Piece > 255) return;
          pointer++;
        }
        address[pieceIndex] = address[pieceIndex] * 256 + ipv4Piece;
        numbersSeen++;
        if (numbersSeen == 2 || numbersSeen == 4) pieceIndex++;
      }
      if (numbersSeen != 4) return;
      break;
    } else if (char() == ':') {
      pointer++;
      if (!char()) return;
    } else if (char()) return;
    address[pieceIndex++] = value;
  }
  if (compress !== null) {
    swaps = pieceIndex - compress;
    pieceIndex = 7;
    while (pieceIndex != 0 && swaps > 0) {
      swap = address[pieceIndex];
      address[pieceIndex--] = address[compress + swaps - 1];
      address[compress + --swaps] = swap;
    }
  } else if (pieceIndex != 8) return;
  return address;
};

var findLongestZeroSequence = function (ipv6) {
  var maxIndex = null;
  var maxLength = 1;
  var currStart = null;
  var currLength = 0;
  var index = 0;
  for (; index < 8; index++) {
    if (ipv6[index] !== 0) {
      if (currLength > maxLength) {
        maxIndex = currStart;
        maxLength = currLength;
      }
      currStart = null;
      currLength = 0;
    } else {
      if (currStart === null) currStart = index;
      ++currLength;
    }
  }
  if (currLength > maxLength) {
    maxIndex = currStart;
    maxLength = currLength;
  }
  return maxIndex;
};

var serializeHost = function (host) {
  var result, index, compress, ignore0;
  // ipv4
  if (typeof host == 'number') {
    result = [];
    for (index = 0; index < 4; index++) {
      result.unshift(host % 256);
      host = floor(host / 256);
    } return result.join('.');
  // ipv6
  } else if (typeof host == 'object') {
    result = '';
    compress = findLongestZeroSequence(host);
    for (index = 0; index < 8; index++) {
      if (ignore0 && host[index] === 0) continue;
      if (ignore0) ignore0 = false;
      if (compress === index) {
        result += index ? ':' : '::';
        ignore0 = true;
      } else {
        result += host[index].toString(16);
        if (index < 7) result += ':';
      }
    }
    return '[' + result + ']';
  } return host;
};

var C0ControlPercentEncodeSet = {};
var fragmentPercentEncodeSet = assign({}, C0ControlPercentEncodeSet, {
  ' ': 1, '"': 1, '<': 1, '>': 1, '`': 1
});
var pathPercentEncodeSet = assign({}, fragmentPercentEncodeSet, {
  '#': 1, '?': 1, '{': 1, '}': 1
});
var userinfoPercentEncodeSet = assign({}, pathPercentEncodeSet, {
  '/': 1, ':': 1, ';': 1, '=': 1, '@': 1, '[': 1, '\\': 1, ']': 1, '^': 1, '|': 1
});

var percentEncode = function (char, set) {
  var code = codeAt(char, 0);
  return code > 0x20 && code < 0x7F && !has(set, char) ? char : encodeURIComponent(char);
};

var specialSchemes = {
  ftp: 21,
  file: null,
  http: 80,
  https: 443,
  ws: 80,
  wss: 443
};

var isSpecial = function (url) {
  return has(specialSchemes, url.scheme);
};

var includesCredentials = function (url) {
  return url.username != '' || url.password != '';
};

var cannotHaveUsernamePasswordPort = function (url) {
  return !url.host || url.cannotBeABaseURL || url.scheme == 'file';
};

var isWindowsDriveLetter = function (string, normalized) {
  var second;
  return string.length == 2 && ALPHA.test(string.charAt(0))
    && ((second = string.charAt(1)) == ':' || (!normalized && second == '|'));
};

var startsWithWindowsDriveLetter = function (string) {
  var third;
  return string.length > 1 && isWindowsDriveLetter(string.slice(0, 2)) && (
    string.length == 2 ||
    ((third = string.charAt(2)) === '/' || third === '\\' || third === '?' || third === '#')
  );
};

var shortenURLsPath = function (url) {
  var path = url.path;
  var pathSize = path.length;
  if (pathSize && (url.scheme != 'file' || pathSize != 1 || !isWindowsDriveLetter(path[0], true))) {
    path.pop();
  }
};

var isSingleDot = function (segment) {
  return segment === '.' || segment.toLowerCase() === '%2e';
};

var isDoubleDot = function (segment) {
  segment = segment.toLowerCase();
  return segment === '..' || segment === '%2e.' || segment === '.%2e' || segment === '%2e%2e';
};

// States:
var SCHEME_START = {};
var SCHEME = {};
var NO_SCHEME = {};
var SPECIAL_RELATIVE_OR_AUTHORITY = {};
var PATH_OR_AUTHORITY = {};
var RELATIVE = {};
var RELATIVE_SLASH = {};
var SPECIAL_AUTHORITY_SLASHES = {};
var SPECIAL_AUTHORITY_IGNORE_SLASHES = {};
var AUTHORITY = {};
var HOST = {};
var HOSTNAME = {};
var PORT = {};
var FILE = {};
var FILE_SLASH = {};
var FILE_HOST = {};
var PATH_START = {};
var PATH = {};
var CANNOT_BE_A_BASE_URL_PATH = {};
var QUERY = {};
var FRAGMENT = {};

// eslint-disable-next-line max-statements
var parseURL = function (url, input, stateOverride, base) {
  var state = stateOverride || SCHEME_START;
  var pointer = 0;
  var buffer = '';
  var seenAt = false;
  var seenBracket = false;
  var seenPasswordToken = false;
  var codePoints, char, bufferCodePoints, failure;

  if (!stateOverride) {
    url.scheme = '';
    url.username = '';
    url.password = '';
    url.host = null;
    url.port = null;
    url.path = [];
    url.query = null;
    url.fragment = null;
    url.cannotBeABaseURL = false;
    input = input.replace(LEADING_AND_TRAILING_C0_CONTROL_OR_SPACE, '');
  }

  input = input.replace(TAB_AND_NEW_LINE, '');

  codePoints = arrayFrom(input);

  while (pointer <= codePoints.length) {
    char = codePoints[pointer];
    switch (state) {
      case SCHEME_START:
        if (char && ALPHA.test(char)) {
          buffer += char.toLowerCase();
          state = SCHEME;
        } else if (!stateOverride) {
          state = NO_SCHEME;
          continue;
        } else return INVALID_SCHEME;
        break;

      case SCHEME:
        if (char && (ALPHANUMERIC.test(char) || char == '+' || char == '-' || char == '.')) {
          buffer += char.toLowerCase();
        } else if (char == ':') {
          if (stateOverride && (
            (isSpecial(url) != has(specialSchemes, buffer)) ||
            (buffer == 'file' && (includesCredentials(url) || url.port !== null)) ||
            (url.scheme == 'file' && !url.host)
          )) return;
          url.scheme = buffer;
          if (stateOverride) {
            if (isSpecial(url) && specialSchemes[url.scheme] == url.port) url.port = null;
            return;
          }
          buffer = '';
          if (url.scheme == 'file') {
            state = FILE;
          } else if (isSpecial(url) && base && base.scheme == url.scheme) {
            state = SPECIAL_RELATIVE_OR_AUTHORITY;
          } else if (isSpecial(url)) {
            state = SPECIAL_AUTHORITY_SLASHES;
          } else if (codePoints[pointer + 1] == '/') {
            state = PATH_OR_AUTHORITY;
            pointer++;
          } else {
            url.cannotBeABaseURL = true;
            url.path.push('');
            state = CANNOT_BE_A_BASE_URL_PATH;
          }
        } else if (!stateOverride) {
          buffer = '';
          state = NO_SCHEME;
          pointer = 0;
          continue;
        } else return INVALID_SCHEME;
        break;

      case NO_SCHEME:
        if (!base || (base.cannotBeABaseURL && char != '#')) return INVALID_SCHEME;
        if (base.cannotBeABaseURL && char == '#') {
          url.scheme = base.scheme;
          url.path = base.path.slice();
          url.query = base.query;
          url.fragment = '';
          url.cannotBeABaseURL = true;
          state = FRAGMENT;
          break;
        }
        state = base.scheme == 'file' ? FILE : RELATIVE;
        continue;

      case SPECIAL_RELATIVE_OR_AUTHORITY:
        if (char == '/' && codePoints[pointer + 1] == '/') {
          state = SPECIAL_AUTHORITY_IGNORE_SLASHES;
          pointer++;
        } else {
          state = RELATIVE;
          continue;
        } break;

      case PATH_OR_AUTHORITY:
        if (char == '/') {
          state = AUTHORITY;
          break;
        } else {
          state = PATH;
          continue;
        }

      case RELATIVE:
        url.scheme = base.scheme;
        if (char == EOF) {
          url.username = base.username;
          url.password = base.password;
          url.host = base.host;
          url.port = base.port;
          url.path = base.path.slice();
          url.query = base.query;
        } else if (char == '/' || (char == '\\' && isSpecial(url))) {
          state = RELATIVE_SLASH;
        } else if (char == '?') {
          url.username = base.username;
          url.password = base.password;
          url.host = base.host;
          url.port = base.port;
          url.path = base.path.slice();
          url.query = '';
          state = QUERY;
        } else if (char == '#') {
          url.username = base.username;
          url.password = base.password;
          url.host = base.host;
          url.port = base.port;
          url.path = base.path.slice();
          url.query = base.query;
          url.fragment = '';
          state = FRAGMENT;
        } else {
          url.username = base.username;
          url.password = base.password;
          url.host = base.host;
          url.port = base.port;
          url.path = base.path.slice();
          url.path.pop();
          state = PATH;
          continue;
        } break;

      case RELATIVE_SLASH:
        if (isSpecial(url) && (char == '/' || char == '\\')) {
          state = SPECIAL_AUTHORITY_IGNORE_SLASHES;
        } else if (char == '/') {
          state = AUTHORITY;
        } else {
          url.username = base.username;
          url.password = base.password;
          url.host = base.host;
          url.port = base.port;
          state = PATH;
          continue;
        } break;

      case SPECIAL_AUTHORITY_SLASHES:
        state = SPECIAL_AUTHORITY_IGNORE_SLASHES;
        if (char != '/' || buffer.charAt(pointer + 1) != '/') continue;
        pointer++;
        break;

      case SPECIAL_AUTHORITY_IGNORE_SLASHES:
        if (char != '/' && char != '\\') {
          state = AUTHORITY;
          continue;
        } break;

      case AUTHORITY:
        if (char == '@') {
          if (seenAt) buffer = '%40' + buffer;
          seenAt = true;
          bufferCodePoints = arrayFrom(buffer);
          for (var i = 0; i < bufferCodePoints.length; i++) {
            var codePoint = bufferCodePoints[i];
            if (codePoint == ':' && !seenPasswordToken) {
              seenPasswordToken = true;
              continue;
            }
            var encodedCodePoints = percentEncode(codePoint, userinfoPercentEncodeSet);
            if (seenPasswordToken) url.password += encodedCodePoints;
            else url.username += encodedCodePoints;
          }
          buffer = '';
        } else if (
          char == EOF || char == '/' || char == '?' || char == '#' ||
          (char == '\\' && isSpecial(url))
        ) {
          if (seenAt && buffer == '') return INVALID_AUTHORITY;
          pointer -= arrayFrom(buffer).length + 1;
          buffer = '';
          state = HOST;
        } else buffer += char;
        break;

      case HOST:
      case HOSTNAME:
        if (stateOverride && url.scheme == 'file') {
          state = FILE_HOST;
          continue;
        } else if (char == ':' && !seenBracket) {
          if (buffer == '') return INVALID_HOST;
          failure = parseHost(url, buffer);
          if (failure) return failure;
          buffer = '';
          state = PORT;
          if (stateOverride == HOSTNAME) return;
        } else if (
          char == EOF || char == '/' || char == '?' || char == '#' ||
          (char == '\\' && isSpecial(url))
        ) {
          if (isSpecial(url) && buffer == '') return INVALID_HOST;
          if (stateOverride && buffer == '' && (includesCredentials(url) || url.port !== null)) return;
          failure = parseHost(url, buffer);
          if (failure) return failure;
          buffer = '';
          state = PATH_START;
          if (stateOverride) return;
          continue;
        } else {
          if (char == '[') seenBracket = true;
          else if (char == ']') seenBracket = false;
          buffer += char;
        } break;

      case PORT:
        if (DIGIT.test(char)) {
          buffer += char;
        } else if (
          char == EOF || char == '/' || char == '?' || char == '#' ||
          (char == '\\' && isSpecial(url)) ||
          stateOverride
        ) {
          if (buffer != '') {
            var port = parseInt(buffer, 10);
            if (port > 0xFFFF) return INVALID_PORT;
            url.port = (isSpecial(url) && port === specialSchemes[url.scheme]) ? null : port;
            buffer = '';
          }
          if (stateOverride) return;
          state = PATH_START;
          continue;
        } else return INVALID_PORT;
        break;

      case FILE:
        url.scheme = 'file';
        if (char == '/' || char == '\\') state = FILE_SLASH;
        else if (base && base.scheme == 'file') {
          if (char == EOF) {
            url.host = base.host;
            url.path = base.path.slice();
            url.query = base.query;
          } else if (char == '?') {
            url.host = base.host;
            url.path = base.path.slice();
            url.query = '';
            state = QUERY;
          } else if (char == '#') {
            url.host = base.host;
            url.path = base.path.slice();
            url.query = base.query;
            url.fragment = '';
            state = FRAGMENT;
          } else {
            if (!startsWithWindowsDriveLetter(codePoints.slice(pointer).join(''))) {
              url.host = base.host;
              url.path = base.path.slice();
              shortenURLsPath(url);
            }
            state = PATH;
            continue;
          }
        } else {
          state = PATH;
          continue;
        } break;

      case FILE_SLASH:
        if (char == '/' || char == '\\') {
          state = FILE_HOST;
          break;
        }
        if (base && base.scheme == 'file' && !startsWithWindowsDriveLetter(codePoints.slice(pointer).join(''))) {
          if (isWindowsDriveLetter(base.path[0], true)) url.path.push(base.path[0]);
          else url.host = base.host;
        }
        state = PATH;
        continue;

      case FILE_HOST:
        if (char == EOF || char == '/' || char == '\\' || char == '?' || char == '#') {
          if (!stateOverride && isWindowsDriveLetter(buffer)) {
            state = PATH;
          } else if (buffer == '') {
            url.host = '';
            if (stateOverride) return;
            state = PATH_START;
          } else {
            failure = parseHost(url, buffer);
            if (failure) return failure;
            if (url.host == 'localhost') url.host = '';
            if (stateOverride) return;
            buffer = '';
            state = PATH_START;
          } continue;
        } else buffer += char;
        break;

      case PATH_START:
        if (isSpecial(url)) {
          state = PATH;
          if (char != '/' && char != '\\') continue;
        } else if (!stateOverride && char == '?') {
          url.query = '';
          state = QUERY;
        } else if (!stateOverride && char == '#') {
          url.fragment = '';
          state = FRAGMENT;
        } else if (char != EOF) {
          state = PATH;
          if (char != '/') continue;
        } break;

      case PATH:
        if (
          char == EOF || char == '/' ||
          (char == '\\' && isSpecial(url)) ||
          (!stateOverride && (char == '?' || char == '#'))
        ) {
          if (isDoubleDot(buffer)) {
            shortenURLsPath(url);
            if (char != '/' && !(char == '\\' && isSpecial(url))) {
              url.path.push('');
            }
          } else if (isSingleDot(buffer)) {
            if (char != '/' && !(char == '\\' && isSpecial(url))) {
              url.path.push('');
            }
          } else {
            if (url.scheme == 'file' && !url.path.length && isWindowsDriveLetter(buffer)) {
              if (url.host) url.host = '';
              buffer = buffer.charAt(0) + ':'; // normalize windows drive letter
            }
            url.path.push(buffer);
          }
          buffer = '';
          if (url.scheme == 'file' && (char == EOF || char == '?' || char == '#')) {
            while (url.path.length > 1 && url.path[0] === '') {
              url.path.shift();
            }
          }
          if (char == '?') {
            url.query = '';
            state = QUERY;
          } else if (char == '#') {
            url.fragment = '';
            state = FRAGMENT;
          }
        } else {
          buffer += percentEncode(char, pathPercentEncodeSet);
        } break;

      case CANNOT_BE_A_BASE_URL_PATH:
        if (char == '?') {
          url.query = '';
          state = QUERY;
        } else if (char == '#') {
          url.fragment = '';
          state = FRAGMENT;
        } else if (char != EOF) {
          url.path[0] += percentEncode(char, C0ControlPercentEncodeSet);
        } break;

      case QUERY:
        if (!stateOverride && char == '#') {
          url.fragment = '';
          state = FRAGMENT;
        } else if (char != EOF) {
          if (char == "'" && isSpecial(url)) url.query += '%27';
          else if (char == '#') url.query += '%23';
          else url.query += percentEncode(char, C0ControlPercentEncodeSet);
        } break;

      case FRAGMENT:
        if (char != EOF) url.fragment += percentEncode(char, fragmentPercentEncodeSet);
        break;
    }

    pointer++;
  }
};

// `URL` constructor
// https://url.spec.whatwg.org/#url-class
var URLConstructor = function URL(url /* , base */) {
  var that = anInstance(this, URLConstructor, 'URL');
  var base = arguments.length > 1 ? arguments[1] : undefined;
  var urlString = String(url);
  var state = setInternalState(that, { type: 'URL' });
  var baseState, failure;
  if (base !== undefined) {
    if (base instanceof URLConstructor) baseState = getInternalURLState(base);
    else {
      failure = parseURL(baseState = {}, String(base));
      if (failure) throw TypeError(failure);
    }
  }
  failure = parseURL(state, urlString, null, baseState);
  if (failure) throw TypeError(failure);
  var searchParams = state.searchParams = new URLSearchParams();
  var searchParamsState = getInternalSearchParamsState(searchParams);
  searchParamsState.updateSearchParams(state.query);
  searchParamsState.updateURL = function () {
    state.query = String(searchParams) || null;
  };
  if (!DESCRIPTORS) {
    that.href = serializeURL.call(that);
    that.origin = getOrigin.call(that);
    that.protocol = getProtocol.call(that);
    that.username = getUsername.call(that);
    that.password = getPassword.call(that);
    that.host = getHost.call(that);
    that.hostname = getHostname.call(that);
    that.port = getPort.call(that);
    that.pathname = getPathname.call(that);
    that.search = getSearch.call(that);
    that.searchParams = getSearchParams.call(that);
    that.hash = getHash.call(that);
  }
};

var URLPrototype = URLConstructor.prototype;

var serializeURL = function () {
  var url = getInternalURLState(this);
  var scheme = url.scheme;
  var username = url.username;
  var password = url.password;
  var host = url.host;
  var port = url.port;
  var path = url.path;
  var query = url.query;
  var fragment = url.fragment;
  var output = scheme + ':';
  if (host !== null) {
    output += '//';
    if (includesCredentials(url)) {
      output += username + (password ? ':' + password : '') + '@';
    }
    output += serializeHost(host);
    if (port !== null) output += ':' + port;
  } else if (scheme == 'file') output += '//';
  output += url.cannotBeABaseURL ? path[0] : path.length ? '/' + path.join('/') : '';
  if (query !== null) output += '?' + query;
  if (fragment !== null) output += '#' + fragment;
  return output;
};

var getOrigin = function () {
  var url = getInternalURLState(this);
  var scheme = url.scheme;
  var port = url.port;
  if (scheme == 'blob') try {
    return new URL(scheme.path[0]).origin;
  } catch (error) {
    return 'null';
  }
  if (scheme == 'file' || !isSpecial(url)) return 'null';
  return scheme + '://' + serializeHost(url.host) + (port !== null ? ':' + port : '');
};

var getProtocol = function () {
  return getInternalURLState(this).scheme + ':';
};

var getUsername = function () {
  return getInternalURLState(this).username;
};

var getPassword = function () {
  return getInternalURLState(this).password;
};

var getHost = function () {
  var url = getInternalURLState(this);
  var host = url.host;
  var port = url.port;
  return host === null ? ''
    : port === null ? serializeHost(host)
    : serializeHost(host) + ':' + port;
};

var getHostname = function () {
  var host = getInternalURLState(this).host;
  return host === null ? '' : serializeHost(host);
};

var getPort = function () {
  var port = getInternalURLState(this).port;
  return port === null ? '' : String(port);
};

var getPathname = function () {
  var url = getInternalURLState(this);
  var path = url.path;
  return url.cannotBeABaseURL ? path[0] : path.length ? '/' + path.join('/') : '';
};

var getSearch = function () {
  var query = getInternalURLState(this).query;
  return query ? '?' + query : '';
};

var getSearchParams = function () {
  return getInternalURLState(this).searchParams;
};

var getHash = function () {
  var fragment = getInternalURLState(this).fragment;
  return fragment ? '#' + fragment : '';
};

var accessorDescriptor = function (getter, setter) {
  return { get: getter, set: setter, configurable: true, enumerable: true };
};

if (DESCRIPTORS) {
  defineProperties(URLPrototype, {
    // `URL.prototype.href` accessors pair
    // https://url.spec.whatwg.org/#dom-url-href
    href: accessorDescriptor(serializeURL, function (href) {
      var url = getInternalURLState(this);
      var urlString = String(href);
      var failure = parseURL(url, urlString);
      if (failure) throw TypeError(failure);
      getInternalSearchParamsState(url.searchParams).updateSearchParams(url.query);
    }),
    // `URL.prototype.origin` getter
    // https://url.spec.whatwg.org/#dom-url-origin
    origin: accessorDescriptor(getOrigin),
    // `URL.prototype.protocol` accessors pair
    // https://url.spec.whatwg.org/#dom-url-protocol
    protocol: accessorDescriptor(getProtocol, function (protocol) {
      var url = getInternalURLState(this);
      parseURL(url, String(protocol) + ':', SCHEME_START);
    }),
    // `URL.prototype.username` accessors pair
    // https://url.spec.whatwg.org/#dom-url-username
    username: accessorDescriptor(getUsername, function (username) {
      var url = getInternalURLState(this);
      var codePoints = arrayFrom(String(username));
      if (cannotHaveUsernamePasswordPort(url)) return;
      url.username = '';
      for (var i = 0; i < codePoints.length; i++) {
        url.username += percentEncode(codePoints[i], userinfoPercentEncodeSet);
      }
    }),
    // `URL.prototype.password` accessors pair
    // https://url.spec.whatwg.org/#dom-url-password
    password: accessorDescriptor(getPassword, function (password) {
      var url = getInternalURLState(this);
      var codePoints = arrayFrom(String(password));
      if (cannotHaveUsernamePasswordPort(url)) return;
      url.password = '';
      for (var i = 0; i < codePoints.length; i++) {
        url.password += percentEncode(codePoints[i], userinfoPercentEncodeSet);
      }
    }),
    // `URL.prototype.host` accessors pair
    // https://url.spec.whatwg.org/#dom-url-host
    host: accessorDescriptor(getHost, function (host) {
      var url = getInternalURLState(this);
      if (url.cannotBeABaseURL) return;
      parseURL(url, String(host), HOST);
    }),
    // `URL.prototype.hostname` accessors pair
    // https://url.spec.whatwg.org/#dom-url-hostname
    hostname: accessorDescriptor(getHostname, function (hostname) {
      var url = getInternalURLState(this);
      if (url.cannotBeABaseURL) return;
      parseURL(url, String(hostname), HOSTNAME);
    }),
    // `URL.prototype.port` accessors pair
    // https://url.spec.whatwg.org/#dom-url-port
    port: accessorDescriptor(getPort, function (port) {
      var url = getInternalURLState(this);
      if (cannotHaveUsernamePasswordPort(url)) return;
      port = String(port);
      if (port == '') url.port = null;
      else parseURL(url, port, PORT);
    }),
    // `URL.prototype.pathname` accessors pair
    // https://url.spec.whatwg.org/#dom-url-pathname
    pathname: accessorDescriptor(getPathname, function (pathname) {
      var url = getInternalURLState(this);
      if (url.cannotBeABaseURL) return;
      url.path = [];
      parseURL(url, pathname + '', PATH_START);
    }),
    // `URL.prototype.search` accessors pair
    // https://url.spec.whatwg.org/#dom-url-search
    search: accessorDescriptor(getSearch, function (search) {
      var url = getInternalURLState(this);
      search = String(search);
      if (search == '') {
        url.query = null;
      } else {
        if ('?' == search.charAt(0)) search = search.slice(1);
        url.query = '';
        parseURL(url, search, QUERY);
      }
      getInternalSearchParamsState(url.searchParams).updateSearchParams(url.query);
    }),
    // `URL.prototype.searchParams` getter
    // https://url.spec.whatwg.org/#dom-url-searchparams
    searchParams: accessorDescriptor(getSearchParams),
    // `URL.prototype.hash` accessors pair
    // https://url.spec.whatwg.org/#dom-url-hash
    hash: accessorDescriptor(getHash, function (hash) {
      var url = getInternalURLState(this);
      hash = String(hash);
      if (hash == '') {
        url.fragment = null;
        return;
      }
      if ('#' == hash.charAt(0)) hash = hash.slice(1);
      url.fragment = '';
      parseURL(url, hash, FRAGMENT);
    })
  });
}

// `URL.prototype.toJSON` method
// https://url.spec.whatwg.org/#dom-url-tojson
redefine(URLPrototype, 'toJSON', function toJSON() {
  return serializeURL.call(this);
}, { enumerable: true });

// `URL.prototype.toString` method
// https://url.spec.whatwg.org/#URL-stringification-behavior
redefine(URLPrototype, 'toString', function toString() {
  return serializeURL.call(this);
}, { enumerable: true });

if (NativeURL) {
  var nativeCreateObjectURL = NativeURL.createObjectURL;
  var nativeRevokeObjectURL = NativeURL.revokeObjectURL;
  // `URL.createObjectURL` method
  // https://developer.mozilla.org/en-US/docs/Web/API/URL/createObjectURL
  // eslint-disable-next-line no-unused-vars
  if (nativeCreateObjectURL) redefine(URLConstructor, 'createObjectURL', function createObjectURL(blob) {
    return nativeCreateObjectURL.apply(NativeURL, arguments);
  });
  // `URL.revokeObjectURL` method
  // https://developer.mozilla.org/en-US/docs/Web/API/URL/revokeObjectURL
  // eslint-disable-next-line no-unused-vars
  if (nativeRevokeObjectURL) redefine(URLConstructor, 'revokeObjectURL', function revokeObjectURL(url) {
    return nativeRevokeObjectURL.apply(NativeURL, arguments);
  });
}

setToStringTag(URLConstructor, 'URL');

$({ global: true, forced: !USE_NATIVE_URL, sham: !DESCRIPTORS }, {
  URL: URLConstructor
});


/***/ }),

/***/ "2c93":
/***/ (function(module, exports, __webpack_require__) {

// Imports
var ___CSS_LOADER_API_IMPORT___ = __webpack_require__("24fb");
exports = ___CSS_LOADER_API_IMPORT___(false);
// Module
exports.push([module.i, "*[data-v-11f9ef97],[data-v-11f9ef97]:after,[data-v-11f9ef97]:before{box-sizing:border-box}.list-item[data-v-11f9ef97]{display:flex;flex-direction:row;padding:8px 20px 8px 20px;align-items:center}.thumbnail[data-v-11f9ef97]{min-height:60px;min-width:60px;max-width:60px;max-height:60px;background-color:#e8ecf1;-o-object-fit:cover;object-fit:cover}.info[data-v-11f9ef97]{padding-left:24px}.info[data-v-11f9ef97],.info-grid[data-v-11f9ef97]{display:flex;flex-direction:column;flex-grow:1}.info-grid[data-v-11f9ef97]{margin:16px;box-shadow:0 3px 6px rgba(0,0,0,.1607843137254902);cursor:pointer}hr.solid[data-v-11f9ef97]{border-top:1px solid #e8ecf1;margin:8px 20px 8px 20px}.title[data-v-11f9ef97]{font-size:18px;font-weight:700}.grid-title[data-v-11f9ef97]{font-size:24px;font-weight:700;flex-grow:1}.short-info[data-v-11f9ef97]{font-size:14px;word-break:break-word;color:#888}.grid-short-info[data-v-11f9ef97]{font-size:18px;word-wrap:break-word;color:#888;flex-grow:1;max-height:150px}.grid-short-info[data-v-11f9ef97],.page-title[data-v-11f9ef97]{text-overflow:ellipsis;overflow:hidden}.page-title[data-v-11f9ef97]{font-weight:700;font-size:36px;padding-left:20px;padding-right:20px;width:100%}.list[data-v-11f9ef97]{flex-direction:row;flex-wrap:wrap}.item-container[data-v-11f9ef97],.list[data-v-11f9ef97]{display:flex;width:100%}.item-container[data-v-11f9ef97]{flex-direction:column;cursor:pointer}.bottom-divider[data-v-11f9ef97]{width:100%}.bottom-divider2[data-v-11f9ef97]{visibility:hidden}.grid-container[data-v-11f9ef97]{display:flex;flex-direction:column;width:100%}@media(min-width:768px){.bottom-divider[data-v-11f9ef97],.item-container[data-v-11f9ef97]{width:50%}.bottom-divider2[data-v-11f9ef97]{visibility:visible}.grid-container[data-v-11f9ef97]{width:50%}}@media(min-width:1024px){.grid-container[data-v-11f9ef97]{width:33%}}@media(min-width:1400px){.grid-container[data-v-11f9ef97]{width:25%}}.loading-spinner[data-v-11f9ef97]{height:70vh;align-items:center}.loading-spinner[data-v-11f9ef97],.noResult[data-v-11f9ef97]{width:100%;display:flex;justify-content:center}.noResult[data-v-11f9ef97]{flex-direction:row;margin-top:20px}.grid-info-detail[data-v-11f9ef97]{padding:16px;display:flex;flex-direction:column;flex-grow:1}.recipe-divider[data-v-11f9ef97]{border-top:1px solid #e8ecf1;margin-top:16px;margin-bottom:16px;width:100%}.recipe-info-text[data-v-11f9ef97]{padding-left:8px;font-size:14px;color:#212529}.recipe-info-group[data-v-11f9ef97]{display:flex;width:50%;align-items:center}.recipe-info-groups[data-v-11f9ef97]{display:flex;flex-direction:row}.recipe-image[data-v-11f9ef97]{max-width:100%;height:200px;width:100%;-o-object-fit:cover;object-fit:cover}.header[data-v-11f9ef97]{justify-content:space-between;width:100%;align-items:center;padding-right:20px}.header[data-v-11f9ef97],.list-grid-switch[data-v-11f9ef97]{display:flex;flex-direction:row}.list-grid-switch[data-v-11f9ef97]{justify-content:center}.list-switch-button[data-v-11f9ef97]{border:1px solid #e8ecf1;border-radius:15px 0 0 15px}.grid-switch-button[data-v-11f9ef97],.list-switch-button[data-v-11f9ef97]{width:60px;height:30px;display:flex;justify-content:center;align-items:center;cursor:pointer}.grid-switch-button[data-v-11f9ef97]{border:1px solid #e8ecf1;border-left:0;border-radius:0 15px 15px 0}[data-v-11f9ef97]::-moz-placeholder{color:rgba(31,31,31,.5019607843137255)}[data-v-11f9ef97]:-ms-input-placeholder{color:rgba(31,31,31,.5019607843137255)}[data-v-11f9ef97]::placeholder{color:rgba(31,31,31,.5019607843137255)}input[data-v-11f9ef97]:focus{outline:none}.search-bar[data-v-11f9ef97]{width:100%;margin:16px;display:flex;border:1px solid #e8ecf1;align-items:center}.search-input[data-v-11f9ef97]{width:100%;padding:10px;border:none;flex-grow:1}.search-button[data-v-11f9ef97]{padding-top:4px;padding-right:20px;cursor:pointer;min-width:24px;max-width:24px;min-height:24px;max-height:24px}.grid-icon path[data-v-11f9ef97]{fill:#888}.grid-icon-blue path[data-v-11f9ef97]{fill:#2980b9}.rezept-icon[data-v-11f9ef97]{width:100%}.rezept-icon .a[data-v-11f9ef97]{fill:none}.rezept-icon .b[data-v-11f9ef97]{fill:#e8ecf1}.rezept-icon .c[data-v-11f9ef97]{-webkit-clip-path:url(#a);clip-path:url(#a)}.rezept-icon .d[data-v-11f9ef97]{fill:#fff}.arrow-icon[data-v-11f9ef97]{min-height:40px;min-width:40px;max-height:40px;max-width:40px;display:flex}", ""]);
// Exports
module.exports = exports;


/***/ }),

/***/ "2cf4":
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__("da84");
var fails = __webpack_require__("d039");
var bind = __webpack_require__("0366");
var html = __webpack_require__("1be4");
var createElement = __webpack_require__("cc12");
var IS_IOS = __webpack_require__("1cdc");
var IS_NODE = __webpack_require__("605d");

var location = global.location;
var set = global.setImmediate;
var clear = global.clearImmediate;
var process = global.process;
var MessageChannel = global.MessageChannel;
var Dispatch = global.Dispatch;
var counter = 0;
var queue = {};
var ONREADYSTATECHANGE = 'onreadystatechange';
var defer, channel, port;

var run = function (id) {
  // eslint-disable-next-line no-prototype-builtins
  if (queue.hasOwnProperty(id)) {
    var fn = queue[id];
    delete queue[id];
    fn();
  }
};

var runner = function (id) {
  return function () {
    run(id);
  };
};

var listener = function (event) {
  run(event.data);
};

var post = function (id) {
  // old engines have not location.origin
  global.postMessage(id + '', location.protocol + '//' + location.host);
};

// Node.js 0.9+ & IE10+ has setImmediate, otherwise:
if (!set || !clear) {
  set = function setImmediate(fn) {
    var args = [];
    var i = 1;
    while (arguments.length > i) args.push(arguments[i++]);
    queue[++counter] = function () {
      // eslint-disable-next-line no-new-func
      (typeof fn == 'function' ? fn : Function(fn)).apply(undefined, args);
    };
    defer(counter);
    return counter;
  };
  clear = function clearImmediate(id) {
    delete queue[id];
  };
  // Node.js 0.8-
  if (IS_NODE) {
    defer = function (id) {
      process.nextTick(runner(id));
    };
  // Sphere (JS game engine) Dispatch API
  } else if (Dispatch && Dispatch.now) {
    defer = function (id) {
      Dispatch.now(runner(id));
    };
  // Browsers with MessageChannel, includes WebWorkers
  // except iOS - https://github.com/zloirock/core-js/issues/624
  } else if (MessageChannel && !IS_IOS) {
    channel = new MessageChannel();
    port = channel.port2;
    channel.port1.onmessage = listener;
    defer = bind(port.postMessage, port, 1);
  // Browsers with postMessage, skip WebWorkers
  // IE8 has postMessage, but it's sync & typeof its postMessage is 'object'
  } else if (
    global.addEventListener &&
    typeof postMessage == 'function' &&
    !global.importScripts &&
    location && location.protocol !== 'file:' &&
    !fails(post)
  ) {
    defer = post;
    global.addEventListener('message', listener, false);
  // IE8-
  } else if (ONREADYSTATECHANGE in createElement('script')) {
    defer = function (id) {
      html.appendChild(createElement('script'))[ONREADYSTATECHANGE] = function () {
        html.removeChild(this);
        run(id);
      };
    };
  // Rest old browsers
  } else {
    defer = function (id) {
      setTimeout(runner(id), 0);
    };
  }
}

module.exports = {
  set: set,
  clear: clear
};


/***/ }),

/***/ "2d00":
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__("da84");
var userAgent = __webpack_require__("342f");

var process = global.process;
var versions = process && process.versions;
var v8 = versions && versions.v8;
var match, version;

if (v8) {
  match = v8.split('.');
  version = match[0] + match[1];
} else if (userAgent) {
  match = userAgent.match(/Edge\/(\d+)/);
  if (!match || match[1] >= 74) {
    match = userAgent.match(/Chrome\/(\d+)/);
    if (match) version = match[1];
  }
}

module.exports = version && +version;


/***/ }),

/***/ "2d83":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var enhanceError = __webpack_require__("387f");

/**
 * Create an Error with the specified message, config, error code, request and response.
 *
 * @param {string} message The error message.
 * @param {Object} config The config.
 * @param {string} [code] The error code (for example, 'ECONNABORTED').
 * @param {Object} [request] The request.
 * @param {Object} [response] The response.
 * @returns {Error} The created error.
 */
module.exports = function createError(message, config, code, request, response) {
  var error = new Error(message);
  return enhanceError(error, config, code, request, response);
};


/***/ }),

/***/ "2e67":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


module.exports = function isCancel(value) {
  return !!(value && value.__CANCEL__);
};


/***/ }),

/***/ "3073":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_vue_style_loader_index_js_ref_8_oneOf_1_0_node_modules_css_loader_dist_cjs_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_2_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_3_node_modules_sass_loader_dist_cjs_js_ref_8_oneOf_1_4_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_Spinner_vue_vue_type_style_index_0_id_60a53922_scoped_true_lang_scss___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("bb83");
/* harmony import */ var _node_modules_vue_style_loader_index_js_ref_8_oneOf_1_0_node_modules_css_loader_dist_cjs_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_2_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_3_node_modules_sass_loader_dist_cjs_js_ref_8_oneOf_1_4_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_Spinner_vue_vue_type_style_index_0_id_60a53922_scoped_true_lang_scss___WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_vue_style_loader_index_js_ref_8_oneOf_1_0_node_modules_css_loader_dist_cjs_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_2_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_3_node_modules_sass_loader_dist_cjs_js_ref_8_oneOf_1_4_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_Spinner_vue_vue_type_style_index_0_id_60a53922_scoped_true_lang_scss___WEBPACK_IMPORTED_MODULE_0__);
/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _node_modules_vue_style_loader_index_js_ref_8_oneOf_1_0_node_modules_css_loader_dist_cjs_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_2_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_3_node_modules_sass_loader_dist_cjs_js_ref_8_oneOf_1_4_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_Spinner_vue_vue_type_style_index_0_id_60a53922_scoped_true_lang_scss___WEBPACK_IMPORTED_MODULE_0__) if(["default"].indexOf(__WEBPACK_IMPORT_KEY__) < 0) (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _node_modules_vue_style_loader_index_js_ref_8_oneOf_1_0_node_modules_css_loader_dist_cjs_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_2_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_3_node_modules_sass_loader_dist_cjs_js_ref_8_oneOf_1_4_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_Spinner_vue_vue_type_style_index_0_id_60a53922_scoped_true_lang_scss___WEBPACK_IMPORTED_MODULE_0__[key]; }) }(__WEBPACK_IMPORT_KEY__));


/***/ }),

/***/ "30b5":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__("c532");

function encode(val) {
  return encodeURIComponent(val).
    replace(/%40/gi, '@').
    replace(/%3A/gi, ':').
    replace(/%24/g, '$').
    replace(/%2C/gi, ',').
    replace(/%20/g, '+').
    replace(/%5B/gi, '[').
    replace(/%5D/gi, ']');
}

/**
 * Build a URL by appending params to the end
 *
 * @param {string} url The base of the url (e.g., http://www.google.com)
 * @param {object} [params] The params to be appended
 * @returns {string} The formatted url
 */
module.exports = function buildURL(url, params, paramsSerializer) {
  /*eslint no-param-reassign:0*/
  if (!params) {
    return url;
  }

  var serializedParams;
  if (paramsSerializer) {
    serializedParams = paramsSerializer(params);
  } else if (utils.isURLSearchParams(params)) {
    serializedParams = params.toString();
  } else {
    var parts = [];

    utils.forEach(params, function serialize(val, key) {
      if (val === null || typeof val === 'undefined') {
        return;
      }

      if (utils.isArray(val)) {
        key = key + '[]';
      } else {
        val = [val];
      }

      utils.forEach(val, function parseValue(v) {
        if (utils.isDate(v)) {
          v = v.toISOString();
        } else if (utils.isObject(v)) {
          v = JSON.stringify(v);
        }
        parts.push(encode(key) + '=' + encode(v));
      });
    });

    serializedParams = parts.join('&');
  }

  if (serializedParams) {
    var hashmarkIndex = url.indexOf('#');
    if (hashmarkIndex !== -1) {
      url = url.slice(0, hashmarkIndex);
    }

    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;
  }

  return url;
};


/***/ }),

/***/ "31af":
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__("99af");

__webpack_require__("cca6");

var _objectSpread = __webpack_require__("ded3");

var _objectWithoutProperties = __webpack_require__("4082");

module.exports = {
  functional: true,
  render: function render(_h, _vm) {
    var _c = _vm._c,
        _v = _vm._v,
        data = _vm.data,
        _vm$children = _vm.children,
        children = _vm$children === void 0 ? [] : _vm$children;

    var classNames = data.class,
        staticClass = data.staticClass,
        style = data.style,
        staticStyle = data.staticStyle,
        _data$attrs = data.attrs,
        attrs = _data$attrs === void 0 ? {} : _data$attrs,
        rest = _objectWithoutProperties(data, ["class", "staticClass", "style", "staticStyle", "attrs"]);

    return _c('svg', _objectSpread({
      class: [classNames, staticClass],
      style: [style, staticStyle],
      attrs: Object.assign({
        "xmlns": "http://www.w3.org/2000/svg",
        "width": "15.108",
        "height": "15.458"
      }, attrs)
    }, rest), children.concat([_c('g', {
      attrs: {
        "transform": "translate(1 1)",
        "fill": "none",
        "stroke": "#212529",
        "stroke-miterlimit": "10",
        "stroke-width": "2"
      }
    }, [_c('circle', {
      attrs: {
        "cx": "5.209",
        "cy": "5.209",
        "r": "5.209"
      }
    }), _c('path', {
      attrs: {
        "stroke-linecap": "round",
        "d": "M12.693 13.043L8.754 9.104"
      }
    })])]));
  }
};

/***/ }),

/***/ "3410":
/***/ (function(module, exports, __webpack_require__) {

var $ = __webpack_require__("23e7");
var fails = __webpack_require__("d039");
var toObject = __webpack_require__("7b0b");
var nativeGetPrototypeOf = __webpack_require__("e163");
var CORRECT_PROTOTYPE_GETTER = __webpack_require__("e177");

var FAILS_ON_PRIMITIVES = fails(function () { nativeGetPrototypeOf(1); });

// `Object.getPrototypeOf` method
// https://tc39.github.io/ecma262/#sec-object.getprototypeof
$({ target: 'Object', stat: true, forced: FAILS_ON_PRIMITIVES, sham: !CORRECT_PROTOTYPE_GETTER }, {
  getPrototypeOf: function getPrototypeOf(it) {
    return nativeGetPrototypeOf(toObject(it));
  }
});



/***/ }),

/***/ "342f":
/***/ (function(module, exports, __webpack_require__) {

var getBuiltIn = __webpack_require__("d066");

module.exports = getBuiltIn('navigator', 'userAgent') || '';


/***/ }),

/***/ "35a1":
/***/ (function(module, exports, __webpack_require__) {

var classof = __webpack_require__("f5df");
var Iterators = __webpack_require__("3f8c");
var wellKnownSymbol = __webpack_require__("b622");

var ITERATOR = wellKnownSymbol('iterator');

module.exports = function (it) {
  if (it != undefined) return it[ITERATOR]
    || it['@@iterator']
    || Iterators[classof(it)];
};


/***/ }),

/***/ "35d6":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// EXPORTS
__webpack_require__.d(__webpack_exports__, "default", function() { return /* binding */ addStylesToShadowDOM; });

// CONCATENATED MODULE: ./node_modules/vue-style-loader/lib/listToStyles.js
/**
 * Translates the list format produced by css-loader into something
 * easier to manipulate.
 */
function listToStyles (parentId, list) {
  var styles = []
  var newStyles = {}
  for (var i = 0; i < list.length; i++) {
    var item = list[i]
    var id = item[0]
    var css = item[1]
    var media = item[2]
    var sourceMap = item[3]
    var part = {
      id: parentId + ':' + i,
      css: css,
      media: media,
      sourceMap: sourceMap
    }
    if (!newStyles[id]) {
      styles.push(newStyles[id] = { id: id, parts: [part] })
    } else {
      newStyles[id].parts.push(part)
    }
  }
  return styles
}

// CONCATENATED MODULE: ./node_modules/vue-style-loader/lib/addStylesShadow.js


function addStylesToShadowDOM (parentId, list, shadowRoot) {
  var styles = listToStyles(parentId, list)
  addStyles(styles, shadowRoot)
}

/*
type StyleObject = {
  id: number;
  parts: Array<StyleObjectPart>
}

type StyleObjectPart = {
  css: string;
  media: string;
  sourceMap: ?string
}
*/

function addStyles (styles /* Array<StyleObject> */, shadowRoot) {
  const injectedStyles =
    shadowRoot._injectedStyles ||
    (shadowRoot._injectedStyles = {})
  for (var i = 0; i < styles.length; i++) {
    var item = styles[i]
    var style = injectedStyles[item.id]
    if (!style) {
      for (var j = 0; j < item.parts.length; j++) {
        addStyle(item.parts[j], shadowRoot)
      }
      injectedStyles[item.id] = true
    }
  }
}

function createStyleElement (shadowRoot) {
  var styleElement = document.createElement('style')
  styleElement.type = 'text/css'
  shadowRoot.appendChild(styleElement)
  return styleElement
}

function addStyle (obj /* StyleObjectPart */, shadowRoot) {
  var styleElement = createStyleElement(shadowRoot)
  var css = obj.css
  var media = obj.media
  var sourceMap = obj.sourceMap

  if (media) {
    styleElement.setAttribute('media', media)
  }

  if (sourceMap) {
    // https://developer.chrome.com/devtools/docs/javascript-debugging
    // this makes source maps inside style tags work properly in Chrome
    css += '\n/*# sourceURL=' + sourceMap.sources[0] + ' */'
    // http://stackoverflow.com/a/26603875
    css += '\n/*# sourceMappingURL=data:application/json;base64,' + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + ' */'
  }

  if (styleElement.styleSheet) {
    styleElement.styleSheet.cssText = css
  } else {
    while (styleElement.firstChild) {
      styleElement.removeChild(styleElement.firstChild)
    }
    styleElement.appendChild(document.createTextNode(css))
  }
}


/***/ }),

/***/ "37e8":
/***/ (function(module, exports, __webpack_require__) {

var DESCRIPTORS = __webpack_require__("83ab");
var definePropertyModule = __webpack_require__("9bf2");
var anObject = __webpack_require__("825a");
var objectKeys = __webpack_require__("df75");

// `Object.defineProperties` method
// https://tc39.github.io/ecma262/#sec-object.defineproperties
module.exports = DESCRIPTORS ? Object.defineProperties : function defineProperties(O, Properties) {
  anObject(O);
  var keys = objectKeys(Properties);
  var length = keys.length;
  var index = 0;
  var key;
  while (length > index) definePropertyModule.f(O, key = keys[index++], Properties[key]);
  return O;
};


/***/ }),

/***/ "387f":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
 * Update an Error with the specified config, error code, and response.
 *
 * @param {Error} error The error to update.
 * @param {Object} config The config.
 * @param {string} [code] The error code (for example, 'ECONNABORTED').
 * @param {Object} [request] The request.
 * @param {Object} [response] The response.
 * @returns {Error} The error.
 */
module.exports = function enhanceError(error, config, code, request, response) {
  error.config = config;
  if (code) {
    error.code = code;
  }

  error.request = request;
  error.response = response;
  error.isAxiosError = true;

  error.toJSON = function() {
    return {
      // Standard
      message: this.message,
      name: this.name,
      // Microsoft
      description: this.description,
      number: this.number,
      // Mozilla
      fileName: this.fileName,
      lineNumber: this.lineNumber,
      columnNumber: this.columnNumber,
      stack: this.stack,
      // Axios
      config: this.config,
      code: this.code
    };
  };
  return error;
};


/***/ }),

/***/ "3934":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__("c532");

module.exports = (
  utils.isStandardBrowserEnv() ?

  // Standard browser envs have full support of the APIs needed to test
  // whether the request URL is of the same origin as current location.
    (function standardBrowserEnv() {
      var msie = /(msie|trident)/i.test(navigator.userAgent);
      var urlParsingNode = document.createElement('a');
      var originURL;

      /**
    * Parse a URL to discover it's components
    *
    * @param {String} url The URL to be parsed
    * @returns {Object}
    */
      function resolveURL(url) {
        var href = url;

        if (msie) {
        // IE needs attribute set twice to normalize properties
          urlParsingNode.setAttribute('href', href);
          href = urlParsingNode.href;
        }

        urlParsingNode.setAttribute('href', href);

        // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils
        return {
          href: urlParsingNode.href,
          protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',
          host: urlParsingNode.host,
          search: urlParsingNode.search ? urlParsingNode.search.replace(/^\?/, '') : '',
          hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',
          hostname: urlParsingNode.hostname,
          port: urlParsingNode.port,
          pathname: (urlParsingNode.pathname.charAt(0) === '/') ?
            urlParsingNode.pathname :
            '/' + urlParsingNode.pathname
        };
      }

      originURL = resolveURL(window.location.href);

      /**
    * Determine if a URL shares the same origin as the current location
    *
    * @param {String} requestURL The URL to test
    * @returns {boolean} True if URL shares the same origin, otherwise false
    */
      return function isURLSameOrigin(requestURL) {
        var parsed = (utils.isString(requestURL)) ? resolveURL(requestURL) : requestURL;
        return (parsed.protocol === originURL.protocol &&
            parsed.host === originURL.host);
      };
    })() :

  // Non standard browser envs (web workers, react-native) lack needed support.
    (function nonStandardBrowserEnv() {
      return function isURLSameOrigin() {
        return true;
      };
    })()
);


/***/ }),

/***/ "3bbe":
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__("861d");

module.exports = function (it) {
  if (!isObject(it) && it !== null) {
    throw TypeError("Can't set " + String(it) + ' as a prototype');
  } return it;
};


/***/ }),

/***/ "3ca3":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var charAt = __webpack_require__("6547").charAt;
var InternalStateModule = __webpack_require__("69f3");
var defineIterator = __webpack_require__("7dd0");

var STRING_ITERATOR = 'String Iterator';
var setInternalState = InternalStateModule.set;
var getInternalState = InternalStateModule.getterFor(STRING_ITERATOR);

// `String.prototype[@@iterator]` method
// https://tc39.github.io/ecma262/#sec-string.prototype-@@iterator
defineIterator(String, 'String', function (iterated) {
  setInternalState(this, {
    type: STRING_ITERATOR,
    string: String(iterated),
    index: 0
  });
// `%StringIteratorPrototype%.next` method
// https://tc39.github.io/ecma262/#sec-%stringiteratorprototype%.next
}, function next() {
  var state = getInternalState(this);
  var string = state.string;
  var index = state.index;
  var point;
  if (index >= string.length) return { value: undefined, done: true };
  point = charAt(string, index);
  state.index += point.length;
  return { value: point, done: false };
});


/***/ }),

/***/ "3f8c":
/***/ (function(module, exports) {

module.exports = {};


/***/ }),

/***/ "4082":
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__("a4d3");

__webpack_require__("c975");

var objectWithoutPropertiesLoose = __webpack_require__("f0e4");

function _objectWithoutProperties(source, excluded) {
  if (source == null) return {};
  var target = objectWithoutPropertiesLoose(source, excluded);
  var key, i;

  if (Object.getOwnPropertySymbols) {
    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);

    for (i = 0; i < sourceSymbolKeys.length; i++) {
      key = sourceSymbolKeys[i];
      if (excluded.indexOf(key) >= 0) continue;
      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
      target[key] = source[key];
    }
  }

  return target;
}

module.exports = _objectWithoutProperties;

/***/ }),

/***/ "4160":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__("23e7");
var forEach = __webpack_require__("17c2");

// `Array.prototype.forEach` method
// https://tc39.github.io/ecma262/#sec-array.prototype.foreach
$({ target: 'Array', proto: true, forced: [].forEach != forEach }, {
  forEach: forEach
});


/***/ }),

/***/ "428f":
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__("da84");

module.exports = global;


/***/ }),

/***/ "4362":
/***/ (function(module, exports, __webpack_require__) {

exports.nextTick = function nextTick(fn) {
    var args = Array.prototype.slice.call(arguments);
    args.shift();
    setTimeout(function () {
        fn.apply(null, args);
    }, 0);
};

exports.platform = exports.arch = 
exports.execPath = exports.title = 'browser';
exports.pid = 1;
exports.browser = true;
exports.env = {};
exports.argv = [];

exports.binding = function (name) {
	throw new Error('No such module. (Possibly not yet loaded)')
};

(function () {
    var cwd = '/';
    var path;
    exports.cwd = function () { return cwd };
    exports.chdir = function (dir) {
        if (!path) path = __webpack_require__("df7c");
        cwd = path.resolve(dir, cwd);
    };
})();

exports.exit = exports.kill = 
exports.umask = exports.dlopen = 
exports.uptime = exports.memoryUsage = 
exports.uvCounters = function() {};
exports.features = {};


/***/ }),

/***/ "44ad":
/***/ (function(module, exports, __webpack_require__) {

var fails = __webpack_require__("d039");
var classof = __webpack_require__("c6b6");

var split = ''.split;

// fallback for non-array-like ES3 and non-enumerable old V8 strings
module.exports = fails(function () {
  // throws an error in rhino, see https://github.com/mozilla/rhino/issues/346
  // eslint-disable-next-line no-prototype-builtins
  return !Object('z').propertyIsEnumerable(0);
}) ? function (it) {
  return classof(it) == 'String' ? split.call(it, '') : Object(it);
} : Object;


/***/ }),

/***/ "44d2":
/***/ (function(module, exports, __webpack_require__) {

var wellKnownSymbol = __webpack_require__("b622");
var create = __webpack_require__("7c73");
var definePropertyModule = __webpack_require__("9bf2");

var UNSCOPABLES = wellKnownSymbol('unscopables');
var ArrayPrototype = Array.prototype;

// Array.prototype[@@unscopables]
// https://tc39.github.io/ecma262/#sec-array.prototype-@@unscopables
if (ArrayPrototype[UNSCOPABLES] == undefined) {
  definePropertyModule.f(ArrayPrototype, UNSCOPABLES, {
    configurable: true,
    value: create(null)
  });
}

// add a key to Array.prototype[@@unscopables]
module.exports = function (key) {
  ArrayPrototype[UNSCOPABLES][key] = true;
};


/***/ }),

/***/ "44de":
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__("da84");

module.exports = function (a, b) {
  var console = global.console;
  if (console && console.error) {
    arguments.length === 1 ? console.error(a) : console.error(a, b);
  }
};


/***/ }),

/***/ "44e7":
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__("861d");
var classof = __webpack_require__("c6b6");
var wellKnownSymbol = __webpack_require__("b622");

var MATCH = wellKnownSymbol('match');

// `IsRegExp` abstract operation
// https://tc39.github.io/ecma262/#sec-isregexp
module.exports = function (it) {
  var isRegExp;
  return isObject(it) && ((isRegExp = it[MATCH]) !== undefined ? !!isRegExp : classof(it) == 'RegExp');
};


/***/ }),

/***/ "467f":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var createError = __webpack_require__("2d83");

/**
 * Resolve or reject a Promise based on response status.
 *
 * @param {Function} resolve A function that resolves the promise.
 * @param {Function} reject A function that rejects the promise.
 * @param {object} response The response.
 */
module.exports = function settle(resolve, reject, response) {
  var validateStatus = response.config.validateStatus;
  if (!validateStatus || validateStatus(response.status)) {
    resolve(response);
  } else {
    reject(createError(
      'Request failed with status code ' + response.status,
      response.config,
      null,
      response.request,
      response
    ));
  }
};


/***/ }),

/***/ "4840":
/***/ (function(module, exports, __webpack_require__) {

var anObject = __webpack_require__("825a");
var aFunction = __webpack_require__("1c0b");
var wellKnownSymbol = __webpack_require__("b622");

var SPECIES = wellKnownSymbol('species');

// `SpeciesConstructor` abstract operation
// https://tc39.github.io/ecma262/#sec-speciesconstructor
module.exports = function (O, defaultConstructor) {
  var C = anObject(O).constructor;
  var S;
  return C === undefined || (S = anObject(C)[SPECIES]) == undefined ? defaultConstructor : aFunction(S);
};


/***/ }),

/***/ "4930":
/***/ (function(module, exports, __webpack_require__) {

var fails = __webpack_require__("d039");

module.exports = !!Object.getOwnPropertySymbols && !fails(function () {
  // Chrome 38 Symbol has incorrect toString conversion
  // eslint-disable-next-line no-undef
  return !String(Symbol());
});


/***/ }),

/***/ "4a7b":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__("c532");

/**
 * Config-specific merge-function which creates a new config-object
 * by merging two configuration objects together.
 *
 * @param {Object} config1
 * @param {Object} config2
 * @returns {Object} New object resulting from merging config2 to config1
 */
module.exports = function mergeConfig(config1, config2) {
  // eslint-disable-next-line no-param-reassign
  config2 = config2 || {};
  var config = {};

  var valueFromConfig2Keys = ['url', 'method', 'params', 'data'];
  var mergeDeepPropertiesKeys = ['headers', 'auth', 'proxy'];
  var defaultToConfig2Keys = [
    'baseURL', 'url', 'transformRequest', 'transformResponse', 'paramsSerializer',
    'timeout', 'withCredentials', 'adapter', 'responseType', 'xsrfCookieName',
    'xsrfHeaderName', 'onUploadProgress', 'onDownloadProgress',
    'maxContentLength', 'validateStatus', 'maxRedirects', 'httpAgent',
    'httpsAgent', 'cancelToken', 'socketPath'
  ];

  utils.forEach(valueFromConfig2Keys, function valueFromConfig2(prop) {
    if (typeof config2[prop] !== 'undefined') {
      config[prop] = config2[prop];
    }
  });

  utils.forEach(mergeDeepPropertiesKeys, function mergeDeepProperties(prop) {
    if (utils.isObject(config2[prop])) {
      config[prop] = utils.deepMerge(config1[prop], config2[prop]);
    } else if (typeof config2[prop] !== 'undefined') {
      config[prop] = config2[prop];
    } else if (utils.isObject(config1[prop])) {
      config[prop] = utils.deepMerge(config1[prop]);
    } else if (typeof config1[prop] !== 'undefined') {
      config[prop] = config1[prop];
    }
  });

  utils.forEach(defaultToConfig2Keys, function defaultToConfig2(prop) {
    if (typeof config2[prop] !== 'undefined') {
      config[prop] = config2[prop];
    } else if (typeof config1[prop] !== 'undefined') {
      config[prop] = config1[prop];
    }
  });

  var axiosKeys = valueFromConfig2Keys
    .concat(mergeDeepPropertiesKeys)
    .concat(defaultToConfig2Keys);

  var otherKeys = Object
    .keys(config2)
    .filter(function filterAxiosKeys(key) {
      return axiosKeys.indexOf(key) === -1;
    });

  utils.forEach(otherKeys, function otherKeysDefaultToConfig2(prop) {
    if (typeof config2[prop] !== 'undefined') {
      config[prop] = config2[prop];
    } else if (typeof config1[prop] !== 'undefined') {
      config[prop] = config1[prop];
    }
  });

  return config;
};


/***/ }),

/***/ "4ae1":
/***/ (function(module, exports, __webpack_require__) {

var $ = __webpack_require__("23e7");
var getBuiltIn = __webpack_require__("d066");
var aFunction = __webpack_require__("1c0b");
var anObject = __webpack_require__("825a");
var isObject = __webpack_require__("861d");
var create = __webpack_require__("7c73");
var bind = __webpack_require__("0538");
var fails = __webpack_require__("d039");

var nativeConstruct = getBuiltIn('Reflect', 'construct');

// `Reflect.construct` method
// https://tc39.github.io/ecma262/#sec-reflect.construct
// MS Edge supports only 2 arguments and argumentsList argument is optional
// FF Nightly sets third argument as `new.target`, but does not create `this` from it
var NEW_TARGET_BUG = fails(function () {
  function F() { /* empty */ }
  return !(nativeConstruct(function () { /* empty */ }, [], F) instanceof F);
});
var ARGS_BUG = !fails(function () {
  nativeConstruct(function () { /* empty */ });
});
var FORCED = NEW_TARGET_BUG || ARGS_BUG;

$({ target: 'Reflect', stat: true, forced: FORCED, sham: FORCED }, {
  construct: function construct(Target, args /* , newTarget */) {
    aFunction(Target);
    anObject(args);
    var newTarget = arguments.length < 3 ? Target : aFunction(arguments[2]);
    if (ARGS_BUG && !NEW_TARGET_BUG) return nativeConstruct(Target, args, newTarget);
    if (Target == newTarget) {
      // w/o altered newTarget, optimization for 0-4 arguments
      switch (args.length) {
        case 0: return new Target();
        case 1: return new Target(args[0]);
        case 2: return new Target(args[0], args[1]);
        case 3: return new Target(args[0], args[1], args[2]);
        case 4: return new Target(args[0], args[1], args[2], args[3]);
      }
      // w/o altered newTarget, lot of arguments case
      var $args = [null];
      $args.push.apply($args, args);
      return new (bind.apply(Target, $args))();
    }
    // with altered newTarget, not support built-in constructors
    var proto = newTarget.prototype;
    var instance = create(isObject(proto) ? proto : Object.prototype);
    var result = Function.apply.call(Target, instance, args);
    return isObject(result) ? result : instance;
  }
});


/***/ }),

/***/ "4d64":
/***/ (function(module, exports, __webpack_require__) {

var toIndexedObject = __webpack_require__("fc6a");
var toLength = __webpack_require__("50c4");
var toAbsoluteIndex = __webpack_require__("23cb");

// `Array.prototype.{ indexOf, includes }` methods implementation
var createMethod = function (IS_INCLUDES) {
  return function ($this, el, fromIndex) {
    var O = toIndexedObject($this);
    var length = toLength(O.length);
    var index = toAbsoluteIndex(fromIndex, length);
    var value;
    // Array#includes uses SameValueZero equality algorithm
    // eslint-disable-next-line no-self-compare
    if (IS_INCLUDES && el != el) while (length > index) {
      value = O[index++];
      // eslint-disable-next-line no-self-compare
      if (value != value) return true;
    // Array#indexOf ignores holes, Array#includes - not
    } else for (;length > index; index++) {
      if ((IS_INCLUDES || index in O) && O[index] === el) return IS_INCLUDES || index || 0;
    } return !IS_INCLUDES && -1;
  };
};

module.exports = {
  // `Array.prototype.includes` method
  // https://tc39.github.io/ecma262/#sec-array.prototype.includes
  includes: createMethod(true),
  // `Array.prototype.indexOf` method
  // https://tc39.github.io/ecma262/#sec-array.prototype.indexof
  indexOf: createMethod(false)
};


/***/ }),

/***/ "4de4":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__("23e7");
var $filter = __webpack_require__("b727").filter;
var arrayMethodHasSpeciesSupport = __webpack_require__("1dde");
var arrayMethodUsesToLength = __webpack_require__("ae40");

var HAS_SPECIES_SUPPORT = arrayMethodHasSpeciesSupport('filter');
// Edge 14- issue
var USES_TO_LENGTH = arrayMethodUsesToLength('filter');

// `Array.prototype.filter` method
// https://tc39.github.io/ecma262/#sec-array.prototype.filter
// with adding support of @@species
$({ target: 'Array', proto: true, forced: !HAS_SPECIES_SUPPORT || !USES_TO_LENGTH }, {
  filter: function filter(callbackfn /* , thisArg */) {
    return $filter(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);
  }
});


/***/ }),

/***/ "4df4":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var bind = __webpack_require__("0366");
var toObject = __webpack_require__("7b0b");
var callWithSafeIterationClosing = __webpack_require__("9bdd");
var isArrayIteratorMethod = __webpack_require__("e95a");
var toLength = __webpack_require__("50c4");
var createProperty = __webpack_require__("8418");
var getIteratorMethod = __webpack_require__("35a1");

// `Array.from` method implementation
// https://tc39.github.io/ecma262/#sec-array.from
module.exports = function from(arrayLike /* , mapfn = undefined, thisArg = undefined */) {
  var O = toObject(arrayLike);
  var C = typeof this == 'function' ? this : Array;
  var argumentsLength = arguments.length;
  var mapfn = argumentsLength > 1 ? arguments[1] : undefined;
  var mapping = mapfn !== undefined;
  var iteratorMethod = getIteratorMethod(O);
  var index = 0;
  var length, result, step, iterator, next, value;
  if (mapping) mapfn = bind(mapfn, argumentsLength > 2 ? arguments[2] : undefined, 2);
  // if the target is not iterable or it's an array with the default iterator - use a simple case
  if (iteratorMethod != undefined && !(C == Array && isArrayIteratorMethod(iteratorMethod))) {
    iterator = iteratorMethod.call(O);
    next = iterator.next;
    result = new C();
    for (;!(step = next.call(iterator)).done; index++) {
      value = mapping ? callWithSafeIterationClosing(iterator, mapfn, [step.value, index], true) : step.value;
      createProperty(result, index, value);
    }
  } else {
    length = toLength(O.length);
    result = new C(length);
    for (;length > index; index++) {
      value = mapping ? mapfn(O[index], index) : O[index];
      createProperty(result, index, value);
    }
  }
  result.length = index;
  return result;
};


/***/ }),

/***/ "4ec9":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var collection = __webpack_require__("6d61");
var collectionStrong = __webpack_require__("6566");

// `Map` constructor
// https://tc39.github.io/ecma262/#sec-map-objects
module.exports = collection('Map', function (init) {
  return function Map() { return init(this, arguments.length ? arguments[0] : undefined); };
}, collectionStrong);


/***/ }),

/***/ "50c4":
/***/ (function(module, exports, __webpack_require__) {

var toInteger = __webpack_require__("a691");

var min = Math.min;

// `ToLength` abstract operation
// https://tc39.github.io/ecma262/#sec-tolength
module.exports = function (argument) {
  return argument > 0 ? min(toInteger(argument), 0x1FFFFFFFFFFFFF) : 0; // 2 ** 53 - 1 == 9007199254740991
};


/***/ }),

/***/ "5135":
/***/ (function(module, exports) {

var hasOwnProperty = {}.hasOwnProperty;

module.exports = function (it, key) {
  return hasOwnProperty.call(it, key);
};


/***/ }),

/***/ "5270":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__("c532");
var transformData = __webpack_require__("c401");
var isCancel = __webpack_require__("2e67");
var defaults = __webpack_require__("2444");

/**
 * Throws a `Cancel` if cancellation has been requested.
 */
function throwIfCancellationRequested(config) {
  if (config.cancelToken) {
    config.cancelToken.throwIfRequested();
  }
}

/**
 * Dispatch a request to the server using the configured adapter.
 *
 * @param {object} config The config that is to be used for the request
 * @returns {Promise} The Promise to be fulfilled
 */
module.exports = function dispatchRequest(config) {
  throwIfCancellationRequested(config);

  // Ensure headers exist
  config.headers = config.headers || {};

  // Transform request data
  config.data = transformData(
    config.data,
    config.headers,
    config.transformRequest
  );

  // Flatten headers
  config.headers = utils.merge(
    config.headers.common || {},
    config.headers[config.method] || {},
    config.headers
  );

  utils.forEach(
    ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],
    function cleanHeaderConfig(method) {
      delete config.headers[method];
    }
  );

  var adapter = config.adapter || defaults.adapter;

  return adapter(config).then(function onAdapterResolution(response) {
    throwIfCancellationRequested(config);

    // Transform response data
    response.data = transformData(
      response.data,
      response.headers,
      config.transformResponse
    );

    return response;
  }, function onAdapterRejection(reason) {
    if (!isCancel(reason)) {
      throwIfCancellationRequested(config);

      // Transform response data
      if (reason && reason.response) {
        reason.response.data = transformData(
          reason.response.data,
          reason.response.headers,
          config.transformResponse
        );
      }
    }

    return Promise.reject(reason);
  });
};


/***/ }),

/***/ "5319":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var fixRegExpWellKnownSymbolLogic = __webpack_require__("d784");
var anObject = __webpack_require__("825a");
var toObject = __webpack_require__("7b0b");
var toLength = __webpack_require__("50c4");
var toInteger = __webpack_require__("a691");
var requireObjectCoercible = __webpack_require__("1d80");
var advanceStringIndex = __webpack_require__("8aa5");
var regExpExec = __webpack_require__("14c3");

var max = Math.max;
var min = Math.min;
var floor = Math.floor;
var SUBSTITUTION_SYMBOLS = /\$([$&'`]|\d\d?|<[^>]*>)/g;
var SUBSTITUTION_SYMBOLS_NO_NAMED = /\$([$&'`]|\d\d?)/g;

var maybeToString = function (it) {
  return it === undefined ? it : String(it);
};

// @@replace logic
fixRegExpWellKnownSymbolLogic('replace', 2, function (REPLACE, nativeReplace, maybeCallNative, reason) {
  var REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE = reason.REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE;
  var REPLACE_KEEPS_$0 = reason.REPLACE_KEEPS_$0;
  var UNSAFE_SUBSTITUTE = REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE ? '$' : '$0';

  return [
    // `String.prototype.replace` method
    // https://tc39.github.io/ecma262/#sec-string.prototype.replace
    function replace(searchValue, replaceValue) {
      var O = requireObjectCoercible(this);
      var replacer = searchValue == undefined ? undefined : searchValue[REPLACE];
      return replacer !== undefined
        ? replacer.call(searchValue, O, replaceValue)
        : nativeReplace.call(String(O), searchValue, replaceValue);
    },
    // `RegExp.prototype[@@replace]` method
    // https://tc39.github.io/ecma262/#sec-regexp.prototype-@@replace
    function (regexp, replaceValue) {
      if (
        (!REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE && REPLACE_KEEPS_$0) ||
        (typeof replaceValue === 'string' && replaceValue.indexOf(UNSAFE_SUBSTITUTE) === -1)
      ) {
        var res = maybeCallNative(nativeReplace, regexp, this, replaceValue);
        if (res.done) return res.value;
      }

      var rx = anObject(regexp);
      var S = String(this);

      var functionalReplace = typeof replaceValue === 'function';
      if (!functionalReplace) replaceValue = String(replaceValue);

      var global = rx.global;
      if (global) {
        var fullUnicode = rx.unicode;
        rx.lastIndex = 0;
      }
      var results = [];
      while (true) {
        var result = regExpExec(rx, S);
        if (result === null) break;

        results.push(result);
        if (!global) break;

        var matchStr = String(result[0]);
        if (matchStr === '') rx.lastIndex = advanceStringIndex(S, toLength(rx.lastIndex), fullUnicode);
      }

      var accumulatedResult = '';
      var nextSourcePosition = 0;
      for (var i = 0; i < results.length; i++) {
        result = results[i];

        var matched = String(result[0]);
        var position = max(min(toInteger(result.index), S.length), 0);
        var captures = [];
        // NOTE: This is equivalent to
        //   captures = result.slice(1).map(maybeToString)
        // but for some reason `nativeSlice.call(result, 1, result.length)` (called in
        // the slice polyfill when slicing native arrays) "doesn't work" in safari 9 and
        // causes a crash (https://pastebin.com/N21QzeQA) when trying to debug it.
        for (var j = 1; j < result.length; j++) captures.push(maybeToString(result[j]));
        var namedCaptures = result.groups;
        if (functionalReplace) {
          var replacerArgs = [matched].concat(captures, position, S);
          if (namedCaptures !== undefined) replacerArgs.push(namedCaptures);
          var replacement = String(replaceValue.apply(undefined, replacerArgs));
        } else {
          replacement = getSubstitution(matched, S, position, captures, namedCaptures, replaceValue);
        }
        if (position >= nextSourcePosition) {
          accumulatedResult += S.slice(nextSourcePosition, position) + replacement;
          nextSourcePosition = position + matched.length;
        }
      }
      return accumulatedResult + S.slice(nextSourcePosition);
    }
  ];

  // https://tc39.github.io/ecma262/#sec-getsubstitution
  function getSubstitution(matched, str, position, captures, namedCaptures, replacement) {
    var tailPos = position + matched.length;
    var m = captures.length;
    var symbols = SUBSTITUTION_SYMBOLS_NO_NAMED;
    if (namedCaptures !== undefined) {
      namedCaptures = toObject(namedCaptures);
      symbols = SUBSTITUTION_SYMBOLS;
    }
    return nativeReplace.call(replacement, symbols, function (match, ch) {
      var capture;
      switch (ch.charAt(0)) {
        case '$': return '$';
        case '&': return matched;
        case '`': return str.slice(0, position);
        case "'": return str.slice(tailPos);
        case '<':
          capture = namedCaptures[ch.slice(1, -1)];
          break;
        default: // \d\d?
          var n = +ch;
          if (n === 0) return match;
          if (n > m) {
            var f = floor(n / 10);
            if (f === 0) return match;
            if (f <= m) return captures[f - 1] === undefined ? ch.charAt(1) : captures[f - 1] + ch.charAt(1);
            return match;
          }
          capture = captures[n - 1];
      }
      return capture === undefined ? '' : capture;
    });
  }
});


/***/ }),

/***/ "53de":
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__("99af");

__webpack_require__("cca6");

var _objectSpread = __webpack_require__("ded3");

var _objectWithoutProperties = __webpack_require__("4082");

module.exports = {
  functional: true,
  render: function render(_h, _vm) {
    var _c = _vm._c,
        _v = _vm._v,
        data = _vm.data,
        _vm$children = _vm.children,
        children = _vm$children === void 0 ? [] : _vm$children;

    var classNames = data.class,
        staticClass = data.staticClass,
        style = data.style,
        staticStyle = data.staticStyle,
        _data$attrs = data.attrs,
        attrs = _data$attrs === void 0 ? {} : _data$attrs,
        rest = _objectWithoutProperties(data, ["class", "staticClass", "style", "staticStyle", "attrs"]);

    return _c('svg', _objectSpread({
      class: [classNames, staticClass],
      style: [style, staticStyle],
      attrs: Object.assign({
        "xmlns": "http://www.w3.org/2000/svg",
        "width": "595.3",
        "height": "367.54"
      }, attrs)
    }, rest), children.concat([_c('defs', [_c('clipPath', {
      attrs: {
        "id": "a"
      }
    }, [_c('path', {
      attrs: {
        "fill": "none",
        "d": "M0 0h595.3v367.54H0z"
      }
    })])]), _c('path', {
      attrs: {
        "fill": "#e8ecf1",
        "d": "M0 0h595.3v367.54H0z"
      }
    }), _c('g', {
      attrs: {
        "clip-path": "url(#a)"
      }
    }, [_c('path', {
      staticClass: "d",
      attrs: {
        "d": "M325.2 77.4v9c6.1 0 14.1 4.7 19.7 8.7l-124.2 55.1c.8-8.2 3.3-19.2 8.7-21.5h.2l25.1-11.7 10.3-4.8-6.1-7.8 26.6-11.8 1.7 10 10.6-4.7L322.4 87a7.3 7.3 0 012.9-.5v-9m0 0a16.1 16.1 0 00-6.6 1.3L294 89.5a7.8 7.8 0 00-10.9-5.9l-29.3 13a7.8 7.8 0 00-4 10.4 7.5 7.5 0 001 1.7l-25.1 11.7c-15.2 6.7-14.8 37.8-14 39.6a3.6 3.6 0 004.7 1.8l140-62.1a3.6 3.6 0 001.8-4.8c-.7-1.6-18.5-17.7-33.2-17.7M358.4 185.4l1.2 79.7a6.7 6.7 0 01-6.6 6.8l-120.8 1.8h-.1a6.7 6.7 0 01-6.7-6.6l-1.2-79.7 134.2-2m9.4-9.1l-153.2 2.3a3.6 3.6 0 00.1 7.2h.6l1.2 81.5a15.7 15.7 0 0015.7 15.5h.2l120.8-1.8a15.7 15.7 0 0015.5-16l-1.2-81.5h.5a3.6 3.6 0 00-.1-7.2M380.7 124.1a7.1 7.1 0 017 6.5 7 7 0 01-6.5 7.6h-.6a7 7 0 11-.5-14h.6m0-9h-1.3a16.013 16.013 0 101.3 32h1.3a16.013 16.013 0 00-1.3-32M329.5 131.9a10.666 10.666 0 01.8 21.3h-.9a10.666 10.666 0 01-.8-21.3h.9m0-9H328a19.7 19.7 0 001.5 39.3h1.6a19.7 19.7 0 00-1.5-39.3M406.7 88h1a4.2 4.2 0 01-1 8.3h-1a4.2 4.2 0 011-8.3m0-8a12.2 12.2 0 102.8.3 12.2 12.2 0 00-2.8-.3"
      }
    })])]));
  }
};

/***/ }),

/***/ "5692":
/***/ (function(module, exports, __webpack_require__) {

var IS_PURE = __webpack_require__("c430");
var store = __webpack_require__("c6cd");

(module.exports = function (key, value) {
  return store[key] || (store[key] = value !== undefined ? value : {});
})('versions', []).push({
  version: '3.8.1',
  mode: IS_PURE ? 'pure' : 'global',
  copyright: '© 2020 Denis Pushkarev (zloirock.ru)'
});


/***/ }),

/***/ "56ef":
/***/ (function(module, exports, __webpack_require__) {

var getBuiltIn = __webpack_require__("d066");
var getOwnPropertyNamesModule = __webpack_require__("241c");
var getOwnPropertySymbolsModule = __webpack_require__("7418");
var anObject = __webpack_require__("825a");

// all object keys, includes non-enumerable and symbols
module.exports = getBuiltIn('Reflect', 'ownKeys') || function ownKeys(it) {
  var keys = getOwnPropertyNamesModule.f(anObject(it));
  var getOwnPropertySymbols = getOwnPropertySymbolsModule.f;
  return getOwnPropertySymbols ? keys.concat(getOwnPropertySymbols(it)) : keys;
};


/***/ }),

/***/ "5899":
/***/ (function(module, exports) {

// a string of all valid unicode whitespaces
// eslint-disable-next-line max-len
module.exports = '\u0009\u000A\u000B\u000C\u000D\u0020\u00A0\u1680\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200A\u202F\u205F\u3000\u2028\u2029\uFEFF';


/***/ }),

/***/ "58a8":
/***/ (function(module, exports, __webpack_require__) {

var requireObjectCoercible = __webpack_require__("1d80");
var whitespaces = __webpack_require__("5899");

var whitespace = '[' + whitespaces + ']';
var ltrim = RegExp('^' + whitespace + whitespace + '*');
var rtrim = RegExp(whitespace + whitespace + '*$');

// `String.prototype.{ trim, trimStart, trimEnd, trimLeft, trimRight }` methods implementation
var createMethod = function (TYPE) {
  return function ($this) {
    var string = String(requireObjectCoercible($this));
    if (TYPE & 1) string = string.replace(ltrim, '');
    if (TYPE & 2) string = string.replace(rtrim, '');
    return string;
  };
};

module.exports = {
  // `String.prototype.{ trimLeft, trimStart }` methods
  // https://tc39.github.io/ecma262/#sec-string.prototype.trimstart
  start: createMethod(1),
  // `String.prototype.{ trimRight, trimEnd }` methods
  // https://tc39.github.io/ecma262/#sec-string.prototype.trimend
  end: createMethod(2),
  // `String.prototype.trim` method
  // https://tc39.github.io/ecma262/#sec-string.prototype.trim
  trim: createMethod(3)
};


/***/ }),

/***/ "5903":
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__("7fd6");
if(typeof content === 'string') content = [[module.i, content, '']];
if(content.locals) module.exports = content.locals;
// add CSS to Shadow Root
var add = __webpack_require__("35d6").default
module.exports.__inject__ = function (shadowRoot) {
  add("11cb508a", content, shadowRoot)
};

/***/ }),

/***/ "5a74":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// CONCATENATED MODULE: ./node_modules/@vue/cli-service/lib/commands/build/setPublicPath.js
// This file is imported into lib/wc client bundles.

if (typeof window !== 'undefined') {
  var currentScript = window.document.currentScript
  if (Object({"NODE_ENV":"production","BASE_URL":"/"}).NEED_CURRENTSCRIPT_POLYFILL) {
    var getCurrentScript = __webpack_require__("8875")
    currentScript = getCurrentScript()

    // for backward compatibility, because previously we directly included the polyfill
    if (!('currentScript' in document)) {
      Object.defineProperty(document, 'currentScript', { get: getCurrentScript })
    }
  }

  var src = currentScript && currentScript.src.match(/(.+\/)[^/]+\.js(\?.*)?$/)
  if (src) {
    __webpack_require__.p = src[1] // eslint-disable-line
  }
}

// Indicate to webpack that this file can be concatenated
/* harmony default export */ var setPublicPath = (null);

// EXTERNAL MODULE: ./node_modules/vue/dist/vue.runtime.esm.js
var vue_runtime_esm = __webpack_require__("2b0e");

// CONCATENATED MODULE: ./node_modules/@vue/web-component-wrapper/dist/vue-wc-wrapper.js
const camelizeRE = /-(\w)/g;
const camelize = str => {
  return str.replace(camelizeRE, (_, c) => c ? c.toUpperCase() : '')
};

const hyphenateRE = /\B([A-Z])/g;
const hyphenate = str => {
  return str.replace(hyphenateRE, '-$1').toLowerCase()
};

function getInitialProps (propsList) {
  const res = {};
  propsList.forEach(key => {
    res[key] = undefined;
  });
  return res
}

function injectHook (options, key, hook) {
  options[key] = [].concat(options[key] || []);
  options[key].unshift(hook);
}

function callHooks (vm, hook) {
  if (vm) {
    const hooks = vm.$options[hook] || [];
    hooks.forEach(hook => {
      hook.call(vm);
    });
  }
}

function createCustomEvent (name, args) {
  return new CustomEvent(name, {
    bubbles: false,
    cancelable: false,
    detail: args
  })
}

const isBoolean = val => /function Boolean/.test(String(val));
const isNumber = val => /function Number/.test(String(val));

function convertAttributeValue (value, name, { type } = {}) {
  if (isBoolean(type)) {
    if (value === 'true' || value === 'false') {
      return value === 'true'
    }
    if (value === '' || value === name) {
      return true
    }
    return value != null
  } else if (isNumber(type)) {
    const parsed = parseFloat(value, 10);
    return isNaN(parsed) ? value : parsed
  } else {
    return value
  }
}

function toVNodes (h, children) {
  const res = [];
  for (let i = 0, l = children.length; i < l; i++) {
    res.push(toVNode(h, children[i]));
  }
  return res
}

function toVNode (h, node) {
  if (node.nodeType === 3) {
    return node.data.trim() ? node.data : null
  } else if (node.nodeType === 1) {
    const data = {
      attrs: getAttributes(node),
      domProps: {
        innerHTML: node.innerHTML
      }
    };
    if (data.attrs.slot) {
      data.slot = data.attrs.slot;
      delete data.attrs.slot;
    }
    return h(node.tagName, data)
  } else {
    return null
  }
}

function getAttributes (node) {
  const res = {};
  for (let i = 0, l = node.attributes.length; i < l; i++) {
    const attr = node.attributes[i];
    res[attr.nodeName] = attr.nodeValue;
  }
  return res
}

function wrap (Vue, Component) {
  const isAsync = typeof Component === 'function' && !Component.cid;
  let isInitialized = false;
  let hyphenatedPropsList;
  let camelizedPropsList;
  let camelizedPropsMap;

  function initialize (Component) {
    if (isInitialized) return

    const options = typeof Component === 'function'
      ? Component.options
      : Component;

    // extract props info
    const propsList = Array.isArray(options.props)
      ? options.props
      : Object.keys(options.props || {});
    hyphenatedPropsList = propsList.map(hyphenate);
    camelizedPropsList = propsList.map(camelize);
    const originalPropsAsObject = Array.isArray(options.props) ? {} : options.props || {};
    camelizedPropsMap = camelizedPropsList.reduce((map, key, i) => {
      map[key] = originalPropsAsObject[propsList[i]];
      return map
    }, {});

    // proxy $emit to native DOM events
    injectHook(options, 'beforeCreate', function () {
      const emit = this.$emit;
      this.$emit = (name, ...args) => {
        this.$root.$options.customElement.dispatchEvent(createCustomEvent(name, args));
        return emit.call(this, name, ...args)
      };
    });

    injectHook(options, 'created', function () {
      // sync default props values to wrapper on created
      camelizedPropsList.forEach(key => {
        this.$root.props[key] = this[key];
      });
    });

    // proxy props as Element properties
    camelizedPropsList.forEach(key => {
      Object.defineProperty(CustomElement.prototype, key, {
        get () {
          return this._wrapper.props[key]
        },
        set (newVal) {
          this._wrapper.props[key] = newVal;
        },
        enumerable: false,
        configurable: true
      });
    });

    isInitialized = true;
  }

  function syncAttribute (el, key) {
    const camelized = camelize(key);
    const value = el.hasAttribute(key) ? el.getAttribute(key) : undefined;
    el._wrapper.props[camelized] = convertAttributeValue(
      value,
      key,
      camelizedPropsMap[camelized]
    );
  }

  class CustomElement extends HTMLElement {
    constructor () {
      super();
      this.attachShadow({ mode: 'open' });

      const wrapper = this._wrapper = new Vue({
        name: 'shadow-root',
        customElement: this,
        shadowRoot: this.shadowRoot,
        data () {
          return {
            props: {},
            slotChildren: []
          }
        },
        render (h) {
          return h(Component, {
            ref: 'inner',
            props: this.props
          }, this.slotChildren)
        }
      });

      // Use MutationObserver to react to future attribute & slot content change
      const observer = new MutationObserver(mutations => {
        let hasChildrenChange = false;
        for (let i = 0; i < mutations.length; i++) {
          const m = mutations[i];
          if (isInitialized && m.type === 'attributes' && m.target === this) {
            syncAttribute(this, m.attributeName);
          } else {
            hasChildrenChange = true;
          }
        }
        if (hasChildrenChange) {
          wrapper.slotChildren = Object.freeze(toVNodes(
            wrapper.$createElement,
            this.childNodes
          ));
        }
      });
      observer.observe(this, {
        childList: true,
        subtree: true,
        characterData: true,
        attributes: true
      });
    }

    get vueComponent () {
      return this._wrapper.$refs.inner
    }

    connectedCallback () {
      const wrapper = this._wrapper;
      if (!wrapper._isMounted) {
        // initialize attributes
        const syncInitialAttributes = () => {
          wrapper.props = getInitialProps(camelizedPropsList);
          hyphenatedPropsList.forEach(key => {
            syncAttribute(this, key);
          });
        };

        if (isInitialized) {
          syncInitialAttributes();
        } else {
          // async & unresolved
          Component().then(resolved => {
            if (resolved.__esModule || resolved[Symbol.toStringTag] === 'Module') {
              resolved = resolved.default;
            }
            initialize(resolved);
            syncInitialAttributes();
          });
        }
        // initialize children
        wrapper.slotChildren = Object.freeze(toVNodes(
          wrapper.$createElement,
          this.childNodes
        ));
        wrapper.$mount();
        this.shadowRoot.appendChild(wrapper.$el);
      } else {
        callHooks(this.vueComponent, 'activated');
      }
    }

    disconnectedCallback () {
      callHooks(this.vueComponent, 'deactivated');
    }
  }

  if (!isAsync) {
    initialize(Component);
  }

  return CustomElement
}

/* harmony default export */ var vue_wc_wrapper = (wrap);

// EXTERNAL MODULE: ./node_modules/css-loader/dist/runtime/api.js
var api = __webpack_require__("24fb");

// EXTERNAL MODULE: ./node_modules/vue-style-loader/lib/addStylesShadow.js + 1 modules
var addStylesShadow = __webpack_require__("35d6");

// CONCATENATED MODULE: ./node_modules/vue-loader/lib/runtime/componentNormalizer.js
/* globals __VUE_SSR_CONTEXT__ */

// IMPORTANT: Do NOT use ES2015 features in this file (except for modules).
// This module is a runtime utility for cleaner component module output and will
// be included in the final webpack user bundle.

function normalizeComponent (
  scriptExports,
  render,
  staticRenderFns,
  functionalTemplate,
  injectStyles,
  scopeId,
  moduleIdentifier, /* server only */
  shadowMode /* vue-cli only */
) {
  // Vue.extend constructor export interop
  var options = typeof scriptExports === 'function'
    ? scriptExports.options
    : scriptExports

  // render functions
  if (render) {
    options.render = render
    options.staticRenderFns = staticRenderFns
    options._compiled = true
  }

  // functional template
  if (functionalTemplate) {
    options.functional = true
  }

  // scopedId
  if (scopeId) {
    options._scopeId = 'data-v-' + scopeId
  }

  var hook
  if (moduleIdentifier) { // server build
    hook = function (context) {
      // 2.3 injection
      context =
        context || // cached call
        (this.$vnode && this.$vnode.ssrContext) || // stateful
        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional
      // 2.2 with runInNewContext: true
      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {
        context = __VUE_SSR_CONTEXT__
      }
      // inject component styles
      if (injectStyles) {
        injectStyles.call(this, context)
      }
      // register component module identifier for async chunk inferrence
      if (context && context._registeredComponents) {
        context._registeredComponents.add(moduleIdentifier)
      }
    }
    // used by ssr in case component is cached and beforeCreate
    // never gets called
    options._ssrRegister = hook
  } else if (injectStyles) {
    hook = shadowMode
      ? function () {
        injectStyles.call(
          this,
          (options.functional ? this.parent : this).$root.$options.shadowRoot
        )
      }
      : injectStyles
  }

  if (hook) {
    if (options.functional) {
      // for template-only hot-reload because in that case the render fn doesn't
      // go through the normalizer
      options._injectStyles = hook
      // register for functional component in vue file
      var originalRender = options.render
      options.render = function renderWithStyleInjection (h, context) {
        hook.call(context)
        return originalRender(h, context)
      }
    } else {
      // inject component registration as beforeCreate hook
      var existing = options.beforeCreate
      options.beforeCreate = existing
        ? [].concat(existing, hook)
        : [hook]
    }
  }

  return {
    exports: scriptExports,
    options: options
  }
}

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js?{"cacheDirectory":"node_modules/.cache/vue-loader","cacheIdentifier":"3d39ec6c-vue-loader-template"}!./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/App.vue?vue&type=template&id=cb67dd4a&shadow
var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{"id":"app"}},[(_vm.detailContentId)?_c('item-detail',{attrs:{"content-id":_vm.detailContentId,"is-list-available":_vm.islistAvailable,"content-type":_vm.contentType,"language":_vm.language},on:{"close":_vm.closeDetail}}):_c('items-list',{attrs:{"language":_vm.language,"contentType":_vm.contentType,"contentIdList":_vm.contentIdList,"pageSize":_vm.pageSize,"category":_vm.category,"current-page":_vm.currentPage,"defaultPresentation":_vm.defaultPresentation},on:{"show-detail":_vm.showDetail,"change-current-page":_vm.changeCurrentPage}})],1)}
var staticRenderFns = []


// CONCATENATED MODULE: ./src/App.vue?vue&type=template&id=cb67dd4a&shadow

// EXTERNAL MODULE: ./node_modules/core-js/modules/es.array.filter.js
var es_array_filter = __webpack_require__("4de4");

// EXTERNAL MODULE: ./node_modules/core-js/modules/es.number.constructor.js
var es_number_constructor = __webpack_require__("a9e3");

// EXTERNAL MODULE: ./node_modules/core-js/modules/es.regexp.exec.js
var es_regexp_exec = __webpack_require__("ac1f");

// EXTERNAL MODULE: ./node_modules/core-js/modules/es.string.split.js
var es_string_split = __webpack_require__("1276");

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js?{"cacheDirectory":"node_modules/.cache/vue-loader","cacheIdentifier":"3d39ec6c-vue-loader-template"}!./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/ItemsList.vue?vue&type=template&id=11f9ef97&scoped=true&
var ItemsListvue_type_template_id_11f9ef97_scoped_true_render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:"list"},[_c('div',{staticClass:"header"},[_c('h2',{staticClass:"page-title"},[_vm._v(_vm._s(_vm.$t('recipes')))]),_c('div',{staticClass:"list-grid-switch"},[_c('div',{staticClass:"list-switch-button",on:{"click":function($event){return _vm.setShowList(true)}}},[(_vm.showList)?_c('ListBlueIcon'):_c('ListIcon')],1),_c('div',{staticClass:"grid-switch-button",on:{"click":function($event){return _vm.setShowList(false)}}},[(_vm.showList)?_c('GridIcon',{staticClass:"grid-icon"}):_c('GridBlueIcon',{staticClass:"grid-icon-blue"})],1)])]),_c('div',{staticClass:"search-bar"},[_c('input',{directives:[{name:"model",rawName:"v-model",value:(_vm.searchInput),expression:"searchInput"}],staticClass:"search-input",attrs:{"type":"text","placeholder":_vm.$t('searchRecipe')},domProps:{"value":(_vm.searchInput)},on:{"keyup":_vm.searchRecipeList,"input":function($event){if($event.target.composing){ return; }_vm.searchInput=$event.target.value}}}),_c('div',{staticClass:"search-button"},[_c('search-icon',{attrs:{"width":"24px","height":"24pxs"},on:{"click":function($event){return _vm.loadRecipeList(_vm.currentPage)}}})],1)]),_c('paging',{attrs:{"current-page":_vm.currentPage,"total-pages":_vm.totalPages},on:{"next-page":_vm.nextPage,"last-page":_vm.lastPage,"go-to-page":_vm.goToPage}}),(_vm.items.length > 0 && _vm.showList)?_vm._l((_vm.items),function(item){return _c('div',{key:item.id,staticClass:"item-container",on:{"click":function($event){$event.preventDefault();return _vm.showDetail(item.Id)}}},[_c('hr',{staticClass:"solid"}),_c('div',{staticClass:"list-item"},[(item.ImageGallery === null || item.ImageGallery.length === 0)?_c('div',[_c('div',{staticStyle:{"min-height":"70px","min-width":"70px","max-height":"70px","max-width":"70px"}},[_c('RezeptIcon',{staticClass:"rezept-icon",attrs:{"viewBox":"0 0 595.3 367.54","width":"auto","height":"70px","preserveAspectRatio":"xMidYMid slice"}})],1)]):_c('div',[_c('img',{staticClass:"thumbnail",attrs:{"src":item.ImageGallery[0].ImageUrl}})]),_c('div',{staticClass:"info"},[_c('div',{staticClass:"title"},[_vm._v(_vm._s(_vm.getTitle(item, _vm.language)))]),_c('div',{staticClass:"short-info"},[_vm._v(_vm._s(_vm.getRecipeShortInfo(item)))])]),_c('div',{staticClass:"arrow-icon"},[_c('arrow-icon-right',{attrs:{"viewBox":"0 0 24 24","width":"100%","height":"100%"}})],1)])])}):(_vm.items.length > 0 && !_vm.showList)?_vm._l((_vm.items),function(item){return _c('div',{key:item.id,staticClass:"grid-container",on:{"click":function($event){$event.preventDefault();return _vm.showDetail(item.Id)}}},[_c('div',{staticClass:"info-grid"},[(item.ImageGallery === null || item.ImageGallery.length === 0)?_c('div',[_c('div',{},[_c('RezeptIcon',{staticClass:"rezept-icon",attrs:{"viewBox":"0 0 595.3 367.54","width":"auto","height":"200px","preserveAspectRatio":"xMidYMid slice"}})],1)]):_c('div',[_c('img',{staticClass:"recipe-image",attrs:{"src":item.ImageGallery[0].ImageUrl}})]),_c('div',{staticClass:"grid-info-detail"},[_c('div',{staticClass:"grid-title"},[_vm._v(_vm._s(_vm.getTitle(item, _vm.language)))]),_c('div',{staticClass:"grid-short-info"},[_vm._v(_vm._s(_vm.getRecipeShortInfo(item)))]),_c('hr',{staticClass:"recipe-divider"}),_c('div',{staticClass:"recipe-info-groups"},[_c('div',{staticClass:"recipe-info-group"},[_c('PreparationTimeIcon'),_c('span',{staticClass:"recipe-info-text"},[_vm._v(_vm._s(_vm.getPreparationTime(item)))])],1),_c('div',{staticClass:"recipe-info-group"},[_c('PersonsIcon'),_c('span',{staticClass:"recipe-info-text"},[_vm._v(_vm._s(_vm.getPersonCount(item))+" ")])],1)])])])])}):(_vm.isLoading)?_c('div',{staticClass:"loading-spinner"},[_c('spinner')],1):_c('div',{staticClass:"noResult"},[_vm._v(_vm._s(_vm.$t('noResults')))]),(_vm.items.length === 1)?_c('div',{staticClass:"item-container"}):_vm._e(),(_vm.items.length > 0 && _vm.showList)?_c('div',{staticClass:"bottom-divider"},[_c('hr',{staticClass:"solid"})]):_vm._e(),(_vm.items.length > 1 && _vm.showList)?_c('div',{staticClass:"bottom-divider bottom-divider2"},[_c('hr',{staticClass:"solid"})]):_vm._e(),_c('paging',{attrs:{"current-page":_vm.currentPage,"total-pages":_vm.totalPages},on:{"next-page":_vm.nextPage,"last-page":_vm.lastPage,"go-to-page":_vm.goToPage}})],2)}
var ItemsListvue_type_template_id_11f9ef97_scoped_true_staticRenderFns = []


// CONCATENATED MODULE: ./src/components/ItemsList.vue?vue&type=template&id=11f9ef97&scoped=true&

// EXTERNAL MODULE: ./node_modules/core-js/modules/es.object.to-string.js
var es_object_to_string = __webpack_require__("d3b7");

// EXTERNAL MODULE: ./node_modules/core-js/modules/es.regexp.to-string.js
var es_regexp_to_string = __webpack_require__("25f0");

// EXTERNAL MODULE: ./node_modules/core-js/modules/es.array.iterator.js
var es_array_iterator = __webpack_require__("e260");

// EXTERNAL MODULE: ./node_modules/core-js/modules/es.string.iterator.js
var es_string_iterator = __webpack_require__("3ca3");

// EXTERNAL MODULE: ./node_modules/core-js/modules/es.string.replace.js
var es_string_replace = __webpack_require__("5319");

// EXTERNAL MODULE: ./node_modules/core-js/modules/es.string.search.js
var es_string_search = __webpack_require__("841c");

// EXTERNAL MODULE: ./node_modules/core-js/modules/web.dom-collections.iterator.js
var web_dom_collections_iterator = __webpack_require__("ddb0");

// EXTERNAL MODULE: ./node_modules/core-js/modules/web.url.js
var web_url = __webpack_require__("2b3d");

// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/classCallCheck.js
function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/createClass.js
function _defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}

function _createClass(Constructor, protoProps, staticProps) {
  if (protoProps) _defineProperties(Constructor.prototype, protoProps);
  if (staticProps) _defineProperties(Constructor, staticProps);
  return Constructor;
}
// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js
function _setPrototypeOf(o, p) {
  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
    o.__proto__ = p;
    return o;
  };

  return _setPrototypeOf(o, p);
}
// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/inherits.js

function _inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }

  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      writable: true,
      configurable: true
    }
  });
  if (superClass) _setPrototypeOf(subClass, superClass);
}
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.reflect.construct.js
var es_reflect_construct = __webpack_require__("4ae1");

// EXTERNAL MODULE: ./node_modules/core-js/modules/es.object.get-prototype-of.js
var es_object_get_prototype_of = __webpack_require__("3410");

// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js

function _getPrototypeOf(o) {
  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
    return o.__proto__ || Object.getPrototypeOf(o);
  };
  return _getPrototypeOf(o);
}
// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/isNativeReflectConstruct.js



function _isNativeReflectConstruct() {
  if (typeof Reflect === "undefined" || !Reflect.construct) return false;
  if (Reflect.construct.sham) return false;
  if (typeof Proxy === "function") return true;

  try {
    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));
    return true;
  } catch (e) {
    return false;
  }
}
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.symbol.js
var es_symbol = __webpack_require__("a4d3");

// EXTERNAL MODULE: ./node_modules/core-js/modules/es.symbol.description.js
var es_symbol_description = __webpack_require__("e01a");

// EXTERNAL MODULE: ./node_modules/core-js/modules/es.symbol.iterator.js
var es_symbol_iterator = __webpack_require__("d28b");

// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/typeof.js







function _typeof(obj) {
  "@babel/helpers - typeof";

  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
    _typeof = function _typeof(obj) {
      return typeof obj;
    };
  } else {
    _typeof = function _typeof(obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
    };
  }

  return _typeof(obj);
}
// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js
function _assertThisInitialized(self) {
  if (self === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }

  return self;
}
// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js


function _possibleConstructorReturn(self, call) {
  if (call && (_typeof(call) === "object" || typeof call === "function")) {
    return call;
  }

  return _assertThisInitialized(self);
}
// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/createSuper.js




function _createSuper(Derived) {
  var hasNativeReflectConstruct = _isNativeReflectConstruct();
  return function _createSuperInternal() {
    var Super = _getPrototypeOf(Derived),
        result;

    if (hasNativeReflectConstruct) {
      var NewTarget = _getPrototypeOf(this).constructor;
      result = Reflect.construct(Super, arguments, NewTarget);
    } else {
      result = Super.apply(this, arguments);
    }

    return _possibleConstructorReturn(this, result);
  };
}
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.array.for-each.js
var es_array_for_each = __webpack_require__("4160");

// EXTERNAL MODULE: ./node_modules/core-js/modules/es.object.get-own-property-descriptor.js
var es_object_get_own_property_descriptor = __webpack_require__("e439");

// EXTERNAL MODULE: ./node_modules/core-js/modules/es.object.get-own-property-descriptors.js
var es_object_get_own_property_descriptors = __webpack_require__("dbb4");

// EXTERNAL MODULE: ./node_modules/core-js/modules/es.object.keys.js
var es_object_keys = __webpack_require__("b64b");

// EXTERNAL MODULE: ./node_modules/core-js/modules/web.dom-collections.for-each.js
var web_dom_collections_for_each = __webpack_require__("159b");

// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/defineProperty.js
function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}
// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/objectSpread2.js









function ownKeys(object, enumerableOnly) {
  var keys = Object.keys(object);

  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    if (enumerableOnly) symbols = symbols.filter(function (sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    });
    keys.push.apply(keys, symbols);
  }

  return keys;
}

function _objectSpread2(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};

    if (i % 2) {
      ownKeys(Object(source), true).forEach(function (key) {
        _defineProperty(target, key, source[key]);
      });
    } else if (Object.getOwnPropertyDescriptors) {
      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
      ownKeys(Object(source)).forEach(function (key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      });
    }
  }

  return target;
}
// EXTERNAL MODULE: ./node_modules/regenerator-runtime/runtime.js
var runtime = __webpack_require__("96cf");

// EXTERNAL MODULE: ./node_modules/core-js/modules/es.promise.js
var es_promise = __webpack_require__("e6cf");

// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js



function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {
  try {
    var info = gen[key](arg);
    var value = info.value;
  } catch (error) {
    reject(error);
    return;
  }

  if (info.done) {
    resolve(value);
  } else {
    Promise.resolve(value).then(_next, _throw);
  }
}

function _asyncToGenerator(fn) {
  return function () {
    var self = this,
        args = arguments;
    return new Promise(function (resolve, reject) {
      var gen = fn.apply(self, args);

      function _next(value) {
        asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value);
      }

      function _throw(err) {
        asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err);
      }

      _next(undefined);
    });
  };
}
// EXTERNAL MODULE: ./node_modules/axios/index.js
var node_modules_axios = __webpack_require__("bc3a");
var axios_default = /*#__PURE__*/__webpack_require__.n(node_modules_axios);

// EXTERNAL MODULE: ./node_modules/core-js/modules/es.function.name.js
var es_function_name = __webpack_require__("b0c0");

// EXTERNAL MODULE: ./node_modules/core-js/modules/es.map.js
var es_map = __webpack_require__("4ec9");

// EXTERNAL MODULE: ./node_modules/core-js/modules/es.array.index-of.js
var es_array_index_of = __webpack_require__("c975");

// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/isNativeFunction.js



function _isNativeFunction(fn) {
  return Function.toString.call(fn).indexOf("[native code]") !== -1;
}
// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/construct.js



function construct_construct(Parent, args, Class) {
  if (_isNativeReflectConstruct()) {
    construct_construct = Reflect.construct;
  } else {
    construct_construct = function _construct(Parent, args, Class) {
      var a = [null];
      a.push.apply(a, args);
      var Constructor = Function.bind.apply(Parent, a);
      var instance = new Constructor();
      if (Class) _setPrototypeOf(instance, Class.prototype);
      return instance;
    };
  }

  return construct_construct.apply(null, arguments);
}
// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/wrapNativeSuper.js









function wrapNativeSuper_wrapNativeSuper(Class) {
  var _cache = typeof Map === "function" ? new Map() : undefined;

  wrapNativeSuper_wrapNativeSuper = function _wrapNativeSuper(Class) {
    if (Class === null || !_isNativeFunction(Class)) return Class;

    if (typeof Class !== "function") {
      throw new TypeError("Super expression must either be null or a function");
    }

    if (typeof _cache !== "undefined") {
      if (_cache.has(Class)) return _cache.get(Class);

      _cache.set(Class, Wrapper);
    }

    function Wrapper() {
      return construct_construct(Class, arguments, _getPrototypeOf(this).constructor);
    }

    Wrapper.prototype = Object.create(Class.prototype, {
      constructor: {
        value: Wrapper,
        enumerable: false,
        writable: true,
        configurable: true
      }
    });
    return _setPrototypeOf(Wrapper, Class);
  };

  return wrapNativeSuper_wrapNativeSuper(Class);
}
// CONCATENATED MODULE: ./src/api/base.ts







// Some imports not used depending on template conditions
// @ts-ignore

var BASE_PATH = "https://tourism.opendatahub.bz.it/".replace(/\/+$/, "");
/**
 *
 * @export
 */

var COLLECTION_FORMATS = {
  csv: ",",
  ssv: " ",
  tsv: "\t",
  pipes: "|"
};
/**
 *
 * @export
 * @class BaseAPI
 */

var base_BaseAPI = function BaseAPI(configuration) {
  var basePath = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : BASE_PATH;
  var axios = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : axios_default.a;

  _classCallCheck(this, BaseAPI);

  this.basePath = basePath;
  this.axios = axios;

  if (configuration) {
    this.configuration = configuration;
    this.basePath = configuration.basePath || this.basePath;
  }
};
;
/**
 *
 * @export
 * @class RequiredError
 * @extends {Error}
 */

var base_RequiredError = /*#__PURE__*/function (_Error) {
  _inherits(RequiredError, _Error);

  var _super = _createSuper(RequiredError);

  function RequiredError(field, msg) {
    var _this;

    _classCallCheck(this, RequiredError);

    _this = _super.call(this, msg);
    _this.field = field;
    _this.name = "RequiredError";
    return _this;
  }

  return RequiredError;
}( /*#__PURE__*/wrapNativeSuper_wrapNativeSuper(Error));
// CONCATENATED MODULE: ./src/api/apis/accommodation-api.ts

















/* tslint:disable */

/* eslint-disable */

/**
 * Open Data Hub Api Tourism
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: V1
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
 // Some imports not used depending on template conditions
// @ts-ignore


/**
 * AccommodationApi - axios parameter creator
 * @export
 */

var accommodation_api_AccommodationApiAxiosParamCreator = function AccommodationApiAxiosParamCreator(configuration) {
  return {
    /**
     *
     * @summary GET Accommodation Room Info by AccoID
     * @param {string} accoid Accommodation ID
     * @param {string} [idsource] ID Source Filter (possible values:&#x27;lts&#x27;,&#x27;hgv&#x27;), (default:&#x27;lts&#x27;)
     * @param {boolean} [getall] Get Rooms from all sources (If an accommodation is bookable on Booking Southtyrol, rooms from this source are returned, setting getall to true returns also LTS Rooms), (default:false)
     * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)
     * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    accommodationGetAccoRoomInfos: function () {
      var _accommodationGetAccoRoomInfos = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(accoid, idsource, getall, fields, language) {
        var options,
            localVarPath,
            localVarUrlObj,
            baseOptions,
            localVarRequestOptions,
            localVarHeaderParameter,
            localVarQueryParameter,
            localVarAccessTokenValue,
            query,
            key,
            _key,
            headersFromBaseOptions,
            _args = arguments;

        return regeneratorRuntime.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                options = _args.length > 5 && _args[5] !== undefined ? _args[5] : {};

                if (!(accoid === null || accoid === undefined)) {
                  _context.next = 3;
                  break;
                }

                throw new base_RequiredError('accoid', 'Required parameter accoid was null or undefined when calling accommodationGetAccoRoomInfos.');

              case 3:
                localVarPath = "/api/AccommodationRoom"; // use dummy base URL string because the URL constructor only accepts absolute URLs.

                localVarUrlObj = new URL(localVarPath, 'https://example.com');

                if (configuration) {
                  baseOptions = configuration.baseOptions;
                }

                localVarRequestOptions = _objectSpread2(_objectSpread2({
                  method: 'GET'
                }, baseOptions), options);
                localVarHeaderParameter = {};
                localVarQueryParameter = {}; // authentication oauth2 required
                // oauth required

                if (!(configuration && configuration.accessToken)) {
                  _context.next = 21;
                  break;
                }

                if (!(typeof configuration.accessToken === 'function')) {
                  _context.next = 16;
                  break;
                }

                _context.next = 13;
                return configuration.accessToken("oauth2", [""]);

              case 13:
                _context.t0 = _context.sent;
                _context.next = 19;
                break;

              case 16:
                _context.next = 18;
                return configuration.accessToken;

              case 18:
                _context.t0 = _context.sent;

              case 19:
                localVarAccessTokenValue = _context.t0;
                localVarHeaderParameter["Authorization"] = "Bearer " + localVarAccessTokenValue;

              case 21:
                if (accoid !== undefined) {
                  localVarQueryParameter['accoid'] = accoid;
                }

                if (idsource !== undefined) {
                  localVarQueryParameter['idsource'] = idsource;
                }

                if (getall !== undefined) {
                  localVarQueryParameter['getall'] = getall;
                }

                if (fields !== undefined) {
                  localVarQueryParameter['fields'] = fields;
                }

                if (language !== undefined) {
                  localVarQueryParameter['language'] = language;
                }

                query = new URLSearchParams(localVarUrlObj.search);

                for (key in localVarQueryParameter) {
                  query.set(key, localVarQueryParameter[key]);
                }

                for (_key in options.query) {
                  query.set(_key, options.query[_key]);
                }

                localVarUrlObj.search = new URLSearchParams(query).toString();
                headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                localVarRequestOptions.headers = _objectSpread2(_objectSpread2(_objectSpread2({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                return _context.abrupt("return", {
                  url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                  options: localVarRequestOptions
                });

              case 33:
              case "end":
                return _context.stop();
            }
          }
        }, _callee);
      }));

      function accommodationGetAccoRoomInfos(_x, _x2, _x3, _x4, _x5) {
        return _accommodationGetAccoRoomInfos.apply(this, arguments);
      }

      return accommodationGetAccoRoomInfos;
    }(),

    /**
     *
     * @summary GET Accommodation Room Info Single
     * @param {string} id AccommodationRoom ID
     * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)
     * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    accommodationGetAccoRoomInfosById: function () {
      var _accommodationGetAccoRoomInfosById = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(id, fields, language) {
        var options,
            localVarPath,
            localVarUrlObj,
            baseOptions,
            localVarRequestOptions,
            localVarHeaderParameter,
            localVarQueryParameter,
            localVarAccessTokenValue,
            query,
            key,
            _key2,
            headersFromBaseOptions,
            _args2 = arguments;

        return regeneratorRuntime.wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                options = _args2.length > 3 && _args2[3] !== undefined ? _args2[3] : {};

                if (!(id === null || id === undefined)) {
                  _context2.next = 3;
                  break;
                }

                throw new base_RequiredError('id', 'Required parameter id was null or undefined when calling accommodationGetAccoRoomInfosById.');

              case 3:
                localVarPath = "/api/AccommodationRoom/{id}".replace("{".concat("id", "}"), encodeURIComponent(String(id))); // use dummy base URL string because the URL constructor only accepts absolute URLs.

                localVarUrlObj = new URL(localVarPath, 'https://example.com');

                if (configuration) {
                  baseOptions = configuration.baseOptions;
                }

                localVarRequestOptions = _objectSpread2(_objectSpread2({
                  method: 'GET'
                }, baseOptions), options);
                localVarHeaderParameter = {};
                localVarQueryParameter = {}; // authentication oauth2 required
                // oauth required

                if (!(configuration && configuration.accessToken)) {
                  _context2.next = 21;
                  break;
                }

                if (!(typeof configuration.accessToken === 'function')) {
                  _context2.next = 16;
                  break;
                }

                _context2.next = 13;
                return configuration.accessToken("oauth2", [""]);

              case 13:
                _context2.t0 = _context2.sent;
                _context2.next = 19;
                break;

              case 16:
                _context2.next = 18;
                return configuration.accessToken;

              case 18:
                _context2.t0 = _context2.sent;

              case 19:
                localVarAccessTokenValue = _context2.t0;
                localVarHeaderParameter["Authorization"] = "Bearer " + localVarAccessTokenValue;

              case 21:
                if (fields !== undefined) {
                  localVarQueryParameter['fields'] = fields;
                }

                if (language !== undefined) {
                  localVarQueryParameter['language'] = language;
                }

                query = new URLSearchParams(localVarUrlObj.search);

                for (key in localVarQueryParameter) {
                  query.set(key, localVarQueryParameter[key]);
                }

                for (_key2 in options.query) {
                  query.set(_key2, options.query[_key2]);
                }

                localVarUrlObj.search = new URLSearchParams(query).toString();
                headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                localVarRequestOptions.headers = _objectSpread2(_objectSpread2(_objectSpread2({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                return _context2.abrupt("return", {
                  url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                  options: localVarRequestOptions
                });

              case 30:
              case "end":
                return _context2.stop();
            }
          }
        }, _callee2);
      }));

      function accommodationGetAccoRoomInfosById(_x6, _x7, _x8) {
        return _accommodationGetAccoRoomInfosById.apply(this, arguments);
      }

      return accommodationGetAccoRoomInfosById;
    }(),

    /**
     *
     * @summary GET Accommodation Single
     * @param {string} id ID of the Accommodation
     * @param {string} [idsource] ID Source Filter (possible values:&#x27;lts&#x27;,&#x27;hgv&#x27;), (default:&#x27;lts&#x27;)
     * @param {string} [availabilitychecklanguage] Language of the Availability Response (possible values: &#x27;de&#x27;,&#x27;it&#x27;,&#x27;en&#x27;), (default:&#x27;de&#x27;)
     * @param {string} [boardfilter] Boardfilter (BITMASK values: 0 &#x3D; (all boards), 1 &#x3D; (without board), 2 &#x3D; (breakfast), 4 &#x3D; (half board), 8 &#x3D; (full board), 16 &#x3D; (All inclusive), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;0&#x27;)
     * @param {string} [arrival] Arrival Date (yyyy-MM-dd) REQUIRED, (default:&#x27;Today&#x27;)
     * @param {string} [departure] Departure Date (yyyy-MM-dd) REQUIRED, (default:&#x27;Tomorrow&#x27;)
     * @param {string} [roominfo] Roominfo Filter REQUIRED (Splitter for Rooms &#x27;|&#x27; Splitter for Persons Ages &#x27;,&#x27;) (Room Types: 0&#x3D;notprovided, 1&#x3D;room, 2&#x3D;apartment, 4&#x3D;pitch/tent(onlyLTS), 8&#x3D;dorm(onlyLTS)) possible Values Example 1-18,10|1-18 &#x3D; 2 Rooms, Room 1 for 2 person Age 18 and Age 10, Room 2 for 1 Person Age 18), (default:&#x27;1-18,18&#x27;)
     * @param {string} [bokfilter] Booking Channels Filter REQUIRED (Separator &#x27;,&#x27; possible values: hgv &#x3D; (Booking Südtirol), htl &#x3D; (Hotel.de), exp &#x3D; (Expedia), bok &#x3D; (Booking.com), lts &#x3D; (LTS Availability check)), (default:&#x27;hgv&#x27;)
     * @param {string} [source] Source for MSS availability check, (default:&#x27;sinfo&#x27;)
     * @param {boolean} [availabilitycheck] Availability Check enabled/disabled (possible Values: &#x27;true&#x27;, &#x27;false), (default Value: &#x27;false&#x27;) NOT AVAILABLE AS OPEN DATA
     * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)
     * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    accommodationGetAccommodation: function () {
      var _accommodationGetAccommodation = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(id, idsource, availabilitychecklanguage, boardfilter, arrival, departure, roominfo, bokfilter, source, availabilitycheck, fields, language) {
        var options,
            localVarPath,
            localVarUrlObj,
            baseOptions,
            localVarRequestOptions,
            localVarHeaderParameter,
            localVarQueryParameter,
            localVarAccessTokenValue,
            query,
            key,
            _key3,
            headersFromBaseOptions,
            _args3 = arguments;

        return regeneratorRuntime.wrap(function _callee3$(_context3) {
          while (1) {
            switch (_context3.prev = _context3.next) {
              case 0:
                options = _args3.length > 12 && _args3[12] !== undefined ? _args3[12] : {};

                if (!(id === null || id === undefined)) {
                  _context3.next = 3;
                  break;
                }

                throw new base_RequiredError('id', 'Required parameter id was null or undefined when calling accommodationGetAccommodation.');

              case 3:
                localVarPath = "/api/Accommodation/{id}".replace("{".concat("id", "}"), encodeURIComponent(String(id))); // use dummy base URL string because the URL constructor only accepts absolute URLs.

                localVarUrlObj = new URL(localVarPath, 'https://example.com');

                if (configuration) {
                  baseOptions = configuration.baseOptions;
                }

                localVarRequestOptions = _objectSpread2(_objectSpread2({
                  method: 'GET'
                }, baseOptions), options);
                localVarHeaderParameter = {};
                localVarQueryParameter = {}; // authentication oauth2 required
                // oauth required

                if (!(configuration && configuration.accessToken)) {
                  _context3.next = 21;
                  break;
                }

                if (!(typeof configuration.accessToken === 'function')) {
                  _context3.next = 16;
                  break;
                }

                _context3.next = 13;
                return configuration.accessToken("oauth2", [""]);

              case 13:
                _context3.t0 = _context3.sent;
                _context3.next = 19;
                break;

              case 16:
                _context3.next = 18;
                return configuration.accessToken;

              case 18:
                _context3.t0 = _context3.sent;

              case 19:
                localVarAccessTokenValue = _context3.t0;
                localVarHeaderParameter["Authorization"] = "Bearer " + localVarAccessTokenValue;

              case 21:
                if (idsource !== undefined) {
                  localVarQueryParameter['idsource'] = idsource;
                }

                if (availabilitychecklanguage !== undefined) {
                  localVarQueryParameter['availabilitychecklanguage'] = availabilitychecklanguage;
                }

                if (boardfilter !== undefined) {
                  localVarQueryParameter['boardfilter'] = boardfilter;
                }

                if (arrival !== undefined) {
                  localVarQueryParameter['arrival'] = arrival;
                }

                if (departure !== undefined) {
                  localVarQueryParameter['departure'] = departure;
                }

                if (roominfo !== undefined) {
                  localVarQueryParameter['roominfo'] = roominfo;
                }

                if (bokfilter !== undefined) {
                  localVarQueryParameter['bokfilter'] = bokfilter;
                }

                if (source !== undefined) {
                  localVarQueryParameter['source'] = source;
                }

                if (availabilitycheck !== undefined) {
                  localVarQueryParameter['availabilitycheck'] = availabilitycheck;
                }

                if (fields !== undefined) {
                  localVarQueryParameter['fields'] = fields;
                }

                if (language !== undefined) {
                  localVarQueryParameter['language'] = language;
                }

                query = new URLSearchParams(localVarUrlObj.search);

                for (key in localVarQueryParameter) {
                  query.set(key, localVarQueryParameter[key]);
                }

                for (_key3 in options.query) {
                  query.set(_key3, options.query[_key3]);
                }

                localVarUrlObj.search = new URLSearchParams(query).toString();
                headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                localVarRequestOptions.headers = _objectSpread2(_objectSpread2(_objectSpread2({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                return _context3.abrupt("return", {
                  url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                  options: localVarRequestOptions
                });

              case 39:
              case "end":
                return _context3.stop();
            }
          }
        }, _callee3);
      }));

      function accommodationGetAccommodation(_x9, _x10, _x11, _x12, _x13, _x14, _x15, _x16, _x17, _x18, _x19, _x20) {
        return _accommodationGetAccommodation.apply(this, arguments);
      }

      return accommodationGetAccommodation;
    }(),

    /**
     *
     * @summary GET Accommodation Single Localized
     * @param {string} id ID of the Accommodation
     * @param {string} [language] Localization Language
     * @param {string} [idsource] ID Source Filter (possible values:&#x27;lts&#x27;,&#x27;hgv&#x27;), (default:&#x27;lts&#x27;)
     * @param {string} [boardfilter] Boardfilter (BITMASK values: 0 &#x3D; (all boards), 1 &#x3D; (without board), 2 &#x3D; (breakfast), 4 &#x3D; (half board), 8 &#x3D; (full board), 16 &#x3D; (All inclusive), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;0&#x27;)
     * @param {string} [arrival] Arrival Date (yyyy-MM-dd) REQUIRED, (default:&#x27;Today&#x27;)
     * @param {string} [departure] Departure Date (yyyy-MM-dd) REQUIRED, (default:&#x27;Tomorrow&#x27;)
     * @param {string} [roominfo] Roominfo Filter REQUIRED (Splitter for Rooms &#x27;|&#x27; Splitter for Persons Ages &#x27;,&#x27;) (Room Types: 0&#x3D;notprovided, 1&#x3D;room, 2&#x3D;apartment, 4&#x3D;pitch/tent(onlyLTS), 8&#x3D;dorm(onlyLTS)) possible Values Example 1-18,10|1-18 &#x3D; 2 Rooms, Room 1 for 2 person Age 18 and Age 10, Room 2 for 1 Person Age 18), (default:&#x27;1-18,18&#x27;)
     * @param {string} [bokfilter] Booking Channels Filter REQUIRED (Separator &#x27;,&#x27; possible values: hgv &#x3D; (Booking Südtirol), htl &#x3D; (Hotel.de), exp &#x3D; (Expedia), bok &#x3D; (Booking.com), lts &#x3D; (LTS Availability check)), (default:&#x27;hgv&#x27;)
     * @param {string} [source] Source for MSS availability check, (default:&#x27;sinfo&#x27;)
     * @param {boolean} [availabilitycheck] Availability Check enabled/disabled (possible Values: &#x27;true&#x27;, &#x27;false), (default Value: &#x27;false&#x27;) NOT AVAILABLE AS OPEN DATA
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    accommodationGetAccommodationLocalized: function () {
      var _accommodationGetAccommodationLocalized = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(id, language, idsource, boardfilter, arrival, departure, roominfo, bokfilter, source, availabilitycheck) {
        var options,
            localVarPath,
            localVarUrlObj,
            baseOptions,
            localVarRequestOptions,
            localVarHeaderParameter,
            localVarQueryParameter,
            localVarAccessTokenValue,
            query,
            key,
            _key4,
            headersFromBaseOptions,
            _args4 = arguments;

        return regeneratorRuntime.wrap(function _callee4$(_context4) {
          while (1) {
            switch (_context4.prev = _context4.next) {
              case 0:
                options = _args4.length > 10 && _args4[10] !== undefined ? _args4[10] : {};

                if (!(id === null || id === undefined)) {
                  _context4.next = 3;
                  break;
                }

                throw new base_RequiredError('id', 'Required parameter id was null or undefined when calling accommodationGetAccommodationLocalized.');

              case 3:
                localVarPath = "/api/AccommodationLocalized/{id}".replace("{".concat("id", "}"), encodeURIComponent(String(id))); // use dummy base URL string because the URL constructor only accepts absolute URLs.

                localVarUrlObj = new URL(localVarPath, 'https://example.com');

                if (configuration) {
                  baseOptions = configuration.baseOptions;
                }

                localVarRequestOptions = _objectSpread2(_objectSpread2({
                  method: 'GET'
                }, baseOptions), options);
                localVarHeaderParameter = {};
                localVarQueryParameter = {}; // authentication oauth2 required
                // oauth required

                if (!(configuration && configuration.accessToken)) {
                  _context4.next = 21;
                  break;
                }

                if (!(typeof configuration.accessToken === 'function')) {
                  _context4.next = 16;
                  break;
                }

                _context4.next = 13;
                return configuration.accessToken("oauth2", [""]);

              case 13:
                _context4.t0 = _context4.sent;
                _context4.next = 19;
                break;

              case 16:
                _context4.next = 18;
                return configuration.accessToken;

              case 18:
                _context4.t0 = _context4.sent;

              case 19:
                localVarAccessTokenValue = _context4.t0;
                localVarHeaderParameter["Authorization"] = "Bearer " + localVarAccessTokenValue;

              case 21:
                if (language !== undefined) {
                  localVarQueryParameter['language'] = language;
                }

                if (idsource !== undefined) {
                  localVarQueryParameter['idsource'] = idsource;
                }

                if (boardfilter !== undefined) {
                  localVarQueryParameter['boardfilter'] = boardfilter;
                }

                if (arrival !== undefined) {
                  localVarQueryParameter['arrival'] = arrival;
                }

                if (departure !== undefined) {
                  localVarQueryParameter['departure'] = departure;
                }

                if (roominfo !== undefined) {
                  localVarQueryParameter['roominfo'] = roominfo;
                }

                if (bokfilter !== undefined) {
                  localVarQueryParameter['bokfilter'] = bokfilter;
                }

                if (source !== undefined) {
                  localVarQueryParameter['source'] = source;
                }

                if (availabilitycheck !== undefined) {
                  localVarQueryParameter['availabilitycheck'] = availabilitycheck;
                }

                query = new URLSearchParams(localVarUrlObj.search);

                for (key in localVarQueryParameter) {
                  query.set(key, localVarQueryParameter[key]);
                }

                for (_key4 in options.query) {
                  query.set(_key4, options.query[_key4]);
                }

                localVarUrlObj.search = new URLSearchParams(query).toString();
                headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                localVarRequestOptions.headers = _objectSpread2(_objectSpread2(_objectSpread2({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                return _context4.abrupt("return", {
                  url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                  options: localVarRequestOptions
                });

              case 37:
              case "end":
                return _context4.stop();
            }
          }
        }, _callee4);
      }));

      function accommodationGetAccommodationLocalized(_x21, _x22, _x23, _x24, _x25, _x26, _x27, _x28, _x29, _x30) {
        return _accommodationGetAccommodationLocalized.apply(this, arguments);
      }

      return accommodationGetAccommodationLocalized;
    }(),

    /**
     *
     * @summary GET Accommodation List
     * @param {number} [pagenumber] Pagenumber, (default:1)
     * @param {number} [pagesize] Elements per Page (If availabilitycheck set, pagesize has no effect all Accommodations are returned), (default:10)
     * @param {string} [seed] Seed &#x27;1 - 10&#x27; for Random Sorting, &#x27;0&#x27; generates a Random Seed, &#x27;null&#x27; disables Random Sorting, (default:null)
     * @param {string} [categoryfilter] Categoryfilter (BITMASK values: 1 &#x3D; (not categorized), 2 &#x3D; (1star), 4 &#x3D; (1flower), 8 &#x3D; (1sun), 14 &#x3D; (1star/1flower/1sun), 16 &#x3D; (2stars), 32 &#x3D; (2flowers), 64 &#x3D; (2suns), 112 &#x3D; (2stars/2flowers/2suns), 128 &#x3D; (3stars), 256 &#x3D; (3flowers), 512 &#x3D; (3suns), 1024 &#x3D; (3sstars), 1920 &#x3D; (3stars/3flowers/3suns/3sstars), 2048 &#x3D; (4stars), 4096 &#x3D; (4flowers), 8192 &#x3D; (4suns), 16384 &#x3D; (4sstars), 30720 &#x3D; (4stars/4flowers/4suns/4sstars), 32768 &#x3D; (5stars), 65536 &#x3D; (5flowers), 131072 &#x3D; (5suns), 229376 &#x3D; (5stars/5flowers/5suns), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)
     * @param {string} [typefilter] Typefilter (BITMASK values: 1 &#x3D; (HotelPension), 2 &#x3D; (BedBreakfast), 4 &#x3D; (Farm), 8 &#x3D; (Camping), 16 &#x3D; (Youth), 32 &#x3D; (Mountain), 64 &#x3D; (Apartment), 128 &#x3D; (Not defined),&#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)
     * @param {string} [boardfilter] Boardfilter (BITMASK values: 0 &#x3D; (all boards), 1 &#x3D; (without board), 2 &#x3D; (breakfast), 4 &#x3D; (half board), 8 &#x3D; (full board), 16 &#x3D; (All inclusive), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;0&#x27;)
     * @param {string} [featurefilter] FeatureFilter refers to predefined Features listed in the property SpecialFeatures (BITMASK values: 1 &#x3D; (Group-friendly), 2 &#x3D; (Meeting rooms), 4 &#x3D; (Swimming pool), 8 &#x3D; (Sauna), 16 &#x3D; (Garage), 32 &#x3D; (Pick-up service), 64 &#x3D; (WLAN), 128 &#x3D; (Barrier-free), 256 &#x3D; (Special menus for allergy sufferers), 512 &#x3D; (Pets welcome), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)
     * @param {string} [featureidfilter] Feature Id Filter, filter over ALL Features vailable (Separator &#x27;,&#x27; List of Feature IDs, &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)
     * @param {string} [themefilter] Themefilter (BITMASK values: 1 &#x3D; (Gourmet), 2 &#x3D; (At altitude), 4 &#x3D; (Regional wellness offerings), 8 &#x3D; (on the wheels), 16 &#x3D; (With family), 32 &#x3D; (Hiking), 64 &#x3D; (In the vineyards), 128 &#x3D; (Urban vibe), 256 &#x3D; (At the ski resort), 512 &#x3D; (Mediterranean), 1024 &#x3D; (In the Dolomites), 2048 &#x3D; (Alpine), 4096 &#x3D; (Small and charming), 8192 &#x3D; (Huts and mountain inns), 16384 &#x3D; (Rural way of life), 32768 &#x3D; (Balance), 65536 &#x3D; (Christmas markets), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)
     * @param {string} [badgefilter] BadgeFilter (BITMASK values: 1 &#x3D; (Belvita Wellness Hotel), 2 &#x3D; (Familyhotel), 4 &#x3D; (Bikehotel), 8 &#x3D; (Red Rooster Farm), 16 &#x3D; (Barrier free certificated), 32 &#x3D; (Vitalpina Hiking Hotel), 64 &#x3D; (Private Rooms in South Tyrol), 128 &#x3D; (Vinum Hotels), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)
     * @param {string} [idfilter] IDFilter (Separator &#x27;,&#x27; List of Accommodation IDs, &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)
     * @param {string} [locfilter] Locfilter (Separator &#x27;,&#x27; possible values: reg + REGIONID &#x3D; (Filter by Region), reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMVEREINID &#x3D; (Filter by Tourismverein), mun + MUNICIPALITYID &#x3D; (Filter by Municipality), fra + FRACTIONID &#x3D; (Filter by Fraction), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)
     * @param {string} [odhtagfilter] ODHTag Filter (refers to Array SmgTags) (String, Separator &#x27;,&#x27; more ODHTags possible, &#x27;null&#x27; &#x3D; No Filter, available ODHTags reference to &#x27;api/ODHTag?validforentity&#x3D;accommodation&#x27;), (default:&#x27;null&#x27;)
     * @param {boolean} [odhactive] ODHActive Filter (refers to field SmgActive) (possible Values: &#x27;null&#x27; Displays all Accommodations, &#x27;true&#x27; only ODH Active Accommodations, &#x27;false&#x27; only ODH Disabled Accommodations, (default:&#x27;null&#x27;)
     * @param {boolean} [active] TIC Active Filter (possible Values: &#x27;null&#x27; Displays all Accommodations, &#x27;true&#x27; only TIC Active Accommodations, &#x27;false&#x27; only TIC Disabled Accommodations, (default:&#x27;null&#x27;)
     * @param {string} [arrival] Arrival Date (yyyy-MM-dd) REQUIRED, (default:&#x27;Today&#x27;)
     * @param {string} [departure] Departure Date (yyyy-MM-dd) REQUIRED, (default:&#x27;Tomorrow&#x27;)
     * @param {string} [roominfo] Roominfo Filter REQUIRED (Splitter for Rooms &#x27;|&#x27; Splitter for Persons Ages &#x27;,&#x27;) (Room Types: 0&#x3D;notprovided, 1&#x3D;room, 2&#x3D;apartment, 4&#x3D;pitch/tent(onlyLTS), 8&#x3D;dorm(onlyLTS)) possible Values Example 1-18,10|1-18 &#x3D; 2 Rooms, Room 1 for 2 person Age 18 and Age 10, Room 2 for 1 Person Age 18), (default:&#x27;1-18,18&#x27;)
     * @param {string} [bokfilter] Booking Channels Filter REQUIRED (Separator &#x27;,&#x27; possible values: hgv &#x3D; (Booking Südtirol), htl &#x3D; (Hotel.de), exp &#x3D; (Expedia), bok &#x3D; (Booking.com), lts &#x3D; (LTS Availability check)), (default:&#x27;hgv&#x27;)
     * @param {string} [source] Source for MSS availability check, (default:&#x27;sinfo&#x27;)
     * @param {string} [availabilitychecklanguage] Language of the Availability Response (possible values: &#x27;de&#x27;,&#x27;it&#x27;,&#x27;en&#x27;), (default:&#x27;en&#x27;)
     * @param {boolean} [availabilitycheck] Availability Check enabled/disabled (possible Values: &#x27;true&#x27;, &#x27;false), (default Value: &#x27;false&#x27;) NOT AVAILABLE AS OPEN DATA
     * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)
     * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)
     * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)
     * @param {string} [updatefrom] Date from Format (yyyy-MM-dd) (all GBActivityPoi with LastChange &amp;gt;&#x3D; datefrom are passed), (default: null)
     * @param {string} [searchfilter] String to search for, Title in all languages are searched, (default: null)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    accommodationGetAccommodations: function () {
      var _accommodationGetAccommodations = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(pagenumber, pagesize, seed, categoryfilter, typefilter, boardfilter, featurefilter, featureidfilter, themefilter, badgefilter, idfilter, locfilter, odhtagfilter, odhactive, active, arrival, departure, roominfo, bokfilter, source, availabilitychecklanguage, availabilitycheck, latitude, longitude, radius, fields, language, updatefrom, searchfilter) {
        var options,
            localVarPath,
            localVarUrlObj,
            baseOptions,
            localVarRequestOptions,
            localVarHeaderParameter,
            localVarQueryParameter,
            localVarAccessTokenValue,
            query,
            key,
            _key5,
            headersFromBaseOptions,
            _args5 = arguments;

        return regeneratorRuntime.wrap(function _callee5$(_context5) {
          while (1) {
            switch (_context5.prev = _context5.next) {
              case 0:
                options = _args5.length > 29 && _args5[29] !== undefined ? _args5[29] : {};
                localVarPath = "/api/Accommodation"; // use dummy base URL string because the URL constructor only accepts absolute URLs.

                localVarUrlObj = new URL(localVarPath, 'https://example.com');

                if (configuration) {
                  baseOptions = configuration.baseOptions;
                }

                localVarRequestOptions = _objectSpread2(_objectSpread2({
                  method: 'GET'
                }, baseOptions), options);
                localVarHeaderParameter = {};
                localVarQueryParameter = {}; // authentication oauth2 required
                // oauth required

                if (!(configuration && configuration.accessToken)) {
                  _context5.next = 19;
                  break;
                }

                if (!(typeof configuration.accessToken === 'function')) {
                  _context5.next = 14;
                  break;
                }

                _context5.next = 11;
                return configuration.accessToken("oauth2", [""]);

              case 11:
                _context5.t0 = _context5.sent;
                _context5.next = 17;
                break;

              case 14:
                _context5.next = 16;
                return configuration.accessToken;

              case 16:
                _context5.t0 = _context5.sent;

              case 17:
                localVarAccessTokenValue = _context5.t0;
                localVarHeaderParameter["Authorization"] = "Bearer " + localVarAccessTokenValue;

              case 19:
                if (pagenumber !== undefined) {
                  localVarQueryParameter['pagenumber'] = pagenumber;
                }

                if (pagesize !== undefined) {
                  localVarQueryParameter['pagesize'] = pagesize;
                }

                if (seed !== undefined) {
                  localVarQueryParameter['seed'] = seed;
                }

                if (categoryfilter !== undefined) {
                  localVarQueryParameter['categoryfilter'] = categoryfilter;
                }

                if (typefilter !== undefined) {
                  localVarQueryParameter['typefilter'] = typefilter;
                }

                if (boardfilter !== undefined) {
                  localVarQueryParameter['boardfilter'] = boardfilter;
                }

                if (featurefilter !== undefined) {
                  localVarQueryParameter['featurefilter'] = featurefilter;
                }

                if (featureidfilter !== undefined) {
                  localVarQueryParameter['featureidfilter'] = featureidfilter;
                }

                if (themefilter !== undefined) {
                  localVarQueryParameter['themefilter'] = themefilter;
                }

                if (badgefilter !== undefined) {
                  localVarQueryParameter['badgefilter'] = badgefilter;
                }

                if (idfilter !== undefined) {
                  localVarQueryParameter['idfilter'] = idfilter;
                }

                if (locfilter !== undefined) {
                  localVarQueryParameter['locfilter'] = locfilter;
                }

                if (odhtagfilter !== undefined) {
                  localVarQueryParameter['odhtagfilter'] = odhtagfilter;
                }

                if (odhactive !== undefined) {
                  localVarQueryParameter['odhactive'] = odhactive;
                }

                if (active !== undefined) {
                  localVarQueryParameter['active'] = active;
                }

                if (arrival !== undefined) {
                  localVarQueryParameter['arrival'] = arrival;
                }

                if (departure !== undefined) {
                  localVarQueryParameter['departure'] = departure;
                }

                if (roominfo !== undefined) {
                  localVarQueryParameter['roominfo'] = roominfo;
                }

                if (bokfilter !== undefined) {
                  localVarQueryParameter['bokfilter'] = bokfilter;
                }

                if (source !== undefined) {
                  localVarQueryParameter['source'] = source;
                }

                if (availabilitychecklanguage !== undefined) {
                  localVarQueryParameter['availabilitychecklanguage'] = availabilitychecklanguage;
                }

                if (availabilitycheck !== undefined) {
                  localVarQueryParameter['availabilitycheck'] = availabilitycheck;
                }

                if (latitude !== undefined) {
                  localVarQueryParameter['latitude'] = latitude;
                }

                if (longitude !== undefined) {
                  localVarQueryParameter['longitude'] = longitude;
                }

                if (radius !== undefined) {
                  localVarQueryParameter['radius'] = radius;
                }

                if (fields !== undefined) {
                  localVarQueryParameter['fields'] = fields;
                }

                if (language !== undefined) {
                  localVarQueryParameter['language'] = language;
                }

                if (updatefrom !== undefined) {
                  localVarQueryParameter['updatefrom'] = updatefrom;
                }

                if (searchfilter !== undefined) {
                  localVarQueryParameter['searchfilter'] = searchfilter;
                }

                query = new URLSearchParams(localVarUrlObj.search);

                for (key in localVarQueryParameter) {
                  query.set(key, localVarQueryParameter[key]);
                }

                for (_key5 in options.query) {
                  query.set(_key5, options.query[_key5]);
                }

                localVarUrlObj.search = new URLSearchParams(query).toString();
                headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                localVarRequestOptions.headers = _objectSpread2(_objectSpread2(_objectSpread2({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                return _context5.abrupt("return", {
                  url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                  options: localVarRequestOptions
                });

              case 55:
              case "end":
                return _context5.stop();
            }
          }
        }, _callee5);
      }));

      function accommodationGetAccommodations(_x31, _x32, _x33, _x34, _x35, _x36, _x37, _x38, _x39, _x40, _x41, _x42, _x43, _x44, _x45, _x46, _x47, _x48, _x49, _x50, _x51, _x52, _x53, _x54, _x55, _x56, _x57, _x58, _x59) {
        return _accommodationGetAccommodations.apply(this, arguments);
      }

      return accommodationGetAccommodations;
    }(),

    /**
     *
     * @summary GET Accommodation List Localized
     * @param {number} [pagenumber] Pagenumber, (default:1)
     * @param {number} [pagesize] Elements per Page (If availabilitycheck set, pagesize has no effect all Accommodations are returned), (default:10)
     * @param {string} [seed] Seed &#x27;1 - 10&#x27; for Random Sorting, &#x27;0&#x27; generates a Random Seed, &#x27;null&#x27; disables Random Sorting, (default:null)
     * @param {string} [language] Localization Language
     * @param {string} [categoryfilter] Categoryfilter (BITMASK values: 1 &#x3D; (not categorized), 2 &#x3D; (1star), 4 &#x3D; (1flower), 8 &#x3D; (1sun), 14 &#x3D; (1star/1flower/1sun), 16 &#x3D; (2stars), 32 &#x3D; (2flowers), 64 &#x3D; (2suns), 112 &#x3D; (2stars/2flowers/2suns), 128 &#x3D; (3stars), 256 &#x3D; (3flowers), 512 &#x3D; (3suns), 1024 &#x3D; (3sstars), 1920 &#x3D; (3stars/3flowers/3suns/3sstars), 2048 &#x3D; (4stars), 4096 &#x3D; (4flowers), 8192 &#x3D; (4suns), 16384 &#x3D; (4sstars), 30720 &#x3D; (4stars/4flowers/4suns/4sstars), 32768 &#x3D; (5stars), 65536 &#x3D; (5flowers), 131072 &#x3D; (5suns), 229376 &#x3D; (5stars/5flowers/5suns), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)
     * @param {string} [typefilter] Typefilter (BITMASK values: 1 &#x3D; (HotelPension), 2 &#x3D; (BedBreakfast), 4 &#x3D; (Farm), 8 &#x3D; (Camping), 16 &#x3D; (Youth), 32 &#x3D; (Mountain), 64 &#x3D; (Apartment), 128 &#x3D; (Not defined),&#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)
     * @param {string} [boardfilter] Boardfilter (BITMASK values: 0 &#x3D; (all boards), 1 &#x3D; (without board), 2 &#x3D; (breakfast), 4 &#x3D; (half board), 8 &#x3D; (full board), 16 &#x3D; (All inclusive), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;0&#x27;)
     * @param {string} [featurefilter] FeatureFilter (BITMASK values: 1 &#x3D; (Group-friendly), 2 &#x3D; (Meeting rooms), 4 &#x3D; (Swimming pool), 8 &#x3D; (Sauna), 16 &#x3D; (Garage), 32 &#x3D; (Pick-up service), 64 &#x3D; (WLAN), 128 &#x3D; (Barrier-free), 256 &#x3D; (Special menus for allergy sufferers), 512 &#x3D; (Pets welcome), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)
     * @param {string} [themefilter] Themefilter (BITMASK values: 1 &#x3D; (Gourmet), 2 &#x3D; (At altitude), 4 &#x3D; (Regional wellness offerings), 8 &#x3D; (on the wheels), 16 &#x3D; (With family), 32 &#x3D; (Hiking), 64 &#x3D; (In the vineyards), 128 &#x3D; (Urban vibe), 256 &#x3D; (At the ski resort), 512 &#x3D; (Mediterranean), 1024 &#x3D; (In the Dolomites), 2048 &#x3D; (Alpine), 4096 &#x3D; (Small and charming), 8192 &#x3D; (Huts and mountain inns), 16384 &#x3D; (Rural way of life), 32768 &#x3D; (Balance), 65536 &#x3D; (Christmas markets), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)
     * @param {string} [badgefilter] BadgeFilter (BITMASK values: 1 &#x3D; (Belvita Wellness Hotel), 2 &#x3D; (Familyhotel), 4 &#x3D; (Bikehotel), 8 &#x3D; (Red Rooster Farm), 16 &#x3D; (Barrier free certificated), 32 &#x3D; (Vitalpina Hiking Hotel), 64 &#x3D; (Private Rooms in South Tyrol), 128 &#x3D; (Vinum Hotels), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)
     * @param {string} [idfilter] IDFilter (Separator &#x27;,&#x27; List of Accommodation IDs, &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)
     * @param {string} [locfilter] Locfilter (Separator &#x27;,&#x27; possible values: reg + REGIONID &#x3D; (Filter by Region), reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMVEREINID &#x3D; (Filter by Tourismverein), mun + MUNICIPALITYID &#x3D; (Filter by Municipality), fra + FRACTIONID &#x3D; (Filter by Fraction), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)
     * @param {string} [odhtagfilter] ODHTag Filter (refers to Array SmgTags) (String, Separator &#x27;,&#x27; more ODHTags possible, &#x27;null&#x27; &#x3D; No Filter, available ODHTags reference to &#x27;api/ODHTag?validforentity&#x3D;accommodation&#x27;), (default:&#x27;null&#x27;)
     * @param {boolean} [odhactive] ODHActive Filter (refers to field SmgActive) (possible Values: &#x27;null&#x27; Displays all Accommodations, &#x27;true&#x27; only ODH Active Accommodations, &#x27;false&#x27; only ODH Disabled Accommodations, (default:&#x27;null&#x27;)
     * @param {boolean} [active] TIC Active Filter (possible Values: &#x27;null&#x27; Displays all Accommodations, &#x27;true&#x27; only TIC Active Accommodations, &#x27;false&#x27; only TIC Disabled Accommodations, (default:&#x27;null&#x27;)
     * @param {string} [arrival] Arrival Date (yyyy-MM-dd) REQUIRED, (default:&#x27;Today&#x27;)
     * @param {string} [departure] Departure Date (yyyy-MM-dd) REQUIRED, (default:&#x27;Tomorrow&#x27;)
     * @param {string} [roominfo] Roominfo Filter REQUIRED (Splitter for Rooms &#x27;|&#x27; Splitter for Persons Ages &#x27;,&#x27;) (Room Types: 0&#x3D;notprovided, 1&#x3D;room, 2&#x3D;apartment, 4&#x3D;pitch/tent(onlyLTS), 8&#x3D;dorm(onlyLTS)) possible Values Example 1-18,10|1-18 &#x3D; 2 Rooms, Room 1 for 2 person Age 18 and Age 10, Room 2 for 1 Person Age 18), (default:&#x27;1-18,18&#x27;)
     * @param {string} [bokfilter] Booking Channels Filter REQUIRED (Separator &#x27;,&#x27; possible values: hgv &#x3D; (Booking Südtirol), htl &#x3D; (Hotel.de), exp &#x3D; (Expedia), bok &#x3D; (Booking.com), lts &#x3D; (LTS Availability check)), (default:&#x27;hgv&#x27;)
     * @param {string} [source] Source for MSS availability check, (default:&#x27;sinfo&#x27;)
     * @param {boolean} [availabilitycheck] Availability Check enabled/disabled (possible Values: &#x27;true&#x27;, &#x27;false), (default Value: &#x27;false&#x27;) NOT AVAILABLE AS OPEN DATA
     * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    accommodationGetAccommodationsLocalized: function () {
      var _accommodationGetAccommodationsLocalized = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6(pagenumber, pagesize, seed, language, categoryfilter, typefilter, boardfilter, featurefilter, themefilter, badgefilter, idfilter, locfilter, odhtagfilter, odhactive, active, arrival, departure, roominfo, bokfilter, source, availabilitycheck, latitude, longitude, radius) {
        var options,
            localVarPath,
            localVarUrlObj,
            baseOptions,
            localVarRequestOptions,
            localVarHeaderParameter,
            localVarQueryParameter,
            localVarAccessTokenValue,
            query,
            key,
            _key6,
            headersFromBaseOptions,
            _args6 = arguments;

        return regeneratorRuntime.wrap(function _callee6$(_context6) {
          while (1) {
            switch (_context6.prev = _context6.next) {
              case 0:
                options = _args6.length > 24 && _args6[24] !== undefined ? _args6[24] : {};
                localVarPath = "/api/AccommodationLocalized"; // use dummy base URL string because the URL constructor only accepts absolute URLs.

                localVarUrlObj = new URL(localVarPath, 'https://example.com');

                if (configuration) {
                  baseOptions = configuration.baseOptions;
                }

                localVarRequestOptions = _objectSpread2(_objectSpread2({
                  method: 'GET'
                }, baseOptions), options);
                localVarHeaderParameter = {};
                localVarQueryParameter = {}; // authentication oauth2 required
                // oauth required

                if (!(configuration && configuration.accessToken)) {
                  _context6.next = 19;
                  break;
                }

                if (!(typeof configuration.accessToken === 'function')) {
                  _context6.next = 14;
                  break;
                }

                _context6.next = 11;
                return configuration.accessToken("oauth2", [""]);

              case 11:
                _context6.t0 = _context6.sent;
                _context6.next = 17;
                break;

              case 14:
                _context6.next = 16;
                return configuration.accessToken;

              case 16:
                _context6.t0 = _context6.sent;

              case 17:
                localVarAccessTokenValue = _context6.t0;
                localVarHeaderParameter["Authorization"] = "Bearer " + localVarAccessTokenValue;

              case 19:
                if (pagenumber !== undefined) {
                  localVarQueryParameter['pagenumber'] = pagenumber;
                }

                if (pagesize !== undefined) {
                  localVarQueryParameter['pagesize'] = pagesize;
                }

                if (seed !== undefined) {
                  localVarQueryParameter['seed'] = seed;
                }

                if (language !== undefined) {
                  localVarQueryParameter['language'] = language;
                }

                if (categoryfilter !== undefined) {
                  localVarQueryParameter['categoryfilter'] = categoryfilter;
                }

                if (typefilter !== undefined) {
                  localVarQueryParameter['typefilter'] = typefilter;
                }

                if (boardfilter !== undefined) {
                  localVarQueryParameter['boardfilter'] = boardfilter;
                }

                if (featurefilter !== undefined) {
                  localVarQueryParameter['featurefilter'] = featurefilter;
                }

                if (themefilter !== undefined) {
                  localVarQueryParameter['themefilter'] = themefilter;
                }

                if (badgefilter !== undefined) {
                  localVarQueryParameter['badgefilter'] = badgefilter;
                }

                if (idfilter !== undefined) {
                  localVarQueryParameter['idfilter'] = idfilter;
                }

                if (locfilter !== undefined) {
                  localVarQueryParameter['locfilter'] = locfilter;
                }

                if (odhtagfilter !== undefined) {
                  localVarQueryParameter['odhtagfilter'] = odhtagfilter;
                }

                if (odhactive !== undefined) {
                  localVarQueryParameter['odhactive'] = odhactive;
                }

                if (active !== undefined) {
                  localVarQueryParameter['active'] = active;
                }

                if (arrival !== undefined) {
                  localVarQueryParameter['arrival'] = arrival;
                }

                if (departure !== undefined) {
                  localVarQueryParameter['departure'] = departure;
                }

                if (roominfo !== undefined) {
                  localVarQueryParameter['roominfo'] = roominfo;
                }

                if (bokfilter !== undefined) {
                  localVarQueryParameter['bokfilter'] = bokfilter;
                }

                if (source !== undefined) {
                  localVarQueryParameter['source'] = source;
                }

                if (availabilitycheck !== undefined) {
                  localVarQueryParameter['availabilitycheck'] = availabilitycheck;
                }

                if (latitude !== undefined) {
                  localVarQueryParameter['latitude'] = latitude;
                }

                if (longitude !== undefined) {
                  localVarQueryParameter['longitude'] = longitude;
                }

                if (radius !== undefined) {
                  localVarQueryParameter['radius'] = radius;
                }

                query = new URLSearchParams(localVarUrlObj.search);

                for (key in localVarQueryParameter) {
                  query.set(key, localVarQueryParameter[key]);
                }

                for (_key6 in options.query) {
                  query.set(_key6, options.query[_key6]);
                }

                localVarUrlObj.search = new URLSearchParams(query).toString();
                headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                localVarRequestOptions.headers = _objectSpread2(_objectSpread2(_objectSpread2({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                return _context6.abrupt("return", {
                  url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                  options: localVarRequestOptions
                });

              case 50:
              case "end":
                return _context6.stop();
            }
          }
        }, _callee6);
      }));

      function accommodationGetAccommodationsLocalized(_x60, _x61, _x62, _x63, _x64, _x65, _x66, _x67, _x68, _x69, _x70, _x71, _x72, _x73, _x74, _x75, _x76, _x77, _x78, _x79, _x80, _x81, _x82, _x83) {
        return _accommodationGetAccommodationsLocalized.apply(this, arguments);
      }

      return accommodationGetAccommodationsLocalized;
    }(),

    /**
     *
     * @summary GET Accommodation Feature List (LTS Features)
     * @param {string} [source] IF source &#x3D; \&quot;lts\&quot; the Features list is returned in XML Format directly from LTS, (default: blank)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    accommodationGetAllAccommodationFeaturesList: function () {
      var _accommodationGetAllAccommodationFeaturesList = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee7(source) {
        var options,
            localVarPath,
            localVarUrlObj,
            baseOptions,
            localVarRequestOptions,
            localVarHeaderParameter,
            localVarQueryParameter,
            localVarAccessTokenValue,
            query,
            key,
            _key7,
            headersFromBaseOptions,
            _args7 = arguments;

        return regeneratorRuntime.wrap(function _callee7$(_context7) {
          while (1) {
            switch (_context7.prev = _context7.next) {
              case 0:
                options = _args7.length > 1 && _args7[1] !== undefined ? _args7[1] : {};
                localVarPath = "/api/AccommodationFeatures"; // use dummy base URL string because the URL constructor only accepts absolute URLs.

                localVarUrlObj = new URL(localVarPath, 'https://example.com');

                if (configuration) {
                  baseOptions = configuration.baseOptions;
                }

                localVarRequestOptions = _objectSpread2(_objectSpread2({
                  method: 'GET'
                }, baseOptions), options);
                localVarHeaderParameter = {};
                localVarQueryParameter = {}; // authentication oauth2 required
                // oauth required

                if (!(configuration && configuration.accessToken)) {
                  _context7.next = 19;
                  break;
                }

                if (!(typeof configuration.accessToken === 'function')) {
                  _context7.next = 14;
                  break;
                }

                _context7.next = 11;
                return configuration.accessToken("oauth2", [""]);

              case 11:
                _context7.t0 = _context7.sent;
                _context7.next = 17;
                break;

              case 14:
                _context7.next = 16;
                return configuration.accessToken;

              case 16:
                _context7.t0 = _context7.sent;

              case 17:
                localVarAccessTokenValue = _context7.t0;
                localVarHeaderParameter["Authorization"] = "Bearer " + localVarAccessTokenValue;

              case 19:
                if (source !== undefined) {
                  localVarQueryParameter['source'] = source;
                }

                query = new URLSearchParams(localVarUrlObj.search);

                for (key in localVarQueryParameter) {
                  query.set(key, localVarQueryParameter[key]);
                }

                for (_key7 in options.query) {
                  query.set(_key7, options.query[_key7]);
                }

                localVarUrlObj.search = new URLSearchParams(query).toString();
                headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                localVarRequestOptions.headers = _objectSpread2(_objectSpread2(_objectSpread2({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                return _context7.abrupt("return", {
                  url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                  options: localVarRequestOptions
                });

              case 27:
              case "end":
                return _context7.stop();
            }
          }
        }, _callee7);
      }));

      function accommodationGetAllAccommodationFeaturesList(_x84) {
        return _accommodationGetAllAccommodationFeaturesList.apply(this, arguments);
      }

      return accommodationGetAllAccommodationFeaturesList;
    }(),

    /**
     *
     * @summary GET Accommodation Feature Single (LTS Features)
     * @param {string} id ID of the AccommodationFeature
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    accommodationGetAllAccommodationFeaturesSingle: function () {
      var _accommodationGetAllAccommodationFeaturesSingle = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee8(id) {
        var options,
            localVarPath,
            localVarUrlObj,
            baseOptions,
            localVarRequestOptions,
            localVarHeaderParameter,
            localVarQueryParameter,
            localVarAccessTokenValue,
            query,
            key,
            _key8,
            headersFromBaseOptions,
            _args8 = arguments;

        return regeneratorRuntime.wrap(function _callee8$(_context8) {
          while (1) {
            switch (_context8.prev = _context8.next) {
              case 0:
                options = _args8.length > 1 && _args8[1] !== undefined ? _args8[1] : {};

                if (!(id === null || id === undefined)) {
                  _context8.next = 3;
                  break;
                }

                throw new base_RequiredError('id', 'Required parameter id was null or undefined when calling accommodationGetAllAccommodationFeaturesSingle.');

              case 3:
                localVarPath = "/api/AccommodationFeatures/{id}".replace("{".concat("id", "}"), encodeURIComponent(String(id))); // use dummy base URL string because the URL constructor only accepts absolute URLs.

                localVarUrlObj = new URL(localVarPath, 'https://example.com');

                if (configuration) {
                  baseOptions = configuration.baseOptions;
                }

                localVarRequestOptions = _objectSpread2(_objectSpread2({
                  method: 'GET'
                }, baseOptions), options);
                localVarHeaderParameter = {};
                localVarQueryParameter = {}; // authentication oauth2 required
                // oauth required

                if (!(configuration && configuration.accessToken)) {
                  _context8.next = 21;
                  break;
                }

                if (!(typeof configuration.accessToken === 'function')) {
                  _context8.next = 16;
                  break;
                }

                _context8.next = 13;
                return configuration.accessToken("oauth2", [""]);

              case 13:
                _context8.t0 = _context8.sent;
                _context8.next = 19;
                break;

              case 16:
                _context8.next = 18;
                return configuration.accessToken;

              case 18:
                _context8.t0 = _context8.sent;

              case 19:
                localVarAccessTokenValue = _context8.t0;
                localVarHeaderParameter["Authorization"] = "Bearer " + localVarAccessTokenValue;

              case 21:
                query = new URLSearchParams(localVarUrlObj.search);

                for (key in localVarQueryParameter) {
                  query.set(key, localVarQueryParameter[key]);
                }

                for (_key8 in options.query) {
                  query.set(_key8, options.query[_key8]);
                }

                localVarUrlObj.search = new URLSearchParams(query).toString();
                headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                localVarRequestOptions.headers = _objectSpread2(_objectSpread2(_objectSpread2({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                return _context8.abrupt("return", {
                  url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                  options: localVarRequestOptions
                });

              case 28:
              case "end":
                return _context8.stop();
            }
          }
        }, _callee8);
      }));

      function accommodationGetAllAccommodationFeaturesSingle(_x85) {
        return _accommodationGetAllAccommodationFeaturesSingle.apply(this, arguments);
      }

      return accommodationGetAllAccommodationFeaturesSingle;
    }(),

    /**
     *
     * @summary GET Accommodation Types List
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    accommodationGetAllAccommodationTypesList: function () {
      var _accommodationGetAllAccommodationTypesList = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee9() {
        var options,
            localVarPath,
            localVarUrlObj,
            baseOptions,
            localVarRequestOptions,
            localVarHeaderParameter,
            localVarQueryParameter,
            localVarAccessTokenValue,
            query,
            key,
            _key9,
            headersFromBaseOptions,
            _args9 = arguments;

        return regeneratorRuntime.wrap(function _callee9$(_context9) {
          while (1) {
            switch (_context9.prev = _context9.next) {
              case 0:
                options = _args9.length > 0 && _args9[0] !== undefined ? _args9[0] : {};
                localVarPath = "/api/AccommodationTypes"; // use dummy base URL string because the URL constructor only accepts absolute URLs.

                localVarUrlObj = new URL(localVarPath, 'https://example.com');

                if (configuration) {
                  baseOptions = configuration.baseOptions;
                }

                localVarRequestOptions = _objectSpread2(_objectSpread2({
                  method: 'GET'
                }, baseOptions), options);
                localVarHeaderParameter = {};
                localVarQueryParameter = {}; // authentication oauth2 required
                // oauth required

                if (!(configuration && configuration.accessToken)) {
                  _context9.next = 19;
                  break;
                }

                if (!(typeof configuration.accessToken === 'function')) {
                  _context9.next = 14;
                  break;
                }

                _context9.next = 11;
                return configuration.accessToken("oauth2", [""]);

              case 11:
                _context9.t0 = _context9.sent;
                _context9.next = 17;
                break;

              case 14:
                _context9.next = 16;
                return configuration.accessToken;

              case 16:
                _context9.t0 = _context9.sent;

              case 17:
                localVarAccessTokenValue = _context9.t0;
                localVarHeaderParameter["Authorization"] = "Bearer " + localVarAccessTokenValue;

              case 19:
                query = new URLSearchParams(localVarUrlObj.search);

                for (key in localVarQueryParameter) {
                  query.set(key, localVarQueryParameter[key]);
                }

                for (_key9 in options.query) {
                  query.set(_key9, options.query[_key9]);
                }

                localVarUrlObj.search = new URLSearchParams(query).toString();
                headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                localVarRequestOptions.headers = _objectSpread2(_objectSpread2(_objectSpread2({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                return _context9.abrupt("return", {
                  url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                  options: localVarRequestOptions
                });

              case 26:
              case "end":
                return _context9.stop();
            }
          }
        }, _callee9);
      }));

      function accommodationGetAllAccommodationTypesList() {
        return _accommodationGetAllAccommodationTypesList.apply(this, arguments);
      }

      return accommodationGetAllAccommodationTypesList;
    }(),

    /**
     *
     * @summary GET Accommodation Types Single
     * @param {string} id ID of the AccommodationType
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    accommodationGetAllAccommodationTypessingle: function () {
      var _accommodationGetAllAccommodationTypessingle = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee10(id) {
        var options,
            localVarPath,
            localVarUrlObj,
            baseOptions,
            localVarRequestOptions,
            localVarHeaderParameter,
            localVarQueryParameter,
            localVarAccessTokenValue,
            query,
            key,
            _key10,
            headersFromBaseOptions,
            _args10 = arguments;

        return regeneratorRuntime.wrap(function _callee10$(_context10) {
          while (1) {
            switch (_context10.prev = _context10.next) {
              case 0:
                options = _args10.length > 1 && _args10[1] !== undefined ? _args10[1] : {};

                if (!(id === null || id === undefined)) {
                  _context10.next = 3;
                  break;
                }

                throw new base_RequiredError('id', 'Required parameter id was null or undefined when calling accommodationGetAllAccommodationTypessingle.');

              case 3:
                localVarPath = "/api/AccommodationTypes/{id}".replace("{".concat("id", "}"), encodeURIComponent(String(id))); // use dummy base URL string because the URL constructor only accepts absolute URLs.

                localVarUrlObj = new URL(localVarPath, 'https://example.com');

                if (configuration) {
                  baseOptions = configuration.baseOptions;
                }

                localVarRequestOptions = _objectSpread2(_objectSpread2({
                  method: 'GET'
                }, baseOptions), options);
                localVarHeaderParameter = {};
                localVarQueryParameter = {}; // authentication oauth2 required
                // oauth required

                if (!(configuration && configuration.accessToken)) {
                  _context10.next = 21;
                  break;
                }

                if (!(typeof configuration.accessToken === 'function')) {
                  _context10.next = 16;
                  break;
                }

                _context10.next = 13;
                return configuration.accessToken("oauth2", [""]);

              case 13:
                _context10.t0 = _context10.sent;
                _context10.next = 19;
                break;

              case 16:
                _context10.next = 18;
                return configuration.accessToken;

              case 18:
                _context10.t0 = _context10.sent;

              case 19:
                localVarAccessTokenValue = _context10.t0;
                localVarHeaderParameter["Authorization"] = "Bearer " + localVarAccessTokenValue;

              case 21:
                query = new URLSearchParams(localVarUrlObj.search);

                for (key in localVarQueryParameter) {
                  query.set(key, localVarQueryParameter[key]);
                }

                for (_key10 in options.query) {
                  query.set(_key10, options.query[_key10]);
                }

                localVarUrlObj.search = new URLSearchParams(query).toString();
                headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                localVarRequestOptions.headers = _objectSpread2(_objectSpread2(_objectSpread2({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                return _context10.abrupt("return", {
                  url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                  options: localVarRequestOptions
                });

              case 28:
              case "end":
                return _context10.stop();
            }
          }
        }, _callee10);
      }));

      function accommodationGetAllAccommodationTypessingle(_x86) {
        return _accommodationGetAllAccommodationTypessingle.apply(this, arguments);
      }

      return accommodationGetAllAccommodationTypessingle;
    }(),

    /**
     *
     * @summary GET Accommodation Changed List by Date
     * @param {number} [pagenumber] Pagenumber, (default:1)
     * @param {number} [pagesize] Elements per Page, (default:10)
     * @param {string} [seed] Seed &#x27;1 - 10&#x27; for Random Sorting, &#x27;0&#x27; generates a Random Seed, &#x27;null&#x27; disables Random Sorting, (default:null)
     * @param {string} [updatefrom] Date from Format (yyyy-MM-dd) (all Accos with LastChange &amp;gt;&#x3D; datefrom are passed), (default: DateTime.Now - 1 Day)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    accommodationGetAllAccommodationsChanged: function () {
      var _accommodationGetAllAccommodationsChanged = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee11(pagenumber, pagesize, seed, updatefrom) {
        var options,
            localVarPath,
            localVarUrlObj,
            baseOptions,
            localVarRequestOptions,
            localVarHeaderParameter,
            localVarQueryParameter,
            localVarAccessTokenValue,
            query,
            key,
            _key11,
            headersFromBaseOptions,
            _args11 = arguments;

        return regeneratorRuntime.wrap(function _callee11$(_context11) {
          while (1) {
            switch (_context11.prev = _context11.next) {
              case 0:
                options = _args11.length > 4 && _args11[4] !== undefined ? _args11[4] : {};
                localVarPath = "/api/AccommodationChanged"; // use dummy base URL string because the URL constructor only accepts absolute URLs.

                localVarUrlObj = new URL(localVarPath, 'https://example.com');

                if (configuration) {
                  baseOptions = configuration.baseOptions;
                }

                localVarRequestOptions = _objectSpread2(_objectSpread2({
                  method: 'GET'
                }, baseOptions), options);
                localVarHeaderParameter = {};
                localVarQueryParameter = {}; // authentication oauth2 required
                // oauth required

                if (!(configuration && configuration.accessToken)) {
                  _context11.next = 19;
                  break;
                }

                if (!(typeof configuration.accessToken === 'function')) {
                  _context11.next = 14;
                  break;
                }

                _context11.next = 11;
                return configuration.accessToken("oauth2", [""]);

              case 11:
                _context11.t0 = _context11.sent;
                _context11.next = 17;
                break;

              case 14:
                _context11.next = 16;
                return configuration.accessToken;

              case 16:
                _context11.t0 = _context11.sent;

              case 17:
                localVarAccessTokenValue = _context11.t0;
                localVarHeaderParameter["Authorization"] = "Bearer " + localVarAccessTokenValue;

              case 19:
                if (pagenumber !== undefined) {
                  localVarQueryParameter['pagenumber'] = pagenumber;
                }

                if (pagesize !== undefined) {
                  localVarQueryParameter['pagesize'] = pagesize;
                }

                if (seed !== undefined) {
                  localVarQueryParameter['seed'] = seed;
                }

                if (updatefrom !== undefined) {
                  localVarQueryParameter['updatefrom'] = updatefrom;
                }

                query = new URLSearchParams(localVarUrlObj.search);

                for (key in localVarQueryParameter) {
                  query.set(key, localVarQueryParameter[key]);
                }

                for (_key11 in options.query) {
                  query.set(_key11, options.query[_key11]);
                }

                localVarUrlObj.search = new URLSearchParams(query).toString();
                headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                localVarRequestOptions.headers = _objectSpread2(_objectSpread2(_objectSpread2({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                return _context11.abrupt("return", {
                  url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                  options: localVarRequestOptions
                });

              case 30:
              case "end":
                return _context11.stop();
            }
          }
        }, _callee11);
      }));

      function accommodationGetAllAccommodationsChanged(_x87, _x88, _x89, _x90) {
        return _accommodationGetAllAccommodationsChanged.apply(this, arguments);
      }

      return accommodationGetAllAccommodationsChanged;
    }(),

    /**
     *
     * @summary GET Reduced Accommodation List
     * @param {string} [language] Localization Language
     * @param {string} [categoryfilter] Categoryfilter (BITMASK values: 1 &#x3D; (not categorized), 2 &#x3D; (1star), 4 &#x3D; (1flower), 8 &#x3D; (1sun), 14 &#x3D; (1star/1flower/1sun), 16 &#x3D; (2stars), 32 &#x3D; (2flowers), 64 &#x3D; (2suns), 112 &#x3D; (2stars/2flowers/2suns), 128 &#x3D; (3stars), 256 &#x3D; (3flowers), 512 &#x3D; (3suns), 1024 &#x3D; (3sstars), 1920 &#x3D; (3stars/3flowers/3suns/3sstars), 2048 &#x3D; (4stars), 4096 &#x3D; (4flowers), 8192 &#x3D; (4suns), 16384 &#x3D; (4sstars), 30720 &#x3D; (4stars/4flowers/4suns/4sstars), 32768 &#x3D; (5stars), 65536 &#x3D; (5flowers), 131072 &#x3D; (5suns), 229376 &#x3D; (5stars/5flowers/5suns), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)
     * @param {string} [typefilter] Typefilter (BITMASK values: 1 &#x3D; (HotelPension), 2 &#x3D; (BedBreakfast), 4 &#x3D; (Farm), 8 &#x3D; (Camping), 16 &#x3D; (Youth), 32 &#x3D; (Mountain), 64 &#x3D; (Apartment), 128 &#x3D; (Not defined),&#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)
     * @param {string} [boardfilter] Boardfilter (BITMASK values: 0 &#x3D; (all boards), 1 &#x3D; (without board), 2 &#x3D; (breakfast), 4 &#x3D; (half board), 8 &#x3D; (full board), 16 &#x3D; (All inclusive), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;0&#x27;)
     * @param {string} [featurefilter] FeatureFilter (BITMASK values: 1 &#x3D; (Group-friendly), 2 &#x3D; (Meeting rooms), 4 &#x3D; (Swimming pool), 8 &#x3D; (Sauna), 16 &#x3D; (Garage), 32 &#x3D; (Pick-up service), 64 &#x3D; (WLAN), 128 &#x3D; (Barrier-free), 256 &#x3D; (Special menus for allergy sufferers), 512 &#x3D; (Pets welcome), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)
     * @param {string} [featureidfilter] Feature Id Filter, filter over ALL Features vailable (Separator &#x27;,&#x27; List of Feature IDs, &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)
     * @param {string} [themefilter] Themefilter (BITMASK values: 1 &#x3D; (Gourmet), 2 &#x3D; (At altitude), 4 &#x3D; (Regional wellness offerings), 8 &#x3D; (on the wheels), 16 &#x3D; (With family), 32 &#x3D; (Hiking), 64 &#x3D; (In the vineyards), 128 &#x3D; (Urban vibe), 256 &#x3D; (At the ski resort), 512 &#x3D; (Mediterranean), 1024 &#x3D; (In the Dolomites), 2048 &#x3D; (Alpine), 4096 &#x3D; (Small and charming), 8192 &#x3D; (Huts and mountain inns), 16384 &#x3D; (Rural way of life), 32768 &#x3D; (Balance), 65536 &#x3D; (Christmas markets), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)
     * @param {string} [badgefilter] BadgeFilter (BITMASK values: 1 &#x3D; (Belvita Wellness Hotel), 2 &#x3D; (Familyhotel), 4 &#x3D; (Bikehotel), 8 &#x3D; (Red Rooster Farm), 16 &#x3D; (Barrier free certificated), 32 &#x3D; (Vitalpina Hiking Hotel), 64 &#x3D; (Private Rooms in South Tyrol), 128 &#x3D; (Vinum Hotels), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)
     * @param {string} [locfilter] Locfilter (Separator &#x27;,&#x27; possible values: reg + REGIONID &#x3D; (Filter by Region), reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMVEREINID &#x3D; (Filter by Tourismverein), mun + MUNICIPALITYID &#x3D; (Filter by Municipality), fra + FRACTIONID &#x3D; (Filter by Fraction), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)
     * @param {string} [odhtagfilter] ODHTag Filter (refers to Array SmgTags) (String, Separator &#x27;,&#x27; more ODHTags possible, &#x27;null&#x27; &#x3D; No Filter, available ODHTags reference to &#x27;api/ODHTag?validforentity&#x3D;accommodation&#x27;), (default:&#x27;null&#x27;)
     * @param {boolean} [odhactive] ODHActive Filter (refers to field SmgActive) (possible Values: &#x27;null&#x27; Displays all Accommodations, &#x27;true&#x27; only ODH Active Accommodations, &#x27;false&#x27; only ODH Disabled Accommodations, (default:&#x27;null&#x27;)
     * @param {boolean} [active] TIC Active Filter (possible Values: &#x27;null&#x27; Displays all Accommodations, &#x27;true&#x27; only TIC Active Accommodations, &#x27;false&#x27; only TIC Disabled Accommodations, (default:&#x27;null&#x27;)
     * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)
     * @param {string} [fields] Select fields to display, by Default Title and Id are selected if fields filter is null More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)
     * @param {boolean} [suedtirolmobil]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    accommodationGetReducedAccosAsync: function () {
      var _accommodationGetReducedAccosAsync = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee12(language, categoryfilter, typefilter, boardfilter, featurefilter, featureidfilter, themefilter, badgefilter, locfilter, odhtagfilter, odhactive, active, latitude, longitude, radius, fields, suedtirolmobil) {
        var options,
            localVarPath,
            localVarUrlObj,
            baseOptions,
            localVarRequestOptions,
            localVarHeaderParameter,
            localVarQueryParameter,
            localVarAccessTokenValue,
            query,
            key,
            _key12,
            headersFromBaseOptions,
            _args12 = arguments;

        return regeneratorRuntime.wrap(function _callee12$(_context12) {
          while (1) {
            switch (_context12.prev = _context12.next) {
              case 0:
                options = _args12.length > 17 && _args12[17] !== undefined ? _args12[17] : {};
                localVarPath = "/api/AccommodationReduced"; // use dummy base URL string because the URL constructor only accepts absolute URLs.

                localVarUrlObj = new URL(localVarPath, 'https://example.com');

                if (configuration) {
                  baseOptions = configuration.baseOptions;
                }

                localVarRequestOptions = _objectSpread2(_objectSpread2({
                  method: 'GET'
                }, baseOptions), options);
                localVarHeaderParameter = {};
                localVarQueryParameter = {}; // authentication oauth2 required
                // oauth required

                if (!(configuration && configuration.accessToken)) {
                  _context12.next = 19;
                  break;
                }

                if (!(typeof configuration.accessToken === 'function')) {
                  _context12.next = 14;
                  break;
                }

                _context12.next = 11;
                return configuration.accessToken("oauth2", [""]);

              case 11:
                _context12.t0 = _context12.sent;
                _context12.next = 17;
                break;

              case 14:
                _context12.next = 16;
                return configuration.accessToken;

              case 16:
                _context12.t0 = _context12.sent;

              case 17:
                localVarAccessTokenValue = _context12.t0;
                localVarHeaderParameter["Authorization"] = "Bearer " + localVarAccessTokenValue;

              case 19:
                if (language !== undefined) {
                  localVarQueryParameter['language'] = language;
                }

                if (categoryfilter !== undefined) {
                  localVarQueryParameter['categoryfilter'] = categoryfilter;
                }

                if (typefilter !== undefined) {
                  localVarQueryParameter['typefilter'] = typefilter;
                }

                if (boardfilter !== undefined) {
                  localVarQueryParameter['boardfilter'] = boardfilter;
                }

                if (featurefilter !== undefined) {
                  localVarQueryParameter['featurefilter'] = featurefilter;
                }

                if (featureidfilter !== undefined) {
                  localVarQueryParameter['featureidfilter'] = featureidfilter;
                }

                if (themefilter !== undefined) {
                  localVarQueryParameter['themefilter'] = themefilter;
                }

                if (badgefilter !== undefined) {
                  localVarQueryParameter['badgefilter'] = badgefilter;
                }

                if (locfilter !== undefined) {
                  localVarQueryParameter['locfilter'] = locfilter;
                }

                if (odhtagfilter !== undefined) {
                  localVarQueryParameter['odhtagfilter'] = odhtagfilter;
                }

                if (odhactive !== undefined) {
                  localVarQueryParameter['odhactive'] = odhactive;
                }

                if (active !== undefined) {
                  localVarQueryParameter['active'] = active;
                }

                if (latitude !== undefined) {
                  localVarQueryParameter['latitude'] = latitude;
                }

                if (longitude !== undefined) {
                  localVarQueryParameter['longitude'] = longitude;
                }

                if (radius !== undefined) {
                  localVarQueryParameter['radius'] = radius;
                }

                if (fields !== undefined) {
                  localVarQueryParameter['fields'] = fields;
                }

                if (suedtirolmobil !== undefined) {
                  localVarQueryParameter['suedtirolmobil'] = suedtirolmobil;
                }

                query = new URLSearchParams(localVarUrlObj.search);

                for (key in localVarQueryParameter) {
                  query.set(key, localVarQueryParameter[key]);
                }

                for (_key12 in options.query) {
                  query.set(_key12, options.query[_key12]);
                }

                localVarUrlObj.search = new URLSearchParams(query).toString();
                headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                localVarRequestOptions.headers = _objectSpread2(_objectSpread2(_objectSpread2({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                return _context12.abrupt("return", {
                  url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                  options: localVarRequestOptions
                });

              case 43:
              case "end":
                return _context12.stop();
            }
          }
        }, _callee12);
      }));

      function accommodationGetReducedAccosAsync(_x91, _x92, _x93, _x94, _x95, _x96, _x97, _x98, _x99, _x100, _x101, _x102, _x103, _x104, _x105, _x106, _x107) {
        return _accommodationGetReducedAccosAsync.apply(this, arguments);
      }

      return accommodationGetReducedAccosAsync;
    }(),

    /**
     *
     * @summary POST Available Accommodations HGV(Booking Suedtirol MSS) / LTS on posted IDs only Availability Response NOT AVAILABLE AS OPEN DATA
     * @param {string} body Posted Accommodation IDs (Separated by ,)
     * @param {string} [availabilitychecklanguage] Language of the Availability Response
     * @param {string} [boardfilter] Boardfilter (BITMASK values: 0 &#x3D; (all boards), 1 &#x3D; (without board), 2 &#x3D; (breakfast), 4 &#x3D; (half board), 8 &#x3D; (full board), 16 &#x3D; (All inclusive), &#x27;null&#x27; &#x3D; No Filter)
     * @param {string} [arrival] Arrival Date (yyyy-MM-dd) REQUIRED
     * @param {string} [departure] Departure Date (yyyy-MM-dd) REQUIRED
     * @param {string} [roominfo] Roominfo Filter REQUIRED (Splitter for Rooms &#x27;|&#x27; Splitter for Persons Ages &#x27;,&#x27;) (Room Types: 0&#x3D;notprovided, 1&#x3D;room, 2&#x3D;apartment, 4&#x3D;pitch/tent(onlyLTS), 8&#x3D;dorm(onlyLTS)) possible Values Example 1-18,10|1-18 &#x3D; 2 Rooms, Room 1 for 2 person Age 18 and Age 10, Room 2 for 1 Person Age 18), (default:&#x27;1-18,18&#x27;)
     * @param {string} [bokfilter] Booking Channels Filter (Separator &#x27;,&#x27; possible values: hgv &#x3D; (Booking Südtirol), htl &#x3D; (Hotel.de), exp &#x3D; (Expedia), bok &#x3D; (Booking.com), lts &#x3D; (LTS Availability check), (default:hgv)) REQUIRED
     * @param {string} [source] Source of the Requester (possible value: &#x27;sinfo&#x27; &#x3D; Suedtirol.info, &#x27;sbalance&#x27; &#x3D; Südtirol Balance) REQUIRED
     * @param {string} [detail] Include Offer Details (Boolean, 1 &#x3D; full Details)
     * @param {boolean} [withoutmssids] Search over all bookable Accommodations on HGV MSS (No Ids have to be provided as Post Data) (default: false)
     * @param {boolean} [withoutlcsids] Search over all Accommodations on LTS (No Ids have to be provided as Post Data) (default: false)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    accommodationPostAvailableMSSResponseonlyAccommodations: function () {
      var _accommodationPostAvailableMSSResponseonlyAccommodations = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee13(body, availabilitychecklanguage, boardfilter, arrival, departure, roominfo, bokfilter, source, detail, withoutmssids, withoutlcsids) {
        var options,
            localVarPath,
            localVarUrlObj,
            baseOptions,
            localVarRequestOptions,
            localVarHeaderParameter,
            localVarQueryParameter,
            localVarAccessTokenValue,
            query,
            key,
            _key13,
            headersFromBaseOptions,
            needsSerialization,
            _args13 = arguments;

        return regeneratorRuntime.wrap(function _callee13$(_context13) {
          while (1) {
            switch (_context13.prev = _context13.next) {
              case 0:
                options = _args13.length > 11 && _args13[11] !== undefined ? _args13[11] : {};

                if (!(body === null || body === undefined)) {
                  _context13.next = 3;
                  break;
                }

                throw new base_RequiredError('body', 'Required parameter body was null or undefined when calling accommodationPostAvailableMSSResponseonlyAccommodations.');

              case 3:
                localVarPath = "/api/AvailabilityCheck"; // use dummy base URL string because the URL constructor only accepts absolute URLs.

                localVarUrlObj = new URL(localVarPath, 'https://example.com');

                if (configuration) {
                  baseOptions = configuration.baseOptions;
                }

                localVarRequestOptions = _objectSpread2(_objectSpread2({
                  method: 'POST'
                }, baseOptions), options);
                localVarHeaderParameter = {};
                localVarQueryParameter = {}; // authentication oauth2 required
                // oauth required

                if (!(configuration && configuration.accessToken)) {
                  _context13.next = 21;
                  break;
                }

                if (!(typeof configuration.accessToken === 'function')) {
                  _context13.next = 16;
                  break;
                }

                _context13.next = 13;
                return configuration.accessToken("oauth2", [""]);

              case 13:
                _context13.t0 = _context13.sent;
                _context13.next = 19;
                break;

              case 16:
                _context13.next = 18;
                return configuration.accessToken;

              case 18:
                _context13.t0 = _context13.sent;

              case 19:
                localVarAccessTokenValue = _context13.t0;
                localVarHeaderParameter["Authorization"] = "Bearer " + localVarAccessTokenValue;

              case 21:
                if (availabilitychecklanguage !== undefined) {
                  localVarQueryParameter['availabilitychecklanguage'] = availabilitychecklanguage;
                }

                if (boardfilter !== undefined) {
                  localVarQueryParameter['boardfilter'] = boardfilter;
                }

                if (arrival !== undefined) {
                  localVarQueryParameter['arrival'] = arrival;
                }

                if (departure !== undefined) {
                  localVarQueryParameter['departure'] = departure;
                }

                if (roominfo !== undefined) {
                  localVarQueryParameter['roominfo'] = roominfo;
                }

                if (bokfilter !== undefined) {
                  localVarQueryParameter['bokfilter'] = bokfilter;
                }

                if (source !== undefined) {
                  localVarQueryParameter['source'] = source;
                }

                if (detail !== undefined) {
                  localVarQueryParameter['detail'] = detail;
                }

                if (withoutmssids !== undefined) {
                  localVarQueryParameter['withoutmssids'] = withoutmssids;
                }

                if (withoutlcsids !== undefined) {
                  localVarQueryParameter['withoutlcsids'] = withoutlcsids;
                }

                localVarHeaderParameter['Content-Type'] = 'application/json';
                query = new URLSearchParams(localVarUrlObj.search);

                for (key in localVarQueryParameter) {
                  query.set(key, localVarQueryParameter[key]);
                }

                for (_key13 in options.query) {
                  query.set(_key13, options.query[_key13]);
                }

                localVarUrlObj.search = new URLSearchParams(query).toString();
                headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                localVarRequestOptions.headers = _objectSpread2(_objectSpread2(_objectSpread2({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                needsSerialization = typeof body !== "string" || localVarRequestOptions.headers['Content-Type'] === 'application/json';
                localVarRequestOptions.data = needsSerialization ? JSON.stringify(body !== undefined ? body : {}) : body || "";
                return _context13.abrupt("return", {
                  url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                  options: localVarRequestOptions
                });

              case 41:
              case "end":
                return _context13.stop();
            }
          }
        }, _callee13);
      }));

      function accommodationPostAvailableMSSResponseonlyAccommodations(_x108, _x109, _x110, _x111, _x112, _x113, _x114, _x115, _x116, _x117, _x118) {
        return _accommodationPostAvailableMSSResponseonlyAccommodations.apply(this, arguments);
      }

      return accommodationPostAvailableMSSResponseonlyAccommodations;
    }()
  };
};
/**
 * AccommodationApi - functional programming interface
 * @export
 */

var accommodation_api_AccommodationApiFp = function AccommodationApiFp(configuration) {
  return {
    /**
     *
     * @summary GET Accommodation Room Info by AccoID
     * @param {string} accoid Accommodation ID
     * @param {string} [idsource] ID Source Filter (possible values:&#x27;lts&#x27;,&#x27;hgv&#x27;), (default:&#x27;lts&#x27;)
     * @param {boolean} [getall] Get Rooms from all sources (If an accommodation is bookable on Booking Southtyrol, rooms from this source are returned, setting getall to true returns also LTS Rooms), (default:false)
     * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)
     * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    accommodationGetAccoRoomInfos: function accommodationGetAccoRoomInfos(accoid, idsource, getall, fields, language, options) {
      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee14() {
        var localVarAxiosArgs;
        return regeneratorRuntime.wrap(function _callee14$(_context14) {
          while (1) {
            switch (_context14.prev = _context14.next) {
              case 0:
                _context14.next = 2;
                return accommodation_api_AccommodationApiAxiosParamCreator(configuration).accommodationGetAccoRoomInfos(accoid, idsource, getall, fields, language, options);

              case 2:
                localVarAxiosArgs = _context14.sent;
                return _context14.abrupt("return", function () {
                  var axios = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : axios_default.a;
                  var basePath = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : BASE_PATH;

                  var axiosRequestArgs = _objectSpread2(_objectSpread2({}, localVarAxiosArgs.options), {}, {
                    url: basePath + localVarAxiosArgs.url
                  });

                  return axios.request(axiosRequestArgs);
                });

              case 4:
              case "end":
                return _context14.stop();
            }
          }
        }, _callee14);
      }))();
    },

    /**
     *
     * @summary GET Accommodation Room Info Single
     * @param {string} id AccommodationRoom ID
     * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)
     * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    accommodationGetAccoRoomInfosById: function accommodationGetAccoRoomInfosById(id, fields, language, options) {
      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee15() {
        var localVarAxiosArgs;
        return regeneratorRuntime.wrap(function _callee15$(_context15) {
          while (1) {
            switch (_context15.prev = _context15.next) {
              case 0:
                _context15.next = 2;
                return accommodation_api_AccommodationApiAxiosParamCreator(configuration).accommodationGetAccoRoomInfosById(id, fields, language, options);

              case 2:
                localVarAxiosArgs = _context15.sent;
                return _context15.abrupt("return", function () {
                  var axios = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : axios_default.a;
                  var basePath = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : BASE_PATH;

                  var axiosRequestArgs = _objectSpread2(_objectSpread2({}, localVarAxiosArgs.options), {}, {
                    url: basePath + localVarAxiosArgs.url
                  });

                  return axios.request(axiosRequestArgs);
                });

              case 4:
              case "end":
                return _context15.stop();
            }
          }
        }, _callee15);
      }))();
    },

    /**
     *
     * @summary GET Accommodation Single
     * @param {string} id ID of the Accommodation
     * @param {string} [idsource] ID Source Filter (possible values:&#x27;lts&#x27;,&#x27;hgv&#x27;), (default:&#x27;lts&#x27;)
     * @param {string} [availabilitychecklanguage] Language of the Availability Response (possible values: &#x27;de&#x27;,&#x27;it&#x27;,&#x27;en&#x27;), (default:&#x27;de&#x27;)
     * @param {string} [boardfilter] Boardfilter (BITMASK values: 0 &#x3D; (all boards), 1 &#x3D; (without board), 2 &#x3D; (breakfast), 4 &#x3D; (half board), 8 &#x3D; (full board), 16 &#x3D; (All inclusive), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;0&#x27;)
     * @param {string} [arrival] Arrival Date (yyyy-MM-dd) REQUIRED, (default:&#x27;Today&#x27;)
     * @param {string} [departure] Departure Date (yyyy-MM-dd) REQUIRED, (default:&#x27;Tomorrow&#x27;)
     * @param {string} [roominfo] Roominfo Filter REQUIRED (Splitter for Rooms &#x27;|&#x27; Splitter for Persons Ages &#x27;,&#x27;) (Room Types: 0&#x3D;notprovided, 1&#x3D;room, 2&#x3D;apartment, 4&#x3D;pitch/tent(onlyLTS), 8&#x3D;dorm(onlyLTS)) possible Values Example 1-18,10|1-18 &#x3D; 2 Rooms, Room 1 for 2 person Age 18 and Age 10, Room 2 for 1 Person Age 18), (default:&#x27;1-18,18&#x27;)
     * @param {string} [bokfilter] Booking Channels Filter REQUIRED (Separator &#x27;,&#x27; possible values: hgv &#x3D; (Booking Südtirol), htl &#x3D; (Hotel.de), exp &#x3D; (Expedia), bok &#x3D; (Booking.com), lts &#x3D; (LTS Availability check)), (default:&#x27;hgv&#x27;)
     * @param {string} [source] Source for MSS availability check, (default:&#x27;sinfo&#x27;)
     * @param {boolean} [availabilitycheck] Availability Check enabled/disabled (possible Values: &#x27;true&#x27;, &#x27;false), (default Value: &#x27;false&#x27;) NOT AVAILABLE AS OPEN DATA
     * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)
     * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    accommodationGetAccommodation: function accommodationGetAccommodation(id, idsource, availabilitychecklanguage, boardfilter, arrival, departure, roominfo, bokfilter, source, availabilitycheck, fields, language, options) {
      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee16() {
        var localVarAxiosArgs;
        return regeneratorRuntime.wrap(function _callee16$(_context16) {
          while (1) {
            switch (_context16.prev = _context16.next) {
              case 0:
                _context16.next = 2;
                return accommodation_api_AccommodationApiAxiosParamCreator(configuration).accommodationGetAccommodation(id, idsource, availabilitychecklanguage, boardfilter, arrival, departure, roominfo, bokfilter, source, availabilitycheck, fields, language, options);

              case 2:
                localVarAxiosArgs = _context16.sent;
                return _context16.abrupt("return", function () {
                  var axios = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : axios_default.a;
                  var basePath = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : BASE_PATH;

                  var axiosRequestArgs = _objectSpread2(_objectSpread2({}, localVarAxiosArgs.options), {}, {
                    url: basePath + localVarAxiosArgs.url
                  });

                  return axios.request(axiosRequestArgs);
                });

              case 4:
              case "end":
                return _context16.stop();
            }
          }
        }, _callee16);
      }))();
    },

    /**
     *
     * @summary GET Accommodation Single Localized
     * @param {string} id ID of the Accommodation
     * @param {string} [language] Localization Language
     * @param {string} [idsource] ID Source Filter (possible values:&#x27;lts&#x27;,&#x27;hgv&#x27;), (default:&#x27;lts&#x27;)
     * @param {string} [boardfilter] Boardfilter (BITMASK values: 0 &#x3D; (all boards), 1 &#x3D; (without board), 2 &#x3D; (breakfast), 4 &#x3D; (half board), 8 &#x3D; (full board), 16 &#x3D; (All inclusive), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;0&#x27;)
     * @param {string} [arrival] Arrival Date (yyyy-MM-dd) REQUIRED, (default:&#x27;Today&#x27;)
     * @param {string} [departure] Departure Date (yyyy-MM-dd) REQUIRED, (default:&#x27;Tomorrow&#x27;)
     * @param {string} [roominfo] Roominfo Filter REQUIRED (Splitter for Rooms &#x27;|&#x27; Splitter for Persons Ages &#x27;,&#x27;) (Room Types: 0&#x3D;notprovided, 1&#x3D;room, 2&#x3D;apartment, 4&#x3D;pitch/tent(onlyLTS), 8&#x3D;dorm(onlyLTS)) possible Values Example 1-18,10|1-18 &#x3D; 2 Rooms, Room 1 for 2 person Age 18 and Age 10, Room 2 for 1 Person Age 18), (default:&#x27;1-18,18&#x27;)
     * @param {string} [bokfilter] Booking Channels Filter REQUIRED (Separator &#x27;,&#x27; possible values: hgv &#x3D; (Booking Südtirol), htl &#x3D; (Hotel.de), exp &#x3D; (Expedia), bok &#x3D; (Booking.com), lts &#x3D; (LTS Availability check)), (default:&#x27;hgv&#x27;)
     * @param {string} [source] Source for MSS availability check, (default:&#x27;sinfo&#x27;)
     * @param {boolean} [availabilitycheck] Availability Check enabled/disabled (possible Values: &#x27;true&#x27;, &#x27;false), (default Value: &#x27;false&#x27;) NOT AVAILABLE AS OPEN DATA
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    accommodationGetAccommodationLocalized: function accommodationGetAccommodationLocalized(id, language, idsource, boardfilter, arrival, departure, roominfo, bokfilter, source, availabilitycheck, options) {
      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee17() {
        var localVarAxiosArgs;
        return regeneratorRuntime.wrap(function _callee17$(_context17) {
          while (1) {
            switch (_context17.prev = _context17.next) {
              case 0:
                _context17.next = 2;
                return accommodation_api_AccommodationApiAxiosParamCreator(configuration).accommodationGetAccommodationLocalized(id, language, idsource, boardfilter, arrival, departure, roominfo, bokfilter, source, availabilitycheck, options);

              case 2:
                localVarAxiosArgs = _context17.sent;
                return _context17.abrupt("return", function () {
                  var axios = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : axios_default.a;
                  var basePath = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : BASE_PATH;

                  var axiosRequestArgs = _objectSpread2(_objectSpread2({}, localVarAxiosArgs.options), {}, {
                    url: basePath + localVarAxiosArgs.url
                  });

                  return axios.request(axiosRequestArgs);
                });

              case 4:
              case "end":
                return _context17.stop();
            }
          }
        }, _callee17);
      }))();
    },

    /**
     *
     * @summary GET Accommodation List
     * @param {number} [pagenumber] Pagenumber, (default:1)
     * @param {number} [pagesize] Elements per Page (If availabilitycheck set, pagesize has no effect all Accommodations are returned), (default:10)
     * @param {string} [seed] Seed &#x27;1 - 10&#x27; for Random Sorting, &#x27;0&#x27; generates a Random Seed, &#x27;null&#x27; disables Random Sorting, (default:null)
     * @param {string} [categoryfilter] Categoryfilter (BITMASK values: 1 &#x3D; (not categorized), 2 &#x3D; (1star), 4 &#x3D; (1flower), 8 &#x3D; (1sun), 14 &#x3D; (1star/1flower/1sun), 16 &#x3D; (2stars), 32 &#x3D; (2flowers), 64 &#x3D; (2suns), 112 &#x3D; (2stars/2flowers/2suns), 128 &#x3D; (3stars), 256 &#x3D; (3flowers), 512 &#x3D; (3suns), 1024 &#x3D; (3sstars), 1920 &#x3D; (3stars/3flowers/3suns/3sstars), 2048 &#x3D; (4stars), 4096 &#x3D; (4flowers), 8192 &#x3D; (4suns), 16384 &#x3D; (4sstars), 30720 &#x3D; (4stars/4flowers/4suns/4sstars), 32768 &#x3D; (5stars), 65536 &#x3D; (5flowers), 131072 &#x3D; (5suns), 229376 &#x3D; (5stars/5flowers/5suns), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)
     * @param {string} [typefilter] Typefilter (BITMASK values: 1 &#x3D; (HotelPension), 2 &#x3D; (BedBreakfast), 4 &#x3D; (Farm), 8 &#x3D; (Camping), 16 &#x3D; (Youth), 32 &#x3D; (Mountain), 64 &#x3D; (Apartment), 128 &#x3D; (Not defined),&#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)
     * @param {string} [boardfilter] Boardfilter (BITMASK values: 0 &#x3D; (all boards), 1 &#x3D; (without board), 2 &#x3D; (breakfast), 4 &#x3D; (half board), 8 &#x3D; (full board), 16 &#x3D; (All inclusive), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;0&#x27;)
     * @param {string} [featurefilter] FeatureFilter refers to predefined Features listed in the property SpecialFeatures (BITMASK values: 1 &#x3D; (Group-friendly), 2 &#x3D; (Meeting rooms), 4 &#x3D; (Swimming pool), 8 &#x3D; (Sauna), 16 &#x3D; (Garage), 32 &#x3D; (Pick-up service), 64 &#x3D; (WLAN), 128 &#x3D; (Barrier-free), 256 &#x3D; (Special menus for allergy sufferers), 512 &#x3D; (Pets welcome), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)
     * @param {string} [featureidfilter] Feature Id Filter, filter over ALL Features vailable (Separator &#x27;,&#x27; List of Feature IDs, &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)
     * @param {string} [themefilter] Themefilter (BITMASK values: 1 &#x3D; (Gourmet), 2 &#x3D; (At altitude), 4 &#x3D; (Regional wellness offerings), 8 &#x3D; (on the wheels), 16 &#x3D; (With family), 32 &#x3D; (Hiking), 64 &#x3D; (In the vineyards), 128 &#x3D; (Urban vibe), 256 &#x3D; (At the ski resort), 512 &#x3D; (Mediterranean), 1024 &#x3D; (In the Dolomites), 2048 &#x3D; (Alpine), 4096 &#x3D; (Small and charming), 8192 &#x3D; (Huts and mountain inns), 16384 &#x3D; (Rural way of life), 32768 &#x3D; (Balance), 65536 &#x3D; (Christmas markets), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)
     * @param {string} [badgefilter] BadgeFilter (BITMASK values: 1 &#x3D; (Belvita Wellness Hotel), 2 &#x3D; (Familyhotel), 4 &#x3D; (Bikehotel), 8 &#x3D; (Red Rooster Farm), 16 &#x3D; (Barrier free certificated), 32 &#x3D; (Vitalpina Hiking Hotel), 64 &#x3D; (Private Rooms in South Tyrol), 128 &#x3D; (Vinum Hotels), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)
     * @param {string} [idfilter] IDFilter (Separator &#x27;,&#x27; List of Accommodation IDs, &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)
     * @param {string} [locfilter] Locfilter (Separator &#x27;,&#x27; possible values: reg + REGIONID &#x3D; (Filter by Region), reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMVEREINID &#x3D; (Filter by Tourismverein), mun + MUNICIPALITYID &#x3D; (Filter by Municipality), fra + FRACTIONID &#x3D; (Filter by Fraction), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)
     * @param {string} [odhtagfilter] ODHTag Filter (refers to Array SmgTags) (String, Separator &#x27;,&#x27; more ODHTags possible, &#x27;null&#x27; &#x3D; No Filter, available ODHTags reference to &#x27;api/ODHTag?validforentity&#x3D;accommodation&#x27;), (default:&#x27;null&#x27;)
     * @param {boolean} [odhactive] ODHActive Filter (refers to field SmgActive) (possible Values: &#x27;null&#x27; Displays all Accommodations, &#x27;true&#x27; only ODH Active Accommodations, &#x27;false&#x27; only ODH Disabled Accommodations, (default:&#x27;null&#x27;)
     * @param {boolean} [active] TIC Active Filter (possible Values: &#x27;null&#x27; Displays all Accommodations, &#x27;true&#x27; only TIC Active Accommodations, &#x27;false&#x27; only TIC Disabled Accommodations, (default:&#x27;null&#x27;)
     * @param {string} [arrival] Arrival Date (yyyy-MM-dd) REQUIRED, (default:&#x27;Today&#x27;)
     * @param {string} [departure] Departure Date (yyyy-MM-dd) REQUIRED, (default:&#x27;Tomorrow&#x27;)
     * @param {string} [roominfo] Roominfo Filter REQUIRED (Splitter for Rooms &#x27;|&#x27; Splitter for Persons Ages &#x27;,&#x27;) (Room Types: 0&#x3D;notprovided, 1&#x3D;room, 2&#x3D;apartment, 4&#x3D;pitch/tent(onlyLTS), 8&#x3D;dorm(onlyLTS)) possible Values Example 1-18,10|1-18 &#x3D; 2 Rooms, Room 1 for 2 person Age 18 and Age 10, Room 2 for 1 Person Age 18), (default:&#x27;1-18,18&#x27;)
     * @param {string} [bokfilter] Booking Channels Filter REQUIRED (Separator &#x27;,&#x27; possible values: hgv &#x3D; (Booking Südtirol), htl &#x3D; (Hotel.de), exp &#x3D; (Expedia), bok &#x3D; (Booking.com), lts &#x3D; (LTS Availability check)), (default:&#x27;hgv&#x27;)
     * @param {string} [source] Source for MSS availability check, (default:&#x27;sinfo&#x27;)
     * @param {string} [availabilitychecklanguage] Language of the Availability Response (possible values: &#x27;de&#x27;,&#x27;it&#x27;,&#x27;en&#x27;), (default:&#x27;en&#x27;)
     * @param {boolean} [availabilitycheck] Availability Check enabled/disabled (possible Values: &#x27;true&#x27;, &#x27;false), (default Value: &#x27;false&#x27;) NOT AVAILABLE AS OPEN DATA
     * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)
     * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)
     * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)
     * @param {string} [updatefrom] Date from Format (yyyy-MM-dd) (all GBActivityPoi with LastChange &amp;gt;&#x3D; datefrom are passed), (default: null)
     * @param {string} [searchfilter] String to search for, Title in all languages are searched, (default: null)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    accommodationGetAccommodations: function accommodationGetAccommodations(pagenumber, pagesize, seed, categoryfilter, typefilter, boardfilter, featurefilter, featureidfilter, themefilter, badgefilter, idfilter, locfilter, odhtagfilter, odhactive, active, arrival, departure, roominfo, bokfilter, source, availabilitychecklanguage, availabilitycheck, latitude, longitude, radius, fields, language, updatefrom, searchfilter, options) {
      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee18() {
        var localVarAxiosArgs;
        return regeneratorRuntime.wrap(function _callee18$(_context18) {
          while (1) {
            switch (_context18.prev = _context18.next) {
              case 0:
                _context18.next = 2;
                return accommodation_api_AccommodationApiAxiosParamCreator(configuration).accommodationGetAccommodations(pagenumber, pagesize, seed, categoryfilter, typefilter, boardfilter, featurefilter, featureidfilter, themefilter, badgefilter, idfilter, locfilter, odhtagfilter, odhactive, active, arrival, departure, roominfo, bokfilter, source, availabilitychecklanguage, availabilitycheck, latitude, longitude, radius, fields, language, updatefrom, searchfilter, options);

              case 2:
                localVarAxiosArgs = _context18.sent;
                return _context18.abrupt("return", function () {
                  var axios = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : axios_default.a;
                  var basePath = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : BASE_PATH;

                  var axiosRequestArgs = _objectSpread2(_objectSpread2({}, localVarAxiosArgs.options), {}, {
                    url: basePath + localVarAxiosArgs.url
                  });

                  return axios.request(axiosRequestArgs);
                });

              case 4:
              case "end":
                return _context18.stop();
            }
          }
        }, _callee18);
      }))();
    },

    /**
     *
     * @summary GET Accommodation List Localized
     * @param {number} [pagenumber] Pagenumber, (default:1)
     * @param {number} [pagesize] Elements per Page (If availabilitycheck set, pagesize has no effect all Accommodations are returned), (default:10)
     * @param {string} [seed] Seed &#x27;1 - 10&#x27; for Random Sorting, &#x27;0&#x27; generates a Random Seed, &#x27;null&#x27; disables Random Sorting, (default:null)
     * @param {string} [language] Localization Language
     * @param {string} [categoryfilter] Categoryfilter (BITMASK values: 1 &#x3D; (not categorized), 2 &#x3D; (1star), 4 &#x3D; (1flower), 8 &#x3D; (1sun), 14 &#x3D; (1star/1flower/1sun), 16 &#x3D; (2stars), 32 &#x3D; (2flowers), 64 &#x3D; (2suns), 112 &#x3D; (2stars/2flowers/2suns), 128 &#x3D; (3stars), 256 &#x3D; (3flowers), 512 &#x3D; (3suns), 1024 &#x3D; (3sstars), 1920 &#x3D; (3stars/3flowers/3suns/3sstars), 2048 &#x3D; (4stars), 4096 &#x3D; (4flowers), 8192 &#x3D; (4suns), 16384 &#x3D; (4sstars), 30720 &#x3D; (4stars/4flowers/4suns/4sstars), 32768 &#x3D; (5stars), 65536 &#x3D; (5flowers), 131072 &#x3D; (5suns), 229376 &#x3D; (5stars/5flowers/5suns), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)
     * @param {string} [typefilter] Typefilter (BITMASK values: 1 &#x3D; (HotelPension), 2 &#x3D; (BedBreakfast), 4 &#x3D; (Farm), 8 &#x3D; (Camping), 16 &#x3D; (Youth), 32 &#x3D; (Mountain), 64 &#x3D; (Apartment), 128 &#x3D; (Not defined),&#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)
     * @param {string} [boardfilter] Boardfilter (BITMASK values: 0 &#x3D; (all boards), 1 &#x3D; (without board), 2 &#x3D; (breakfast), 4 &#x3D; (half board), 8 &#x3D; (full board), 16 &#x3D; (All inclusive), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;0&#x27;)
     * @param {string} [featurefilter] FeatureFilter (BITMASK values: 1 &#x3D; (Group-friendly), 2 &#x3D; (Meeting rooms), 4 &#x3D; (Swimming pool), 8 &#x3D; (Sauna), 16 &#x3D; (Garage), 32 &#x3D; (Pick-up service), 64 &#x3D; (WLAN), 128 &#x3D; (Barrier-free), 256 &#x3D; (Special menus for allergy sufferers), 512 &#x3D; (Pets welcome), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)
     * @param {string} [themefilter] Themefilter (BITMASK values: 1 &#x3D; (Gourmet), 2 &#x3D; (At altitude), 4 &#x3D; (Regional wellness offerings), 8 &#x3D; (on the wheels), 16 &#x3D; (With family), 32 &#x3D; (Hiking), 64 &#x3D; (In the vineyards), 128 &#x3D; (Urban vibe), 256 &#x3D; (At the ski resort), 512 &#x3D; (Mediterranean), 1024 &#x3D; (In the Dolomites), 2048 &#x3D; (Alpine), 4096 &#x3D; (Small and charming), 8192 &#x3D; (Huts and mountain inns), 16384 &#x3D; (Rural way of life), 32768 &#x3D; (Balance), 65536 &#x3D; (Christmas markets), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)
     * @param {string} [badgefilter] BadgeFilter (BITMASK values: 1 &#x3D; (Belvita Wellness Hotel), 2 &#x3D; (Familyhotel), 4 &#x3D; (Bikehotel), 8 &#x3D; (Red Rooster Farm), 16 &#x3D; (Barrier free certificated), 32 &#x3D; (Vitalpina Hiking Hotel), 64 &#x3D; (Private Rooms in South Tyrol), 128 &#x3D; (Vinum Hotels), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)
     * @param {string} [idfilter] IDFilter (Separator &#x27;,&#x27; List of Accommodation IDs, &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)
     * @param {string} [locfilter] Locfilter (Separator &#x27;,&#x27; possible values: reg + REGIONID &#x3D; (Filter by Region), reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMVEREINID &#x3D; (Filter by Tourismverein), mun + MUNICIPALITYID &#x3D; (Filter by Municipality), fra + FRACTIONID &#x3D; (Filter by Fraction), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)
     * @param {string} [odhtagfilter] ODHTag Filter (refers to Array SmgTags) (String, Separator &#x27;,&#x27; more ODHTags possible, &#x27;null&#x27; &#x3D; No Filter, available ODHTags reference to &#x27;api/ODHTag?validforentity&#x3D;accommodation&#x27;), (default:&#x27;null&#x27;)
     * @param {boolean} [odhactive] ODHActive Filter (refers to field SmgActive) (possible Values: &#x27;null&#x27; Displays all Accommodations, &#x27;true&#x27; only ODH Active Accommodations, &#x27;false&#x27; only ODH Disabled Accommodations, (default:&#x27;null&#x27;)
     * @param {boolean} [active] TIC Active Filter (possible Values: &#x27;null&#x27; Displays all Accommodations, &#x27;true&#x27; only TIC Active Accommodations, &#x27;false&#x27; only TIC Disabled Accommodations, (default:&#x27;null&#x27;)
     * @param {string} [arrival] Arrival Date (yyyy-MM-dd) REQUIRED, (default:&#x27;Today&#x27;)
     * @param {string} [departure] Departure Date (yyyy-MM-dd) REQUIRED, (default:&#x27;Tomorrow&#x27;)
     * @param {string} [roominfo] Roominfo Filter REQUIRED (Splitter for Rooms &#x27;|&#x27; Splitter for Persons Ages &#x27;,&#x27;) (Room Types: 0&#x3D;notprovided, 1&#x3D;room, 2&#x3D;apartment, 4&#x3D;pitch/tent(onlyLTS), 8&#x3D;dorm(onlyLTS)) possible Values Example 1-18,10|1-18 &#x3D; 2 Rooms, Room 1 for 2 person Age 18 and Age 10, Room 2 for 1 Person Age 18), (default:&#x27;1-18,18&#x27;)
     * @param {string} [bokfilter] Booking Channels Filter REQUIRED (Separator &#x27;,&#x27; possible values: hgv &#x3D; (Booking Südtirol), htl &#x3D; (Hotel.de), exp &#x3D; (Expedia), bok &#x3D; (Booking.com), lts &#x3D; (LTS Availability check)), (default:&#x27;hgv&#x27;)
     * @param {string} [source] Source for MSS availability check, (default:&#x27;sinfo&#x27;)
     * @param {boolean} [availabilitycheck] Availability Check enabled/disabled (possible Values: &#x27;true&#x27;, &#x27;false), (default Value: &#x27;false&#x27;) NOT AVAILABLE AS OPEN DATA
     * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    accommodationGetAccommodationsLocalized: function accommodationGetAccommodationsLocalized(pagenumber, pagesize, seed, language, categoryfilter, typefilter, boardfilter, featurefilter, themefilter, badgefilter, idfilter, locfilter, odhtagfilter, odhactive, active, arrival, departure, roominfo, bokfilter, source, availabilitycheck, latitude, longitude, radius, options) {
      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee19() {
        var localVarAxiosArgs;
        return regeneratorRuntime.wrap(function _callee19$(_context19) {
          while (1) {
            switch (_context19.prev = _context19.next) {
              case 0:
                _context19.next = 2;
                return accommodation_api_AccommodationApiAxiosParamCreator(configuration).accommodationGetAccommodationsLocalized(pagenumber, pagesize, seed, language, categoryfilter, typefilter, boardfilter, featurefilter, themefilter, badgefilter, idfilter, locfilter, odhtagfilter, odhactive, active, arrival, departure, roominfo, bokfilter, source, availabilitycheck, latitude, longitude, radius, options);

              case 2:
                localVarAxiosArgs = _context19.sent;
                return _context19.abrupt("return", function () {
                  var axios = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : axios_default.a;
                  var basePath = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : BASE_PATH;

                  var axiosRequestArgs = _objectSpread2(_objectSpread2({}, localVarAxiosArgs.options), {}, {
                    url: basePath + localVarAxiosArgs.url
                  });

                  return axios.request(axiosRequestArgs);
                });

              case 4:
              case "end":
                return _context19.stop();
            }
          }
        }, _callee19);
      }))();
    },

    /**
     *
     * @summary GET Accommodation Feature List (LTS Features)
     * @param {string} [source] IF source &#x3D; \&quot;lts\&quot; the Features list is returned in XML Format directly from LTS, (default: blank)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    accommodationGetAllAccommodationFeaturesList: function accommodationGetAllAccommodationFeaturesList(source, options) {
      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee20() {
        var localVarAxiosArgs;
        return regeneratorRuntime.wrap(function _callee20$(_context20) {
          while (1) {
            switch (_context20.prev = _context20.next) {
              case 0:
                _context20.next = 2;
                return accommodation_api_AccommodationApiAxiosParamCreator(configuration).accommodationGetAllAccommodationFeaturesList(source, options);

              case 2:
                localVarAxiosArgs = _context20.sent;
                return _context20.abrupt("return", function () {
                  var axios = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : axios_default.a;
                  var basePath = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : BASE_PATH;

                  var axiosRequestArgs = _objectSpread2(_objectSpread2({}, localVarAxiosArgs.options), {}, {
                    url: basePath + localVarAxiosArgs.url
                  });

                  return axios.request(axiosRequestArgs);
                });

              case 4:
              case "end":
                return _context20.stop();
            }
          }
        }, _callee20);
      }))();
    },

    /**
     *
     * @summary GET Accommodation Feature Single (LTS Features)
     * @param {string} id ID of the AccommodationFeature
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    accommodationGetAllAccommodationFeaturesSingle: function accommodationGetAllAccommodationFeaturesSingle(id, options) {
      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee21() {
        var localVarAxiosArgs;
        return regeneratorRuntime.wrap(function _callee21$(_context21) {
          while (1) {
            switch (_context21.prev = _context21.next) {
              case 0:
                _context21.next = 2;
                return accommodation_api_AccommodationApiAxiosParamCreator(configuration).accommodationGetAllAccommodationFeaturesSingle(id, options);

              case 2:
                localVarAxiosArgs = _context21.sent;
                return _context21.abrupt("return", function () {
                  var axios = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : axios_default.a;
                  var basePath = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : BASE_PATH;

                  var axiosRequestArgs = _objectSpread2(_objectSpread2({}, localVarAxiosArgs.options), {}, {
                    url: basePath + localVarAxiosArgs.url
                  });

                  return axios.request(axiosRequestArgs);
                });

              case 4:
              case "end":
                return _context21.stop();
            }
          }
        }, _callee21);
      }))();
    },

    /**
     *
     * @summary GET Accommodation Types List
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    accommodationGetAllAccommodationTypesList: function accommodationGetAllAccommodationTypesList(options) {
      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee22() {
        var localVarAxiosArgs;
        return regeneratorRuntime.wrap(function _callee22$(_context22) {
          while (1) {
            switch (_context22.prev = _context22.next) {
              case 0:
                _context22.next = 2;
                return accommodation_api_AccommodationApiAxiosParamCreator(configuration).accommodationGetAllAccommodationTypesList(options);

              case 2:
                localVarAxiosArgs = _context22.sent;
                return _context22.abrupt("return", function () {
                  var axios = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : axios_default.a;
                  var basePath = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : BASE_PATH;

                  var axiosRequestArgs = _objectSpread2(_objectSpread2({}, localVarAxiosArgs.options), {}, {
                    url: basePath + localVarAxiosArgs.url
                  });

                  return axios.request(axiosRequestArgs);
                });

              case 4:
              case "end":
                return _context22.stop();
            }
          }
        }, _callee22);
      }))();
    },

    /**
     *
     * @summary GET Accommodation Types Single
     * @param {string} id ID of the AccommodationType
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    accommodationGetAllAccommodationTypessingle: function accommodationGetAllAccommodationTypessingle(id, options) {
      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee23() {
        var localVarAxiosArgs;
        return regeneratorRuntime.wrap(function _callee23$(_context23) {
          while (1) {
            switch (_context23.prev = _context23.next) {
              case 0:
                _context23.next = 2;
                return accommodation_api_AccommodationApiAxiosParamCreator(configuration).accommodationGetAllAccommodationTypessingle(id, options);

              case 2:
                localVarAxiosArgs = _context23.sent;
                return _context23.abrupt("return", function () {
                  var axios = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : axios_default.a;
                  var basePath = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : BASE_PATH;

                  var axiosRequestArgs = _objectSpread2(_objectSpread2({}, localVarAxiosArgs.options), {}, {
                    url: basePath + localVarAxiosArgs.url
                  });

                  return axios.request(axiosRequestArgs);
                });

              case 4:
              case "end":
                return _context23.stop();
            }
          }
        }, _callee23);
      }))();
    },

    /**
     *
     * @summary GET Accommodation Changed List by Date
     * @param {number} [pagenumber] Pagenumber, (default:1)
     * @param {number} [pagesize] Elements per Page, (default:10)
     * @param {string} [seed] Seed &#x27;1 - 10&#x27; for Random Sorting, &#x27;0&#x27; generates a Random Seed, &#x27;null&#x27; disables Random Sorting, (default:null)
     * @param {string} [updatefrom] Date from Format (yyyy-MM-dd) (all Accos with LastChange &amp;gt;&#x3D; datefrom are passed), (default: DateTime.Now - 1 Day)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    accommodationGetAllAccommodationsChanged: function accommodationGetAllAccommodationsChanged(pagenumber, pagesize, seed, updatefrom, options) {
      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee24() {
        var localVarAxiosArgs;
        return regeneratorRuntime.wrap(function _callee24$(_context24) {
          while (1) {
            switch (_context24.prev = _context24.next) {
              case 0:
                _context24.next = 2;
                return accommodation_api_AccommodationApiAxiosParamCreator(configuration).accommodationGetAllAccommodationsChanged(pagenumber, pagesize, seed, updatefrom, options);

              case 2:
                localVarAxiosArgs = _context24.sent;
                return _context24.abrupt("return", function () {
                  var axios = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : axios_default.a;
                  var basePath = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : BASE_PATH;

                  var axiosRequestArgs = _objectSpread2(_objectSpread2({}, localVarAxiosArgs.options), {}, {
                    url: basePath + localVarAxiosArgs.url
                  });

                  return axios.request(axiosRequestArgs);
                });

              case 4:
              case "end":
                return _context24.stop();
            }
          }
        }, _callee24);
      }))();
    },

    /**
     *
     * @summary GET Reduced Accommodation List
     * @param {string} [language] Localization Language
     * @param {string} [categoryfilter] Categoryfilter (BITMASK values: 1 &#x3D; (not categorized), 2 &#x3D; (1star), 4 &#x3D; (1flower), 8 &#x3D; (1sun), 14 &#x3D; (1star/1flower/1sun), 16 &#x3D; (2stars), 32 &#x3D; (2flowers), 64 &#x3D; (2suns), 112 &#x3D; (2stars/2flowers/2suns), 128 &#x3D; (3stars), 256 &#x3D; (3flowers), 512 &#x3D; (3suns), 1024 &#x3D; (3sstars), 1920 &#x3D; (3stars/3flowers/3suns/3sstars), 2048 &#x3D; (4stars), 4096 &#x3D; (4flowers), 8192 &#x3D; (4suns), 16384 &#x3D; (4sstars), 30720 &#x3D; (4stars/4flowers/4suns/4sstars), 32768 &#x3D; (5stars), 65536 &#x3D; (5flowers), 131072 &#x3D; (5suns), 229376 &#x3D; (5stars/5flowers/5suns), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)
     * @param {string} [typefilter] Typefilter (BITMASK values: 1 &#x3D; (HotelPension), 2 &#x3D; (BedBreakfast), 4 &#x3D; (Farm), 8 &#x3D; (Camping), 16 &#x3D; (Youth), 32 &#x3D; (Mountain), 64 &#x3D; (Apartment), 128 &#x3D; (Not defined),&#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)
     * @param {string} [boardfilter] Boardfilter (BITMASK values: 0 &#x3D; (all boards), 1 &#x3D; (without board), 2 &#x3D; (breakfast), 4 &#x3D; (half board), 8 &#x3D; (full board), 16 &#x3D; (All inclusive), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;0&#x27;)
     * @param {string} [featurefilter] FeatureFilter (BITMASK values: 1 &#x3D; (Group-friendly), 2 &#x3D; (Meeting rooms), 4 &#x3D; (Swimming pool), 8 &#x3D; (Sauna), 16 &#x3D; (Garage), 32 &#x3D; (Pick-up service), 64 &#x3D; (WLAN), 128 &#x3D; (Barrier-free), 256 &#x3D; (Special menus for allergy sufferers), 512 &#x3D; (Pets welcome), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)
     * @param {string} [featureidfilter] Feature Id Filter, filter over ALL Features vailable (Separator &#x27;,&#x27; List of Feature IDs, &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)
     * @param {string} [themefilter] Themefilter (BITMASK values: 1 &#x3D; (Gourmet), 2 &#x3D; (At altitude), 4 &#x3D; (Regional wellness offerings), 8 &#x3D; (on the wheels), 16 &#x3D; (With family), 32 &#x3D; (Hiking), 64 &#x3D; (In the vineyards), 128 &#x3D; (Urban vibe), 256 &#x3D; (At the ski resort), 512 &#x3D; (Mediterranean), 1024 &#x3D; (In the Dolomites), 2048 &#x3D; (Alpine), 4096 &#x3D; (Small and charming), 8192 &#x3D; (Huts and mountain inns), 16384 &#x3D; (Rural way of life), 32768 &#x3D; (Balance), 65536 &#x3D; (Christmas markets), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)
     * @param {string} [badgefilter] BadgeFilter (BITMASK values: 1 &#x3D; (Belvita Wellness Hotel), 2 &#x3D; (Familyhotel), 4 &#x3D; (Bikehotel), 8 &#x3D; (Red Rooster Farm), 16 &#x3D; (Barrier free certificated), 32 &#x3D; (Vitalpina Hiking Hotel), 64 &#x3D; (Private Rooms in South Tyrol), 128 &#x3D; (Vinum Hotels), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)
     * @param {string} [locfilter] Locfilter (Separator &#x27;,&#x27; possible values: reg + REGIONID &#x3D; (Filter by Region), reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMVEREINID &#x3D; (Filter by Tourismverein), mun + MUNICIPALITYID &#x3D; (Filter by Municipality), fra + FRACTIONID &#x3D; (Filter by Fraction), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)
     * @param {string} [odhtagfilter] ODHTag Filter (refers to Array SmgTags) (String, Separator &#x27;,&#x27; more ODHTags possible, &#x27;null&#x27; &#x3D; No Filter, available ODHTags reference to &#x27;api/ODHTag?validforentity&#x3D;accommodation&#x27;), (default:&#x27;null&#x27;)
     * @param {boolean} [odhactive] ODHActive Filter (refers to field SmgActive) (possible Values: &#x27;null&#x27; Displays all Accommodations, &#x27;true&#x27; only ODH Active Accommodations, &#x27;false&#x27; only ODH Disabled Accommodations, (default:&#x27;null&#x27;)
     * @param {boolean} [active] TIC Active Filter (possible Values: &#x27;null&#x27; Displays all Accommodations, &#x27;true&#x27; only TIC Active Accommodations, &#x27;false&#x27; only TIC Disabled Accommodations, (default:&#x27;null&#x27;)
     * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)
     * @param {string} [fields] Select fields to display, by Default Title and Id are selected if fields filter is null More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)
     * @param {boolean} [suedtirolmobil]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    accommodationGetReducedAccosAsync: function accommodationGetReducedAccosAsync(language, categoryfilter, typefilter, boardfilter, featurefilter, featureidfilter, themefilter, badgefilter, locfilter, odhtagfilter, odhactive, active, latitude, longitude, radius, fields, suedtirolmobil, options) {
      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee25() {
        var localVarAxiosArgs;
        return regeneratorRuntime.wrap(function _callee25$(_context25) {
          while (1) {
            switch (_context25.prev = _context25.next) {
              case 0:
                _context25.next = 2;
                return accommodation_api_AccommodationApiAxiosParamCreator(configuration).accommodationGetReducedAccosAsync(language, categoryfilter, typefilter, boardfilter, featurefilter, featureidfilter, themefilter, badgefilter, locfilter, odhtagfilter, odhactive, active, latitude, longitude, radius, fields, suedtirolmobil, options);

              case 2:
                localVarAxiosArgs = _context25.sent;
                return _context25.abrupt("return", function () {
                  var axios = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : axios_default.a;
                  var basePath = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : BASE_PATH;

                  var axiosRequestArgs = _objectSpread2(_objectSpread2({}, localVarAxiosArgs.options), {}, {
                    url: basePath + localVarAxiosArgs.url
                  });

                  return axios.request(axiosRequestArgs);
                });

              case 4:
              case "end":
                return _context25.stop();
            }
          }
        }, _callee25);
      }))();
    },

    /**
     *
     * @summary POST Available Accommodations HGV(Booking Suedtirol MSS) / LTS on posted IDs only Availability Response NOT AVAILABLE AS OPEN DATA
     * @param {string} body Posted Accommodation IDs (Separated by ,)
     * @param {string} [availabilitychecklanguage] Language of the Availability Response
     * @param {string} [boardfilter] Boardfilter (BITMASK values: 0 &#x3D; (all boards), 1 &#x3D; (without board), 2 &#x3D; (breakfast), 4 &#x3D; (half board), 8 &#x3D; (full board), 16 &#x3D; (All inclusive), &#x27;null&#x27; &#x3D; No Filter)
     * @param {string} [arrival] Arrival Date (yyyy-MM-dd) REQUIRED
     * @param {string} [departure] Departure Date (yyyy-MM-dd) REQUIRED
     * @param {string} [roominfo] Roominfo Filter REQUIRED (Splitter for Rooms &#x27;|&#x27; Splitter for Persons Ages &#x27;,&#x27;) (Room Types: 0&#x3D;notprovided, 1&#x3D;room, 2&#x3D;apartment, 4&#x3D;pitch/tent(onlyLTS), 8&#x3D;dorm(onlyLTS)) possible Values Example 1-18,10|1-18 &#x3D; 2 Rooms, Room 1 for 2 person Age 18 and Age 10, Room 2 for 1 Person Age 18), (default:&#x27;1-18,18&#x27;)
     * @param {string} [bokfilter] Booking Channels Filter (Separator &#x27;,&#x27; possible values: hgv &#x3D; (Booking Südtirol), htl &#x3D; (Hotel.de), exp &#x3D; (Expedia), bok &#x3D; (Booking.com), lts &#x3D; (LTS Availability check), (default:hgv)) REQUIRED
     * @param {string} [source] Source of the Requester (possible value: &#x27;sinfo&#x27; &#x3D; Suedtirol.info, &#x27;sbalance&#x27; &#x3D; Südtirol Balance) REQUIRED
     * @param {string} [detail] Include Offer Details (Boolean, 1 &#x3D; full Details)
     * @param {boolean} [withoutmssids] Search over all bookable Accommodations on HGV MSS (No Ids have to be provided as Post Data) (default: false)
     * @param {boolean} [withoutlcsids] Search over all Accommodations on LTS (No Ids have to be provided as Post Data) (default: false)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    accommodationPostAvailableMSSResponseonlyAccommodations: function accommodationPostAvailableMSSResponseonlyAccommodations(body, availabilitychecklanguage, boardfilter, arrival, departure, roominfo, bokfilter, source, detail, withoutmssids, withoutlcsids, options) {
      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee26() {
        var localVarAxiosArgs;
        return regeneratorRuntime.wrap(function _callee26$(_context26) {
          while (1) {
            switch (_context26.prev = _context26.next) {
              case 0:
                _context26.next = 2;
                return accommodation_api_AccommodationApiAxiosParamCreator(configuration).accommodationPostAvailableMSSResponseonlyAccommodations(body, availabilitychecklanguage, boardfilter, arrival, departure, roominfo, bokfilter, source, detail, withoutmssids, withoutlcsids, options);

              case 2:
                localVarAxiosArgs = _context26.sent;
                return _context26.abrupt("return", function () {
                  var axios = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : axios_default.a;
                  var basePath = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : BASE_PATH;

                  var axiosRequestArgs = _objectSpread2(_objectSpread2({}, localVarAxiosArgs.options), {}, {
                    url: basePath + localVarAxiosArgs.url
                  });

                  return axios.request(axiosRequestArgs);
                });

              case 4:
              case "end":
                return _context26.stop();
            }
          }
        }, _callee26);
      }))();
    }
  };
};
/**
 * AccommodationApi - factory interface
 * @export
 */

var AccommodationApiFactory = function AccommodationApiFactory(configuration, basePath, axios) {
  return {
    /**
     *
     * @summary GET Accommodation Room Info by AccoID
     * @param {string} accoid Accommodation ID
     * @param {string} [idsource] ID Source Filter (possible values:&#x27;lts&#x27;,&#x27;hgv&#x27;), (default:&#x27;lts&#x27;)
     * @param {boolean} [getall] Get Rooms from all sources (If an accommodation is bookable on Booking Southtyrol, rooms from this source are returned, setting getall to true returns also LTS Rooms), (default:false)
     * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)
     * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    accommodationGetAccoRoomInfos: function accommodationGetAccoRoomInfos(accoid, idsource, getall, fields, language, options) {
      return accommodation_api_AccommodationApiFp(configuration).accommodationGetAccoRoomInfos(accoid, idsource, getall, fields, language, options).then(function (request) {
        return request(axios, basePath);
      });
    },

    /**
     *
     * @summary GET Accommodation Room Info Single
     * @param {string} id AccommodationRoom ID
     * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)
     * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    accommodationGetAccoRoomInfosById: function accommodationGetAccoRoomInfosById(id, fields, language, options) {
      return accommodation_api_AccommodationApiFp(configuration).accommodationGetAccoRoomInfosById(id, fields, language, options).then(function (request) {
        return request(axios, basePath);
      });
    },

    /**
     *
     * @summary GET Accommodation Single
     * @param {string} id ID of the Accommodation
     * @param {string} [idsource] ID Source Filter (possible values:&#x27;lts&#x27;,&#x27;hgv&#x27;), (default:&#x27;lts&#x27;)
     * @param {string} [availabilitychecklanguage] Language of the Availability Response (possible values: &#x27;de&#x27;,&#x27;it&#x27;,&#x27;en&#x27;), (default:&#x27;de&#x27;)
     * @param {string} [boardfilter] Boardfilter (BITMASK values: 0 &#x3D; (all boards), 1 &#x3D; (without board), 2 &#x3D; (breakfast), 4 &#x3D; (half board), 8 &#x3D; (full board), 16 &#x3D; (All inclusive), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;0&#x27;)
     * @param {string} [arrival] Arrival Date (yyyy-MM-dd) REQUIRED, (default:&#x27;Today&#x27;)
     * @param {string} [departure] Departure Date (yyyy-MM-dd) REQUIRED, (default:&#x27;Tomorrow&#x27;)
     * @param {string} [roominfo] Roominfo Filter REQUIRED (Splitter for Rooms &#x27;|&#x27; Splitter for Persons Ages &#x27;,&#x27;) (Room Types: 0&#x3D;notprovided, 1&#x3D;room, 2&#x3D;apartment, 4&#x3D;pitch/tent(onlyLTS), 8&#x3D;dorm(onlyLTS)) possible Values Example 1-18,10|1-18 &#x3D; 2 Rooms, Room 1 for 2 person Age 18 and Age 10, Room 2 for 1 Person Age 18), (default:&#x27;1-18,18&#x27;)
     * @param {string} [bokfilter] Booking Channels Filter REQUIRED (Separator &#x27;,&#x27; possible values: hgv &#x3D; (Booking Südtirol), htl &#x3D; (Hotel.de), exp &#x3D; (Expedia), bok &#x3D; (Booking.com), lts &#x3D; (LTS Availability check)), (default:&#x27;hgv&#x27;)
     * @param {string} [source] Source for MSS availability check, (default:&#x27;sinfo&#x27;)
     * @param {boolean} [availabilitycheck] Availability Check enabled/disabled (possible Values: &#x27;true&#x27;, &#x27;false), (default Value: &#x27;false&#x27;) NOT AVAILABLE AS OPEN DATA
     * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)
     * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    accommodationGetAccommodation: function accommodationGetAccommodation(id, idsource, availabilitychecklanguage, boardfilter, arrival, departure, roominfo, bokfilter, source, availabilitycheck, fields, language, options) {
      return accommodation_api_AccommodationApiFp(configuration).accommodationGetAccommodation(id, idsource, availabilitychecklanguage, boardfilter, arrival, departure, roominfo, bokfilter, source, availabilitycheck, fields, language, options).then(function (request) {
        return request(axios, basePath);
      });
    },

    /**
     *
     * @summary GET Accommodation Single Localized
     * @param {string} id ID of the Accommodation
     * @param {string} [language] Localization Language
     * @param {string} [idsource] ID Source Filter (possible values:&#x27;lts&#x27;,&#x27;hgv&#x27;), (default:&#x27;lts&#x27;)
     * @param {string} [boardfilter] Boardfilter (BITMASK values: 0 &#x3D; (all boards), 1 &#x3D; (without board), 2 &#x3D; (breakfast), 4 &#x3D; (half board), 8 &#x3D; (full board), 16 &#x3D; (All inclusive), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;0&#x27;)
     * @param {string} [arrival] Arrival Date (yyyy-MM-dd) REQUIRED, (default:&#x27;Today&#x27;)
     * @param {string} [departure] Departure Date (yyyy-MM-dd) REQUIRED, (default:&#x27;Tomorrow&#x27;)
     * @param {string} [roominfo] Roominfo Filter REQUIRED (Splitter for Rooms &#x27;|&#x27; Splitter for Persons Ages &#x27;,&#x27;) (Room Types: 0&#x3D;notprovided, 1&#x3D;room, 2&#x3D;apartment, 4&#x3D;pitch/tent(onlyLTS), 8&#x3D;dorm(onlyLTS)) possible Values Example 1-18,10|1-18 &#x3D; 2 Rooms, Room 1 for 2 person Age 18 and Age 10, Room 2 for 1 Person Age 18), (default:&#x27;1-18,18&#x27;)
     * @param {string} [bokfilter] Booking Channels Filter REQUIRED (Separator &#x27;,&#x27; possible values: hgv &#x3D; (Booking Südtirol), htl &#x3D; (Hotel.de), exp &#x3D; (Expedia), bok &#x3D; (Booking.com), lts &#x3D; (LTS Availability check)), (default:&#x27;hgv&#x27;)
     * @param {string} [source] Source for MSS availability check, (default:&#x27;sinfo&#x27;)
     * @param {boolean} [availabilitycheck] Availability Check enabled/disabled (possible Values: &#x27;true&#x27;, &#x27;false), (default Value: &#x27;false&#x27;) NOT AVAILABLE AS OPEN DATA
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    accommodationGetAccommodationLocalized: function accommodationGetAccommodationLocalized(id, language, idsource, boardfilter, arrival, departure, roominfo, bokfilter, source, availabilitycheck, options) {
      return accommodation_api_AccommodationApiFp(configuration).accommodationGetAccommodationLocalized(id, language, idsource, boardfilter, arrival, departure, roominfo, bokfilter, source, availabilitycheck, options).then(function (request) {
        return request(axios, basePath);
      });
    },

    /**
     *
     * @summary GET Accommodation List
     * @param {number} [pagenumber] Pagenumber, (default:1)
     * @param {number} [pagesize] Elements per Page (If availabilitycheck set, pagesize has no effect all Accommodations are returned), (default:10)
     * @param {string} [seed] Seed &#x27;1 - 10&#x27; for Random Sorting, &#x27;0&#x27; generates a Random Seed, &#x27;null&#x27; disables Random Sorting, (default:null)
     * @param {string} [categoryfilter] Categoryfilter (BITMASK values: 1 &#x3D; (not categorized), 2 &#x3D; (1star), 4 &#x3D; (1flower), 8 &#x3D; (1sun), 14 &#x3D; (1star/1flower/1sun), 16 &#x3D; (2stars), 32 &#x3D; (2flowers), 64 &#x3D; (2suns), 112 &#x3D; (2stars/2flowers/2suns), 128 &#x3D; (3stars), 256 &#x3D; (3flowers), 512 &#x3D; (3suns), 1024 &#x3D; (3sstars), 1920 &#x3D; (3stars/3flowers/3suns/3sstars), 2048 &#x3D; (4stars), 4096 &#x3D; (4flowers), 8192 &#x3D; (4suns), 16384 &#x3D; (4sstars), 30720 &#x3D; (4stars/4flowers/4suns/4sstars), 32768 &#x3D; (5stars), 65536 &#x3D; (5flowers), 131072 &#x3D; (5suns), 229376 &#x3D; (5stars/5flowers/5suns), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)
     * @param {string} [typefilter] Typefilter (BITMASK values: 1 &#x3D; (HotelPension), 2 &#x3D; (BedBreakfast), 4 &#x3D; (Farm), 8 &#x3D; (Camping), 16 &#x3D; (Youth), 32 &#x3D; (Mountain), 64 &#x3D; (Apartment), 128 &#x3D; (Not defined),&#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)
     * @param {string} [boardfilter] Boardfilter (BITMASK values: 0 &#x3D; (all boards), 1 &#x3D; (without board), 2 &#x3D; (breakfast), 4 &#x3D; (half board), 8 &#x3D; (full board), 16 &#x3D; (All inclusive), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;0&#x27;)
     * @param {string} [featurefilter] FeatureFilter refers to predefined Features listed in the property SpecialFeatures (BITMASK values: 1 &#x3D; (Group-friendly), 2 &#x3D; (Meeting rooms), 4 &#x3D; (Swimming pool), 8 &#x3D; (Sauna), 16 &#x3D; (Garage), 32 &#x3D; (Pick-up service), 64 &#x3D; (WLAN), 128 &#x3D; (Barrier-free), 256 &#x3D; (Special menus for allergy sufferers), 512 &#x3D; (Pets welcome), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)
     * @param {string} [featureidfilter] Feature Id Filter, filter over ALL Features vailable (Separator &#x27;,&#x27; List of Feature IDs, &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)
     * @param {string} [themefilter] Themefilter (BITMASK values: 1 &#x3D; (Gourmet), 2 &#x3D; (At altitude), 4 &#x3D; (Regional wellness offerings), 8 &#x3D; (on the wheels), 16 &#x3D; (With family), 32 &#x3D; (Hiking), 64 &#x3D; (In the vineyards), 128 &#x3D; (Urban vibe), 256 &#x3D; (At the ski resort), 512 &#x3D; (Mediterranean), 1024 &#x3D; (In the Dolomites), 2048 &#x3D; (Alpine), 4096 &#x3D; (Small and charming), 8192 &#x3D; (Huts and mountain inns), 16384 &#x3D; (Rural way of life), 32768 &#x3D; (Balance), 65536 &#x3D; (Christmas markets), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)
     * @param {string} [badgefilter] BadgeFilter (BITMASK values: 1 &#x3D; (Belvita Wellness Hotel), 2 &#x3D; (Familyhotel), 4 &#x3D; (Bikehotel), 8 &#x3D; (Red Rooster Farm), 16 &#x3D; (Barrier free certificated), 32 &#x3D; (Vitalpina Hiking Hotel), 64 &#x3D; (Private Rooms in South Tyrol), 128 &#x3D; (Vinum Hotels), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)
     * @param {string} [idfilter] IDFilter (Separator &#x27;,&#x27; List of Accommodation IDs, &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)
     * @param {string} [locfilter] Locfilter (Separator &#x27;,&#x27; possible values: reg + REGIONID &#x3D; (Filter by Region), reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMVEREINID &#x3D; (Filter by Tourismverein), mun + MUNICIPALITYID &#x3D; (Filter by Municipality), fra + FRACTIONID &#x3D; (Filter by Fraction), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)
     * @param {string} [odhtagfilter] ODHTag Filter (refers to Array SmgTags) (String, Separator &#x27;,&#x27; more ODHTags possible, &#x27;null&#x27; &#x3D; No Filter, available ODHTags reference to &#x27;api/ODHTag?validforentity&#x3D;accommodation&#x27;), (default:&#x27;null&#x27;)
     * @param {boolean} [odhactive] ODHActive Filter (refers to field SmgActive) (possible Values: &#x27;null&#x27; Displays all Accommodations, &#x27;true&#x27; only ODH Active Accommodations, &#x27;false&#x27; only ODH Disabled Accommodations, (default:&#x27;null&#x27;)
     * @param {boolean} [active] TIC Active Filter (possible Values: &#x27;null&#x27; Displays all Accommodations, &#x27;true&#x27; only TIC Active Accommodations, &#x27;false&#x27; only TIC Disabled Accommodations, (default:&#x27;null&#x27;)
     * @param {string} [arrival] Arrival Date (yyyy-MM-dd) REQUIRED, (default:&#x27;Today&#x27;)
     * @param {string} [departure] Departure Date (yyyy-MM-dd) REQUIRED, (default:&#x27;Tomorrow&#x27;)
     * @param {string} [roominfo] Roominfo Filter REQUIRED (Splitter for Rooms &#x27;|&#x27; Splitter for Persons Ages &#x27;,&#x27;) (Room Types: 0&#x3D;notprovided, 1&#x3D;room, 2&#x3D;apartment, 4&#x3D;pitch/tent(onlyLTS), 8&#x3D;dorm(onlyLTS)) possible Values Example 1-18,10|1-18 &#x3D; 2 Rooms, Room 1 for 2 person Age 18 and Age 10, Room 2 for 1 Person Age 18), (default:&#x27;1-18,18&#x27;)
     * @param {string} [bokfilter] Booking Channels Filter REQUIRED (Separator &#x27;,&#x27; possible values: hgv &#x3D; (Booking Südtirol), htl &#x3D; (Hotel.de), exp &#x3D; (Expedia), bok &#x3D; (Booking.com), lts &#x3D; (LTS Availability check)), (default:&#x27;hgv&#x27;)
     * @param {string} [source] Source for MSS availability check, (default:&#x27;sinfo&#x27;)
     * @param {string} [availabilitychecklanguage] Language of the Availability Response (possible values: &#x27;de&#x27;,&#x27;it&#x27;,&#x27;en&#x27;), (default:&#x27;en&#x27;)
     * @param {boolean} [availabilitycheck] Availability Check enabled/disabled (possible Values: &#x27;true&#x27;, &#x27;false), (default Value: &#x27;false&#x27;) NOT AVAILABLE AS OPEN DATA
     * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)
     * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)
     * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)
     * @param {string} [updatefrom] Date from Format (yyyy-MM-dd) (all GBActivityPoi with LastChange &amp;gt;&#x3D; datefrom are passed), (default: null)
     * @param {string} [searchfilter] String to search for, Title in all languages are searched, (default: null)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    accommodationGetAccommodations: function accommodationGetAccommodations(pagenumber, pagesize, seed, categoryfilter, typefilter, boardfilter, featurefilter, featureidfilter, themefilter, badgefilter, idfilter, locfilter, odhtagfilter, odhactive, active, arrival, departure, roominfo, bokfilter, source, availabilitychecklanguage, availabilitycheck, latitude, longitude, radius, fields, language, updatefrom, searchfilter, options) {
      return accommodation_api_AccommodationApiFp(configuration).accommodationGetAccommodations(pagenumber, pagesize, seed, categoryfilter, typefilter, boardfilter, featurefilter, featureidfilter, themefilter, badgefilter, idfilter, locfilter, odhtagfilter, odhactive, active, arrival, departure, roominfo, bokfilter, source, availabilitychecklanguage, availabilitycheck, latitude, longitude, radius, fields, language, updatefrom, searchfilter, options).then(function (request) {
        return request(axios, basePath);
      });
    },

    /**
     *
     * @summary GET Accommodation List Localized
     * @param {number} [pagenumber] Pagenumber, (default:1)
     * @param {number} [pagesize] Elements per Page (If availabilitycheck set, pagesize has no effect all Accommodations are returned), (default:10)
     * @param {string} [seed] Seed &#x27;1 - 10&#x27; for Random Sorting, &#x27;0&#x27; generates a Random Seed, &#x27;null&#x27; disables Random Sorting, (default:null)
     * @param {string} [language] Localization Language
     * @param {string} [categoryfilter] Categoryfilter (BITMASK values: 1 &#x3D; (not categorized), 2 &#x3D; (1star), 4 &#x3D; (1flower), 8 &#x3D; (1sun), 14 &#x3D; (1star/1flower/1sun), 16 &#x3D; (2stars), 32 &#x3D; (2flowers), 64 &#x3D; (2suns), 112 &#x3D; (2stars/2flowers/2suns), 128 &#x3D; (3stars), 256 &#x3D; (3flowers), 512 &#x3D; (3suns), 1024 &#x3D; (3sstars), 1920 &#x3D; (3stars/3flowers/3suns/3sstars), 2048 &#x3D; (4stars), 4096 &#x3D; (4flowers), 8192 &#x3D; (4suns), 16384 &#x3D; (4sstars), 30720 &#x3D; (4stars/4flowers/4suns/4sstars), 32768 &#x3D; (5stars), 65536 &#x3D; (5flowers), 131072 &#x3D; (5suns), 229376 &#x3D; (5stars/5flowers/5suns), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)
     * @param {string} [typefilter] Typefilter (BITMASK values: 1 &#x3D; (HotelPension), 2 &#x3D; (BedBreakfast), 4 &#x3D; (Farm), 8 &#x3D; (Camping), 16 &#x3D; (Youth), 32 &#x3D; (Mountain), 64 &#x3D; (Apartment), 128 &#x3D; (Not defined),&#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)
     * @param {string} [boardfilter] Boardfilter (BITMASK values: 0 &#x3D; (all boards), 1 &#x3D; (without board), 2 &#x3D; (breakfast), 4 &#x3D; (half board), 8 &#x3D; (full board), 16 &#x3D; (All inclusive), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;0&#x27;)
     * @param {string} [featurefilter] FeatureFilter (BITMASK values: 1 &#x3D; (Group-friendly), 2 &#x3D; (Meeting rooms), 4 &#x3D; (Swimming pool), 8 &#x3D; (Sauna), 16 &#x3D; (Garage), 32 &#x3D; (Pick-up service), 64 &#x3D; (WLAN), 128 &#x3D; (Barrier-free), 256 &#x3D; (Special menus for allergy sufferers), 512 &#x3D; (Pets welcome), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)
     * @param {string} [themefilter] Themefilter (BITMASK values: 1 &#x3D; (Gourmet), 2 &#x3D; (At altitude), 4 &#x3D; (Regional wellness offerings), 8 &#x3D; (on the wheels), 16 &#x3D; (With family), 32 &#x3D; (Hiking), 64 &#x3D; (In the vineyards), 128 &#x3D; (Urban vibe), 256 &#x3D; (At the ski resort), 512 &#x3D; (Mediterranean), 1024 &#x3D; (In the Dolomites), 2048 &#x3D; (Alpine), 4096 &#x3D; (Small and charming), 8192 &#x3D; (Huts and mountain inns), 16384 &#x3D; (Rural way of life), 32768 &#x3D; (Balance), 65536 &#x3D; (Christmas markets), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)
     * @param {string} [badgefilter] BadgeFilter (BITMASK values: 1 &#x3D; (Belvita Wellness Hotel), 2 &#x3D; (Familyhotel), 4 &#x3D; (Bikehotel), 8 &#x3D; (Red Rooster Farm), 16 &#x3D; (Barrier free certificated), 32 &#x3D; (Vitalpina Hiking Hotel), 64 &#x3D; (Private Rooms in South Tyrol), 128 &#x3D; (Vinum Hotels), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)
     * @param {string} [idfilter] IDFilter (Separator &#x27;,&#x27; List of Accommodation IDs, &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)
     * @param {string} [locfilter] Locfilter (Separator &#x27;,&#x27; possible values: reg + REGIONID &#x3D; (Filter by Region), reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMVEREINID &#x3D; (Filter by Tourismverein), mun + MUNICIPALITYID &#x3D; (Filter by Municipality), fra + FRACTIONID &#x3D; (Filter by Fraction), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)
     * @param {string} [odhtagfilter] ODHTag Filter (refers to Array SmgTags) (String, Separator &#x27;,&#x27; more ODHTags possible, &#x27;null&#x27; &#x3D; No Filter, available ODHTags reference to &#x27;api/ODHTag?validforentity&#x3D;accommodation&#x27;), (default:&#x27;null&#x27;)
     * @param {boolean} [odhactive] ODHActive Filter (refers to field SmgActive) (possible Values: &#x27;null&#x27; Displays all Accommodations, &#x27;true&#x27; only ODH Active Accommodations, &#x27;false&#x27; only ODH Disabled Accommodations, (default:&#x27;null&#x27;)
     * @param {boolean} [active] TIC Active Filter (possible Values: &#x27;null&#x27; Displays all Accommodations, &#x27;true&#x27; only TIC Active Accommodations, &#x27;false&#x27; only TIC Disabled Accommodations, (default:&#x27;null&#x27;)
     * @param {string} [arrival] Arrival Date (yyyy-MM-dd) REQUIRED, (default:&#x27;Today&#x27;)
     * @param {string} [departure] Departure Date (yyyy-MM-dd) REQUIRED, (default:&#x27;Tomorrow&#x27;)
     * @param {string} [roominfo] Roominfo Filter REQUIRED (Splitter for Rooms &#x27;|&#x27; Splitter for Persons Ages &#x27;,&#x27;) (Room Types: 0&#x3D;notprovided, 1&#x3D;room, 2&#x3D;apartment, 4&#x3D;pitch/tent(onlyLTS), 8&#x3D;dorm(onlyLTS)) possible Values Example 1-18,10|1-18 &#x3D; 2 Rooms, Room 1 for 2 person Age 18 and Age 10, Room 2 for 1 Person Age 18), (default:&#x27;1-18,18&#x27;)
     * @param {string} [bokfilter] Booking Channels Filter REQUIRED (Separator &#x27;,&#x27; possible values: hgv &#x3D; (Booking Südtirol), htl &#x3D; (Hotel.de), exp &#x3D; (Expedia), bok &#x3D; (Booking.com), lts &#x3D; (LTS Availability check)), (default:&#x27;hgv&#x27;)
     * @param {string} [source] Source for MSS availability check, (default:&#x27;sinfo&#x27;)
     * @param {boolean} [availabilitycheck] Availability Check enabled/disabled (possible Values: &#x27;true&#x27;, &#x27;false), (default Value: &#x27;false&#x27;) NOT AVAILABLE AS OPEN DATA
     * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    accommodationGetAccommodationsLocalized: function accommodationGetAccommodationsLocalized(pagenumber, pagesize, seed, language, categoryfilter, typefilter, boardfilter, featurefilter, themefilter, badgefilter, idfilter, locfilter, odhtagfilter, odhactive, active, arrival, departure, roominfo, bokfilter, source, availabilitycheck, latitude, longitude, radius, options) {
      return accommodation_api_AccommodationApiFp(configuration).accommodationGetAccommodationsLocalized(pagenumber, pagesize, seed, language, categoryfilter, typefilter, boardfilter, featurefilter, themefilter, badgefilter, idfilter, locfilter, odhtagfilter, odhactive, active, arrival, departure, roominfo, bokfilter, source, availabilitycheck, latitude, longitude, radius, options).then(function (request) {
        return request(axios, basePath);
      });
    },

    /**
     *
     * @summary GET Accommodation Feature List (LTS Features)
     * @param {string} [source] IF source &#x3D; \&quot;lts\&quot; the Features list is returned in XML Format directly from LTS, (default: blank)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    accommodationGetAllAccommodationFeaturesList: function accommodationGetAllAccommodationFeaturesList(source, options) {
      return accommodation_api_AccommodationApiFp(configuration).accommodationGetAllAccommodationFeaturesList(source, options).then(function (request) {
        return request(axios, basePath);
      });
    },

    /**
     *
     * @summary GET Accommodation Feature Single (LTS Features)
     * @param {string} id ID of the AccommodationFeature
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    accommodationGetAllAccommodationFeaturesSingle: function accommodationGetAllAccommodationFeaturesSingle(id, options) {
      return accommodation_api_AccommodationApiFp(configuration).accommodationGetAllAccommodationFeaturesSingle(id, options).then(function (request) {
        return request(axios, basePath);
      });
    },

    /**
     *
     * @summary GET Accommodation Types List
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    accommodationGetAllAccommodationTypesList: function accommodationGetAllAccommodationTypesList(options) {
      return accommodation_api_AccommodationApiFp(configuration).accommodationGetAllAccommodationTypesList(options).then(function (request) {
        return request(axios, basePath);
      });
    },

    /**
     *
     * @summary GET Accommodation Types Single
     * @param {string} id ID of the AccommodationType
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    accommodationGetAllAccommodationTypessingle: function accommodationGetAllAccommodationTypessingle(id, options) {
      return accommodation_api_AccommodationApiFp(configuration).accommodationGetAllAccommodationTypessingle(id, options).then(function (request) {
        return request(axios, basePath);
      });
    },

    /**
     *
     * @summary GET Accommodation Changed List by Date
     * @param {number} [pagenumber] Pagenumber, (default:1)
     * @param {number} [pagesize] Elements per Page, (default:10)
     * @param {string} [seed] Seed &#x27;1 - 10&#x27; for Random Sorting, &#x27;0&#x27; generates a Random Seed, &#x27;null&#x27; disables Random Sorting, (default:null)
     * @param {string} [updatefrom] Date from Format (yyyy-MM-dd) (all Accos with LastChange &amp;gt;&#x3D; datefrom are passed), (default: DateTime.Now - 1 Day)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    accommodationGetAllAccommodationsChanged: function accommodationGetAllAccommodationsChanged(pagenumber, pagesize, seed, updatefrom, options) {
      return accommodation_api_AccommodationApiFp(configuration).accommodationGetAllAccommodationsChanged(pagenumber, pagesize, seed, updatefrom, options).then(function (request) {
        return request(axios, basePath);
      });
    },

    /**
     *
     * @summary GET Reduced Accommodation List
     * @param {string} [language] Localization Language
     * @param {string} [categoryfilter] Categoryfilter (BITMASK values: 1 &#x3D; (not categorized), 2 &#x3D; (1star), 4 &#x3D; (1flower), 8 &#x3D; (1sun), 14 &#x3D; (1star/1flower/1sun), 16 &#x3D; (2stars), 32 &#x3D; (2flowers), 64 &#x3D; (2suns), 112 &#x3D; (2stars/2flowers/2suns), 128 &#x3D; (3stars), 256 &#x3D; (3flowers), 512 &#x3D; (3suns), 1024 &#x3D; (3sstars), 1920 &#x3D; (3stars/3flowers/3suns/3sstars), 2048 &#x3D; (4stars), 4096 &#x3D; (4flowers), 8192 &#x3D; (4suns), 16384 &#x3D; (4sstars), 30720 &#x3D; (4stars/4flowers/4suns/4sstars), 32768 &#x3D; (5stars), 65536 &#x3D; (5flowers), 131072 &#x3D; (5suns), 229376 &#x3D; (5stars/5flowers/5suns), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)
     * @param {string} [typefilter] Typefilter (BITMASK values: 1 &#x3D; (HotelPension), 2 &#x3D; (BedBreakfast), 4 &#x3D; (Farm), 8 &#x3D; (Camping), 16 &#x3D; (Youth), 32 &#x3D; (Mountain), 64 &#x3D; (Apartment), 128 &#x3D; (Not defined),&#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)
     * @param {string} [boardfilter] Boardfilter (BITMASK values: 0 &#x3D; (all boards), 1 &#x3D; (without board), 2 &#x3D; (breakfast), 4 &#x3D; (half board), 8 &#x3D; (full board), 16 &#x3D; (All inclusive), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;0&#x27;)
     * @param {string} [featurefilter] FeatureFilter (BITMASK values: 1 &#x3D; (Group-friendly), 2 &#x3D; (Meeting rooms), 4 &#x3D; (Swimming pool), 8 &#x3D; (Sauna), 16 &#x3D; (Garage), 32 &#x3D; (Pick-up service), 64 &#x3D; (WLAN), 128 &#x3D; (Barrier-free), 256 &#x3D; (Special menus for allergy sufferers), 512 &#x3D; (Pets welcome), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)
     * @param {string} [featureidfilter] Feature Id Filter, filter over ALL Features vailable (Separator &#x27;,&#x27; List of Feature IDs, &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)
     * @param {string} [themefilter] Themefilter (BITMASK values: 1 &#x3D; (Gourmet), 2 &#x3D; (At altitude), 4 &#x3D; (Regional wellness offerings), 8 &#x3D; (on the wheels), 16 &#x3D; (With family), 32 &#x3D; (Hiking), 64 &#x3D; (In the vineyards), 128 &#x3D; (Urban vibe), 256 &#x3D; (At the ski resort), 512 &#x3D; (Mediterranean), 1024 &#x3D; (In the Dolomites), 2048 &#x3D; (Alpine), 4096 &#x3D; (Small and charming), 8192 &#x3D; (Huts and mountain inns), 16384 &#x3D; (Rural way of life), 32768 &#x3D; (Balance), 65536 &#x3D; (Christmas markets), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)
     * @param {string} [badgefilter] BadgeFilter (BITMASK values: 1 &#x3D; (Belvita Wellness Hotel), 2 &#x3D; (Familyhotel), 4 &#x3D; (Bikehotel), 8 &#x3D; (Red Rooster Farm), 16 &#x3D; (Barrier free certificated), 32 &#x3D; (Vitalpina Hiking Hotel), 64 &#x3D; (Private Rooms in South Tyrol), 128 &#x3D; (Vinum Hotels), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)
     * @param {string} [locfilter] Locfilter (Separator &#x27;,&#x27; possible values: reg + REGIONID &#x3D; (Filter by Region), reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMVEREINID &#x3D; (Filter by Tourismverein), mun + MUNICIPALITYID &#x3D; (Filter by Municipality), fra + FRACTIONID &#x3D; (Filter by Fraction), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)
     * @param {string} [odhtagfilter] ODHTag Filter (refers to Array SmgTags) (String, Separator &#x27;,&#x27; more ODHTags possible, &#x27;null&#x27; &#x3D; No Filter, available ODHTags reference to &#x27;api/ODHTag?validforentity&#x3D;accommodation&#x27;), (default:&#x27;null&#x27;)
     * @param {boolean} [odhactive] ODHActive Filter (refers to field SmgActive) (possible Values: &#x27;null&#x27; Displays all Accommodations, &#x27;true&#x27; only ODH Active Accommodations, &#x27;false&#x27; only ODH Disabled Accommodations, (default:&#x27;null&#x27;)
     * @param {boolean} [active] TIC Active Filter (possible Values: &#x27;null&#x27; Displays all Accommodations, &#x27;true&#x27; only TIC Active Accommodations, &#x27;false&#x27; only TIC Disabled Accommodations, (default:&#x27;null&#x27;)
     * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)
     * @param {string} [fields] Select fields to display, by Default Title and Id are selected if fields filter is null More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)
     * @param {boolean} [suedtirolmobil]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    accommodationGetReducedAccosAsync: function accommodationGetReducedAccosAsync(language, categoryfilter, typefilter, boardfilter, featurefilter, featureidfilter, themefilter, badgefilter, locfilter, odhtagfilter, odhactive, active, latitude, longitude, radius, fields, suedtirolmobil, options) {
      return accommodation_api_AccommodationApiFp(configuration).accommodationGetReducedAccosAsync(language, categoryfilter, typefilter, boardfilter, featurefilter, featureidfilter, themefilter, badgefilter, locfilter, odhtagfilter, odhactive, active, latitude, longitude, radius, fields, suedtirolmobil, options).then(function (request) {
        return request(axios, basePath);
      });
    },

    /**
     *
     * @summary POST Available Accommodations HGV(Booking Suedtirol MSS) / LTS on posted IDs only Availability Response NOT AVAILABLE AS OPEN DATA
     * @param {string} body Posted Accommodation IDs (Separated by ,)
     * @param {string} [availabilitychecklanguage] Language of the Availability Response
     * @param {string} [boardfilter] Boardfilter (BITMASK values: 0 &#x3D; (all boards), 1 &#x3D; (without board), 2 &#x3D; (breakfast), 4 &#x3D; (half board), 8 &#x3D; (full board), 16 &#x3D; (All inclusive), &#x27;null&#x27; &#x3D; No Filter)
     * @param {string} [arrival] Arrival Date (yyyy-MM-dd) REQUIRED
     * @param {string} [departure] Departure Date (yyyy-MM-dd) REQUIRED
     * @param {string} [roominfo] Roominfo Filter REQUIRED (Splitter for Rooms &#x27;|&#x27; Splitter for Persons Ages &#x27;,&#x27;) (Room Types: 0&#x3D;notprovided, 1&#x3D;room, 2&#x3D;apartment, 4&#x3D;pitch/tent(onlyLTS), 8&#x3D;dorm(onlyLTS)) possible Values Example 1-18,10|1-18 &#x3D; 2 Rooms, Room 1 for 2 person Age 18 and Age 10, Room 2 for 1 Person Age 18), (default:&#x27;1-18,18&#x27;)
     * @param {string} [bokfilter] Booking Channels Filter (Separator &#x27;,&#x27; possible values: hgv &#x3D; (Booking Südtirol), htl &#x3D; (Hotel.de), exp &#x3D; (Expedia), bok &#x3D; (Booking.com), lts &#x3D; (LTS Availability check), (default:hgv)) REQUIRED
     * @param {string} [source] Source of the Requester (possible value: &#x27;sinfo&#x27; &#x3D; Suedtirol.info, &#x27;sbalance&#x27; &#x3D; Südtirol Balance) REQUIRED
     * @param {string} [detail] Include Offer Details (Boolean, 1 &#x3D; full Details)
     * @param {boolean} [withoutmssids] Search over all bookable Accommodations on HGV MSS (No Ids have to be provided as Post Data) (default: false)
     * @param {boolean} [withoutlcsids] Search over all Accommodations on LTS (No Ids have to be provided as Post Data) (default: false)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    accommodationPostAvailableMSSResponseonlyAccommodations: function accommodationPostAvailableMSSResponseonlyAccommodations(body, availabilitychecklanguage, boardfilter, arrival, departure, roominfo, bokfilter, source, detail, withoutmssids, withoutlcsids, options) {
      return accommodation_api_AccommodationApiFp(configuration).accommodationPostAvailableMSSResponseonlyAccommodations(body, availabilitychecklanguage, boardfilter, arrival, departure, roominfo, bokfilter, source, detail, withoutmssids, withoutlcsids, options).then(function (request) {
        return request(axios, basePath);
      });
    }
  };
};
/**
 * AccommodationApi - object-oriented interface
 * @export
 * @class AccommodationApi
 * @extends {BaseAPI}
 */

var accommodation_api_AccommodationApi = /*#__PURE__*/function (_BaseAPI) {
  _inherits(AccommodationApi, _BaseAPI);

  var _super = _createSuper(AccommodationApi);

  function AccommodationApi() {
    _classCallCheck(this, AccommodationApi);

    return _super.apply(this, arguments);
  }

  _createClass(AccommodationApi, [{
    key: "accommodationGetAccoRoomInfos",

    /**
     *
     * @summary GET Accommodation Room Info by AccoID
     * @param {string} accoid Accommodation ID
     * @param {string} [idsource] ID Source Filter (possible values:&#x27;lts&#x27;,&#x27;hgv&#x27;), (default:&#x27;lts&#x27;)
     * @param {boolean} [getall] Get Rooms from all sources (If an accommodation is bookable on Booking Southtyrol, rooms from this source are returned, setting getall to true returns also LTS Rooms), (default:false)
     * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)
     * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AccommodationApi
     */
    value: function accommodationGetAccoRoomInfos(accoid, idsource, getall, fields, language, options) {
      var _this = this;

      return accommodation_api_AccommodationApiFp(this.configuration).accommodationGetAccoRoomInfos(accoid, idsource, getall, fields, language, options).then(function (request) {
        return request(_this.axios, _this.basePath);
      });
    }
    /**
     *
     * @summary GET Accommodation Room Info Single
     * @param {string} id AccommodationRoom ID
     * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)
     * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AccommodationApi
     */

  }, {
    key: "accommodationGetAccoRoomInfosById",
    value: function accommodationGetAccoRoomInfosById(id, fields, language, options) {
      var _this2 = this;

      return accommodation_api_AccommodationApiFp(this.configuration).accommodationGetAccoRoomInfosById(id, fields, language, options).then(function (request) {
        return request(_this2.axios, _this2.basePath);
      });
    }
    /**
     *
     * @summary GET Accommodation Single
     * @param {string} id ID of the Accommodation
     * @param {string} [idsource] ID Source Filter (possible values:&#x27;lts&#x27;,&#x27;hgv&#x27;), (default:&#x27;lts&#x27;)
     * @param {string} [availabilitychecklanguage] Language of the Availability Response (possible values: &#x27;de&#x27;,&#x27;it&#x27;,&#x27;en&#x27;), (default:&#x27;de&#x27;)
     * @param {string} [boardfilter] Boardfilter (BITMASK values: 0 &#x3D; (all boards), 1 &#x3D; (without board), 2 &#x3D; (breakfast), 4 &#x3D; (half board), 8 &#x3D; (full board), 16 &#x3D; (All inclusive), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;0&#x27;)
     * @param {string} [arrival] Arrival Date (yyyy-MM-dd) REQUIRED, (default:&#x27;Today&#x27;)
     * @param {string} [departure] Departure Date (yyyy-MM-dd) REQUIRED, (default:&#x27;Tomorrow&#x27;)
     * @param {string} [roominfo] Roominfo Filter REQUIRED (Splitter for Rooms &#x27;|&#x27; Splitter for Persons Ages &#x27;,&#x27;) (Room Types: 0&#x3D;notprovided, 1&#x3D;room, 2&#x3D;apartment, 4&#x3D;pitch/tent(onlyLTS), 8&#x3D;dorm(onlyLTS)) possible Values Example 1-18,10|1-18 &#x3D; 2 Rooms, Room 1 for 2 person Age 18 and Age 10, Room 2 for 1 Person Age 18), (default:&#x27;1-18,18&#x27;)
     * @param {string} [bokfilter] Booking Channels Filter REQUIRED (Separator &#x27;,&#x27; possible values: hgv &#x3D; (Booking Südtirol), htl &#x3D; (Hotel.de), exp &#x3D; (Expedia), bok &#x3D; (Booking.com), lts &#x3D; (LTS Availability check)), (default:&#x27;hgv&#x27;)
     * @param {string} [source] Source for MSS availability check, (default:&#x27;sinfo&#x27;)
     * @param {boolean} [availabilitycheck] Availability Check enabled/disabled (possible Values: &#x27;true&#x27;, &#x27;false), (default Value: &#x27;false&#x27;) NOT AVAILABLE AS OPEN DATA
     * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)
     * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AccommodationApi
     */

  }, {
    key: "accommodationGetAccommodation",
    value: function accommodationGetAccommodation(id, idsource, availabilitychecklanguage, boardfilter, arrival, departure, roominfo, bokfilter, source, availabilitycheck, fields, language, options) {
      var _this3 = this;

      return accommodation_api_AccommodationApiFp(this.configuration).accommodationGetAccommodation(id, idsource, availabilitychecklanguage, boardfilter, arrival, departure, roominfo, bokfilter, source, availabilitycheck, fields, language, options).then(function (request) {
        return request(_this3.axios, _this3.basePath);
      });
    }
    /**
     *
     * @summary GET Accommodation Single Localized
     * @param {string} id ID of the Accommodation
     * @param {string} [language] Localization Language
     * @param {string} [idsource] ID Source Filter (possible values:&#x27;lts&#x27;,&#x27;hgv&#x27;), (default:&#x27;lts&#x27;)
     * @param {string} [boardfilter] Boardfilter (BITMASK values: 0 &#x3D; (all boards), 1 &#x3D; (without board), 2 &#x3D; (breakfast), 4 &#x3D; (half board), 8 &#x3D; (full board), 16 &#x3D; (All inclusive), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;0&#x27;)
     * @param {string} [arrival] Arrival Date (yyyy-MM-dd) REQUIRED, (default:&#x27;Today&#x27;)
     * @param {string} [departure] Departure Date (yyyy-MM-dd) REQUIRED, (default:&#x27;Tomorrow&#x27;)
     * @param {string} [roominfo] Roominfo Filter REQUIRED (Splitter for Rooms &#x27;|&#x27; Splitter for Persons Ages &#x27;,&#x27;) (Room Types: 0&#x3D;notprovided, 1&#x3D;room, 2&#x3D;apartment, 4&#x3D;pitch/tent(onlyLTS), 8&#x3D;dorm(onlyLTS)) possible Values Example 1-18,10|1-18 &#x3D; 2 Rooms, Room 1 for 2 person Age 18 and Age 10, Room 2 for 1 Person Age 18), (default:&#x27;1-18,18&#x27;)
     * @param {string} [bokfilter] Booking Channels Filter REQUIRED (Separator &#x27;,&#x27; possible values: hgv &#x3D; (Booking Südtirol), htl &#x3D; (Hotel.de), exp &#x3D; (Expedia), bok &#x3D; (Booking.com), lts &#x3D; (LTS Availability check)), (default:&#x27;hgv&#x27;)
     * @param {string} [source] Source for MSS availability check, (default:&#x27;sinfo&#x27;)
     * @param {boolean} [availabilitycheck] Availability Check enabled/disabled (possible Values: &#x27;true&#x27;, &#x27;false), (default Value: &#x27;false&#x27;) NOT AVAILABLE AS OPEN DATA
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AccommodationApi
     */

  }, {
    key: "accommodationGetAccommodationLocalized",
    value: function accommodationGetAccommodationLocalized(id, language, idsource, boardfilter, arrival, departure, roominfo, bokfilter, source, availabilitycheck, options) {
      var _this4 = this;

      return accommodation_api_AccommodationApiFp(this.configuration).accommodationGetAccommodationLocalized(id, language, idsource, boardfilter, arrival, departure, roominfo, bokfilter, source, availabilitycheck, options).then(function (request) {
        return request(_this4.axios, _this4.basePath);
      });
    }
    /**
     *
     * @summary GET Accommodation List
     * @param {number} [pagenumber] Pagenumber, (default:1)
     * @param {number} [pagesize] Elements per Page (If availabilitycheck set, pagesize has no effect all Accommodations are returned), (default:10)
     * @param {string} [seed] Seed &#x27;1 - 10&#x27; for Random Sorting, &#x27;0&#x27; generates a Random Seed, &#x27;null&#x27; disables Random Sorting, (default:null)
     * @param {string} [categoryfilter] Categoryfilter (BITMASK values: 1 &#x3D; (not categorized), 2 &#x3D; (1star), 4 &#x3D; (1flower), 8 &#x3D; (1sun), 14 &#x3D; (1star/1flower/1sun), 16 &#x3D; (2stars), 32 &#x3D; (2flowers), 64 &#x3D; (2suns), 112 &#x3D; (2stars/2flowers/2suns), 128 &#x3D; (3stars), 256 &#x3D; (3flowers), 512 &#x3D; (3suns), 1024 &#x3D; (3sstars), 1920 &#x3D; (3stars/3flowers/3suns/3sstars), 2048 &#x3D; (4stars), 4096 &#x3D; (4flowers), 8192 &#x3D; (4suns), 16384 &#x3D; (4sstars), 30720 &#x3D; (4stars/4flowers/4suns/4sstars), 32768 &#x3D; (5stars), 65536 &#x3D; (5flowers), 131072 &#x3D; (5suns), 229376 &#x3D; (5stars/5flowers/5suns), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)
     * @param {string} [typefilter] Typefilter (BITMASK values: 1 &#x3D; (HotelPension), 2 &#x3D; (BedBreakfast), 4 &#x3D; (Farm), 8 &#x3D; (Camping), 16 &#x3D; (Youth), 32 &#x3D; (Mountain), 64 &#x3D; (Apartment), 128 &#x3D; (Not defined),&#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)
     * @param {string} [boardfilter] Boardfilter (BITMASK values: 0 &#x3D; (all boards), 1 &#x3D; (without board), 2 &#x3D; (breakfast), 4 &#x3D; (half board), 8 &#x3D; (full board), 16 &#x3D; (All inclusive), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;0&#x27;)
     * @param {string} [featurefilter] FeatureFilter refers to predefined Features listed in the property SpecialFeatures (BITMASK values: 1 &#x3D; (Group-friendly), 2 &#x3D; (Meeting rooms), 4 &#x3D; (Swimming pool), 8 &#x3D; (Sauna), 16 &#x3D; (Garage), 32 &#x3D; (Pick-up service), 64 &#x3D; (WLAN), 128 &#x3D; (Barrier-free), 256 &#x3D; (Special menus for allergy sufferers), 512 &#x3D; (Pets welcome), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)
     * @param {string} [featureidfilter] Feature Id Filter, filter over ALL Features vailable (Separator &#x27;,&#x27; List of Feature IDs, &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)
     * @param {string} [themefilter] Themefilter (BITMASK values: 1 &#x3D; (Gourmet), 2 &#x3D; (At altitude), 4 &#x3D; (Regional wellness offerings), 8 &#x3D; (on the wheels), 16 &#x3D; (With family), 32 &#x3D; (Hiking), 64 &#x3D; (In the vineyards), 128 &#x3D; (Urban vibe), 256 &#x3D; (At the ski resort), 512 &#x3D; (Mediterranean), 1024 &#x3D; (In the Dolomites), 2048 &#x3D; (Alpine), 4096 &#x3D; (Small and charming), 8192 &#x3D; (Huts and mountain inns), 16384 &#x3D; (Rural way of life), 32768 &#x3D; (Balance), 65536 &#x3D; (Christmas markets), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)
     * @param {string} [badgefilter] BadgeFilter (BITMASK values: 1 &#x3D; (Belvita Wellness Hotel), 2 &#x3D; (Familyhotel), 4 &#x3D; (Bikehotel), 8 &#x3D; (Red Rooster Farm), 16 &#x3D; (Barrier free certificated), 32 &#x3D; (Vitalpina Hiking Hotel), 64 &#x3D; (Private Rooms in South Tyrol), 128 &#x3D; (Vinum Hotels), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)
     * @param {string} [idfilter] IDFilter (Separator &#x27;,&#x27; List of Accommodation IDs, &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)
     * @param {string} [locfilter] Locfilter (Separator &#x27;,&#x27; possible values: reg + REGIONID &#x3D; (Filter by Region), reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMVEREINID &#x3D; (Filter by Tourismverein), mun + MUNICIPALITYID &#x3D; (Filter by Municipality), fra + FRACTIONID &#x3D; (Filter by Fraction), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)
     * @param {string} [odhtagfilter] ODHTag Filter (refers to Array SmgTags) (String, Separator &#x27;,&#x27; more ODHTags possible, &#x27;null&#x27; &#x3D; No Filter, available ODHTags reference to &#x27;api/ODHTag?validforentity&#x3D;accommodation&#x27;), (default:&#x27;null&#x27;)
     * @param {boolean} [odhactive] ODHActive Filter (refers to field SmgActive) (possible Values: &#x27;null&#x27; Displays all Accommodations, &#x27;true&#x27; only ODH Active Accommodations, &#x27;false&#x27; only ODH Disabled Accommodations, (default:&#x27;null&#x27;)
     * @param {boolean} [active] TIC Active Filter (possible Values: &#x27;null&#x27; Displays all Accommodations, &#x27;true&#x27; only TIC Active Accommodations, &#x27;false&#x27; only TIC Disabled Accommodations, (default:&#x27;null&#x27;)
     * @param {string} [arrival] Arrival Date (yyyy-MM-dd) REQUIRED, (default:&#x27;Today&#x27;)
     * @param {string} [departure] Departure Date (yyyy-MM-dd) REQUIRED, (default:&#x27;Tomorrow&#x27;)
     * @param {string} [roominfo] Roominfo Filter REQUIRED (Splitter for Rooms &#x27;|&#x27; Splitter for Persons Ages &#x27;,&#x27;) (Room Types: 0&#x3D;notprovided, 1&#x3D;room, 2&#x3D;apartment, 4&#x3D;pitch/tent(onlyLTS), 8&#x3D;dorm(onlyLTS)) possible Values Example 1-18,10|1-18 &#x3D; 2 Rooms, Room 1 for 2 person Age 18 and Age 10, Room 2 for 1 Person Age 18), (default:&#x27;1-18,18&#x27;)
     * @param {string} [bokfilter] Booking Channels Filter REQUIRED (Separator &#x27;,&#x27; possible values: hgv &#x3D; (Booking Südtirol), htl &#x3D; (Hotel.de), exp &#x3D; (Expedia), bok &#x3D; (Booking.com), lts &#x3D; (LTS Availability check)), (default:&#x27;hgv&#x27;)
     * @param {string} [source] Source for MSS availability check, (default:&#x27;sinfo&#x27;)
     * @param {string} [availabilitychecklanguage] Language of the Availability Response (possible values: &#x27;de&#x27;,&#x27;it&#x27;,&#x27;en&#x27;), (default:&#x27;en&#x27;)
     * @param {boolean} [availabilitycheck] Availability Check enabled/disabled (possible Values: &#x27;true&#x27;, &#x27;false), (default Value: &#x27;false&#x27;) NOT AVAILABLE AS OPEN DATA
     * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)
     * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)
     * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)
     * @param {string} [updatefrom] Date from Format (yyyy-MM-dd) (all GBActivityPoi with LastChange &amp;gt;&#x3D; datefrom are passed), (default: null)
     * @param {string} [searchfilter] String to search for, Title in all languages are searched, (default: null)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AccommodationApi
     */

  }, {
    key: "accommodationGetAccommodations",
    value: function accommodationGetAccommodations(pagenumber, pagesize, seed, categoryfilter, typefilter, boardfilter, featurefilter, featureidfilter, themefilter, badgefilter, idfilter, locfilter, odhtagfilter, odhactive, active, arrival, departure, roominfo, bokfilter, source, availabilitychecklanguage, availabilitycheck, latitude, longitude, radius, fields, language, updatefrom, searchfilter, options) {
      var _this5 = this;

      return accommodation_api_AccommodationApiFp(this.configuration).accommodationGetAccommodations(pagenumber, pagesize, seed, categoryfilter, typefilter, boardfilter, featurefilter, featureidfilter, themefilter, badgefilter, idfilter, locfilter, odhtagfilter, odhactive, active, arrival, departure, roominfo, bokfilter, source, availabilitychecklanguage, availabilitycheck, latitude, longitude, radius, fields, language, updatefrom, searchfilter, options).then(function (request) {
        return request(_this5.axios, _this5.basePath);
      });
    }
    /**
     *
     * @summary GET Accommodation List Localized
     * @param {number} [pagenumber] Pagenumber, (default:1)
     * @param {number} [pagesize] Elements per Page (If availabilitycheck set, pagesize has no effect all Accommodations are returned), (default:10)
     * @param {string} [seed] Seed &#x27;1 - 10&#x27; for Random Sorting, &#x27;0&#x27; generates a Random Seed, &#x27;null&#x27; disables Random Sorting, (default:null)
     * @param {string} [language] Localization Language
     * @param {string} [categoryfilter] Categoryfilter (BITMASK values: 1 &#x3D; (not categorized), 2 &#x3D; (1star), 4 &#x3D; (1flower), 8 &#x3D; (1sun), 14 &#x3D; (1star/1flower/1sun), 16 &#x3D; (2stars), 32 &#x3D; (2flowers), 64 &#x3D; (2suns), 112 &#x3D; (2stars/2flowers/2suns), 128 &#x3D; (3stars), 256 &#x3D; (3flowers), 512 &#x3D; (3suns), 1024 &#x3D; (3sstars), 1920 &#x3D; (3stars/3flowers/3suns/3sstars), 2048 &#x3D; (4stars), 4096 &#x3D; (4flowers), 8192 &#x3D; (4suns), 16384 &#x3D; (4sstars), 30720 &#x3D; (4stars/4flowers/4suns/4sstars), 32768 &#x3D; (5stars), 65536 &#x3D; (5flowers), 131072 &#x3D; (5suns), 229376 &#x3D; (5stars/5flowers/5suns), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)
     * @param {string} [typefilter] Typefilter (BITMASK values: 1 &#x3D; (HotelPension), 2 &#x3D; (BedBreakfast), 4 &#x3D; (Farm), 8 &#x3D; (Camping), 16 &#x3D; (Youth), 32 &#x3D; (Mountain), 64 &#x3D; (Apartment), 128 &#x3D; (Not defined),&#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)
     * @param {string} [boardfilter] Boardfilter (BITMASK values: 0 &#x3D; (all boards), 1 &#x3D; (without board), 2 &#x3D; (breakfast), 4 &#x3D; (half board), 8 &#x3D; (full board), 16 &#x3D; (All inclusive), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;0&#x27;)
     * @param {string} [featurefilter] FeatureFilter (BITMASK values: 1 &#x3D; (Group-friendly), 2 &#x3D; (Meeting rooms), 4 &#x3D; (Swimming pool), 8 &#x3D; (Sauna), 16 &#x3D; (Garage), 32 &#x3D; (Pick-up service), 64 &#x3D; (WLAN), 128 &#x3D; (Barrier-free), 256 &#x3D; (Special menus for allergy sufferers), 512 &#x3D; (Pets welcome), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)
     * @param {string} [themefilter] Themefilter (BITMASK values: 1 &#x3D; (Gourmet), 2 &#x3D; (At altitude), 4 &#x3D; (Regional wellness offerings), 8 &#x3D; (on the wheels), 16 &#x3D; (With family), 32 &#x3D; (Hiking), 64 &#x3D; (In the vineyards), 128 &#x3D; (Urban vibe), 256 &#x3D; (At the ski resort), 512 &#x3D; (Mediterranean), 1024 &#x3D; (In the Dolomites), 2048 &#x3D; (Alpine), 4096 &#x3D; (Small and charming), 8192 &#x3D; (Huts and mountain inns), 16384 &#x3D; (Rural way of life), 32768 &#x3D; (Balance), 65536 &#x3D; (Christmas markets), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)
     * @param {string} [badgefilter] BadgeFilter (BITMASK values: 1 &#x3D; (Belvita Wellness Hotel), 2 &#x3D; (Familyhotel), 4 &#x3D; (Bikehotel), 8 &#x3D; (Red Rooster Farm), 16 &#x3D; (Barrier free certificated), 32 &#x3D; (Vitalpina Hiking Hotel), 64 &#x3D; (Private Rooms in South Tyrol), 128 &#x3D; (Vinum Hotels), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)
     * @param {string} [idfilter] IDFilter (Separator &#x27;,&#x27; List of Accommodation IDs, &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)
     * @param {string} [locfilter] Locfilter (Separator &#x27;,&#x27; possible values: reg + REGIONID &#x3D; (Filter by Region), reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMVEREINID &#x3D; (Filter by Tourismverein), mun + MUNICIPALITYID &#x3D; (Filter by Municipality), fra + FRACTIONID &#x3D; (Filter by Fraction), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)
     * @param {string} [odhtagfilter] ODHTag Filter (refers to Array SmgTags) (String, Separator &#x27;,&#x27; more ODHTags possible, &#x27;null&#x27; &#x3D; No Filter, available ODHTags reference to &#x27;api/ODHTag?validforentity&#x3D;accommodation&#x27;), (default:&#x27;null&#x27;)
     * @param {boolean} [odhactive] ODHActive Filter (refers to field SmgActive) (possible Values: &#x27;null&#x27; Displays all Accommodations, &#x27;true&#x27; only ODH Active Accommodations, &#x27;false&#x27; only ODH Disabled Accommodations, (default:&#x27;null&#x27;)
     * @param {boolean} [active] TIC Active Filter (possible Values: &#x27;null&#x27; Displays all Accommodations, &#x27;true&#x27; only TIC Active Accommodations, &#x27;false&#x27; only TIC Disabled Accommodations, (default:&#x27;null&#x27;)
     * @param {string} [arrival] Arrival Date (yyyy-MM-dd) REQUIRED, (default:&#x27;Today&#x27;)
     * @param {string} [departure] Departure Date (yyyy-MM-dd) REQUIRED, (default:&#x27;Tomorrow&#x27;)
     * @param {string} [roominfo] Roominfo Filter REQUIRED (Splitter for Rooms &#x27;|&#x27; Splitter for Persons Ages &#x27;,&#x27;) (Room Types: 0&#x3D;notprovided, 1&#x3D;room, 2&#x3D;apartment, 4&#x3D;pitch/tent(onlyLTS), 8&#x3D;dorm(onlyLTS)) possible Values Example 1-18,10|1-18 &#x3D; 2 Rooms, Room 1 for 2 person Age 18 and Age 10, Room 2 for 1 Person Age 18), (default:&#x27;1-18,18&#x27;)
     * @param {string} [bokfilter] Booking Channels Filter REQUIRED (Separator &#x27;,&#x27; possible values: hgv &#x3D; (Booking Südtirol), htl &#x3D; (Hotel.de), exp &#x3D; (Expedia), bok &#x3D; (Booking.com), lts &#x3D; (LTS Availability check)), (default:&#x27;hgv&#x27;)
     * @param {string} [source] Source for MSS availability check, (default:&#x27;sinfo&#x27;)
     * @param {boolean} [availabilitycheck] Availability Check enabled/disabled (possible Values: &#x27;true&#x27;, &#x27;false), (default Value: &#x27;false&#x27;) NOT AVAILABLE AS OPEN DATA
     * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AccommodationApi
     */

  }, {
    key: "accommodationGetAccommodationsLocalized",
    value: function accommodationGetAccommodationsLocalized(pagenumber, pagesize, seed, language, categoryfilter, typefilter, boardfilter, featurefilter, themefilter, badgefilter, idfilter, locfilter, odhtagfilter, odhactive, active, arrival, departure, roominfo, bokfilter, source, availabilitycheck, latitude, longitude, radius, options) {
      var _this6 = this;

      return accommodation_api_AccommodationApiFp(this.configuration).accommodationGetAccommodationsLocalized(pagenumber, pagesize, seed, language, categoryfilter, typefilter, boardfilter, featurefilter, themefilter, badgefilter, idfilter, locfilter, odhtagfilter, odhactive, active, arrival, departure, roominfo, bokfilter, source, availabilitycheck, latitude, longitude, radius, options).then(function (request) {
        return request(_this6.axios, _this6.basePath);
      });
    }
    /**
     *
     * @summary GET Accommodation Feature List (LTS Features)
     * @param {string} [source] IF source &#x3D; \&quot;lts\&quot; the Features list is returned in XML Format directly from LTS, (default: blank)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AccommodationApi
     */

  }, {
    key: "accommodationGetAllAccommodationFeaturesList",
    value: function accommodationGetAllAccommodationFeaturesList(source, options) {
      var _this7 = this;

      return accommodation_api_AccommodationApiFp(this.configuration).accommodationGetAllAccommodationFeaturesList(source, options).then(function (request) {
        return request(_this7.axios, _this7.basePath);
      });
    }
    /**
     *
     * @summary GET Accommodation Feature Single (LTS Features)
     * @param {string} id ID of the AccommodationFeature
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AccommodationApi
     */

  }, {
    key: "accommodationGetAllAccommodationFeaturesSingle",
    value: function accommodationGetAllAccommodationFeaturesSingle(id, options) {
      var _this8 = this;

      return accommodation_api_AccommodationApiFp(this.configuration).accommodationGetAllAccommodationFeaturesSingle(id, options).then(function (request) {
        return request(_this8.axios, _this8.basePath);
      });
    }
    /**
     *
     * @summary GET Accommodation Types List
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AccommodationApi
     */

  }, {
    key: "accommodationGetAllAccommodationTypesList",
    value: function accommodationGetAllAccommodationTypesList(options) {
      var _this9 = this;

      return accommodation_api_AccommodationApiFp(this.configuration).accommodationGetAllAccommodationTypesList(options).then(function (request) {
        return request(_this9.axios, _this9.basePath);
      });
    }
    /**
     *
     * @summary GET Accommodation Types Single
     * @param {string} id ID of the AccommodationType
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AccommodationApi
     */

  }, {
    key: "accommodationGetAllAccommodationTypessingle",
    value: function accommodationGetAllAccommodationTypessingle(id, options) {
      var _this10 = this;

      return accommodation_api_AccommodationApiFp(this.configuration).accommodationGetAllAccommodationTypessingle(id, options).then(function (request) {
        return request(_this10.axios, _this10.basePath);
      });
    }
    /**
     *
     * @summary GET Accommodation Changed List by Date
     * @param {number} [pagenumber] Pagenumber, (default:1)
     * @param {number} [pagesize] Elements per Page, (default:10)
     * @param {string} [seed] Seed &#x27;1 - 10&#x27; for Random Sorting, &#x27;0&#x27; generates a Random Seed, &#x27;null&#x27; disables Random Sorting, (default:null)
     * @param {string} [updatefrom] Date from Format (yyyy-MM-dd) (all Accos with LastChange &amp;gt;&#x3D; datefrom are passed), (default: DateTime.Now - 1 Day)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AccommodationApi
     */

  }, {
    key: "accommodationGetAllAccommodationsChanged",
    value: function accommodationGetAllAccommodationsChanged(pagenumber, pagesize, seed, updatefrom, options) {
      var _this11 = this;

      return accommodation_api_AccommodationApiFp(this.configuration).accommodationGetAllAccommodationsChanged(pagenumber, pagesize, seed, updatefrom, options).then(function (request) {
        return request(_this11.axios, _this11.basePath);
      });
    }
    /**
     *
     * @summary GET Reduced Accommodation List
     * @param {string} [language] Localization Language
     * @param {string} [categoryfilter] Categoryfilter (BITMASK values: 1 &#x3D; (not categorized), 2 &#x3D; (1star), 4 &#x3D; (1flower), 8 &#x3D; (1sun), 14 &#x3D; (1star/1flower/1sun), 16 &#x3D; (2stars), 32 &#x3D; (2flowers), 64 &#x3D; (2suns), 112 &#x3D; (2stars/2flowers/2suns), 128 &#x3D; (3stars), 256 &#x3D; (3flowers), 512 &#x3D; (3suns), 1024 &#x3D; (3sstars), 1920 &#x3D; (3stars/3flowers/3suns/3sstars), 2048 &#x3D; (4stars), 4096 &#x3D; (4flowers), 8192 &#x3D; (4suns), 16384 &#x3D; (4sstars), 30720 &#x3D; (4stars/4flowers/4suns/4sstars), 32768 &#x3D; (5stars), 65536 &#x3D; (5flowers), 131072 &#x3D; (5suns), 229376 &#x3D; (5stars/5flowers/5suns), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)
     * @param {string} [typefilter] Typefilter (BITMASK values: 1 &#x3D; (HotelPension), 2 &#x3D; (BedBreakfast), 4 &#x3D; (Farm), 8 &#x3D; (Camping), 16 &#x3D; (Youth), 32 &#x3D; (Mountain), 64 &#x3D; (Apartment), 128 &#x3D; (Not defined),&#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)
     * @param {string} [boardfilter] Boardfilter (BITMASK values: 0 &#x3D; (all boards), 1 &#x3D; (without board), 2 &#x3D; (breakfast), 4 &#x3D; (half board), 8 &#x3D; (full board), 16 &#x3D; (All inclusive), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;0&#x27;)
     * @param {string} [featurefilter] FeatureFilter (BITMASK values: 1 &#x3D; (Group-friendly), 2 &#x3D; (Meeting rooms), 4 &#x3D; (Swimming pool), 8 &#x3D; (Sauna), 16 &#x3D; (Garage), 32 &#x3D; (Pick-up service), 64 &#x3D; (WLAN), 128 &#x3D; (Barrier-free), 256 &#x3D; (Special menus for allergy sufferers), 512 &#x3D; (Pets welcome), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)
     * @param {string} [featureidfilter] Feature Id Filter, filter over ALL Features vailable (Separator &#x27;,&#x27; List of Feature IDs, &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)
     * @param {string} [themefilter] Themefilter (BITMASK values: 1 &#x3D; (Gourmet), 2 &#x3D; (At altitude), 4 &#x3D; (Regional wellness offerings), 8 &#x3D; (on the wheels), 16 &#x3D; (With family), 32 &#x3D; (Hiking), 64 &#x3D; (In the vineyards), 128 &#x3D; (Urban vibe), 256 &#x3D; (At the ski resort), 512 &#x3D; (Mediterranean), 1024 &#x3D; (In the Dolomites), 2048 &#x3D; (Alpine), 4096 &#x3D; (Small and charming), 8192 &#x3D; (Huts and mountain inns), 16384 &#x3D; (Rural way of life), 32768 &#x3D; (Balance), 65536 &#x3D; (Christmas markets), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)
     * @param {string} [badgefilter] BadgeFilter (BITMASK values: 1 &#x3D; (Belvita Wellness Hotel), 2 &#x3D; (Familyhotel), 4 &#x3D; (Bikehotel), 8 &#x3D; (Red Rooster Farm), 16 &#x3D; (Barrier free certificated), 32 &#x3D; (Vitalpina Hiking Hotel), 64 &#x3D; (Private Rooms in South Tyrol), 128 &#x3D; (Vinum Hotels), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)
     * @param {string} [locfilter] Locfilter (Separator &#x27;,&#x27; possible values: reg + REGIONID &#x3D; (Filter by Region), reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMVEREINID &#x3D; (Filter by Tourismverein), mun + MUNICIPALITYID &#x3D; (Filter by Municipality), fra + FRACTIONID &#x3D; (Filter by Fraction), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)
     * @param {string} [odhtagfilter] ODHTag Filter (refers to Array SmgTags) (String, Separator &#x27;,&#x27; more ODHTags possible, &#x27;null&#x27; &#x3D; No Filter, available ODHTags reference to &#x27;api/ODHTag?validforentity&#x3D;accommodation&#x27;), (default:&#x27;null&#x27;)
     * @param {boolean} [odhactive] ODHActive Filter (refers to field SmgActive) (possible Values: &#x27;null&#x27; Displays all Accommodations, &#x27;true&#x27; only ODH Active Accommodations, &#x27;false&#x27; only ODH Disabled Accommodations, (default:&#x27;null&#x27;)
     * @param {boolean} [active] TIC Active Filter (possible Values: &#x27;null&#x27; Displays all Accommodations, &#x27;true&#x27; only TIC Active Accommodations, &#x27;false&#x27; only TIC Disabled Accommodations, (default:&#x27;null&#x27;)
     * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)
     * @param {string} [fields] Select fields to display, by Default Title and Id are selected if fields filter is null More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)
     * @param {boolean} [suedtirolmobil]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AccommodationApi
     */

  }, {
    key: "accommodationGetReducedAccosAsync",
    value: function accommodationGetReducedAccosAsync(language, categoryfilter, typefilter, boardfilter, featurefilter, featureidfilter, themefilter, badgefilter, locfilter, odhtagfilter, odhactive, active, latitude, longitude, radius, fields, suedtirolmobil, options) {
      var _this12 = this;

      return accommodation_api_AccommodationApiFp(this.configuration).accommodationGetReducedAccosAsync(language, categoryfilter, typefilter, boardfilter, featurefilter, featureidfilter, themefilter, badgefilter, locfilter, odhtagfilter, odhactive, active, latitude, longitude, radius, fields, suedtirolmobil, options).then(function (request) {
        return request(_this12.axios, _this12.basePath);
      });
    }
    /**
     *
     * @summary POST Available Accommodations HGV(Booking Suedtirol MSS) / LTS on posted IDs only Availability Response NOT AVAILABLE AS OPEN DATA
     * @param {string} body Posted Accommodation IDs (Separated by ,)
     * @param {string} [availabilitychecklanguage] Language of the Availability Response
     * @param {string} [boardfilter] Boardfilter (BITMASK values: 0 &#x3D; (all boards), 1 &#x3D; (without board), 2 &#x3D; (breakfast), 4 &#x3D; (half board), 8 &#x3D; (full board), 16 &#x3D; (All inclusive), &#x27;null&#x27; &#x3D; No Filter)
     * @param {string} [arrival] Arrival Date (yyyy-MM-dd) REQUIRED
     * @param {string} [departure] Departure Date (yyyy-MM-dd) REQUIRED
     * @param {string} [roominfo] Roominfo Filter REQUIRED (Splitter for Rooms &#x27;|&#x27; Splitter for Persons Ages &#x27;,&#x27;) (Room Types: 0&#x3D;notprovided, 1&#x3D;room, 2&#x3D;apartment, 4&#x3D;pitch/tent(onlyLTS), 8&#x3D;dorm(onlyLTS)) possible Values Example 1-18,10|1-18 &#x3D; 2 Rooms, Room 1 for 2 person Age 18 and Age 10, Room 2 for 1 Person Age 18), (default:&#x27;1-18,18&#x27;)
     * @param {string} [bokfilter] Booking Channels Filter (Separator &#x27;,&#x27; possible values: hgv &#x3D; (Booking Südtirol), htl &#x3D; (Hotel.de), exp &#x3D; (Expedia), bok &#x3D; (Booking.com), lts &#x3D; (LTS Availability check), (default:hgv)) REQUIRED
     * @param {string} [source] Source of the Requester (possible value: &#x27;sinfo&#x27; &#x3D; Suedtirol.info, &#x27;sbalance&#x27; &#x3D; Südtirol Balance) REQUIRED
     * @param {string} [detail] Include Offer Details (Boolean, 1 &#x3D; full Details)
     * @param {boolean} [withoutmssids] Search over all bookable Accommodations on HGV MSS (No Ids have to be provided as Post Data) (default: false)
     * @param {boolean} [withoutlcsids] Search over all Accommodations on LTS (No Ids have to be provided as Post Data) (default: false)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AccommodationApi
     */

  }, {
    key: "accommodationPostAvailableMSSResponseonlyAccommodations",
    value: function accommodationPostAvailableMSSResponseonlyAccommodations(body, availabilitychecklanguage, boardfilter, arrival, departure, roominfo, bokfilter, source, detail, withoutmssids, withoutlcsids, options) {
      var _this13 = this;

      return accommodation_api_AccommodationApiFp(this.configuration).accommodationPostAvailableMSSResponseonlyAccommodations(body, availabilitychecklanguage, boardfilter, arrival, departure, roominfo, bokfilter, source, detail, withoutmssids, withoutlcsids, options).then(function (request) {
        return request(_this13.axios, _this13.basePath);
      });
    }
  }]);

  return AccommodationApi;
}(base_BaseAPI);
// CONCATENATED MODULE: ./src/api/apis/activity-api.ts

















/* tslint:disable */

/* eslint-disable */

/**
 * Open Data Hub Api Tourism
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: V1
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
 // Some imports not used depending on template conditions
// @ts-ignore


/**
 * ActivityApi - axios parameter creator
 * @export
 */

var activity_api_ActivityApiAxiosParamCreator = function ActivityApiAxiosParamCreator(configuration) {
  return {
    /**
     *
     * @summary GET Activity List Localized
     * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)
     * @param {number} [pagenumber] Pagenumber, (default:1)
     * @param {number} [pagesize] Elements per Page, (default:10)
     * @param {string} [activitytype] Type of the Activity (&#x27;null&#x27; &#x3D; Filter disabled, possible values: BITMASK: &#x27;Mountains &#x3D; 1&#x27;,&#x27;Cycling &#x3D; 2&#x27;,&#x27;Local tours &#x3D; 4&#x27;,&#x27;Horses &#x3D; 8&#x27;,&#x27;Hiking &#x3D; 16&#x27;,&#x27;Running and fitness &#x3D; 32&#x27;,&#x27;Cross-country ski-track &#x3D; 64&#x27;,&#x27;Tobbogan run &#x3D; 128&#x27;,&#x27;Slopes &#x3D; 256&#x27;,&#x27;Lifts &#x3D; 512&#x27;), (default:&#x27;1023&#x27; &#x3D;&#x3D; ALL), REFERENCE TO: GET /api/ActivityTypes
     * @param {string} [subtype] Subtype of the Activity (BITMASK Filter &#x3D; available SubTypes depends on the selected Activity Type), (default:&#x27;null&#x27;)
     * @param {string} [idlist] IDFilter (Separator &#x27;,&#x27; List of Activity IDs), (default:&#x27;null&#x27;)
     * @param {string} [locfilter] Locfilter (Separator &#x27;,&#x27; possible values: reg + REGIONID &#x3D; (Filter by Region), reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMASSOCIATIONID &#x3D; (Filter by Tourismassociation), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)
     * @param {string} [areafilter] AreaFilter (Alternate Locfilter, can be combined with locfilter) (Separator &#x27;,&#x27; possible values: reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMASSOCIATIONID &#x3D; (Filter by Tourismassociation), skr + SKIREGIONID &#x3D; (Filter by Skiregion), ska + SKIAREAID &#x3D; (Filter by Skiarea), are + AREAID &#x3D; (Filter by LTS Area), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)
     * @param {string} [distancefilter] Distance Range Filter (Separator &#x27;,&#x27; example Value: 15,40 Distance from 15 up to 40 Km), (default:&#x27;null&#x27;)
     * @param {string} [altitudefilter] Altitude Range Filter (Separator &#x27;,&#x27; example Value: 500,1000 Altitude from 500 up to 1000 metres), (default:&#x27;null&#x27;)
     * @param {string} [durationfilter] Duration Range Filter (Separator &#x27;,&#x27; example Value: 1,3 Duration from 1 to 3 hours), (default:&#x27;null&#x27;)
     * @param {boolean} [highlight] Hightlight Filter (possible values: &#x27;false&#x27; &#x3D; only Activities with Highlight false, &#x27;true&#x27; &#x3D; only Activities with Highlight true), (default:&#x27;null&#x27;)
     * @param {string} [difficultyfilter] Difficulty Filter (possible values: &#x27;1&#x27; &#x3D; easy, &#x27;2&#x27; &#x3D; medium, &#x27;3&#x27; &#x3D; difficult), (default:&#x27;null&#x27;)
     * @param {string} [odhtagfilter] ODH Taglist Filter (refers to Array SmgTags) (String, Separator &#x27;,&#x27; more Tags possible, available Tags reference to &#x27;api/SmgTag/ByMainEntity/Activity&#x27;), (default:&#x27;null&#x27;)
     * @param {boolean} [active] Active Activities Filter (possible Values: &#x27;true&#x27; only Active Activities, &#x27;false&#x27; only Disabled Activities
     * @param {boolean} [odhactive] ODH Active (Published) Activities Filter (Refers to field SmgActive) Activities Filter (possible Values: &#x27;true&#x27; only published Activities, &#x27;false&#x27; only not published Activities, (default:&#x27;null&#x27;)
     * @param {string} [seed] Seed &#x27;1 - 10&#x27; for Random Sorting, &#x27;0&#x27; generates a Random Seed, &#x27;null&#x27; disables Random Sorting, (default:null)
     * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    activityGetActivityFilteredLocalized: function () {
      var _activityGetActivityFilteredLocalized = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(language, pagenumber, pagesize, activitytype, subtype, idlist, locfilter, areafilter, distancefilter, altitudefilter, durationfilter, highlight, difficultyfilter, odhtagfilter, active, odhactive, seed, latitude, longitude, radius) {
        var options,
            localVarPath,
            localVarUrlObj,
            baseOptions,
            localVarRequestOptions,
            localVarHeaderParameter,
            localVarQueryParameter,
            localVarAccessTokenValue,
            query,
            key,
            _key,
            headersFromBaseOptions,
            _args = arguments;

        return regeneratorRuntime.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                options = _args.length > 20 && _args[20] !== undefined ? _args[20] : {};
                localVarPath = "/api/ActivityLocalized"; // use dummy base URL string because the URL constructor only accepts absolute URLs.

                localVarUrlObj = new URL(localVarPath, 'https://example.com');

                if (configuration) {
                  baseOptions = configuration.baseOptions;
                }

                localVarRequestOptions = _objectSpread2(_objectSpread2({
                  method: 'GET'
                }, baseOptions), options);
                localVarHeaderParameter = {};
                localVarQueryParameter = {}; // authentication oauth2 required
                // oauth required

                if (!(configuration && configuration.accessToken)) {
                  _context.next = 19;
                  break;
                }

                if (!(typeof configuration.accessToken === 'function')) {
                  _context.next = 14;
                  break;
                }

                _context.next = 11;
                return configuration.accessToken("oauth2", [""]);

              case 11:
                _context.t0 = _context.sent;
                _context.next = 17;
                break;

              case 14:
                _context.next = 16;
                return configuration.accessToken;

              case 16:
                _context.t0 = _context.sent;

              case 17:
                localVarAccessTokenValue = _context.t0;
                localVarHeaderParameter["Authorization"] = "Bearer " + localVarAccessTokenValue;

              case 19:
                if (language !== undefined) {
                  localVarQueryParameter['language'] = language;
                }

                if (pagenumber !== undefined) {
                  localVarQueryParameter['pagenumber'] = pagenumber;
                }

                if (pagesize !== undefined) {
                  localVarQueryParameter['pagesize'] = pagesize;
                }

                if (activitytype !== undefined) {
                  localVarQueryParameter['activitytype'] = activitytype;
                }

                if (subtype !== undefined) {
                  localVarQueryParameter['subtype'] = subtype;
                }

                if (idlist !== undefined) {
                  localVarQueryParameter['idlist'] = idlist;
                }

                if (locfilter !== undefined) {
                  localVarQueryParameter['locfilter'] = locfilter;
                }

                if (areafilter !== undefined) {
                  localVarQueryParameter['areafilter'] = areafilter;
                }

                if (distancefilter !== undefined) {
                  localVarQueryParameter['distancefilter'] = distancefilter;
                }

                if (altitudefilter !== undefined) {
                  localVarQueryParameter['altitudefilter'] = altitudefilter;
                }

                if (durationfilter !== undefined) {
                  localVarQueryParameter['durationfilter'] = durationfilter;
                }

                if (highlight !== undefined) {
                  localVarQueryParameter['highlight'] = highlight;
                }

                if (difficultyfilter !== undefined) {
                  localVarQueryParameter['difficultyfilter'] = difficultyfilter;
                }

                if (odhtagfilter !== undefined) {
                  localVarQueryParameter['odhtagfilter'] = odhtagfilter;
                }

                if (active !== undefined) {
                  localVarQueryParameter['active'] = active;
                }

                if (odhactive !== undefined) {
                  localVarQueryParameter['odhactive'] = odhactive;
                }

                if (seed !== undefined) {
                  localVarQueryParameter['seed'] = seed;
                }

                if (latitude !== undefined) {
                  localVarQueryParameter['latitude'] = latitude;
                }

                if (longitude !== undefined) {
                  localVarQueryParameter['longitude'] = longitude;
                }

                if (radius !== undefined) {
                  localVarQueryParameter['radius'] = radius;
                }

                query = new URLSearchParams(localVarUrlObj.search);

                for (key in localVarQueryParameter) {
                  query.set(key, localVarQueryParameter[key]);
                }

                for (_key in options.query) {
                  query.set(_key, options.query[_key]);
                }

                localVarUrlObj.search = new URLSearchParams(query).toString();
                headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                localVarRequestOptions.headers = _objectSpread2(_objectSpread2(_objectSpread2({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                return _context.abrupt("return", {
                  url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                  options: localVarRequestOptions
                });

              case 46:
              case "end":
                return _context.stop();
            }
          }
        }, _callee);
      }));

      function activityGetActivityFilteredLocalized(_x, _x2, _x3, _x4, _x5, _x6, _x7, _x8, _x9, _x10, _x11, _x12, _x13, _x14, _x15, _x16, _x17, _x18, _x19, _x20) {
        return _activityGetActivityFilteredLocalized.apply(this, arguments);
      }

      return activityGetActivityFilteredLocalized;
    }(),

    /**
     *
     * @summary GET Activity List
     * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)
     * @param {number} [pagenumber] Pagenumber, (default:1)
     * @param {number} [pagesize] Elements per Page, (default:10)
     * @param {string} [activitytype] Type of the Activity (&#x27;null&#x27; &#x3D; Filter disabled, possible values: BITMASK: &#x27;Mountains &#x3D; 1&#x27;,&#x27;Cycling &#x3D; 2&#x27;,&#x27;Local tours &#x3D; 4&#x27;,&#x27;Horses &#x3D; 8&#x27;,&#x27;Hiking &#x3D; 16&#x27;,&#x27;Running and fitness &#x3D; 32&#x27;,&#x27;Cross-country ski-track &#x3D; 64&#x27;,&#x27;Tobbogan run &#x3D; 128&#x27;,&#x27;Slopes &#x3D; 256&#x27;,&#x27;Lifts &#x3D; 512&#x27;), (default:&#x27;1023&#x27; &#x3D;&#x3D; ALL), REFERENCE TO: GET /api/ActivityTypes
     * @param {string} [subtype] Subtype of the Activity (BITMASK Filter &#x3D; available SubTypes depends on the selected Activity Type), (default:&#x27;null&#x27;)
     * @param {string} [idlist] IDFilter (Separator &#x27;,&#x27; List of Activity IDs), (default:&#x27;null&#x27;)
     * @param {string} [locfilter] Locfilter (Separator &#x27;,&#x27; possible values: reg + REGIONID &#x3D; (Filter by Region), reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMASSOCIATIONID &#x3D; (Filter by Tourismassociation), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)
     * @param {string} [areafilter] AreaFilter (Alternate Locfilter, can be combined with locfilter) (Separator &#x27;,&#x27; possible values: reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMASSOCIATIONID &#x3D; (Filter by Tourismassociation), skr + SKIREGIONID &#x3D; (Filter by Skiregion), ska + SKIAREAID &#x3D; (Filter by Skiarea), are + AREAID &#x3D; (Filter by LTS Area), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)
     * @param {string} [distancefilter] Distance Range Filter (Separator &#x27;,&#x27; example Value: 15,40 Distance from 15 up to 40 Km), (default:&#x27;null&#x27;)
     * @param {string} [altitudefilter] Altitude Range Filter (Separator &#x27;,&#x27; example Value: 500,1000 Altitude from 500 up to 1000 metres), (default:&#x27;null&#x27;)
     * @param {string} [durationfilter] Duration Range Filter (Separator &#x27;,&#x27; example Value: 1,3 Duration from 1 to 3 hours), (default:&#x27;null&#x27;)
     * @param {boolean} [highlight] Hightlight Filter (possible values: &#x27;false&#x27; &#x3D; only Activities with Highlight false, &#x27;true&#x27; &#x3D; only Activities with Highlight true), (default:&#x27;null&#x27;)
     * @param {string} [difficultyfilter] Difficulty Filter (possible values: &#x27;1&#x27; &#x3D; easy, &#x27;2&#x27; &#x3D; medium, &#x27;3&#x27; &#x3D; difficult), (default:&#x27;null&#x27;)
     * @param {string} [odhtagfilter] ODH Taglist Filter (refers to Array SmgTags) (String, Separator &#x27;,&#x27; more Tags possible, available Tags reference to &#x27;api/ODHTag?validforentity&#x3D;activity&#x27;), (default:&#x27;null&#x27;)
     * @param {boolean} [active] Active Activities Filter (possible Values: &#x27;true&#x27; only Active Activities, &#x27;false&#x27; only Disabled Activities
     * @param {boolean} [odhactive] ODH Active (Published) Activities Filter (Refers to field SmgActive) Activities Filter (possible Values: &#x27;true&#x27; only published Activities, &#x27;false&#x27; only not published Activities, (default:&#x27;null&#x27;)
     * @param {string} [seed] Seed &#x27;1 - 10&#x27; for Random Sorting, &#x27;0&#x27; generates a Random Seed, &#x27;null&#x27; disables Random Sorting, (default:null)
     * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)
     * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)
     * @param {string} [updatefrom] Date from Format (yyyy-MM-dd) (all GBActivityPoi with LastChange &amp;gt;&#x3D; datefrom are passed), (default: null)
     * @param {string} [searchfilter] String to search for, Title in all languages are searched, (default: null)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    activityGetActivityList: function () {
      var _activityGetActivityList = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(language, pagenumber, pagesize, activitytype, subtype, idlist, locfilter, areafilter, distancefilter, altitudefilter, durationfilter, highlight, difficultyfilter, odhtagfilter, active, odhactive, seed, latitude, longitude, radius, fields, updatefrom, searchfilter) {
        var options,
            localVarPath,
            localVarUrlObj,
            baseOptions,
            localVarRequestOptions,
            localVarHeaderParameter,
            localVarQueryParameter,
            localVarAccessTokenValue,
            query,
            key,
            _key2,
            headersFromBaseOptions,
            _args2 = arguments;

        return regeneratorRuntime.wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                options = _args2.length > 23 && _args2[23] !== undefined ? _args2[23] : {};
                localVarPath = "/api/Activity"; // use dummy base URL string because the URL constructor only accepts absolute URLs.

                localVarUrlObj = new URL(localVarPath, 'https://example.com');

                if (configuration) {
                  baseOptions = configuration.baseOptions;
                }

                localVarRequestOptions = _objectSpread2(_objectSpread2({
                  method: 'GET'
                }, baseOptions), options);
                localVarHeaderParameter = {};
                localVarQueryParameter = {}; // authentication oauth2 required
                // oauth required

                if (!(configuration && configuration.accessToken)) {
                  _context2.next = 19;
                  break;
                }

                if (!(typeof configuration.accessToken === 'function')) {
                  _context2.next = 14;
                  break;
                }

                _context2.next = 11;
                return configuration.accessToken("oauth2", [""]);

              case 11:
                _context2.t0 = _context2.sent;
                _context2.next = 17;
                break;

              case 14:
                _context2.next = 16;
                return configuration.accessToken;

              case 16:
                _context2.t0 = _context2.sent;

              case 17:
                localVarAccessTokenValue = _context2.t0;
                localVarHeaderParameter["Authorization"] = "Bearer " + localVarAccessTokenValue;

              case 19:
                if (language !== undefined) {
                  localVarQueryParameter['language'] = language;
                }

                if (pagenumber !== undefined) {
                  localVarQueryParameter['pagenumber'] = pagenumber;
                }

                if (pagesize !== undefined) {
                  localVarQueryParameter['pagesize'] = pagesize;
                }

                if (activitytype !== undefined) {
                  localVarQueryParameter['activitytype'] = activitytype;
                }

                if (subtype !== undefined) {
                  localVarQueryParameter['subtype'] = subtype;
                }

                if (idlist !== undefined) {
                  localVarQueryParameter['idlist'] = idlist;
                }

                if (locfilter !== undefined) {
                  localVarQueryParameter['locfilter'] = locfilter;
                }

                if (areafilter !== undefined) {
                  localVarQueryParameter['areafilter'] = areafilter;
                }

                if (distancefilter !== undefined) {
                  localVarQueryParameter['distancefilter'] = distancefilter;
                }

                if (altitudefilter !== undefined) {
                  localVarQueryParameter['altitudefilter'] = altitudefilter;
                }

                if (durationfilter !== undefined) {
                  localVarQueryParameter['durationfilter'] = durationfilter;
                }

                if (highlight !== undefined) {
                  localVarQueryParameter['highlight'] = highlight;
                }

                if (difficultyfilter !== undefined) {
                  localVarQueryParameter['difficultyfilter'] = difficultyfilter;
                }

                if (odhtagfilter !== undefined) {
                  localVarQueryParameter['odhtagfilter'] = odhtagfilter;
                }

                if (active !== undefined) {
                  localVarQueryParameter['active'] = active;
                }

                if (odhactive !== undefined) {
                  localVarQueryParameter['odhactive'] = odhactive;
                }

                if (seed !== undefined) {
                  localVarQueryParameter['seed'] = seed;
                }

                if (latitude !== undefined) {
                  localVarQueryParameter['latitude'] = latitude;
                }

                if (longitude !== undefined) {
                  localVarQueryParameter['longitude'] = longitude;
                }

                if (radius !== undefined) {
                  localVarQueryParameter['radius'] = radius;
                }

                if (fields !== undefined) {
                  localVarQueryParameter['fields'] = fields;
                }

                if (updatefrom !== undefined) {
                  localVarQueryParameter['updatefrom'] = updatefrom;
                }

                if (searchfilter !== undefined) {
                  localVarQueryParameter['searchfilter'] = searchfilter;
                }

                query = new URLSearchParams(localVarUrlObj.search);

                for (key in localVarQueryParameter) {
                  query.set(key, localVarQueryParameter[key]);
                }

                for (_key2 in options.query) {
                  query.set(_key2, options.query[_key2]);
                }

                localVarUrlObj.search = new URLSearchParams(query).toString();
                headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                localVarRequestOptions.headers = _objectSpread2(_objectSpread2(_objectSpread2({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                return _context2.abrupt("return", {
                  url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                  options: localVarRequestOptions
                });

              case 49:
              case "end":
                return _context2.stop();
            }
          }
        }, _callee2);
      }));

      function activityGetActivityList(_x21, _x22, _x23, _x24, _x25, _x26, _x27, _x28, _x29, _x30, _x31, _x32, _x33, _x34, _x35, _x36, _x37, _x38, _x39, _x40, _x41, _x42, _x43) {
        return _activityGetActivityList.apply(this, arguments);
      }

      return activityGetActivityList;
    }(),

    /**
     *
     * @summary GET Activity List Reduced
     * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)
     * @param {string} [activitytype] Type of the Activity (&#x27;null&#x27; &#x3D; Filter disabled, possible values: BITMASK: &#x27;Mountains &#x3D; 1&#x27;,&#x27;Cycling &#x3D; 2&#x27;,&#x27;Local tours &#x3D; 4&#x27;,&#x27;Horses &#x3D; 8&#x27;,&#x27;Hiking &#x3D; 16&#x27;,&#x27;Running and fitness &#x3D; 32&#x27;,&#x27;Cross-country ski-track &#x3D; 64&#x27;,&#x27;Tobbogan run &#x3D; 128&#x27;,&#x27;Slopes &#x3D; 256&#x27;,&#x27;Lifts &#x3D; 512&#x27;), (default:&#x27;1023&#x27; &#x3D;&#x3D; ALL), REFERENCE TO: GET /api/ActivityTypes
     * @param {string} [subtype] Subtype of the Activity (BITMASK Filter &#x3D; available SubTypes depends on the selected Activity Type), (default:&#x27;null&#x27;)
     * @param {string} [locfilter] Locfilter (Separator &#x27;,&#x27; possible values: reg + REGIONID &#x3D; (Filter by Region), reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMASSOCIATIONID &#x3D; (Filter by Tourismassociation), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)
     * @param {string} [areafilter] AreaFilter (Alternate Locfilter, can be combined with locfilter) (Separator &#x27;,&#x27; possible values: reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMASSOCIATIONID &#x3D; (Filter by Tourismassociation), skr + SKIREGIONID &#x3D; (Filter by Skiregion), ska + SKIAREAID &#x3D; (Filter by Skiarea), are + AREAID &#x3D; (Filter by LTS Area), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)
     * @param {string} [distancefilter] Distance Range Filter (Separator &#x27;,&#x27; example Value: 15,40 Distance from 15 up to 40 Km), (default:&#x27;null&#x27;)
     * @param {string} [altitudefilter] Altitude Range Filter (Separator &#x27;,&#x27; example Value: 500,1000 Altitude from 500 up to 1000 metres), (default:&#x27;null&#x27;)
     * @param {string} [durationfilter] Duration Range Filter (Separator &#x27;,&#x27; example Value: 1,3 Duration from 1 to 3 hours), (default:&#x27;null&#x27;)
     * @param {boolean} [highlight] Hightlight Filter (possible values: &#x27;false&#x27; &#x3D; only Activities with Highlight false, &#x27;true&#x27; &#x3D; only Activities with Highlight true), (default:&#x27;null&#x27;)
     * @param {string} [difficultyfilter] Difficulty Filter (possible values: &#x27;1&#x27; &#x3D; easy, &#x27;2&#x27; &#x3D; medium, &#x27;3&#x27; &#x3D; difficult), (default:&#x27;null&#x27;)
     * @param {string} [odhtagfilter] ODH Taglist Filter (refers to Array SmgTags) (String, Separator &#x27;,&#x27; more Tags possible, available Tags reference to &#x27;api/SmgTag/ByMainEntity/Activity&#x27;), (default:&#x27;null&#x27;)
     * @param {boolean} [active] Active Activities Filter (possible Values: &#x27;true&#x27; only Active Activities, &#x27;false&#x27; only Disabled Activities
     * @param {boolean} [odhactive] ODH Active (Published) Activities Filter (Refers to field SmgActive) Activities Filter (possible Values: &#x27;true&#x27; only published Activities, &#x27;false&#x27; only not published Activities, (default:&#x27;null&#x27;)
     * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)
     * @param {string} [fields] Select fields to display, by Default Title and Id are selected if fields filter is null More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    activityGetActivityReduced: function () {
      var _activityGetActivityReduced = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(language, activitytype, subtype, locfilter, areafilter, distancefilter, altitudefilter, durationfilter, highlight, difficultyfilter, odhtagfilter, active, odhactive, latitude, longitude, radius, fields) {
        var options,
            localVarPath,
            localVarUrlObj,
            baseOptions,
            localVarRequestOptions,
            localVarHeaderParameter,
            localVarQueryParameter,
            localVarAccessTokenValue,
            query,
            key,
            _key3,
            headersFromBaseOptions,
            _args3 = arguments;

        return regeneratorRuntime.wrap(function _callee3$(_context3) {
          while (1) {
            switch (_context3.prev = _context3.next) {
              case 0:
                options = _args3.length > 17 && _args3[17] !== undefined ? _args3[17] : {};
                localVarPath = "/api/ActivityReduced"; // use dummy base URL string because the URL constructor only accepts absolute URLs.

                localVarUrlObj = new URL(localVarPath, 'https://example.com');

                if (configuration) {
                  baseOptions = configuration.baseOptions;
                }

                localVarRequestOptions = _objectSpread2(_objectSpread2({
                  method: 'GET'
                }, baseOptions), options);
                localVarHeaderParameter = {};
                localVarQueryParameter = {}; // authentication oauth2 required
                // oauth required

                if (!(configuration && configuration.accessToken)) {
                  _context3.next = 19;
                  break;
                }

                if (!(typeof configuration.accessToken === 'function')) {
                  _context3.next = 14;
                  break;
                }

                _context3.next = 11;
                return configuration.accessToken("oauth2", [""]);

              case 11:
                _context3.t0 = _context3.sent;
                _context3.next = 17;
                break;

              case 14:
                _context3.next = 16;
                return configuration.accessToken;

              case 16:
                _context3.t0 = _context3.sent;

              case 17:
                localVarAccessTokenValue = _context3.t0;
                localVarHeaderParameter["Authorization"] = "Bearer " + localVarAccessTokenValue;

              case 19:
                if (language !== undefined) {
                  localVarQueryParameter['language'] = language;
                }

                if (activitytype !== undefined) {
                  localVarQueryParameter['activitytype'] = activitytype;
                }

                if (subtype !== undefined) {
                  localVarQueryParameter['subtype'] = subtype;
                }

                if (locfilter !== undefined) {
                  localVarQueryParameter['locfilter'] = locfilter;
                }

                if (areafilter !== undefined) {
                  localVarQueryParameter['areafilter'] = areafilter;
                }

                if (distancefilter !== undefined) {
                  localVarQueryParameter['distancefilter'] = distancefilter;
                }

                if (altitudefilter !== undefined) {
                  localVarQueryParameter['altitudefilter'] = altitudefilter;
                }

                if (durationfilter !== undefined) {
                  localVarQueryParameter['durationfilter'] = durationfilter;
                }

                if (highlight !== undefined) {
                  localVarQueryParameter['highlight'] = highlight;
                }

                if (difficultyfilter !== undefined) {
                  localVarQueryParameter['difficultyfilter'] = difficultyfilter;
                }

                if (odhtagfilter !== undefined) {
                  localVarQueryParameter['odhtagfilter'] = odhtagfilter;
                }

                if (active !== undefined) {
                  localVarQueryParameter['active'] = active;
                }

                if (odhactive !== undefined) {
                  localVarQueryParameter['odhactive'] = odhactive;
                }

                if (latitude !== undefined) {
                  localVarQueryParameter['latitude'] = latitude;
                }

                if (longitude !== undefined) {
                  localVarQueryParameter['longitude'] = longitude;
                }

                if (radius !== undefined) {
                  localVarQueryParameter['radius'] = radius;
                }

                if (fields !== undefined) {
                  localVarQueryParameter['fields'] = fields;
                }

                query = new URLSearchParams(localVarUrlObj.search);

                for (key in localVarQueryParameter) {
                  query.set(key, localVarQueryParameter[key]);
                }

                for (_key3 in options.query) {
                  query.set(_key3, options.query[_key3]);
                }

                localVarUrlObj.search = new URLSearchParams(query).toString();
                headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                localVarRequestOptions.headers = _objectSpread2(_objectSpread2(_objectSpread2({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                return _context3.abrupt("return", {
                  url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                  options: localVarRequestOptions
                });

              case 43:
              case "end":
                return _context3.stop();
            }
          }
        }, _callee3);
      }));

      function activityGetActivityReduced(_x44, _x45, _x46, _x47, _x48, _x49, _x50, _x51, _x52, _x53, _x54, _x55, _x56, _x57, _x58, _x59, _x60) {
        return _activityGetActivityReduced.apply(this, arguments);
      }

      return activityGetActivityReduced;
    }(),

    /**
     *
     * @summary GET Activity Single
     * @param {string} id ID of the Activity
     * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)
     * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    activityGetActivitySingle: function () {
      var _activityGetActivitySingle = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(id, fields, language) {
        var options,
            localVarPath,
            localVarUrlObj,
            baseOptions,
            localVarRequestOptions,
            localVarHeaderParameter,
            localVarQueryParameter,
            localVarAccessTokenValue,
            query,
            key,
            _key4,
            headersFromBaseOptions,
            _args4 = arguments;

        return regeneratorRuntime.wrap(function _callee4$(_context4) {
          while (1) {
            switch (_context4.prev = _context4.next) {
              case 0:
                options = _args4.length > 3 && _args4[3] !== undefined ? _args4[3] : {};

                if (!(id === null || id === undefined)) {
                  _context4.next = 3;
                  break;
                }

                throw new base_RequiredError('id', 'Required parameter id was null or undefined when calling activityGetActivitySingle.');

              case 3:
                localVarPath = "/api/Activity/{id}".replace("{".concat("id", "}"), encodeURIComponent(String(id))); // use dummy base URL string because the URL constructor only accepts absolute URLs.

                localVarUrlObj = new URL(localVarPath, 'https://example.com');

                if (configuration) {
                  baseOptions = configuration.baseOptions;
                }

                localVarRequestOptions = _objectSpread2(_objectSpread2({
                  method: 'GET'
                }, baseOptions), options);
                localVarHeaderParameter = {};
                localVarQueryParameter = {}; // authentication oauth2 required
                // oauth required

                if (!(configuration && configuration.accessToken)) {
                  _context4.next = 21;
                  break;
                }

                if (!(typeof configuration.accessToken === 'function')) {
                  _context4.next = 16;
                  break;
                }

                _context4.next = 13;
                return configuration.accessToken("oauth2", [""]);

              case 13:
                _context4.t0 = _context4.sent;
                _context4.next = 19;
                break;

              case 16:
                _context4.next = 18;
                return configuration.accessToken;

              case 18:
                _context4.t0 = _context4.sent;

              case 19:
                localVarAccessTokenValue = _context4.t0;
                localVarHeaderParameter["Authorization"] = "Bearer " + localVarAccessTokenValue;

              case 21:
                if (fields !== undefined) {
                  localVarQueryParameter['fields'] = fields;
                }

                if (language !== undefined) {
                  localVarQueryParameter['language'] = language;
                }

                query = new URLSearchParams(localVarUrlObj.search);

                for (key in localVarQueryParameter) {
                  query.set(key, localVarQueryParameter[key]);
                }

                for (_key4 in options.query) {
                  query.set(_key4, options.query[_key4]);
                }

                localVarUrlObj.search = new URLSearchParams(query).toString();
                headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                localVarRequestOptions.headers = _objectSpread2(_objectSpread2(_objectSpread2({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                return _context4.abrupt("return", {
                  url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                  options: localVarRequestOptions
                });

              case 30:
              case "end":
                return _context4.stop();
            }
          }
        }, _callee4);
      }));

      function activityGetActivitySingle(_x61, _x62, _x63) {
        return _activityGetActivitySingle.apply(this, arguments);
      }

      return activityGetActivitySingle;
    }(),

    /**
     *
     * @summary GET Activity Single Localized
     * @param {string} id ID of the Activity
     * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    activityGetActivitySingleLocalized: function () {
      var _activityGetActivitySingleLocalized = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(id, language) {
        var options,
            localVarPath,
            localVarUrlObj,
            baseOptions,
            localVarRequestOptions,
            localVarHeaderParameter,
            localVarQueryParameter,
            localVarAccessTokenValue,
            query,
            key,
            _key5,
            headersFromBaseOptions,
            _args5 = arguments;

        return regeneratorRuntime.wrap(function _callee5$(_context5) {
          while (1) {
            switch (_context5.prev = _context5.next) {
              case 0:
                options = _args5.length > 2 && _args5[2] !== undefined ? _args5[2] : {};

                if (!(id === null || id === undefined)) {
                  _context5.next = 3;
                  break;
                }

                throw new base_RequiredError('id', 'Required parameter id was null or undefined when calling activityGetActivitySingleLocalized.');

              case 3:
                localVarPath = "/api/ActivityLocalized/{id}".replace("{".concat("id", "}"), encodeURIComponent(String(id))); // use dummy base URL string because the URL constructor only accepts absolute URLs.

                localVarUrlObj = new URL(localVarPath, 'https://example.com');

                if (configuration) {
                  baseOptions = configuration.baseOptions;
                }

                localVarRequestOptions = _objectSpread2(_objectSpread2({
                  method: 'GET'
                }, baseOptions), options);
                localVarHeaderParameter = {};
                localVarQueryParameter = {}; // authentication oauth2 required
                // oauth required

                if (!(configuration && configuration.accessToken)) {
                  _context5.next = 21;
                  break;
                }

                if (!(typeof configuration.accessToken === 'function')) {
                  _context5.next = 16;
                  break;
                }

                _context5.next = 13;
                return configuration.accessToken("oauth2", [""]);

              case 13:
                _context5.t0 = _context5.sent;
                _context5.next = 19;
                break;

              case 16:
                _context5.next = 18;
                return configuration.accessToken;

              case 18:
                _context5.t0 = _context5.sent;

              case 19:
                localVarAccessTokenValue = _context5.t0;
                localVarHeaderParameter["Authorization"] = "Bearer " + localVarAccessTokenValue;

              case 21:
                if (language !== undefined) {
                  localVarQueryParameter['language'] = language;
                }

                query = new URLSearchParams(localVarUrlObj.search);

                for (key in localVarQueryParameter) {
                  query.set(key, localVarQueryParameter[key]);
                }

                for (_key5 in options.query) {
                  query.set(_key5, options.query[_key5]);
                }

                localVarUrlObj.search = new URLSearchParams(query).toString();
                headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                localVarRequestOptions.headers = _objectSpread2(_objectSpread2(_objectSpread2({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                return _context5.abrupt("return", {
                  url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                  options: localVarRequestOptions
                });

              case 29:
              case "end":
                return _context5.stop();
            }
          }
        }, _callee5);
      }));

      function activityGetActivitySingleLocalized(_x64, _x65) {
        return _activityGetActivitySingleLocalized.apply(this, arguments);
      }

      return activityGetActivitySingleLocalized;
    }(),

    /**
     *
     * @summary GET Activity Changed List by Date
     * @param {number} [pagenumber] Pagenumber, (default:1)
     * @param {number} [pagesize] Elements per Page, (default:10)
     * @param {string} [seed] Seed &#x27;1 - 10&#x27; for Random Sorting, &#x27;0&#x27; generates a Random Seed, &#x27;null&#x27; disables Random Sorting, (default:null)
     * @param {string} [updatefrom] Date from Format (yyyy-MM-dd) (all GBActivityPoi with LastChange &amp;gt;&#x3D; datefrom are passed), (default: DateTime.Now - 1 Day)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    activityGetAllActivityChanged: function () {
      var _activityGetAllActivityChanged = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6(pagenumber, pagesize, seed, updatefrom) {
        var options,
            localVarPath,
            localVarUrlObj,
            baseOptions,
            localVarRequestOptions,
            localVarHeaderParameter,
            localVarQueryParameter,
            localVarAccessTokenValue,
            query,
            key,
            _key6,
            headersFromBaseOptions,
            _args6 = arguments;

        return regeneratorRuntime.wrap(function _callee6$(_context6) {
          while (1) {
            switch (_context6.prev = _context6.next) {
              case 0:
                options = _args6.length > 4 && _args6[4] !== undefined ? _args6[4] : {};
                localVarPath = "/api/ActivityChanged"; // use dummy base URL string because the URL constructor only accepts absolute URLs.

                localVarUrlObj = new URL(localVarPath, 'https://example.com');

                if (configuration) {
                  baseOptions = configuration.baseOptions;
                }

                localVarRequestOptions = _objectSpread2(_objectSpread2({
                  method: 'GET'
                }, baseOptions), options);
                localVarHeaderParameter = {};
                localVarQueryParameter = {}; // authentication oauth2 required
                // oauth required

                if (!(configuration && configuration.accessToken)) {
                  _context6.next = 19;
                  break;
                }

                if (!(typeof configuration.accessToken === 'function')) {
                  _context6.next = 14;
                  break;
                }

                _context6.next = 11;
                return configuration.accessToken("oauth2", [""]);

              case 11:
                _context6.t0 = _context6.sent;
                _context6.next = 17;
                break;

              case 14:
                _context6.next = 16;
                return configuration.accessToken;

              case 16:
                _context6.t0 = _context6.sent;

              case 17:
                localVarAccessTokenValue = _context6.t0;
                localVarHeaderParameter["Authorization"] = "Bearer " + localVarAccessTokenValue;

              case 19:
                if (pagenumber !== undefined) {
                  localVarQueryParameter['pagenumber'] = pagenumber;
                }

                if (pagesize !== undefined) {
                  localVarQueryParameter['pagesize'] = pagesize;
                }

                if (seed !== undefined) {
                  localVarQueryParameter['seed'] = seed;
                }

                if (updatefrom !== undefined) {
                  localVarQueryParameter['updatefrom'] = updatefrom;
                }

                query = new URLSearchParams(localVarUrlObj.search);

                for (key in localVarQueryParameter) {
                  query.set(key, localVarQueryParameter[key]);
                }

                for (_key6 in options.query) {
                  query.set(_key6, options.query[_key6]);
                }

                localVarUrlObj.search = new URLSearchParams(query).toString();
                headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                localVarRequestOptions.headers = _objectSpread2(_objectSpread2(_objectSpread2({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                return _context6.abrupt("return", {
                  url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                  options: localVarRequestOptions
                });

              case 30:
              case "end":
                return _context6.stop();
            }
          }
        }, _callee6);
      }));

      function activityGetAllActivityChanged(_x66, _x67, _x68, _x69) {
        return _activityGetAllActivityChanged.apply(this, arguments);
      }

      return activityGetAllActivityChanged;
    }(),

    /**
     *
     * @summary GET Activity Types List
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    activityGetAllActivityTypesList: function () {
      var _activityGetAllActivityTypesList = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee7() {
        var options,
            localVarPath,
            localVarUrlObj,
            baseOptions,
            localVarRequestOptions,
            localVarHeaderParameter,
            localVarQueryParameter,
            localVarAccessTokenValue,
            query,
            key,
            _key7,
            headersFromBaseOptions,
            _args7 = arguments;

        return regeneratorRuntime.wrap(function _callee7$(_context7) {
          while (1) {
            switch (_context7.prev = _context7.next) {
              case 0:
                options = _args7.length > 0 && _args7[0] !== undefined ? _args7[0] : {};
                localVarPath = "/api/ActivityTypes"; // use dummy base URL string because the URL constructor only accepts absolute URLs.

                localVarUrlObj = new URL(localVarPath, 'https://example.com');

                if (configuration) {
                  baseOptions = configuration.baseOptions;
                }

                localVarRequestOptions = _objectSpread2(_objectSpread2({
                  method: 'GET'
                }, baseOptions), options);
                localVarHeaderParameter = {};
                localVarQueryParameter = {}; // authentication oauth2 required
                // oauth required

                if (!(configuration && configuration.accessToken)) {
                  _context7.next = 19;
                  break;
                }

                if (!(typeof configuration.accessToken === 'function')) {
                  _context7.next = 14;
                  break;
                }

                _context7.next = 11;
                return configuration.accessToken("oauth2", [""]);

              case 11:
                _context7.t0 = _context7.sent;
                _context7.next = 17;
                break;

              case 14:
                _context7.next = 16;
                return configuration.accessToken;

              case 16:
                _context7.t0 = _context7.sent;

              case 17:
                localVarAccessTokenValue = _context7.t0;
                localVarHeaderParameter["Authorization"] = "Bearer " + localVarAccessTokenValue;

              case 19:
                query = new URLSearchParams(localVarUrlObj.search);

                for (key in localVarQueryParameter) {
                  query.set(key, localVarQueryParameter[key]);
                }

                for (_key7 in options.query) {
                  query.set(_key7, options.query[_key7]);
                }

                localVarUrlObj.search = new URLSearchParams(query).toString();
                headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                localVarRequestOptions.headers = _objectSpread2(_objectSpread2(_objectSpread2({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                return _context7.abrupt("return", {
                  url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                  options: localVarRequestOptions
                });

              case 26:
              case "end":
                return _context7.stop();
            }
          }
        }, _callee7);
      }));

      function activityGetAllActivityTypesList() {
        return _activityGetAllActivityTypesList.apply(this, arguments);
      }

      return activityGetAllActivityTypesList;
    }(),

    /**
     *
     * @summary GET Activity Type Single
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    activityGetAllActivityTypesSingle: function () {
      var _activityGetAllActivityTypesSingle = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee8(id) {
        var options,
            localVarPath,
            localVarUrlObj,
            baseOptions,
            localVarRequestOptions,
            localVarHeaderParameter,
            localVarQueryParameter,
            localVarAccessTokenValue,
            query,
            key,
            _key8,
            headersFromBaseOptions,
            _args8 = arguments;

        return regeneratorRuntime.wrap(function _callee8$(_context8) {
          while (1) {
            switch (_context8.prev = _context8.next) {
              case 0:
                options = _args8.length > 1 && _args8[1] !== undefined ? _args8[1] : {};

                if (!(id === null || id === undefined)) {
                  _context8.next = 3;
                  break;
                }

                throw new base_RequiredError('id', 'Required parameter id was null or undefined when calling activityGetAllActivityTypesSingle.');

              case 3:
                localVarPath = "/api/ActivityTypes/{id}".replace("{".concat("id", "}"), encodeURIComponent(String(id))); // use dummy base URL string because the URL constructor only accepts absolute URLs.

                localVarUrlObj = new URL(localVarPath, 'https://example.com');

                if (configuration) {
                  baseOptions = configuration.baseOptions;
                }

                localVarRequestOptions = _objectSpread2(_objectSpread2({
                  method: 'GET'
                }, baseOptions), options);
                localVarHeaderParameter = {};
                localVarQueryParameter = {}; // authentication oauth2 required
                // oauth required

                if (!(configuration && configuration.accessToken)) {
                  _context8.next = 21;
                  break;
                }

                if (!(typeof configuration.accessToken === 'function')) {
                  _context8.next = 16;
                  break;
                }

                _context8.next = 13;
                return configuration.accessToken("oauth2", [""]);

              case 13:
                _context8.t0 = _context8.sent;
                _context8.next = 19;
                break;

              case 16:
                _context8.next = 18;
                return configuration.accessToken;

              case 18:
                _context8.t0 = _context8.sent;

              case 19:
                localVarAccessTokenValue = _context8.t0;
                localVarHeaderParameter["Authorization"] = "Bearer " + localVarAccessTokenValue;

              case 21:
                query = new URLSearchParams(localVarUrlObj.search);

                for (key in localVarQueryParameter) {
                  query.set(key, localVarQueryParameter[key]);
                }

                for (_key8 in options.query) {
                  query.set(_key8, options.query[_key8]);
                }

                localVarUrlObj.search = new URLSearchParams(query).toString();
                headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                localVarRequestOptions.headers = _objectSpread2(_objectSpread2(_objectSpread2({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                return _context8.abrupt("return", {
                  url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                  options: localVarRequestOptions
                });

              case 28:
              case "end":
                return _context8.stop();
            }
          }
        }, _callee8);
      }));

      function activityGetAllActivityTypesSingle(_x70) {
        return _activityGetAllActivityTypesSingle.apply(this, arguments);
      }

      return activityGetAllActivityTypesSingle;
    }()
  };
};
/**
 * ActivityApi - functional programming interface
 * @export
 */

var activity_api_ActivityApiFp = function ActivityApiFp(configuration) {
  return {
    /**
     *
     * @summary GET Activity List Localized
     * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)
     * @param {number} [pagenumber] Pagenumber, (default:1)
     * @param {number} [pagesize] Elements per Page, (default:10)
     * @param {string} [activitytype] Type of the Activity (&#x27;null&#x27; &#x3D; Filter disabled, possible values: BITMASK: &#x27;Mountains &#x3D; 1&#x27;,&#x27;Cycling &#x3D; 2&#x27;,&#x27;Local tours &#x3D; 4&#x27;,&#x27;Horses &#x3D; 8&#x27;,&#x27;Hiking &#x3D; 16&#x27;,&#x27;Running and fitness &#x3D; 32&#x27;,&#x27;Cross-country ski-track &#x3D; 64&#x27;,&#x27;Tobbogan run &#x3D; 128&#x27;,&#x27;Slopes &#x3D; 256&#x27;,&#x27;Lifts &#x3D; 512&#x27;), (default:&#x27;1023&#x27; &#x3D;&#x3D; ALL), REFERENCE TO: GET /api/ActivityTypes
     * @param {string} [subtype] Subtype of the Activity (BITMASK Filter &#x3D; available SubTypes depends on the selected Activity Type), (default:&#x27;null&#x27;)
     * @param {string} [idlist] IDFilter (Separator &#x27;,&#x27; List of Activity IDs), (default:&#x27;null&#x27;)
     * @param {string} [locfilter] Locfilter (Separator &#x27;,&#x27; possible values: reg + REGIONID &#x3D; (Filter by Region), reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMASSOCIATIONID &#x3D; (Filter by Tourismassociation), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)
     * @param {string} [areafilter] AreaFilter (Alternate Locfilter, can be combined with locfilter) (Separator &#x27;,&#x27; possible values: reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMASSOCIATIONID &#x3D; (Filter by Tourismassociation), skr + SKIREGIONID &#x3D; (Filter by Skiregion), ska + SKIAREAID &#x3D; (Filter by Skiarea), are + AREAID &#x3D; (Filter by LTS Area), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)
     * @param {string} [distancefilter] Distance Range Filter (Separator &#x27;,&#x27; example Value: 15,40 Distance from 15 up to 40 Km), (default:&#x27;null&#x27;)
     * @param {string} [altitudefilter] Altitude Range Filter (Separator &#x27;,&#x27; example Value: 500,1000 Altitude from 500 up to 1000 metres), (default:&#x27;null&#x27;)
     * @param {string} [durationfilter] Duration Range Filter (Separator &#x27;,&#x27; example Value: 1,3 Duration from 1 to 3 hours), (default:&#x27;null&#x27;)
     * @param {boolean} [highlight] Hightlight Filter (possible values: &#x27;false&#x27; &#x3D; only Activities with Highlight false, &#x27;true&#x27; &#x3D; only Activities with Highlight true), (default:&#x27;null&#x27;)
     * @param {string} [difficultyfilter] Difficulty Filter (possible values: &#x27;1&#x27; &#x3D; easy, &#x27;2&#x27; &#x3D; medium, &#x27;3&#x27; &#x3D; difficult), (default:&#x27;null&#x27;)
     * @param {string} [odhtagfilter] ODH Taglist Filter (refers to Array SmgTags) (String, Separator &#x27;,&#x27; more Tags possible, available Tags reference to &#x27;api/SmgTag/ByMainEntity/Activity&#x27;), (default:&#x27;null&#x27;)
     * @param {boolean} [active] Active Activities Filter (possible Values: &#x27;true&#x27; only Active Activities, &#x27;false&#x27; only Disabled Activities
     * @param {boolean} [odhactive] ODH Active (Published) Activities Filter (Refers to field SmgActive) Activities Filter (possible Values: &#x27;true&#x27; only published Activities, &#x27;false&#x27; only not published Activities, (default:&#x27;null&#x27;)
     * @param {string} [seed] Seed &#x27;1 - 10&#x27; for Random Sorting, &#x27;0&#x27; generates a Random Seed, &#x27;null&#x27; disables Random Sorting, (default:null)
     * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    activityGetActivityFilteredLocalized: function activityGetActivityFilteredLocalized(language, pagenumber, pagesize, activitytype, subtype, idlist, locfilter, areafilter, distancefilter, altitudefilter, durationfilter, highlight, difficultyfilter, odhtagfilter, active, odhactive, seed, latitude, longitude, radius, options) {
      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee9() {
        var localVarAxiosArgs;
        return regeneratorRuntime.wrap(function _callee9$(_context9) {
          while (1) {
            switch (_context9.prev = _context9.next) {
              case 0:
                _context9.next = 2;
                return activity_api_ActivityApiAxiosParamCreator(configuration).activityGetActivityFilteredLocalized(language, pagenumber, pagesize, activitytype, subtype, idlist, locfilter, areafilter, distancefilter, altitudefilter, durationfilter, highlight, difficultyfilter, odhtagfilter, active, odhactive, seed, latitude, longitude, radius, options);

              case 2:
                localVarAxiosArgs = _context9.sent;
                return _context9.abrupt("return", function () {
                  var axios = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : axios_default.a;
                  var basePath = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : BASE_PATH;

                  var axiosRequestArgs = _objectSpread2(_objectSpread2({}, localVarAxiosArgs.options), {}, {
                    url: basePath + localVarAxiosArgs.url
                  });

                  return axios.request(axiosRequestArgs);
                });

              case 4:
              case "end":
                return _context9.stop();
            }
          }
        }, _callee9);
      }))();
    },

    /**
     *
     * @summary GET Activity List
     * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)
     * @param {number} [pagenumber] Pagenumber, (default:1)
     * @param {number} [pagesize] Elements per Page, (default:10)
     * @param {string} [activitytype] Type of the Activity (&#x27;null&#x27; &#x3D; Filter disabled, possible values: BITMASK: &#x27;Mountains &#x3D; 1&#x27;,&#x27;Cycling &#x3D; 2&#x27;,&#x27;Local tours &#x3D; 4&#x27;,&#x27;Horses &#x3D; 8&#x27;,&#x27;Hiking &#x3D; 16&#x27;,&#x27;Running and fitness &#x3D; 32&#x27;,&#x27;Cross-country ski-track &#x3D; 64&#x27;,&#x27;Tobbogan run &#x3D; 128&#x27;,&#x27;Slopes &#x3D; 256&#x27;,&#x27;Lifts &#x3D; 512&#x27;), (default:&#x27;1023&#x27; &#x3D;&#x3D; ALL), REFERENCE TO: GET /api/ActivityTypes
     * @param {string} [subtype] Subtype of the Activity (BITMASK Filter &#x3D; available SubTypes depends on the selected Activity Type), (default:&#x27;null&#x27;)
     * @param {string} [idlist] IDFilter (Separator &#x27;,&#x27; List of Activity IDs), (default:&#x27;null&#x27;)
     * @param {string} [locfilter] Locfilter (Separator &#x27;,&#x27; possible values: reg + REGIONID &#x3D; (Filter by Region), reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMASSOCIATIONID &#x3D; (Filter by Tourismassociation), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)
     * @param {string} [areafilter] AreaFilter (Alternate Locfilter, can be combined with locfilter) (Separator &#x27;,&#x27; possible values: reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMASSOCIATIONID &#x3D; (Filter by Tourismassociation), skr + SKIREGIONID &#x3D; (Filter by Skiregion), ska + SKIAREAID &#x3D; (Filter by Skiarea), are + AREAID &#x3D; (Filter by LTS Area), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)
     * @param {string} [distancefilter] Distance Range Filter (Separator &#x27;,&#x27; example Value: 15,40 Distance from 15 up to 40 Km), (default:&#x27;null&#x27;)
     * @param {string} [altitudefilter] Altitude Range Filter (Separator &#x27;,&#x27; example Value: 500,1000 Altitude from 500 up to 1000 metres), (default:&#x27;null&#x27;)
     * @param {string} [durationfilter] Duration Range Filter (Separator &#x27;,&#x27; example Value: 1,3 Duration from 1 to 3 hours), (default:&#x27;null&#x27;)
     * @param {boolean} [highlight] Hightlight Filter (possible values: &#x27;false&#x27; &#x3D; only Activities with Highlight false, &#x27;true&#x27; &#x3D; only Activities with Highlight true), (default:&#x27;null&#x27;)
     * @param {string} [difficultyfilter] Difficulty Filter (possible values: &#x27;1&#x27; &#x3D; easy, &#x27;2&#x27; &#x3D; medium, &#x27;3&#x27; &#x3D; difficult), (default:&#x27;null&#x27;)
     * @param {string} [odhtagfilter] ODH Taglist Filter (refers to Array SmgTags) (String, Separator &#x27;,&#x27; more Tags possible, available Tags reference to &#x27;api/ODHTag?validforentity&#x3D;activity&#x27;), (default:&#x27;null&#x27;)
     * @param {boolean} [active] Active Activities Filter (possible Values: &#x27;true&#x27; only Active Activities, &#x27;false&#x27; only Disabled Activities
     * @param {boolean} [odhactive] ODH Active (Published) Activities Filter (Refers to field SmgActive) Activities Filter (possible Values: &#x27;true&#x27; only published Activities, &#x27;false&#x27; only not published Activities, (default:&#x27;null&#x27;)
     * @param {string} [seed] Seed &#x27;1 - 10&#x27; for Random Sorting, &#x27;0&#x27; generates a Random Seed, &#x27;null&#x27; disables Random Sorting, (default:null)
     * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)
     * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)
     * @param {string} [updatefrom] Date from Format (yyyy-MM-dd) (all GBActivityPoi with LastChange &amp;gt;&#x3D; datefrom are passed), (default: null)
     * @param {string} [searchfilter] String to search for, Title in all languages are searched, (default: null)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    activityGetActivityList: function activityGetActivityList(language, pagenumber, pagesize, activitytype, subtype, idlist, locfilter, areafilter, distancefilter, altitudefilter, durationfilter, highlight, difficultyfilter, odhtagfilter, active, odhactive, seed, latitude, longitude, radius, fields, updatefrom, searchfilter, options) {
      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee10() {
        var localVarAxiosArgs;
        return regeneratorRuntime.wrap(function _callee10$(_context10) {
          while (1) {
            switch (_context10.prev = _context10.next) {
              case 0:
                _context10.next = 2;
                return activity_api_ActivityApiAxiosParamCreator(configuration).activityGetActivityList(language, pagenumber, pagesize, activitytype, subtype, idlist, locfilter, areafilter, distancefilter, altitudefilter, durationfilter, highlight, difficultyfilter, odhtagfilter, active, odhactive, seed, latitude, longitude, radius, fields, updatefrom, searchfilter, options);

              case 2:
                localVarAxiosArgs = _context10.sent;
                return _context10.abrupt("return", function () {
                  var axios = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : axios_default.a;
                  var basePath = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : BASE_PATH;

                  var axiosRequestArgs = _objectSpread2(_objectSpread2({}, localVarAxiosArgs.options), {}, {
                    url: basePath + localVarAxiosArgs.url
                  });

                  return axios.request(axiosRequestArgs);
                });

              case 4:
              case "end":
                return _context10.stop();
            }
          }
        }, _callee10);
      }))();
    },

    /**
     *
     * @summary GET Activity List Reduced
     * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)
     * @param {string} [activitytype] Type of the Activity (&#x27;null&#x27; &#x3D; Filter disabled, possible values: BITMASK: &#x27;Mountains &#x3D; 1&#x27;,&#x27;Cycling &#x3D; 2&#x27;,&#x27;Local tours &#x3D; 4&#x27;,&#x27;Horses &#x3D; 8&#x27;,&#x27;Hiking &#x3D; 16&#x27;,&#x27;Running and fitness &#x3D; 32&#x27;,&#x27;Cross-country ski-track &#x3D; 64&#x27;,&#x27;Tobbogan run &#x3D; 128&#x27;,&#x27;Slopes &#x3D; 256&#x27;,&#x27;Lifts &#x3D; 512&#x27;), (default:&#x27;1023&#x27; &#x3D;&#x3D; ALL), REFERENCE TO: GET /api/ActivityTypes
     * @param {string} [subtype] Subtype of the Activity (BITMASK Filter &#x3D; available SubTypes depends on the selected Activity Type), (default:&#x27;null&#x27;)
     * @param {string} [locfilter] Locfilter (Separator &#x27;,&#x27; possible values: reg + REGIONID &#x3D; (Filter by Region), reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMASSOCIATIONID &#x3D; (Filter by Tourismassociation), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)
     * @param {string} [areafilter] AreaFilter (Alternate Locfilter, can be combined with locfilter) (Separator &#x27;,&#x27; possible values: reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMASSOCIATIONID &#x3D; (Filter by Tourismassociation), skr + SKIREGIONID &#x3D; (Filter by Skiregion), ska + SKIAREAID &#x3D; (Filter by Skiarea), are + AREAID &#x3D; (Filter by LTS Area), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)
     * @param {string} [distancefilter] Distance Range Filter (Separator &#x27;,&#x27; example Value: 15,40 Distance from 15 up to 40 Km), (default:&#x27;null&#x27;)
     * @param {string} [altitudefilter] Altitude Range Filter (Separator &#x27;,&#x27; example Value: 500,1000 Altitude from 500 up to 1000 metres), (default:&#x27;null&#x27;)
     * @param {string} [durationfilter] Duration Range Filter (Separator &#x27;,&#x27; example Value: 1,3 Duration from 1 to 3 hours), (default:&#x27;null&#x27;)
     * @param {boolean} [highlight] Hightlight Filter (possible values: &#x27;false&#x27; &#x3D; only Activities with Highlight false, &#x27;true&#x27; &#x3D; only Activities with Highlight true), (default:&#x27;null&#x27;)
     * @param {string} [difficultyfilter] Difficulty Filter (possible values: &#x27;1&#x27; &#x3D; easy, &#x27;2&#x27; &#x3D; medium, &#x27;3&#x27; &#x3D; difficult), (default:&#x27;null&#x27;)
     * @param {string} [odhtagfilter] ODH Taglist Filter (refers to Array SmgTags) (String, Separator &#x27;,&#x27; more Tags possible, available Tags reference to &#x27;api/SmgTag/ByMainEntity/Activity&#x27;), (default:&#x27;null&#x27;)
     * @param {boolean} [active] Active Activities Filter (possible Values: &#x27;true&#x27; only Active Activities, &#x27;false&#x27; only Disabled Activities
     * @param {boolean} [odhactive] ODH Active (Published) Activities Filter (Refers to field SmgActive) Activities Filter (possible Values: &#x27;true&#x27; only published Activities, &#x27;false&#x27; only not published Activities, (default:&#x27;null&#x27;)
     * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)
     * @param {string} [fields] Select fields to display, by Default Title and Id are selected if fields filter is null More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    activityGetActivityReduced: function activityGetActivityReduced(language, activitytype, subtype, locfilter, areafilter, distancefilter, altitudefilter, durationfilter, highlight, difficultyfilter, odhtagfilter, active, odhactive, latitude, longitude, radius, fields, options) {
      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee11() {
        var localVarAxiosArgs;
        return regeneratorRuntime.wrap(function _callee11$(_context11) {
          while (1) {
            switch (_context11.prev = _context11.next) {
              case 0:
                _context11.next = 2;
                return activity_api_ActivityApiAxiosParamCreator(configuration).activityGetActivityReduced(language, activitytype, subtype, locfilter, areafilter, distancefilter, altitudefilter, durationfilter, highlight, difficultyfilter, odhtagfilter, active, odhactive, latitude, longitude, radius, fields, options);

              case 2:
                localVarAxiosArgs = _context11.sent;
                return _context11.abrupt("return", function () {
                  var axios = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : axios_default.a;
                  var basePath = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : BASE_PATH;

                  var axiosRequestArgs = _objectSpread2(_objectSpread2({}, localVarAxiosArgs.options), {}, {
                    url: basePath + localVarAxiosArgs.url
                  });

                  return axios.request(axiosRequestArgs);
                });

              case 4:
              case "end":
                return _context11.stop();
            }
          }
        }, _callee11);
      }))();
    },

    /**
     *
     * @summary GET Activity Single
     * @param {string} id ID of the Activity
     * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)
     * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    activityGetActivitySingle: function activityGetActivitySingle(id, fields, language, options) {
      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee12() {
        var localVarAxiosArgs;
        return regeneratorRuntime.wrap(function _callee12$(_context12) {
          while (1) {
            switch (_context12.prev = _context12.next) {
              case 0:
                _context12.next = 2;
                return activity_api_ActivityApiAxiosParamCreator(configuration).activityGetActivitySingle(id, fields, language, options);

              case 2:
                localVarAxiosArgs = _context12.sent;
                return _context12.abrupt("return", function () {
                  var axios = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : axios_default.a;
                  var basePath = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : BASE_PATH;

                  var axiosRequestArgs = _objectSpread2(_objectSpread2({}, localVarAxiosArgs.options), {}, {
                    url: basePath + localVarAxiosArgs.url
                  });

                  return axios.request(axiosRequestArgs);
                });

              case 4:
              case "end":
                return _context12.stop();
            }
          }
        }, _callee12);
      }))();
    },

    /**
     *
     * @summary GET Activity Single Localized
     * @param {string} id ID of the Activity
     * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    activityGetActivitySingleLocalized: function activityGetActivitySingleLocalized(id, language, options) {
      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee13() {
        var localVarAxiosArgs;
        return regeneratorRuntime.wrap(function _callee13$(_context13) {
          while (1) {
            switch (_context13.prev = _context13.next) {
              case 0:
                _context13.next = 2;
                return activity_api_ActivityApiAxiosParamCreator(configuration).activityGetActivitySingleLocalized(id, language, options);

              case 2:
                localVarAxiosArgs = _context13.sent;
                return _context13.abrupt("return", function () {
                  var axios = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : axios_default.a;
                  var basePath = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : BASE_PATH;

                  var axiosRequestArgs = _objectSpread2(_objectSpread2({}, localVarAxiosArgs.options), {}, {
                    url: basePath + localVarAxiosArgs.url
                  });

                  return axios.request(axiosRequestArgs);
                });

              case 4:
              case "end":
                return _context13.stop();
            }
          }
        }, _callee13);
      }))();
    },

    /**
     *
     * @summary GET Activity Changed List by Date
     * @param {number} [pagenumber] Pagenumber, (default:1)
     * @param {number} [pagesize] Elements per Page, (default:10)
     * @param {string} [seed] Seed &#x27;1 - 10&#x27; for Random Sorting, &#x27;0&#x27; generates a Random Seed, &#x27;null&#x27; disables Random Sorting, (default:null)
     * @param {string} [updatefrom] Date from Format (yyyy-MM-dd) (all GBActivityPoi with LastChange &amp;gt;&#x3D; datefrom are passed), (default: DateTime.Now - 1 Day)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    activityGetAllActivityChanged: function activityGetAllActivityChanged(pagenumber, pagesize, seed, updatefrom, options) {
      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee14() {
        var localVarAxiosArgs;
        return regeneratorRuntime.wrap(function _callee14$(_context14) {
          while (1) {
            switch (_context14.prev = _context14.next) {
              case 0:
                _context14.next = 2;
                return activity_api_ActivityApiAxiosParamCreator(configuration).activityGetAllActivityChanged(pagenumber, pagesize, seed, updatefrom, options);

              case 2:
                localVarAxiosArgs = _context14.sent;
                return _context14.abrupt("return", function () {
                  var axios = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : axios_default.a;
                  var basePath = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : BASE_PATH;

                  var axiosRequestArgs = _objectSpread2(_objectSpread2({}, localVarAxiosArgs.options), {}, {
                    url: basePath + localVarAxiosArgs.url
                  });

                  return axios.request(axiosRequestArgs);
                });

              case 4:
              case "end":
                return _context14.stop();
            }
          }
        }, _callee14);
      }))();
    },

    /**
     *
     * @summary GET Activity Types List
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    activityGetAllActivityTypesList: function activityGetAllActivityTypesList(options) {
      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee15() {
        var localVarAxiosArgs;
        return regeneratorRuntime.wrap(function _callee15$(_context15) {
          while (1) {
            switch (_context15.prev = _context15.next) {
              case 0:
                _context15.next = 2;
                return activity_api_ActivityApiAxiosParamCreator(configuration).activityGetAllActivityTypesList(options);

              case 2:
                localVarAxiosArgs = _context15.sent;
                return _context15.abrupt("return", function () {
                  var axios = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : axios_default.a;
                  var basePath = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : BASE_PATH;

                  var axiosRequestArgs = _objectSpread2(_objectSpread2({}, localVarAxiosArgs.options), {}, {
                    url: basePath + localVarAxiosArgs.url
                  });

                  return axios.request(axiosRequestArgs);
                });

              case 4:
              case "end":
                return _context15.stop();
            }
          }
        }, _callee15);
      }))();
    },

    /**
     *
     * @summary GET Activity Type Single
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    activityGetAllActivityTypesSingle: function activityGetAllActivityTypesSingle(id, options) {
      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee16() {
        var localVarAxiosArgs;
        return regeneratorRuntime.wrap(function _callee16$(_context16) {
          while (1) {
            switch (_context16.prev = _context16.next) {
              case 0:
                _context16.next = 2;
                return activity_api_ActivityApiAxiosParamCreator(configuration).activityGetAllActivityTypesSingle(id, options);

              case 2:
                localVarAxiosArgs = _context16.sent;
                return _context16.abrupt("return", function () {
                  var axios = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : axios_default.a;
                  var basePath = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : BASE_PATH;

                  var axiosRequestArgs = _objectSpread2(_objectSpread2({}, localVarAxiosArgs.options), {}, {
                    url: basePath + localVarAxiosArgs.url
                  });

                  return axios.request(axiosRequestArgs);
                });

              case 4:
              case "end":
                return _context16.stop();
            }
          }
        }, _callee16);
      }))();
    }
  };
};
/**
 * ActivityApi - factory interface
 * @export
 */

var ActivityApiFactory = function ActivityApiFactory(configuration, basePath, axios) {
  return {
    /**
     *
     * @summary GET Activity List Localized
     * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)
     * @param {number} [pagenumber] Pagenumber, (default:1)
     * @param {number} [pagesize] Elements per Page, (default:10)
     * @param {string} [activitytype] Type of the Activity (&#x27;null&#x27; &#x3D; Filter disabled, possible values: BITMASK: &#x27;Mountains &#x3D; 1&#x27;,&#x27;Cycling &#x3D; 2&#x27;,&#x27;Local tours &#x3D; 4&#x27;,&#x27;Horses &#x3D; 8&#x27;,&#x27;Hiking &#x3D; 16&#x27;,&#x27;Running and fitness &#x3D; 32&#x27;,&#x27;Cross-country ski-track &#x3D; 64&#x27;,&#x27;Tobbogan run &#x3D; 128&#x27;,&#x27;Slopes &#x3D; 256&#x27;,&#x27;Lifts &#x3D; 512&#x27;), (default:&#x27;1023&#x27; &#x3D;&#x3D; ALL), REFERENCE TO: GET /api/ActivityTypes
     * @param {string} [subtype] Subtype of the Activity (BITMASK Filter &#x3D; available SubTypes depends on the selected Activity Type), (default:&#x27;null&#x27;)
     * @param {string} [idlist] IDFilter (Separator &#x27;,&#x27; List of Activity IDs), (default:&#x27;null&#x27;)
     * @param {string} [locfilter] Locfilter (Separator &#x27;,&#x27; possible values: reg + REGIONID &#x3D; (Filter by Region), reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMASSOCIATIONID &#x3D; (Filter by Tourismassociation), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)
     * @param {string} [areafilter] AreaFilter (Alternate Locfilter, can be combined with locfilter) (Separator &#x27;,&#x27; possible values: reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMASSOCIATIONID &#x3D; (Filter by Tourismassociation), skr + SKIREGIONID &#x3D; (Filter by Skiregion), ska + SKIAREAID &#x3D; (Filter by Skiarea), are + AREAID &#x3D; (Filter by LTS Area), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)
     * @param {string} [distancefilter] Distance Range Filter (Separator &#x27;,&#x27; example Value: 15,40 Distance from 15 up to 40 Km), (default:&#x27;null&#x27;)
     * @param {string} [altitudefilter] Altitude Range Filter (Separator &#x27;,&#x27; example Value: 500,1000 Altitude from 500 up to 1000 metres), (default:&#x27;null&#x27;)
     * @param {string} [durationfilter] Duration Range Filter (Separator &#x27;,&#x27; example Value: 1,3 Duration from 1 to 3 hours), (default:&#x27;null&#x27;)
     * @param {boolean} [highlight] Hightlight Filter (possible values: &#x27;false&#x27; &#x3D; only Activities with Highlight false, &#x27;true&#x27; &#x3D; only Activities with Highlight true), (default:&#x27;null&#x27;)
     * @param {string} [difficultyfilter] Difficulty Filter (possible values: &#x27;1&#x27; &#x3D; easy, &#x27;2&#x27; &#x3D; medium, &#x27;3&#x27; &#x3D; difficult), (default:&#x27;null&#x27;)
     * @param {string} [odhtagfilter] ODH Taglist Filter (refers to Array SmgTags) (String, Separator &#x27;,&#x27; more Tags possible, available Tags reference to &#x27;api/SmgTag/ByMainEntity/Activity&#x27;), (default:&#x27;null&#x27;)
     * @param {boolean} [active] Active Activities Filter (possible Values: &#x27;true&#x27; only Active Activities, &#x27;false&#x27; only Disabled Activities
     * @param {boolean} [odhactive] ODH Active (Published) Activities Filter (Refers to field SmgActive) Activities Filter (possible Values: &#x27;true&#x27; only published Activities, &#x27;false&#x27; only not published Activities, (default:&#x27;null&#x27;)
     * @param {string} [seed] Seed &#x27;1 - 10&#x27; for Random Sorting, &#x27;0&#x27; generates a Random Seed, &#x27;null&#x27; disables Random Sorting, (default:null)
     * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    activityGetActivityFilteredLocalized: function activityGetActivityFilteredLocalized(language, pagenumber, pagesize, activitytype, subtype, idlist, locfilter, areafilter, distancefilter, altitudefilter, durationfilter, highlight, difficultyfilter, odhtagfilter, active, odhactive, seed, latitude, longitude, radius, options) {
      return activity_api_ActivityApiFp(configuration).activityGetActivityFilteredLocalized(language, pagenumber, pagesize, activitytype, subtype, idlist, locfilter, areafilter, distancefilter, altitudefilter, durationfilter, highlight, difficultyfilter, odhtagfilter, active, odhactive, seed, latitude, longitude, radius, options).then(function (request) {
        return request(axios, basePath);
      });
    },

    /**
     *
     * @summary GET Activity List
     * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)
     * @param {number} [pagenumber] Pagenumber, (default:1)
     * @param {number} [pagesize] Elements per Page, (default:10)
     * @param {string} [activitytype] Type of the Activity (&#x27;null&#x27; &#x3D; Filter disabled, possible values: BITMASK: &#x27;Mountains &#x3D; 1&#x27;,&#x27;Cycling &#x3D; 2&#x27;,&#x27;Local tours &#x3D; 4&#x27;,&#x27;Horses &#x3D; 8&#x27;,&#x27;Hiking &#x3D; 16&#x27;,&#x27;Running and fitness &#x3D; 32&#x27;,&#x27;Cross-country ski-track &#x3D; 64&#x27;,&#x27;Tobbogan run &#x3D; 128&#x27;,&#x27;Slopes &#x3D; 256&#x27;,&#x27;Lifts &#x3D; 512&#x27;), (default:&#x27;1023&#x27; &#x3D;&#x3D; ALL), REFERENCE TO: GET /api/ActivityTypes
     * @param {string} [subtype] Subtype of the Activity (BITMASK Filter &#x3D; available SubTypes depends on the selected Activity Type), (default:&#x27;null&#x27;)
     * @param {string} [idlist] IDFilter (Separator &#x27;,&#x27; List of Activity IDs), (default:&#x27;null&#x27;)
     * @param {string} [locfilter] Locfilter (Separator &#x27;,&#x27; possible values: reg + REGIONID &#x3D; (Filter by Region), reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMASSOCIATIONID &#x3D; (Filter by Tourismassociation), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)
     * @param {string} [areafilter] AreaFilter (Alternate Locfilter, can be combined with locfilter) (Separator &#x27;,&#x27; possible values: reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMASSOCIATIONID &#x3D; (Filter by Tourismassociation), skr + SKIREGIONID &#x3D; (Filter by Skiregion), ska + SKIAREAID &#x3D; (Filter by Skiarea), are + AREAID &#x3D; (Filter by LTS Area), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)
     * @param {string} [distancefilter] Distance Range Filter (Separator &#x27;,&#x27; example Value: 15,40 Distance from 15 up to 40 Km), (default:&#x27;null&#x27;)
     * @param {string} [altitudefilter] Altitude Range Filter (Separator &#x27;,&#x27; example Value: 500,1000 Altitude from 500 up to 1000 metres), (default:&#x27;null&#x27;)
     * @param {string} [durationfilter] Duration Range Filter (Separator &#x27;,&#x27; example Value: 1,3 Duration from 1 to 3 hours), (default:&#x27;null&#x27;)
     * @param {boolean} [highlight] Hightlight Filter (possible values: &#x27;false&#x27; &#x3D; only Activities with Highlight false, &#x27;true&#x27; &#x3D; only Activities with Highlight true), (default:&#x27;null&#x27;)
     * @param {string} [difficultyfilter] Difficulty Filter (possible values: &#x27;1&#x27; &#x3D; easy, &#x27;2&#x27; &#x3D; medium, &#x27;3&#x27; &#x3D; difficult), (default:&#x27;null&#x27;)
     * @param {string} [odhtagfilter] ODH Taglist Filter (refers to Array SmgTags) (String, Separator &#x27;,&#x27; more Tags possible, available Tags reference to &#x27;api/ODHTag?validforentity&#x3D;activity&#x27;), (default:&#x27;null&#x27;)
     * @param {boolean} [active] Active Activities Filter (possible Values: &#x27;true&#x27; only Active Activities, &#x27;false&#x27; only Disabled Activities
     * @param {boolean} [odhactive] ODH Active (Published) Activities Filter (Refers to field SmgActive) Activities Filter (possible Values: &#x27;true&#x27; only published Activities, &#x27;false&#x27; only not published Activities, (default:&#x27;null&#x27;)
     * @param {string} [seed] Seed &#x27;1 - 10&#x27; for Random Sorting, &#x27;0&#x27; generates a Random Seed, &#x27;null&#x27; disables Random Sorting, (default:null)
     * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)
     * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)
     * @param {string} [updatefrom] Date from Format (yyyy-MM-dd) (all GBActivityPoi with LastChange &amp;gt;&#x3D; datefrom are passed), (default: null)
     * @param {string} [searchfilter] String to search for, Title in all languages are searched, (default: null)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    activityGetActivityList: function activityGetActivityList(language, pagenumber, pagesize, activitytype, subtype, idlist, locfilter, areafilter, distancefilter, altitudefilter, durationfilter, highlight, difficultyfilter, odhtagfilter, active, odhactive, seed, latitude, longitude, radius, fields, updatefrom, searchfilter, options) {
      return activity_api_ActivityApiFp(configuration).activityGetActivityList(language, pagenumber, pagesize, activitytype, subtype, idlist, locfilter, areafilter, distancefilter, altitudefilter, durationfilter, highlight, difficultyfilter, odhtagfilter, active, odhactive, seed, latitude, longitude, radius, fields, updatefrom, searchfilter, options).then(function (request) {
        return request(axios, basePath);
      });
    },

    /**
     *
     * @summary GET Activity List Reduced
     * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)
     * @param {string} [activitytype] Type of the Activity (&#x27;null&#x27; &#x3D; Filter disabled, possible values: BITMASK: &#x27;Mountains &#x3D; 1&#x27;,&#x27;Cycling &#x3D; 2&#x27;,&#x27;Local tours &#x3D; 4&#x27;,&#x27;Horses &#x3D; 8&#x27;,&#x27;Hiking &#x3D; 16&#x27;,&#x27;Running and fitness &#x3D; 32&#x27;,&#x27;Cross-country ski-track &#x3D; 64&#x27;,&#x27;Tobbogan run &#x3D; 128&#x27;,&#x27;Slopes &#x3D; 256&#x27;,&#x27;Lifts &#x3D; 512&#x27;), (default:&#x27;1023&#x27; &#x3D;&#x3D; ALL), REFERENCE TO: GET /api/ActivityTypes
     * @param {string} [subtype] Subtype of the Activity (BITMASK Filter &#x3D; available SubTypes depends on the selected Activity Type), (default:&#x27;null&#x27;)
     * @param {string} [locfilter] Locfilter (Separator &#x27;,&#x27; possible values: reg + REGIONID &#x3D; (Filter by Region), reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMASSOCIATIONID &#x3D; (Filter by Tourismassociation), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)
     * @param {string} [areafilter] AreaFilter (Alternate Locfilter, can be combined with locfilter) (Separator &#x27;,&#x27; possible values: reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMASSOCIATIONID &#x3D; (Filter by Tourismassociation), skr + SKIREGIONID &#x3D; (Filter by Skiregion), ska + SKIAREAID &#x3D; (Filter by Skiarea), are + AREAID &#x3D; (Filter by LTS Area), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)
     * @param {string} [distancefilter] Distance Range Filter (Separator &#x27;,&#x27; example Value: 15,40 Distance from 15 up to 40 Km), (default:&#x27;null&#x27;)
     * @param {string} [altitudefilter] Altitude Range Filter (Separator &#x27;,&#x27; example Value: 500,1000 Altitude from 500 up to 1000 metres), (default:&#x27;null&#x27;)
     * @param {string} [durationfilter] Duration Range Filter (Separator &#x27;,&#x27; example Value: 1,3 Duration from 1 to 3 hours), (default:&#x27;null&#x27;)
     * @param {boolean} [highlight] Hightlight Filter (possible values: &#x27;false&#x27; &#x3D; only Activities with Highlight false, &#x27;true&#x27; &#x3D; only Activities with Highlight true), (default:&#x27;null&#x27;)
     * @param {string} [difficultyfilter] Difficulty Filter (possible values: &#x27;1&#x27; &#x3D; easy, &#x27;2&#x27; &#x3D; medium, &#x27;3&#x27; &#x3D; difficult), (default:&#x27;null&#x27;)
     * @param {string} [odhtagfilter] ODH Taglist Filter (refers to Array SmgTags) (String, Separator &#x27;,&#x27; more Tags possible, available Tags reference to &#x27;api/SmgTag/ByMainEntity/Activity&#x27;), (default:&#x27;null&#x27;)
     * @param {boolean} [active] Active Activities Filter (possible Values: &#x27;true&#x27; only Active Activities, &#x27;false&#x27; only Disabled Activities
     * @param {boolean} [odhactive] ODH Active (Published) Activities Filter (Refers to field SmgActive) Activities Filter (possible Values: &#x27;true&#x27; only published Activities, &#x27;false&#x27; only not published Activities, (default:&#x27;null&#x27;)
     * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)
     * @param {string} [fields] Select fields to display, by Default Title and Id are selected if fields filter is null More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    activityGetActivityReduced: function activityGetActivityReduced(language, activitytype, subtype, locfilter, areafilter, distancefilter, altitudefilter, durationfilter, highlight, difficultyfilter, odhtagfilter, active, odhactive, latitude, longitude, radius, fields, options) {
      return activity_api_ActivityApiFp(configuration).activityGetActivityReduced(language, activitytype, subtype, locfilter, areafilter, distancefilter, altitudefilter, durationfilter, highlight, difficultyfilter, odhtagfilter, active, odhactive, latitude, longitude, radius, fields, options).then(function (request) {
        return request(axios, basePath);
      });
    },

    /**
     *
     * @summary GET Activity Single
     * @param {string} id ID of the Activity
     * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)
     * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    activityGetActivitySingle: function activityGetActivitySingle(id, fields, language, options) {
      return activity_api_ActivityApiFp(configuration).activityGetActivitySingle(id, fields, language, options).then(function (request) {
        return request(axios, basePath);
      });
    },

    /**
     *
     * @summary GET Activity Single Localized
     * @param {string} id ID of the Activity
     * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    activityGetActivitySingleLocalized: function activityGetActivitySingleLocalized(id, language, options) {
      return activity_api_ActivityApiFp(configuration).activityGetActivitySingleLocalized(id, language, options).then(function (request) {
        return request(axios, basePath);
      });
    },

    /**
     *
     * @summary GET Activity Changed List by Date
     * @param {number} [pagenumber] Pagenumber, (default:1)
     * @param {number} [pagesize] Elements per Page, (default:10)
     * @param {string} [seed] Seed &#x27;1 - 10&#x27; for Random Sorting, &#x27;0&#x27; generates a Random Seed, &#x27;null&#x27; disables Random Sorting, (default:null)
     * @param {string} [updatefrom] Date from Format (yyyy-MM-dd) (all GBActivityPoi with LastChange &amp;gt;&#x3D; datefrom are passed), (default: DateTime.Now - 1 Day)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    activityGetAllActivityChanged: function activityGetAllActivityChanged(pagenumber, pagesize, seed, updatefrom, options) {
      return activity_api_ActivityApiFp(configuration).activityGetAllActivityChanged(pagenumber, pagesize, seed, updatefrom, options).then(function (request) {
        return request(axios, basePath);
      });
    },

    /**
     *
     * @summary GET Activity Types List
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    activityGetAllActivityTypesList: function activityGetAllActivityTypesList(options) {
      return activity_api_ActivityApiFp(configuration).activityGetAllActivityTypesList(options).then(function (request) {
        return request(axios, basePath);
      });
    },

    /**
     *
     * @summary GET Activity Type Single
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    activityGetAllActivityTypesSingle: function activityGetAllActivityTypesSingle(id, options) {
      return activity_api_ActivityApiFp(configuration).activityGetAllActivityTypesSingle(id, options).then(function (request) {
        return request(axios, basePath);
      });
    }
  };
};
/**
 * ActivityApi - object-oriented interface
 * @export
 * @class ActivityApi
 * @extends {BaseAPI}
 */

var activity_api_ActivityApi = /*#__PURE__*/function (_BaseAPI) {
  _inherits(ActivityApi, _BaseAPI);

  var _super = _createSuper(ActivityApi);

  function ActivityApi() {
    _classCallCheck(this, ActivityApi);

    return _super.apply(this, arguments);
  }

  _createClass(ActivityApi, [{
    key: "activityGetActivityFilteredLocalized",

    /**
     *
     * @summary GET Activity List Localized
     * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)
     * @param {number} [pagenumber] Pagenumber, (default:1)
     * @param {number} [pagesize] Elements per Page, (default:10)
     * @param {string} [activitytype] Type of the Activity (&#x27;null&#x27; &#x3D; Filter disabled, possible values: BITMASK: &#x27;Mountains &#x3D; 1&#x27;,&#x27;Cycling &#x3D; 2&#x27;,&#x27;Local tours &#x3D; 4&#x27;,&#x27;Horses &#x3D; 8&#x27;,&#x27;Hiking &#x3D; 16&#x27;,&#x27;Running and fitness &#x3D; 32&#x27;,&#x27;Cross-country ski-track &#x3D; 64&#x27;,&#x27;Tobbogan run &#x3D; 128&#x27;,&#x27;Slopes &#x3D; 256&#x27;,&#x27;Lifts &#x3D; 512&#x27;), (default:&#x27;1023&#x27; &#x3D;&#x3D; ALL), REFERENCE TO: GET /api/ActivityTypes
     * @param {string} [subtype] Subtype of the Activity (BITMASK Filter &#x3D; available SubTypes depends on the selected Activity Type), (default:&#x27;null&#x27;)
     * @param {string} [idlist] IDFilter (Separator &#x27;,&#x27; List of Activity IDs), (default:&#x27;null&#x27;)
     * @param {string} [locfilter] Locfilter (Separator &#x27;,&#x27; possible values: reg + REGIONID &#x3D; (Filter by Region), reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMASSOCIATIONID &#x3D; (Filter by Tourismassociation), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)
     * @param {string} [areafilter] AreaFilter (Alternate Locfilter, can be combined with locfilter) (Separator &#x27;,&#x27; possible values: reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMASSOCIATIONID &#x3D; (Filter by Tourismassociation), skr + SKIREGIONID &#x3D; (Filter by Skiregion), ska + SKIAREAID &#x3D; (Filter by Skiarea), are + AREAID &#x3D; (Filter by LTS Area), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)
     * @param {string} [distancefilter] Distance Range Filter (Separator &#x27;,&#x27; example Value: 15,40 Distance from 15 up to 40 Km), (default:&#x27;null&#x27;)
     * @param {string} [altitudefilter] Altitude Range Filter (Separator &#x27;,&#x27; example Value: 500,1000 Altitude from 500 up to 1000 metres), (default:&#x27;null&#x27;)
     * @param {string} [durationfilter] Duration Range Filter (Separator &#x27;,&#x27; example Value: 1,3 Duration from 1 to 3 hours), (default:&#x27;null&#x27;)
     * @param {boolean} [highlight] Hightlight Filter (possible values: &#x27;false&#x27; &#x3D; only Activities with Highlight false, &#x27;true&#x27; &#x3D; only Activities with Highlight true), (default:&#x27;null&#x27;)
     * @param {string} [difficultyfilter] Difficulty Filter (possible values: &#x27;1&#x27; &#x3D; easy, &#x27;2&#x27; &#x3D; medium, &#x27;3&#x27; &#x3D; difficult), (default:&#x27;null&#x27;)
     * @param {string} [odhtagfilter] ODH Taglist Filter (refers to Array SmgTags) (String, Separator &#x27;,&#x27; more Tags possible, available Tags reference to &#x27;api/SmgTag/ByMainEntity/Activity&#x27;), (default:&#x27;null&#x27;)
     * @param {boolean} [active] Active Activities Filter (possible Values: &#x27;true&#x27; only Active Activities, &#x27;false&#x27; only Disabled Activities
     * @param {boolean} [odhactive] ODH Active (Published) Activities Filter (Refers to field SmgActive) Activities Filter (possible Values: &#x27;true&#x27; only published Activities, &#x27;false&#x27; only not published Activities, (default:&#x27;null&#x27;)
     * @param {string} [seed] Seed &#x27;1 - 10&#x27; for Random Sorting, &#x27;0&#x27; generates a Random Seed, &#x27;null&#x27; disables Random Sorting, (default:null)
     * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ActivityApi
     */
    value: function activityGetActivityFilteredLocalized(language, pagenumber, pagesize, activitytype, subtype, idlist, locfilter, areafilter, distancefilter, altitudefilter, durationfilter, highlight, difficultyfilter, odhtagfilter, active, odhactive, seed, latitude, longitude, radius, options) {
      var _this = this;

      return activity_api_ActivityApiFp(this.configuration).activityGetActivityFilteredLocalized(language, pagenumber, pagesize, activitytype, subtype, idlist, locfilter, areafilter, distancefilter, altitudefilter, durationfilter, highlight, difficultyfilter, odhtagfilter, active, odhactive, seed, latitude, longitude, radius, options).then(function (request) {
        return request(_this.axios, _this.basePath);
      });
    }
    /**
     *
     * @summary GET Activity List
     * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)
     * @param {number} [pagenumber] Pagenumber, (default:1)
     * @param {number} [pagesize] Elements per Page, (default:10)
     * @param {string} [activitytype] Type of the Activity (&#x27;null&#x27; &#x3D; Filter disabled, possible values: BITMASK: &#x27;Mountains &#x3D; 1&#x27;,&#x27;Cycling &#x3D; 2&#x27;,&#x27;Local tours &#x3D; 4&#x27;,&#x27;Horses &#x3D; 8&#x27;,&#x27;Hiking &#x3D; 16&#x27;,&#x27;Running and fitness &#x3D; 32&#x27;,&#x27;Cross-country ski-track &#x3D; 64&#x27;,&#x27;Tobbogan run &#x3D; 128&#x27;,&#x27;Slopes &#x3D; 256&#x27;,&#x27;Lifts &#x3D; 512&#x27;), (default:&#x27;1023&#x27; &#x3D;&#x3D; ALL), REFERENCE TO: GET /api/ActivityTypes
     * @param {string} [subtype] Subtype of the Activity (BITMASK Filter &#x3D; available SubTypes depends on the selected Activity Type), (default:&#x27;null&#x27;)
     * @param {string} [idlist] IDFilter (Separator &#x27;,&#x27; List of Activity IDs), (default:&#x27;null&#x27;)
     * @param {string} [locfilter] Locfilter (Separator &#x27;,&#x27; possible values: reg + REGIONID &#x3D; (Filter by Region), reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMASSOCIATIONID &#x3D; (Filter by Tourismassociation), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)
     * @param {string} [areafilter] AreaFilter (Alternate Locfilter, can be combined with locfilter) (Separator &#x27;,&#x27; possible values: reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMASSOCIATIONID &#x3D; (Filter by Tourismassociation), skr + SKIREGIONID &#x3D; (Filter by Skiregion), ska + SKIAREAID &#x3D; (Filter by Skiarea), are + AREAID &#x3D; (Filter by LTS Area), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)
     * @param {string} [distancefilter] Distance Range Filter (Separator &#x27;,&#x27; example Value: 15,40 Distance from 15 up to 40 Km), (default:&#x27;null&#x27;)
     * @param {string} [altitudefilter] Altitude Range Filter (Separator &#x27;,&#x27; example Value: 500,1000 Altitude from 500 up to 1000 metres), (default:&#x27;null&#x27;)
     * @param {string} [durationfilter] Duration Range Filter (Separator &#x27;,&#x27; example Value: 1,3 Duration from 1 to 3 hours), (default:&#x27;null&#x27;)
     * @param {boolean} [highlight] Hightlight Filter (possible values: &#x27;false&#x27; &#x3D; only Activities with Highlight false, &#x27;true&#x27; &#x3D; only Activities with Highlight true), (default:&#x27;null&#x27;)
     * @param {string} [difficultyfilter] Difficulty Filter (possible values: &#x27;1&#x27; &#x3D; easy, &#x27;2&#x27; &#x3D; medium, &#x27;3&#x27; &#x3D; difficult), (default:&#x27;null&#x27;)
     * @param {string} [odhtagfilter] ODH Taglist Filter (refers to Array SmgTags) (String, Separator &#x27;,&#x27; more Tags possible, available Tags reference to &#x27;api/ODHTag?validforentity&#x3D;activity&#x27;), (default:&#x27;null&#x27;)
     * @param {boolean} [active] Active Activities Filter (possible Values: &#x27;true&#x27; only Active Activities, &#x27;false&#x27; only Disabled Activities
     * @param {boolean} [odhactive] ODH Active (Published) Activities Filter (Refers to field SmgActive) Activities Filter (possible Values: &#x27;true&#x27; only published Activities, &#x27;false&#x27; only not published Activities, (default:&#x27;null&#x27;)
     * @param {string} [seed] Seed &#x27;1 - 10&#x27; for Random Sorting, &#x27;0&#x27; generates a Random Seed, &#x27;null&#x27; disables Random Sorting, (default:null)
     * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)
     * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)
     * @param {string} [updatefrom] Date from Format (yyyy-MM-dd) (all GBActivityPoi with LastChange &amp;gt;&#x3D; datefrom are passed), (default: null)
     * @param {string} [searchfilter] String to search for, Title in all languages are searched, (default: null)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ActivityApi
     */

  }, {
    key: "activityGetActivityList",
    value: function activityGetActivityList(language, pagenumber, pagesize, activitytype, subtype, idlist, locfilter, areafilter, distancefilter, altitudefilter, durationfilter, highlight, difficultyfilter, odhtagfilter, active, odhactive, seed, latitude, longitude, radius, fields, updatefrom, searchfilter, options) {
      var _this2 = this;

      return activity_api_ActivityApiFp(this.configuration).activityGetActivityList(language, pagenumber, pagesize, activitytype, subtype, idlist, locfilter, areafilter, distancefilter, altitudefilter, durationfilter, highlight, difficultyfilter, odhtagfilter, active, odhactive, seed, latitude, longitude, radius, fields, updatefrom, searchfilter, options).then(function (request) {
        return request(_this2.axios, _this2.basePath);
      });
    }
    /**
     *
     * @summary GET Activity List Reduced
     * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)
     * @param {string} [activitytype] Type of the Activity (&#x27;null&#x27; &#x3D; Filter disabled, possible values: BITMASK: &#x27;Mountains &#x3D; 1&#x27;,&#x27;Cycling &#x3D; 2&#x27;,&#x27;Local tours &#x3D; 4&#x27;,&#x27;Horses &#x3D; 8&#x27;,&#x27;Hiking &#x3D; 16&#x27;,&#x27;Running and fitness &#x3D; 32&#x27;,&#x27;Cross-country ski-track &#x3D; 64&#x27;,&#x27;Tobbogan run &#x3D; 128&#x27;,&#x27;Slopes &#x3D; 256&#x27;,&#x27;Lifts &#x3D; 512&#x27;), (default:&#x27;1023&#x27; &#x3D;&#x3D; ALL), REFERENCE TO: GET /api/ActivityTypes
     * @param {string} [subtype] Subtype of the Activity (BITMASK Filter &#x3D; available SubTypes depends on the selected Activity Type), (default:&#x27;null&#x27;)
     * @param {string} [locfilter] Locfilter (Separator &#x27;,&#x27; possible values: reg + REGIONID &#x3D; (Filter by Region), reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMASSOCIATIONID &#x3D; (Filter by Tourismassociation), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)
     * @param {string} [areafilter] AreaFilter (Alternate Locfilter, can be combined with locfilter) (Separator &#x27;,&#x27; possible values: reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMASSOCIATIONID &#x3D; (Filter by Tourismassociation), skr + SKIREGIONID &#x3D; (Filter by Skiregion), ska + SKIAREAID &#x3D; (Filter by Skiarea), are + AREAID &#x3D; (Filter by LTS Area), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)
     * @param {string} [distancefilter] Distance Range Filter (Separator &#x27;,&#x27; example Value: 15,40 Distance from 15 up to 40 Km), (default:&#x27;null&#x27;)
     * @param {string} [altitudefilter] Altitude Range Filter (Separator &#x27;,&#x27; example Value: 500,1000 Altitude from 500 up to 1000 metres), (default:&#x27;null&#x27;)
     * @param {string} [durationfilter] Duration Range Filter (Separator &#x27;,&#x27; example Value: 1,3 Duration from 1 to 3 hours), (default:&#x27;null&#x27;)
     * @param {boolean} [highlight] Hightlight Filter (possible values: &#x27;false&#x27; &#x3D; only Activities with Highlight false, &#x27;true&#x27; &#x3D; only Activities with Highlight true), (default:&#x27;null&#x27;)
     * @param {string} [difficultyfilter] Difficulty Filter (possible values: &#x27;1&#x27; &#x3D; easy, &#x27;2&#x27; &#x3D; medium, &#x27;3&#x27; &#x3D; difficult), (default:&#x27;null&#x27;)
     * @param {string} [odhtagfilter] ODH Taglist Filter (refers to Array SmgTags) (String, Separator &#x27;,&#x27; more Tags possible, available Tags reference to &#x27;api/SmgTag/ByMainEntity/Activity&#x27;), (default:&#x27;null&#x27;)
     * @param {boolean} [active] Active Activities Filter (possible Values: &#x27;true&#x27; only Active Activities, &#x27;false&#x27; only Disabled Activities
     * @param {boolean} [odhactive] ODH Active (Published) Activities Filter (Refers to field SmgActive) Activities Filter (possible Values: &#x27;true&#x27; only published Activities, &#x27;false&#x27; only not published Activities, (default:&#x27;null&#x27;)
     * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)
     * @param {string} [fields] Select fields to display, by Default Title and Id are selected if fields filter is null More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ActivityApi
     */

  }, {
    key: "activityGetActivityReduced",
    value: function activityGetActivityReduced(language, activitytype, subtype, locfilter, areafilter, distancefilter, altitudefilter, durationfilter, highlight, difficultyfilter, odhtagfilter, active, odhactive, latitude, longitude, radius, fields, options) {
      var _this3 = this;

      return activity_api_ActivityApiFp(this.configuration).activityGetActivityReduced(language, activitytype, subtype, locfilter, areafilter, distancefilter, altitudefilter, durationfilter, highlight, difficultyfilter, odhtagfilter, active, odhactive, latitude, longitude, radius, fields, options).then(function (request) {
        return request(_this3.axios, _this3.basePath);
      });
    }
    /**
     *
     * @summary GET Activity Single
     * @param {string} id ID of the Activity
     * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)
     * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ActivityApi
     */

  }, {
    key: "activityGetActivitySingle",
    value: function activityGetActivitySingle(id, fields, language, options) {
      var _this4 = this;

      return activity_api_ActivityApiFp(this.configuration).activityGetActivitySingle(id, fields, language, options).then(function (request) {
        return request(_this4.axios, _this4.basePath);
      });
    }
    /**
     *
     * @summary GET Activity Single Localized
     * @param {string} id ID of the Activity
     * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ActivityApi
     */

  }, {
    key: "activityGetActivitySingleLocalized",
    value: function activityGetActivitySingleLocalized(id, language, options) {
      var _this5 = this;

      return activity_api_ActivityApiFp(this.configuration).activityGetActivitySingleLocalized(id, language, options).then(function (request) {
        return request(_this5.axios, _this5.basePath);
      });
    }
    /**
     *
     * @summary GET Activity Changed List by Date
     * @param {number} [pagenumber] Pagenumber, (default:1)
     * @param {number} [pagesize] Elements per Page, (default:10)
     * @param {string} [seed] Seed &#x27;1 - 10&#x27; for Random Sorting, &#x27;0&#x27; generates a Random Seed, &#x27;null&#x27; disables Random Sorting, (default:null)
     * @param {string} [updatefrom] Date from Format (yyyy-MM-dd) (all GBActivityPoi with LastChange &amp;gt;&#x3D; datefrom are passed), (default: DateTime.Now - 1 Day)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ActivityApi
     */

  }, {
    key: "activityGetAllActivityChanged",
    value: function activityGetAllActivityChanged(pagenumber, pagesize, seed, updatefrom, options) {
      var _this6 = this;

      return activity_api_ActivityApiFp(this.configuration).activityGetAllActivityChanged(pagenumber, pagesize, seed, updatefrom, options).then(function (request) {
        return request(_this6.axios, _this6.basePath);
      });
    }
    /**
     *
     * @summary GET Activity Types List
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ActivityApi
     */

  }, {
    key: "activityGetAllActivityTypesList",
    value: function activityGetAllActivityTypesList(options) {
      var _this7 = this;

      return activity_api_ActivityApiFp(this.configuration).activityGetAllActivityTypesList(options).then(function (request) {
        return request(_this7.axios, _this7.basePath);
      });
    }
    /**
     *
     * @summary GET Activity Type Single
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ActivityApi
     */

  }, {
    key: "activityGetAllActivityTypesSingle",
    value: function activityGetAllActivityTypesSingle(id, options) {
      var _this8 = this;

      return activity_api_ActivityApiFp(this.configuration).activityGetAllActivityTypesSingle(id, options).then(function (request) {
        return request(_this8.axios, _this8.basePath);
      });
    }
  }]);

  return ActivityApi;
}(base_BaseAPI);
// CONCATENATED MODULE: ./src/api/apis/article-api.ts

















/* tslint:disable */

/* eslint-disable */

/**
 * Open Data Hub Api Tourism
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: V1
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
 // Some imports not used depending on template conditions
// @ts-ignore


/**
 * ArticleApi - axios parameter creator
 * @export
 */

var article_api_ArticleApiAxiosParamCreator = function ArticleApiAxiosParamCreator(configuration) {
  return {
    /**
     *
     * @summary GET Article Single
     * @param {string} id ID of the Article
     * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)
     * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    articleGetActivitySingle: function () {
      var _articleGetActivitySingle = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(id, fields, language) {
        var options,
            localVarPath,
            localVarUrlObj,
            baseOptions,
            localVarRequestOptions,
            localVarHeaderParameter,
            localVarQueryParameter,
            localVarAccessTokenValue,
            query,
            key,
            _key,
            headersFromBaseOptions,
            _args = arguments;

        return regeneratorRuntime.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                options = _args.length > 3 && _args[3] !== undefined ? _args[3] : {};

                if (!(id === null || id === undefined)) {
                  _context.next = 3;
                  break;
                }

                throw new base_RequiredError('id', 'Required parameter id was null or undefined when calling articleGetActivitySingle.');

              case 3:
                localVarPath = "/api/Article/{id}".replace("{".concat("id", "}"), encodeURIComponent(String(id))); // use dummy base URL string because the URL constructor only accepts absolute URLs.

                localVarUrlObj = new URL(localVarPath, 'https://example.com');

                if (configuration) {
                  baseOptions = configuration.baseOptions;
                }

                localVarRequestOptions = _objectSpread2(_objectSpread2({
                  method: 'GET'
                }, baseOptions), options);
                localVarHeaderParameter = {};
                localVarQueryParameter = {}; // authentication oauth2 required
                // oauth required

                if (!(configuration && configuration.accessToken)) {
                  _context.next = 21;
                  break;
                }

                if (!(typeof configuration.accessToken === 'function')) {
                  _context.next = 16;
                  break;
                }

                _context.next = 13;
                return configuration.accessToken("oauth2", [""]);

              case 13:
                _context.t0 = _context.sent;
                _context.next = 19;
                break;

              case 16:
                _context.next = 18;
                return configuration.accessToken;

              case 18:
                _context.t0 = _context.sent;

              case 19:
                localVarAccessTokenValue = _context.t0;
                localVarHeaderParameter["Authorization"] = "Bearer " + localVarAccessTokenValue;

              case 21:
                if (fields !== undefined) {
                  localVarQueryParameter['fields'] = fields;
                }

                if (language !== undefined) {
                  localVarQueryParameter['language'] = language;
                }

                query = new URLSearchParams(localVarUrlObj.search);

                for (key in localVarQueryParameter) {
                  query.set(key, localVarQueryParameter[key]);
                }

                for (_key in options.query) {
                  query.set(_key, options.query[_key]);
                }

                localVarUrlObj.search = new URLSearchParams(query).toString();
                headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                localVarRequestOptions.headers = _objectSpread2(_objectSpread2(_objectSpread2({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                return _context.abrupt("return", {
                  url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                  options: localVarRequestOptions
                });

              case 30:
              case "end":
                return _context.stop();
            }
          }
        }, _callee);
      }));

      function articleGetActivitySingle(_x, _x2, _x3) {
        return _articleGetActivitySingle.apply(this, arguments);
      }

      return articleGetActivitySingle;
    }(),

    /**
     *
     * @summary GET Article Single Localized
     * @param {string} id ID of the Article
     * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    articleGetActivitySingleLocalized: function () {
      var _articleGetActivitySingleLocalized = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(id, language) {
        var options,
            localVarPath,
            localVarUrlObj,
            baseOptions,
            localVarRequestOptions,
            localVarHeaderParameter,
            localVarQueryParameter,
            localVarAccessTokenValue,
            query,
            key,
            _key2,
            headersFromBaseOptions,
            _args2 = arguments;

        return regeneratorRuntime.wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                options = _args2.length > 2 && _args2[2] !== undefined ? _args2[2] : {};

                if (!(id === null || id === undefined)) {
                  _context2.next = 3;
                  break;
                }

                throw new base_RequiredError('id', 'Required parameter id was null or undefined when calling articleGetActivitySingleLocalized.');

              case 3:
                localVarPath = "/api/ArticleLocalized/{id}".replace("{".concat("id", "}"), encodeURIComponent(String(id))); // use dummy base URL string because the URL constructor only accepts absolute URLs.

                localVarUrlObj = new URL(localVarPath, 'https://example.com');

                if (configuration) {
                  baseOptions = configuration.baseOptions;
                }

                localVarRequestOptions = _objectSpread2(_objectSpread2({
                  method: 'GET'
                }, baseOptions), options);
                localVarHeaderParameter = {};
                localVarQueryParameter = {}; // authentication oauth2 required
                // oauth required

                if (!(configuration && configuration.accessToken)) {
                  _context2.next = 21;
                  break;
                }

                if (!(typeof configuration.accessToken === 'function')) {
                  _context2.next = 16;
                  break;
                }

                _context2.next = 13;
                return configuration.accessToken("oauth2", [""]);

              case 13:
                _context2.t0 = _context2.sent;
                _context2.next = 19;
                break;

              case 16:
                _context2.next = 18;
                return configuration.accessToken;

              case 18:
                _context2.t0 = _context2.sent;

              case 19:
                localVarAccessTokenValue = _context2.t0;
                localVarHeaderParameter["Authorization"] = "Bearer " + localVarAccessTokenValue;

              case 21:
                if (language !== undefined) {
                  localVarQueryParameter['language'] = language;
                }

                query = new URLSearchParams(localVarUrlObj.search);

                for (key in localVarQueryParameter) {
                  query.set(key, localVarQueryParameter[key]);
                }

                for (_key2 in options.query) {
                  query.set(_key2, options.query[_key2]);
                }

                localVarUrlObj.search = new URLSearchParams(query).toString();
                headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                localVarRequestOptions.headers = _objectSpread2(_objectSpread2(_objectSpread2({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                return _context2.abrupt("return", {
                  url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                  options: localVarRequestOptions
                });

              case 29:
              case "end":
                return _context2.stop();
            }
          }
        }, _callee2);
      }));

      function articleGetActivitySingleLocalized(_x4, _x5) {
        return _articleGetActivitySingleLocalized.apply(this, arguments);
      }

      return articleGetActivitySingleLocalized;
    }(),

    /**
     *
     * @summary GET Article Changed List by Date
     * @param {number} [pagenumber] Pagenumber, (default:1)
     * @param {number} [pagesize] Elements per Page (max 1024), (default:10)
     * @param {string} [seed] Seed &#x27;1 - 10&#x27; for Random Sorting, &#x27;0&#x27; generates a Random Seed, &#x27;null&#x27; disables Random Sorting, (default:null)
     * @param {string} [updatefrom] Date from Format (yyyy-MM-dd) (all Article with LastChange &amp;gt;&#x3D; datefrom are passed), (default: DateTime.Now - 1 Day)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    articleGetAllArticleChanged: function () {
      var _articleGetAllArticleChanged = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(pagenumber, pagesize, seed, updatefrom) {
        var options,
            localVarPath,
            localVarUrlObj,
            baseOptions,
            localVarRequestOptions,
            localVarHeaderParameter,
            localVarQueryParameter,
            localVarAccessTokenValue,
            query,
            key,
            _key3,
            headersFromBaseOptions,
            _args3 = arguments;

        return regeneratorRuntime.wrap(function _callee3$(_context3) {
          while (1) {
            switch (_context3.prev = _context3.next) {
              case 0:
                options = _args3.length > 4 && _args3[4] !== undefined ? _args3[4] : {};
                localVarPath = "/api/ArticleChanged"; // use dummy base URL string because the URL constructor only accepts absolute URLs.

                localVarUrlObj = new URL(localVarPath, 'https://example.com');

                if (configuration) {
                  baseOptions = configuration.baseOptions;
                }

                localVarRequestOptions = _objectSpread2(_objectSpread2({
                  method: 'GET'
                }, baseOptions), options);
                localVarHeaderParameter = {};
                localVarQueryParameter = {}; // authentication oauth2 required
                // oauth required

                if (!(configuration && configuration.accessToken)) {
                  _context3.next = 19;
                  break;
                }

                if (!(typeof configuration.accessToken === 'function')) {
                  _context3.next = 14;
                  break;
                }

                _context3.next = 11;
                return configuration.accessToken("oauth2", [""]);

              case 11:
                _context3.t0 = _context3.sent;
                _context3.next = 17;
                break;

              case 14:
                _context3.next = 16;
                return configuration.accessToken;

              case 16:
                _context3.t0 = _context3.sent;

              case 17:
                localVarAccessTokenValue = _context3.t0;
                localVarHeaderParameter["Authorization"] = "Bearer " + localVarAccessTokenValue;

              case 19:
                if (pagenumber !== undefined) {
                  localVarQueryParameter['pagenumber'] = pagenumber;
                }

                if (pagesize !== undefined) {
                  localVarQueryParameter['pagesize'] = pagesize;
                }

                if (seed !== undefined) {
                  localVarQueryParameter['seed'] = seed;
                }

                if (updatefrom !== undefined) {
                  localVarQueryParameter['updatefrom'] = updatefrom;
                }

                query = new URLSearchParams(localVarUrlObj.search);

                for (key in localVarQueryParameter) {
                  query.set(key, localVarQueryParameter[key]);
                }

                for (_key3 in options.query) {
                  query.set(_key3, options.query[_key3]);
                }

                localVarUrlObj.search = new URLSearchParams(query).toString();
                headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                localVarRequestOptions.headers = _objectSpread2(_objectSpread2(_objectSpread2({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                return _context3.abrupt("return", {
                  url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                  options: localVarRequestOptions
                });

              case 30:
              case "end":
                return _context3.stop();
            }
          }
        }, _callee3);
      }));

      function articleGetAllArticleChanged(_x6, _x7, _x8, _x9) {
        return _articleGetAllArticleChanged.apply(this, arguments);
      }

      return articleGetAllArticleChanged;
    }(),

    /**
     *
     * @summary GET Article Types Single
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    articleGetAllArticleTypeSingle: function () {
      var _articleGetAllArticleTypeSingle = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(id) {
        var options,
            localVarPath,
            localVarUrlObj,
            baseOptions,
            localVarRequestOptions,
            localVarHeaderParameter,
            localVarQueryParameter,
            localVarAccessTokenValue,
            query,
            key,
            _key4,
            headersFromBaseOptions,
            _args4 = arguments;

        return regeneratorRuntime.wrap(function _callee4$(_context4) {
          while (1) {
            switch (_context4.prev = _context4.next) {
              case 0:
                options = _args4.length > 1 && _args4[1] !== undefined ? _args4[1] : {};

                if (!(id === null || id === undefined)) {
                  _context4.next = 3;
                  break;
                }

                throw new base_RequiredError('id', 'Required parameter id was null or undefined when calling articleGetAllArticleTypeSingle.');

              case 3:
                localVarPath = "/api/ArticleTypes/{id}".replace("{".concat("id", "}"), encodeURIComponent(String(id))); // use dummy base URL string because the URL constructor only accepts absolute URLs.

                localVarUrlObj = new URL(localVarPath, 'https://example.com');

                if (configuration) {
                  baseOptions = configuration.baseOptions;
                }

                localVarRequestOptions = _objectSpread2(_objectSpread2({
                  method: 'GET'
                }, baseOptions), options);
                localVarHeaderParameter = {};
                localVarQueryParameter = {}; // authentication oauth2 required
                // oauth required

                if (!(configuration && configuration.accessToken)) {
                  _context4.next = 21;
                  break;
                }

                if (!(typeof configuration.accessToken === 'function')) {
                  _context4.next = 16;
                  break;
                }

                _context4.next = 13;
                return configuration.accessToken("oauth2", [""]);

              case 13:
                _context4.t0 = _context4.sent;
                _context4.next = 19;
                break;

              case 16:
                _context4.next = 18;
                return configuration.accessToken;

              case 18:
                _context4.t0 = _context4.sent;

              case 19:
                localVarAccessTokenValue = _context4.t0;
                localVarHeaderParameter["Authorization"] = "Bearer " + localVarAccessTokenValue;

              case 21:
                query = new URLSearchParams(localVarUrlObj.search);

                for (key in localVarQueryParameter) {
                  query.set(key, localVarQueryParameter[key]);
                }

                for (_key4 in options.query) {
                  query.set(_key4, options.query[_key4]);
                }

                localVarUrlObj.search = new URLSearchParams(query).toString();
                headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                localVarRequestOptions.headers = _objectSpread2(_objectSpread2(_objectSpread2({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                return _context4.abrupt("return", {
                  url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                  options: localVarRequestOptions
                });

              case 28:
              case "end":
                return _context4.stop();
            }
          }
        }, _callee4);
      }));

      function articleGetAllArticleTypeSingle(_x10) {
        return _articleGetAllArticleTypeSingle.apply(this, arguments);
      }

      return articleGetAllArticleTypeSingle;
    }(),

    /**
     *
     * @summary GET Article Types List
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    articleGetAllArticleTypesList: function () {
      var _articleGetAllArticleTypesList = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5() {
        var options,
            localVarPath,
            localVarUrlObj,
            baseOptions,
            localVarRequestOptions,
            localVarHeaderParameter,
            localVarQueryParameter,
            localVarAccessTokenValue,
            query,
            key,
            _key5,
            headersFromBaseOptions,
            _args5 = arguments;

        return regeneratorRuntime.wrap(function _callee5$(_context5) {
          while (1) {
            switch (_context5.prev = _context5.next) {
              case 0:
                options = _args5.length > 0 && _args5[0] !== undefined ? _args5[0] : {};
                localVarPath = "/api/ArticleTypes"; // use dummy base URL string because the URL constructor only accepts absolute URLs.

                localVarUrlObj = new URL(localVarPath, 'https://example.com');

                if (configuration) {
                  baseOptions = configuration.baseOptions;
                }

                localVarRequestOptions = _objectSpread2(_objectSpread2({
                  method: 'GET'
                }, baseOptions), options);
                localVarHeaderParameter = {};
                localVarQueryParameter = {}; // authentication oauth2 required
                // oauth required

                if (!(configuration && configuration.accessToken)) {
                  _context5.next = 19;
                  break;
                }

                if (!(typeof configuration.accessToken === 'function')) {
                  _context5.next = 14;
                  break;
                }

                _context5.next = 11;
                return configuration.accessToken("oauth2", [""]);

              case 11:
                _context5.t0 = _context5.sent;
                _context5.next = 17;
                break;

              case 14:
                _context5.next = 16;
                return configuration.accessToken;

              case 16:
                _context5.t0 = _context5.sent;

              case 17:
                localVarAccessTokenValue = _context5.t0;
                localVarHeaderParameter["Authorization"] = "Bearer " + localVarAccessTokenValue;

              case 19:
                query = new URLSearchParams(localVarUrlObj.search);

                for (key in localVarQueryParameter) {
                  query.set(key, localVarQueryParameter[key]);
                }

                for (_key5 in options.query) {
                  query.set(_key5, options.query[_key5]);
                }

                localVarUrlObj.search = new URLSearchParams(query).toString();
                headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                localVarRequestOptions.headers = _objectSpread2(_objectSpread2(_objectSpread2({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                return _context5.abrupt("return", {
                  url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                  options: localVarRequestOptions
                });

              case 26:
              case "end":
                return _context5.stop();
            }
          }
        }, _callee5);
      }));

      function articleGetAllArticleTypesList() {
        return _articleGetAllArticleTypesList.apply(this, arguments);
      }

      return articleGetAllArticleTypesList;
    }(),

    /**
     *
     * @summary GET Article List
     * @param {number} [pagenumber] Pagenumber, (default:1)
     * @param {number} [pagesize] Elements per Page, (default:10)
     * @param {string} [articletype] Type of the Article (&#x27;null&#x27; &#x3D; Filter disabled, possible values: BITMASK values: 1 &#x3D; basearticle, 2 &#x3D; book article, 4 &#x3D; contentarticle, 8 &#x3D; eventarticle, 16 &#x3D; pressarticle, 32 &#x3D; recipe, 64 &#x3D; touroperator , 128 &#x3D; b2b), (also possible for compatibily reasons: basisartikel, buchtippartikel, contentartikel, veranstaltungsartikel, presseartikel, rezeptartikel, reiseveranstalter, b2bartikel ) (default:&#x27;255&#x27; &#x3D;&#x3D; ALL), REFERENCE TO: GET /api/ArticleTypes
     * @param {string} [articlesubtype] Sub Type of the Article (depends on the Maintype of the Article &#x27;null&#x27; &#x3D; Filter disabled)
     * @param {string} [idlist] IDFilter (Separator &#x27;,&#x27; List of Article IDs), (default:&#x27;null&#x27;)
     * @param {string} [langfilter] Language Filter (Gets only Articles Available in the passed Language)
     * @param {boolean} [sortbyarticledate] Sort By Articledate (&#x27;true&#x27; sorts Articles by Articledate)
     * @param {string} [odhtagfilter] ODH Taglist Filter (refers to Array SmgTags) (String, Separator &#x27;,&#x27; more Tags possible, available Tags reference to &#x27;api/ODHTag?validforentity&#x3D;article&#x27;), (default:&#x27;null&#x27;)
     * @param {boolean} [active] Active Articles Filter (possible Values: &#x27;true&#x27; only Active Articles, &#x27;false&#x27; only Disabled Articles
     * @param {boolean} [odhactive] ODH Active (Published) Activities Filter (Refers to field SmgActive) Article Filter (possible Values: &#x27;true&#x27; only published Article, &#x27;false&#x27; only not published Articles, (default:&#x27;null&#x27;)
     * @param {string} [seed] Seed &#x27;1 - 10&#x27; for Random Sorting, &#x27;0&#x27; generates a Random Seed, &#x27;null&#x27; disables Random Sorting, (default:null)
     * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)
     * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)
     * @param {string} [updatefrom] Date from Format (yyyy-MM-dd) (all GBActivityPoi with LastChange &amp;gt;&#x3D; datefrom are passed), (default: null)
     * @param {string} [searchfilter] String to search for, Title in all languages are searched, (default: null)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    articleGetArticleList: function () {
      var _articleGetArticleList = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6(pagenumber, pagesize, articletype, articlesubtype, idlist, langfilter, sortbyarticledate, odhtagfilter, active, odhactive, seed, fields, language, updatefrom, searchfilter) {
        var options,
            localVarPath,
            localVarUrlObj,
            baseOptions,
            localVarRequestOptions,
            localVarHeaderParameter,
            localVarQueryParameter,
            localVarAccessTokenValue,
            query,
            key,
            _key6,
            headersFromBaseOptions,
            _args6 = arguments;

        return regeneratorRuntime.wrap(function _callee6$(_context6) {
          while (1) {
            switch (_context6.prev = _context6.next) {
              case 0:
                options = _args6.length > 15 && _args6[15] !== undefined ? _args6[15] : {};
                localVarPath = "/api/Article"; // use dummy base URL string because the URL constructor only accepts absolute URLs.

                localVarUrlObj = new URL(localVarPath, 'https://example.com');

                if (configuration) {
                  baseOptions = configuration.baseOptions;
                }

                localVarRequestOptions = _objectSpread2(_objectSpread2({
                  method: 'GET'
                }, baseOptions), options);
                localVarHeaderParameter = {};
                localVarQueryParameter = {}; // authentication oauth2 required
                // oauth required

                if (!(configuration && configuration.accessToken)) {
                  _context6.next = 19;
                  break;
                }

                if (!(typeof configuration.accessToken === 'function')) {
                  _context6.next = 14;
                  break;
                }

                _context6.next = 11;
                return configuration.accessToken("oauth2", [""]);

              case 11:
                _context6.t0 = _context6.sent;
                _context6.next = 17;
                break;

              case 14:
                _context6.next = 16;
                return configuration.accessToken;

              case 16:
                _context6.t0 = _context6.sent;

              case 17:
                localVarAccessTokenValue = _context6.t0;
                localVarHeaderParameter["Authorization"] = "Bearer " + localVarAccessTokenValue;

              case 19:
                if (pagenumber !== undefined) {
                  localVarQueryParameter['pagenumber'] = pagenumber;
                }

                if (pagesize !== undefined) {
                  localVarQueryParameter['pagesize'] = pagesize;
                }

                if (articletype !== undefined) {
                  localVarQueryParameter['articletype'] = articletype;
                }

                if (articlesubtype !== undefined) {
                  localVarQueryParameter['articlesubtype'] = articlesubtype;
                }

                if (idlist !== undefined) {
                  localVarQueryParameter['idlist'] = idlist;
                }

                if (langfilter !== undefined) {
                  localVarQueryParameter['langfilter'] = langfilter;
                }

                if (sortbyarticledate !== undefined) {
                  localVarQueryParameter['sortbyarticledate'] = sortbyarticledate;
                }

                if (odhtagfilter !== undefined) {
                  localVarQueryParameter['odhtagfilter'] = odhtagfilter;
                }

                if (active !== undefined) {
                  localVarQueryParameter['active'] = active;
                }

                if (odhactive !== undefined) {
                  localVarQueryParameter['odhactive'] = odhactive;
                }

                if (seed !== undefined) {
                  localVarQueryParameter['seed'] = seed;
                }

                if (fields !== undefined) {
                  localVarQueryParameter['fields'] = fields;
                }

                if (language !== undefined) {
                  localVarQueryParameter['language'] = language;
                }

                if (updatefrom !== undefined) {
                  localVarQueryParameter['updatefrom'] = updatefrom;
                }

                if (searchfilter !== undefined) {
                  localVarQueryParameter['searchfilter'] = searchfilter;
                }

                query = new URLSearchParams(localVarUrlObj.search);

                for (key in localVarQueryParameter) {
                  query.set(key, localVarQueryParameter[key]);
                }

                for (_key6 in options.query) {
                  query.set(_key6, options.query[_key6]);
                }

                localVarUrlObj.search = new URLSearchParams(query).toString();
                headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                localVarRequestOptions.headers = _objectSpread2(_objectSpread2(_objectSpread2({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                return _context6.abrupt("return", {
                  url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                  options: localVarRequestOptions
                });

              case 41:
              case "end":
                return _context6.stop();
            }
          }
        }, _callee6);
      }));

      function articleGetArticleList(_x11, _x12, _x13, _x14, _x15, _x16, _x17, _x18, _x19, _x20, _x21, _x22, _x23, _x24, _x25) {
        return _articleGetArticleList.apply(this, arguments);
      }

      return articleGetArticleList;
    }(),

    /**
     *
     * @summary GET Article List Localized
     * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)
     * @param {number} [pagenumber] Pagenumber, (default:1)
     * @param {number} [pagesize] Elements per Page, (default:10)
     * @param {string} [articletype] Type of the Article (&#x27;null&#x27; &#x3D; Filter disabled, possible values: BITMASK values: 1 &#x3D; basearticle, 2 &#x3D; book article, 4 &#x3D; contentarticle, 8 &#x3D; eventarticle, 16 &#x3D; pressarticle, 32 &#x3D; recipe, 64 &#x3D; touroperator , 128 &#x3D; b2b), (also possible for compatibily reasons: basisartikel, buchtippartikel, contentartikel, veranstaltungsartikel, presseartikel, rezeptartikel, reiseveranstalter, b2bartikel ) (default:&#x27;255&#x27; &#x3D;&#x3D; ALL), REFERENCE TO: GET /api/ArticleTypes
     * @param {string} [articlesubtype] Sub Type of the Article (depends on the Maintype of the Article &#x27;null&#x27; &#x3D; Filter disabled)
     * @param {string} [idlist] IDFilter (Separator &#x27;,&#x27; List of Article IDs), (default:&#x27;null&#x27;)
     * @param {string} [odhtagfilter] ODH Taglist Filter (refers to Array SmgTags) (String, Separator &#x27;,&#x27; more Tags possible, available Tags reference to &#x27;api/ODHTag?validforentity&#x3D;article&#x27;), (default:&#x27;null&#x27;)
     * @param {boolean} [active] Active Articles Filter (possible Values: &#x27;true&#x27; only Active Articles, &#x27;false&#x27; only Disabled Articles
     * @param {boolean} [odhactive] ODH Active (Published) Activities Filter (Refers to field SmgActive) Article Filter (possible Values: &#x27;true&#x27; only published Article, &#x27;false&#x27; only not published Articles, (default:&#x27;null&#x27;)
     * @param {string} [seed] Seed &#x27;1 - 10&#x27; for Random Sorting, &#x27;0&#x27; generates a Random Seed, &#x27;null&#x27; disables Random Sorting, (default:null)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    articleGetArticleListLocalized: function () {
      var _articleGetArticleListLocalized = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee7(language, pagenumber, pagesize, articletype, articlesubtype, idlist, odhtagfilter, active, odhactive, seed) {
        var options,
            localVarPath,
            localVarUrlObj,
            baseOptions,
            localVarRequestOptions,
            localVarHeaderParameter,
            localVarQueryParameter,
            localVarAccessTokenValue,
            query,
            key,
            _key7,
            headersFromBaseOptions,
            _args7 = arguments;

        return regeneratorRuntime.wrap(function _callee7$(_context7) {
          while (1) {
            switch (_context7.prev = _context7.next) {
              case 0:
                options = _args7.length > 10 && _args7[10] !== undefined ? _args7[10] : {};
                localVarPath = "/api/ArticleLocalized"; // use dummy base URL string because the URL constructor only accepts absolute URLs.

                localVarUrlObj = new URL(localVarPath, 'https://example.com');

                if (configuration) {
                  baseOptions = configuration.baseOptions;
                }

                localVarRequestOptions = _objectSpread2(_objectSpread2({
                  method: 'GET'
                }, baseOptions), options);
                localVarHeaderParameter = {};
                localVarQueryParameter = {}; // authentication oauth2 required
                // oauth required

                if (!(configuration && configuration.accessToken)) {
                  _context7.next = 19;
                  break;
                }

                if (!(typeof configuration.accessToken === 'function')) {
                  _context7.next = 14;
                  break;
                }

                _context7.next = 11;
                return configuration.accessToken("oauth2", [""]);

              case 11:
                _context7.t0 = _context7.sent;
                _context7.next = 17;
                break;

              case 14:
                _context7.next = 16;
                return configuration.accessToken;

              case 16:
                _context7.t0 = _context7.sent;

              case 17:
                localVarAccessTokenValue = _context7.t0;
                localVarHeaderParameter["Authorization"] = "Bearer " + localVarAccessTokenValue;

              case 19:
                if (language !== undefined) {
                  localVarQueryParameter['language'] = language;
                }

                if (pagenumber !== undefined) {
                  localVarQueryParameter['pagenumber'] = pagenumber;
                }

                if (pagesize !== undefined) {
                  localVarQueryParameter['pagesize'] = pagesize;
                }

                if (articletype !== undefined) {
                  localVarQueryParameter['articletype'] = articletype;
                }

                if (articlesubtype !== undefined) {
                  localVarQueryParameter['articlesubtype'] = articlesubtype;
                }

                if (idlist !== undefined) {
                  localVarQueryParameter['idlist'] = idlist;
                }

                if (odhtagfilter !== undefined) {
                  localVarQueryParameter['odhtagfilter'] = odhtagfilter;
                }

                if (active !== undefined) {
                  localVarQueryParameter['active'] = active;
                }

                if (odhactive !== undefined) {
                  localVarQueryParameter['odhactive'] = odhactive;
                }

                if (seed !== undefined) {
                  localVarQueryParameter['seed'] = seed;
                }

                query = new URLSearchParams(localVarUrlObj.search);

                for (key in localVarQueryParameter) {
                  query.set(key, localVarQueryParameter[key]);
                }

                for (_key7 in options.query) {
                  query.set(_key7, options.query[_key7]);
                }

                localVarUrlObj.search = new URLSearchParams(query).toString();
                headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                localVarRequestOptions.headers = _objectSpread2(_objectSpread2(_objectSpread2({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                return _context7.abrupt("return", {
                  url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                  options: localVarRequestOptions
                });

              case 36:
              case "end":
                return _context7.stop();
            }
          }
        }, _callee7);
      }));

      function articleGetArticleListLocalized(_x26, _x27, _x28, _x29, _x30, _x31, _x32, _x33, _x34, _x35) {
        return _articleGetArticleListLocalized.apply(this, arguments);
      }

      return articleGetArticleListLocalized;
    }(),

    /**
     *
     * @summary GET Article List Reduced
     * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)
     * @param {string} [articletype] Type of the Article (&#x27;null&#x27; &#x3D; Filter disabled, possible values: BITMASK values: 1 &#x3D; basearticle, 2 &#x3D; book article, 4 &#x3D; contentarticle, 8 &#x3D; eventarticle, 16 &#x3D; pressarticle, 32 &#x3D; recipe, 64 &#x3D; touroperator , 128 &#x3D; b2b), (also possible for compatibily reasons: basisartikel, buchtippartikel, contentartikel, veranstaltungsartikel, presseartikel, rezeptartikel, reiseveranstalter, b2bartikel ) (default:&#x27;255&#x27; &#x3D;&#x3D; ALL), REFERENCE TO: GET /api/ArticleTypes
     * @param {string} [articlesubtype] Sub Type of the Article (depends on the Maintype of the Article &#x27;null&#x27; &#x3D; Filter disabled)
     * @param {string} [odhtagfilter] ODH Taglist Filter (refers to Array SmgTags) (String, Separator &#x27;,&#x27; more Tags possible, available Tags reference to &#x27;api/ODHTag?validforentity&#x3D;article&#x27;), (default:&#x27;null&#x27;)
     * @param {boolean} [active] Active Articles Filter (possible Values: &#x27;true&#x27; only Active Articles, &#x27;false&#x27; only Disabled Articles
     * @param {boolean} [odhactive] ODH Active (Published) Activities Filter (Refers to field SmgActive) Article Filter (possible Values: &#x27;true&#x27; only published Article, &#x27;false&#x27; only not published Articles, (default:&#x27;null&#x27;)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    articleGetArticleReducedList: function () {
      var _articleGetArticleReducedList = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee8(language, articletype, articlesubtype, odhtagfilter, active, odhactive) {
        var options,
            localVarPath,
            localVarUrlObj,
            baseOptions,
            localVarRequestOptions,
            localVarHeaderParameter,
            localVarQueryParameter,
            localVarAccessTokenValue,
            query,
            key,
            _key8,
            headersFromBaseOptions,
            _args8 = arguments;

        return regeneratorRuntime.wrap(function _callee8$(_context8) {
          while (1) {
            switch (_context8.prev = _context8.next) {
              case 0:
                options = _args8.length > 6 && _args8[6] !== undefined ? _args8[6] : {};
                localVarPath = "/api/ArticleReduced"; // use dummy base URL string because the URL constructor only accepts absolute URLs.

                localVarUrlObj = new URL(localVarPath, 'https://example.com');

                if (configuration) {
                  baseOptions = configuration.baseOptions;
                }

                localVarRequestOptions = _objectSpread2(_objectSpread2({
                  method: 'GET'
                }, baseOptions), options);
                localVarHeaderParameter = {};
                localVarQueryParameter = {}; // authentication oauth2 required
                // oauth required

                if (!(configuration && configuration.accessToken)) {
                  _context8.next = 19;
                  break;
                }

                if (!(typeof configuration.accessToken === 'function')) {
                  _context8.next = 14;
                  break;
                }

                _context8.next = 11;
                return configuration.accessToken("oauth2", [""]);

              case 11:
                _context8.t0 = _context8.sent;
                _context8.next = 17;
                break;

              case 14:
                _context8.next = 16;
                return configuration.accessToken;

              case 16:
                _context8.t0 = _context8.sent;

              case 17:
                localVarAccessTokenValue = _context8.t0;
                localVarHeaderParameter["Authorization"] = "Bearer " + localVarAccessTokenValue;

              case 19:
                if (language !== undefined) {
                  localVarQueryParameter['language'] = language;
                }

                if (articletype !== undefined) {
                  localVarQueryParameter['articletype'] = articletype;
                }

                if (articlesubtype !== undefined) {
                  localVarQueryParameter['articlesubtype'] = articlesubtype;
                }

                if (odhtagfilter !== undefined) {
                  localVarQueryParameter['odhtagfilter'] = odhtagfilter;
                }

                if (active !== undefined) {
                  localVarQueryParameter['active'] = active;
                }

                if (odhactive !== undefined) {
                  localVarQueryParameter['odhactive'] = odhactive;
                }

                query = new URLSearchParams(localVarUrlObj.search);

                for (key in localVarQueryParameter) {
                  query.set(key, localVarQueryParameter[key]);
                }

                for (_key8 in options.query) {
                  query.set(_key8, options.query[_key8]);
                }

                localVarUrlObj.search = new URLSearchParams(query).toString();
                headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                localVarRequestOptions.headers = _objectSpread2(_objectSpread2(_objectSpread2({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                return _context8.abrupt("return", {
                  url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                  options: localVarRequestOptions
                });

              case 32:
              case "end":
                return _context8.stop();
            }
          }
        }, _callee8);
      }));

      function articleGetArticleReducedList(_x36, _x37, _x38, _x39, _x40, _x41) {
        return _articleGetArticleReducedList.apply(this, arguments);
      }

      return articleGetArticleReducedList;
    }()
  };
};
/**
 * ArticleApi - functional programming interface
 * @export
 */

var article_api_ArticleApiFp = function ArticleApiFp(configuration) {
  return {
    /**
     *
     * @summary GET Article Single
     * @param {string} id ID of the Article
     * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)
     * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    articleGetActivitySingle: function articleGetActivitySingle(id, fields, language, options) {
      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee9() {
        var localVarAxiosArgs;
        return regeneratorRuntime.wrap(function _callee9$(_context9) {
          while (1) {
            switch (_context9.prev = _context9.next) {
              case 0:
                _context9.next = 2;
                return article_api_ArticleApiAxiosParamCreator(configuration).articleGetActivitySingle(id, fields, language, options);

              case 2:
                localVarAxiosArgs = _context9.sent;
                return _context9.abrupt("return", function () {
                  var axios = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : axios_default.a;
                  var basePath = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : BASE_PATH;

                  var axiosRequestArgs = _objectSpread2(_objectSpread2({}, localVarAxiosArgs.options), {}, {
                    url: basePath + localVarAxiosArgs.url
                  });

                  return axios.request(axiosRequestArgs);
                });

              case 4:
              case "end":
                return _context9.stop();
            }
          }
        }, _callee9);
      }))();
    },

    /**
     *
     * @summary GET Article Single Localized
     * @param {string} id ID of the Article
     * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    articleGetActivitySingleLocalized: function articleGetActivitySingleLocalized(id, language, options) {
      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee10() {
        var localVarAxiosArgs;
        return regeneratorRuntime.wrap(function _callee10$(_context10) {
          while (1) {
            switch (_context10.prev = _context10.next) {
              case 0:
                _context10.next = 2;
                return article_api_ArticleApiAxiosParamCreator(configuration).articleGetActivitySingleLocalized(id, language, options);

              case 2:
                localVarAxiosArgs = _context10.sent;
                return _context10.abrupt("return", function () {
                  var axios = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : axios_default.a;
                  var basePath = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : BASE_PATH;

                  var axiosRequestArgs = _objectSpread2(_objectSpread2({}, localVarAxiosArgs.options), {}, {
                    url: basePath + localVarAxiosArgs.url
                  });

                  return axios.request(axiosRequestArgs);
                });

              case 4:
              case "end":
                return _context10.stop();
            }
          }
        }, _callee10);
      }))();
    },

    /**
     *
     * @summary GET Article Changed List by Date
     * @param {number} [pagenumber] Pagenumber, (default:1)
     * @param {number} [pagesize] Elements per Page (max 1024), (default:10)
     * @param {string} [seed] Seed &#x27;1 - 10&#x27; for Random Sorting, &#x27;0&#x27; generates a Random Seed, &#x27;null&#x27; disables Random Sorting, (default:null)
     * @param {string} [updatefrom] Date from Format (yyyy-MM-dd) (all Article with LastChange &amp;gt;&#x3D; datefrom are passed), (default: DateTime.Now - 1 Day)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    articleGetAllArticleChanged: function articleGetAllArticleChanged(pagenumber, pagesize, seed, updatefrom, options) {
      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee11() {
        var localVarAxiosArgs;
        return regeneratorRuntime.wrap(function _callee11$(_context11) {
          while (1) {
            switch (_context11.prev = _context11.next) {
              case 0:
                _context11.next = 2;
                return article_api_ArticleApiAxiosParamCreator(configuration).articleGetAllArticleChanged(pagenumber, pagesize, seed, updatefrom, options);

              case 2:
                localVarAxiosArgs = _context11.sent;
                return _context11.abrupt("return", function () {
                  var axios = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : axios_default.a;
                  var basePath = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : BASE_PATH;

                  var axiosRequestArgs = _objectSpread2(_objectSpread2({}, localVarAxiosArgs.options), {}, {
                    url: basePath + localVarAxiosArgs.url
                  });

                  return axios.request(axiosRequestArgs);
                });

              case 4:
              case "end":
                return _context11.stop();
            }
          }
        }, _callee11);
      }))();
    },

    /**
     *
     * @summary GET Article Types Single
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    articleGetAllArticleTypeSingle: function articleGetAllArticleTypeSingle(id, options) {
      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee12() {
        var localVarAxiosArgs;
        return regeneratorRuntime.wrap(function _callee12$(_context12) {
          while (1) {
            switch (_context12.prev = _context12.next) {
              case 0:
                _context12.next = 2;
                return article_api_ArticleApiAxiosParamCreator(configuration).articleGetAllArticleTypeSingle(id, options);

              case 2:
                localVarAxiosArgs = _context12.sent;
                return _context12.abrupt("return", function () {
                  var axios = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : axios_default.a;
                  var basePath = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : BASE_PATH;

                  var axiosRequestArgs = _objectSpread2(_objectSpread2({}, localVarAxiosArgs.options), {}, {
                    url: basePath + localVarAxiosArgs.url
                  });

                  return axios.request(axiosRequestArgs);
                });

              case 4:
              case "end":
                return _context12.stop();
            }
          }
        }, _callee12);
      }))();
    },

    /**
     *
     * @summary GET Article Types List
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    articleGetAllArticleTypesList: function articleGetAllArticleTypesList(options) {
      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee13() {
        var localVarAxiosArgs;
        return regeneratorRuntime.wrap(function _callee13$(_context13) {
          while (1) {
            switch (_context13.prev = _context13.next) {
              case 0:
                _context13.next = 2;
                return article_api_ArticleApiAxiosParamCreator(configuration).articleGetAllArticleTypesList(options);

              case 2:
                localVarAxiosArgs = _context13.sent;
                return _context13.abrupt("return", function () {
                  var axios = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : axios_default.a;
                  var basePath = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : BASE_PATH;

                  var axiosRequestArgs = _objectSpread2(_objectSpread2({}, localVarAxiosArgs.options), {}, {
                    url: basePath + localVarAxiosArgs.url
                  });

                  return axios.request(axiosRequestArgs);
                });

              case 4:
              case "end":
                return _context13.stop();
            }
          }
        }, _callee13);
      }))();
    },

    /**
     *
     * @summary GET Article List
     * @param {number} [pagenumber] Pagenumber, (default:1)
     * @param {number} [pagesize] Elements per Page, (default:10)
     * @param {string} [articletype] Type of the Article (&#x27;null&#x27; &#x3D; Filter disabled, possible values: BITMASK values: 1 &#x3D; basearticle, 2 &#x3D; book article, 4 &#x3D; contentarticle, 8 &#x3D; eventarticle, 16 &#x3D; pressarticle, 32 &#x3D; recipe, 64 &#x3D; touroperator , 128 &#x3D; b2b), (also possible for compatibily reasons: basisartikel, buchtippartikel, contentartikel, veranstaltungsartikel, presseartikel, rezeptartikel, reiseveranstalter, b2bartikel ) (default:&#x27;255&#x27; &#x3D;&#x3D; ALL), REFERENCE TO: GET /api/ArticleTypes
     * @param {string} [articlesubtype] Sub Type of the Article (depends on the Maintype of the Article &#x27;null&#x27; &#x3D; Filter disabled)
     * @param {string} [idlist] IDFilter (Separator &#x27;,&#x27; List of Article IDs), (default:&#x27;null&#x27;)
     * @param {string} [langfilter] Language Filter (Gets only Articles Available in the passed Language)
     * @param {boolean} [sortbyarticledate] Sort By Articledate (&#x27;true&#x27; sorts Articles by Articledate)
     * @param {string} [odhtagfilter] ODH Taglist Filter (refers to Array SmgTags) (String, Separator &#x27;,&#x27; more Tags possible, available Tags reference to &#x27;api/ODHTag?validforentity&#x3D;article&#x27;), (default:&#x27;null&#x27;)
     * @param {boolean} [active] Active Articles Filter (possible Values: &#x27;true&#x27; only Active Articles, &#x27;false&#x27; only Disabled Articles
     * @param {boolean} [odhactive] ODH Active (Published) Activities Filter (Refers to field SmgActive) Article Filter (possible Values: &#x27;true&#x27; only published Article, &#x27;false&#x27; only not published Articles, (default:&#x27;null&#x27;)
     * @param {string} [seed] Seed &#x27;1 - 10&#x27; for Random Sorting, &#x27;0&#x27; generates a Random Seed, &#x27;null&#x27; disables Random Sorting, (default:null)
     * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)
     * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)
     * @param {string} [updatefrom] Date from Format (yyyy-MM-dd) (all GBActivityPoi with LastChange &amp;gt;&#x3D; datefrom are passed), (default: null)
     * @param {string} [searchfilter] String to search for, Title in all languages are searched, (default: null)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    articleGetArticleList: function articleGetArticleList(pagenumber, pagesize, articletype, articlesubtype, idlist, langfilter, sortbyarticledate, odhtagfilter, active, odhactive, seed, fields, language, updatefrom, searchfilter, options) {
      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee14() {
        var localVarAxiosArgs;
        return regeneratorRuntime.wrap(function _callee14$(_context14) {
          while (1) {
            switch (_context14.prev = _context14.next) {
              case 0:
                _context14.next = 2;
                return article_api_ArticleApiAxiosParamCreator(configuration).articleGetArticleList(pagenumber, pagesize, articletype, articlesubtype, idlist, langfilter, sortbyarticledate, odhtagfilter, active, odhactive, seed, fields, language, updatefrom, searchfilter, options);

              case 2:
                localVarAxiosArgs = _context14.sent;
                return _context14.abrupt("return", function () {
                  var axios = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : axios_default.a;
                  var basePath = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : BASE_PATH;

                  var axiosRequestArgs = _objectSpread2(_objectSpread2({}, localVarAxiosArgs.options), {}, {
                    url: basePath + localVarAxiosArgs.url
                  });

                  return axios.request(axiosRequestArgs);
                });

              case 4:
              case "end":
                return _context14.stop();
            }
          }
        }, _callee14);
      }))();
    },

    /**
     *
     * @summary GET Article List Localized
     * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)
     * @param {number} [pagenumber] Pagenumber, (default:1)
     * @param {number} [pagesize] Elements per Page, (default:10)
     * @param {string} [articletype] Type of the Article (&#x27;null&#x27; &#x3D; Filter disabled, possible values: BITMASK values: 1 &#x3D; basearticle, 2 &#x3D; book article, 4 &#x3D; contentarticle, 8 &#x3D; eventarticle, 16 &#x3D; pressarticle, 32 &#x3D; recipe, 64 &#x3D; touroperator , 128 &#x3D; b2b), (also possible for compatibily reasons: basisartikel, buchtippartikel, contentartikel, veranstaltungsartikel, presseartikel, rezeptartikel, reiseveranstalter, b2bartikel ) (default:&#x27;255&#x27; &#x3D;&#x3D; ALL), REFERENCE TO: GET /api/ArticleTypes
     * @param {string} [articlesubtype] Sub Type of the Article (depends on the Maintype of the Article &#x27;null&#x27; &#x3D; Filter disabled)
     * @param {string} [idlist] IDFilter (Separator &#x27;,&#x27; List of Article IDs), (default:&#x27;null&#x27;)
     * @param {string} [odhtagfilter] ODH Taglist Filter (refers to Array SmgTags) (String, Separator &#x27;,&#x27; more Tags possible, available Tags reference to &#x27;api/ODHTag?validforentity&#x3D;article&#x27;), (default:&#x27;null&#x27;)
     * @param {boolean} [active] Active Articles Filter (possible Values: &#x27;true&#x27; only Active Articles, &#x27;false&#x27; only Disabled Articles
     * @param {boolean} [odhactive] ODH Active (Published) Activities Filter (Refers to field SmgActive) Article Filter (possible Values: &#x27;true&#x27; only published Article, &#x27;false&#x27; only not published Articles, (default:&#x27;null&#x27;)
     * @param {string} [seed] Seed &#x27;1 - 10&#x27; for Random Sorting, &#x27;0&#x27; generates a Random Seed, &#x27;null&#x27; disables Random Sorting, (default:null)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    articleGetArticleListLocalized: function articleGetArticleListLocalized(language, pagenumber, pagesize, articletype, articlesubtype, idlist, odhtagfilter, active, odhactive, seed, options) {
      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee15() {
        var localVarAxiosArgs;
        return regeneratorRuntime.wrap(function _callee15$(_context15) {
          while (1) {
            switch (_context15.prev = _context15.next) {
              case 0:
                _context15.next = 2;
                return article_api_ArticleApiAxiosParamCreator(configuration).articleGetArticleListLocalized(language, pagenumber, pagesize, articletype, articlesubtype, idlist, odhtagfilter, active, odhactive, seed, options);

              case 2:
                localVarAxiosArgs = _context15.sent;
                return _context15.abrupt("return", function () {
                  var axios = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : axios_default.a;
                  var basePath = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : BASE_PATH;

                  var axiosRequestArgs = _objectSpread2(_objectSpread2({}, localVarAxiosArgs.options), {}, {
                    url: basePath + localVarAxiosArgs.url
                  });

                  return axios.request(axiosRequestArgs);
                });

              case 4:
              case "end":
                return _context15.stop();
            }
          }
        }, _callee15);
      }))();
    },

    /**
     *
     * @summary GET Article List Reduced
     * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)
     * @param {string} [articletype] Type of the Article (&#x27;null&#x27; &#x3D; Filter disabled, possible values: BITMASK values: 1 &#x3D; basearticle, 2 &#x3D; book article, 4 &#x3D; contentarticle, 8 &#x3D; eventarticle, 16 &#x3D; pressarticle, 32 &#x3D; recipe, 64 &#x3D; touroperator , 128 &#x3D; b2b), (also possible for compatibily reasons: basisartikel, buchtippartikel, contentartikel, veranstaltungsartikel, presseartikel, rezeptartikel, reiseveranstalter, b2bartikel ) (default:&#x27;255&#x27; &#x3D;&#x3D; ALL), REFERENCE TO: GET /api/ArticleTypes
     * @param {string} [articlesubtype] Sub Type of the Article (depends on the Maintype of the Article &#x27;null&#x27; &#x3D; Filter disabled)
     * @param {string} [odhtagfilter] ODH Taglist Filter (refers to Array SmgTags) (String, Separator &#x27;,&#x27; more Tags possible, available Tags reference to &#x27;api/ODHTag?validforentity&#x3D;article&#x27;), (default:&#x27;null&#x27;)
     * @param {boolean} [active] Active Articles Filter (possible Values: &#x27;true&#x27; only Active Articles, &#x27;false&#x27; only Disabled Articles
     * @param {boolean} [odhactive] ODH Active (Published) Activities Filter (Refers to field SmgActive) Article Filter (possible Values: &#x27;true&#x27; only published Article, &#x27;false&#x27; only not published Articles, (default:&#x27;null&#x27;)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    articleGetArticleReducedList: function articleGetArticleReducedList(language, articletype, articlesubtype, odhtagfilter, active, odhactive, options) {
      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee16() {
        var localVarAxiosArgs;
        return regeneratorRuntime.wrap(function _callee16$(_context16) {
          while (1) {
            switch (_context16.prev = _context16.next) {
              case 0:
                _context16.next = 2;
                return article_api_ArticleApiAxiosParamCreator(configuration).articleGetArticleReducedList(language, articletype, articlesubtype, odhtagfilter, active, odhactive, options);

              case 2:
                localVarAxiosArgs = _context16.sent;
                return _context16.abrupt("return", function () {
                  var axios = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : axios_default.a;
                  var basePath = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : BASE_PATH;

                  var axiosRequestArgs = _objectSpread2(_objectSpread2({}, localVarAxiosArgs.options), {}, {
                    url: basePath + localVarAxiosArgs.url
                  });

                  return axios.request(axiosRequestArgs);
                });

              case 4:
              case "end":
                return _context16.stop();
            }
          }
        }, _callee16);
      }))();
    }
  };
};
/**
 * ArticleApi - factory interface
 * @export
 */

var ArticleApiFactory = function ArticleApiFactory(configuration, basePath, axios) {
  return {
    /**
     *
     * @summary GET Article Single
     * @param {string} id ID of the Article
     * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)
     * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    articleGetActivitySingle: function articleGetActivitySingle(id, fields, language, options) {
      return article_api_ArticleApiFp(configuration).articleGetActivitySingle(id, fields, language, options).then(function (request) {
        return request(axios, basePath);
      });
    },

    /**
     *
     * @summary GET Article Single Localized
     * @param {string} id ID of the Article
     * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    articleGetActivitySingleLocalized: function articleGetActivitySingleLocalized(id, language, options) {
      return article_api_ArticleApiFp(configuration).articleGetActivitySingleLocalized(id, language, options).then(function (request) {
        return request(axios, basePath);
      });
    },

    /**
     *
     * @summary GET Article Changed List by Date
     * @param {number} [pagenumber] Pagenumber, (default:1)
     * @param {number} [pagesize] Elements per Page (max 1024), (default:10)
     * @param {string} [seed] Seed &#x27;1 - 10&#x27; for Random Sorting, &#x27;0&#x27; generates a Random Seed, &#x27;null&#x27; disables Random Sorting, (default:null)
     * @param {string} [updatefrom] Date from Format (yyyy-MM-dd) (all Article with LastChange &amp;gt;&#x3D; datefrom are passed), (default: DateTime.Now - 1 Day)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    articleGetAllArticleChanged: function articleGetAllArticleChanged(pagenumber, pagesize, seed, updatefrom, options) {
      return article_api_ArticleApiFp(configuration).articleGetAllArticleChanged(pagenumber, pagesize, seed, updatefrom, options).then(function (request) {
        return request(axios, basePath);
      });
    },

    /**
     *
     * @summary GET Article Types Single
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    articleGetAllArticleTypeSingle: function articleGetAllArticleTypeSingle(id, options) {
      return article_api_ArticleApiFp(configuration).articleGetAllArticleTypeSingle(id, options).then(function (request) {
        return request(axios, basePath);
      });
    },

    /**
     *
     * @summary GET Article Types List
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    articleGetAllArticleTypesList: function articleGetAllArticleTypesList(options) {
      return article_api_ArticleApiFp(configuration).articleGetAllArticleTypesList(options).then(function (request) {
        return request(axios, basePath);
      });
    },

    /**
     *
     * @summary GET Article List
     * @param {number} [pagenumber] Pagenumber, (default:1)
     * @param {number} [pagesize] Elements per Page, (default:10)
     * @param {string} [articletype] Type of the Article (&#x27;null&#x27; &#x3D; Filter disabled, possible values: BITMASK values: 1 &#x3D; basearticle, 2 &#x3D; book article, 4 &#x3D; contentarticle, 8 &#x3D; eventarticle, 16 &#x3D; pressarticle, 32 &#x3D; recipe, 64 &#x3D; touroperator , 128 &#x3D; b2b), (also possible for compatibily reasons: basisartikel, buchtippartikel, contentartikel, veranstaltungsartikel, presseartikel, rezeptartikel, reiseveranstalter, b2bartikel ) (default:&#x27;255&#x27; &#x3D;&#x3D; ALL), REFERENCE TO: GET /api/ArticleTypes
     * @param {string} [articlesubtype] Sub Type of the Article (depends on the Maintype of the Article &#x27;null&#x27; &#x3D; Filter disabled)
     * @param {string} [idlist] IDFilter (Separator &#x27;,&#x27; List of Article IDs), (default:&#x27;null&#x27;)
     * @param {string} [langfilter] Language Filter (Gets only Articles Available in the passed Language)
     * @param {boolean} [sortbyarticledate] Sort By Articledate (&#x27;true&#x27; sorts Articles by Articledate)
     * @param {string} [odhtagfilter] ODH Taglist Filter (refers to Array SmgTags) (String, Separator &#x27;,&#x27; more Tags possible, available Tags reference to &#x27;api/ODHTag?validforentity&#x3D;article&#x27;), (default:&#x27;null&#x27;)
     * @param {boolean} [active] Active Articles Filter (possible Values: &#x27;true&#x27; only Active Articles, &#x27;false&#x27; only Disabled Articles
     * @param {boolean} [odhactive] ODH Active (Published) Activities Filter (Refers to field SmgActive) Article Filter (possible Values: &#x27;true&#x27; only published Article, &#x27;false&#x27; only not published Articles, (default:&#x27;null&#x27;)
     * @param {string} [seed] Seed &#x27;1 - 10&#x27; for Random Sorting, &#x27;0&#x27; generates a Random Seed, &#x27;null&#x27; disables Random Sorting, (default:null)
     * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)
     * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)
     * @param {string} [updatefrom] Date from Format (yyyy-MM-dd) (all GBActivityPoi with LastChange &amp;gt;&#x3D; datefrom are passed), (default: null)
     * @param {string} [searchfilter] String to search for, Title in all languages are searched, (default: null)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    articleGetArticleList: function articleGetArticleList(pagenumber, pagesize, articletype, articlesubtype, idlist, langfilter, sortbyarticledate, odhtagfilter, active, odhactive, seed, fields, language, updatefrom, searchfilter, options) {
      return article_api_ArticleApiFp(configuration).articleGetArticleList(pagenumber, pagesize, articletype, articlesubtype, idlist, langfilter, sortbyarticledate, odhtagfilter, active, odhactive, seed, fields, language, updatefrom, searchfilter, options).then(function (request) {
        return request(axios, basePath);
      });
    },

    /**
     *
     * @summary GET Article List Localized
     * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)
     * @param {number} [pagenumber] Pagenumber, (default:1)
     * @param {number} [pagesize] Elements per Page, (default:10)
     * @param {string} [articletype] Type of the Article (&#x27;null&#x27; &#x3D; Filter disabled, possible values: BITMASK values: 1 &#x3D; basearticle, 2 &#x3D; book article, 4 &#x3D; contentarticle, 8 &#x3D; eventarticle, 16 &#x3D; pressarticle, 32 &#x3D; recipe, 64 &#x3D; touroperator , 128 &#x3D; b2b), (also possible for compatibily reasons: basisartikel, buchtippartikel, contentartikel, veranstaltungsartikel, presseartikel, rezeptartikel, reiseveranstalter, b2bartikel ) (default:&#x27;255&#x27; &#x3D;&#x3D; ALL), REFERENCE TO: GET /api/ArticleTypes
     * @param {string} [articlesubtype] Sub Type of the Article (depends on the Maintype of the Article &#x27;null&#x27; &#x3D; Filter disabled)
     * @param {string} [idlist] IDFilter (Separator &#x27;,&#x27; List of Article IDs), (default:&#x27;null&#x27;)
     * @param {string} [odhtagfilter] ODH Taglist Filter (refers to Array SmgTags) (String, Separator &#x27;,&#x27; more Tags possible, available Tags reference to &#x27;api/ODHTag?validforentity&#x3D;article&#x27;), (default:&#x27;null&#x27;)
     * @param {boolean} [active] Active Articles Filter (possible Values: &#x27;true&#x27; only Active Articles, &#x27;false&#x27; only Disabled Articles
     * @param {boolean} [odhactive] ODH Active (Published) Activities Filter (Refers to field SmgActive) Article Filter (possible Values: &#x27;true&#x27; only published Article, &#x27;false&#x27; only not published Articles, (default:&#x27;null&#x27;)
     * @param {string} [seed] Seed &#x27;1 - 10&#x27; for Random Sorting, &#x27;0&#x27; generates a Random Seed, &#x27;null&#x27; disables Random Sorting, (default:null)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    articleGetArticleListLocalized: function articleGetArticleListLocalized(language, pagenumber, pagesize, articletype, articlesubtype, idlist, odhtagfilter, active, odhactive, seed, options) {
      return article_api_ArticleApiFp(configuration).articleGetArticleListLocalized(language, pagenumber, pagesize, articletype, articlesubtype, idlist, odhtagfilter, active, odhactive, seed, options).then(function (request) {
        return request(axios, basePath);
      });
    },

    /**
     *
     * @summary GET Article List Reduced
     * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)
     * @param {string} [articletype] Type of the Article (&#x27;null&#x27; &#x3D; Filter disabled, possible values: BITMASK values: 1 &#x3D; basearticle, 2 &#x3D; book article, 4 &#x3D; contentarticle, 8 &#x3D; eventarticle, 16 &#x3D; pressarticle, 32 &#x3D; recipe, 64 &#x3D; touroperator , 128 &#x3D; b2b), (also possible for compatibily reasons: basisartikel, buchtippartikel, contentartikel, veranstaltungsartikel, presseartikel, rezeptartikel, reiseveranstalter, b2bartikel ) (default:&#x27;255&#x27; &#x3D;&#x3D; ALL), REFERENCE TO: GET /api/ArticleTypes
     * @param {string} [articlesubtype] Sub Type of the Article (depends on the Maintype of the Article &#x27;null&#x27; &#x3D; Filter disabled)
     * @param {string} [odhtagfilter] ODH Taglist Filter (refers to Array SmgTags) (String, Separator &#x27;,&#x27; more Tags possible, available Tags reference to &#x27;api/ODHTag?validforentity&#x3D;article&#x27;), (default:&#x27;null&#x27;)
     * @param {boolean} [active] Active Articles Filter (possible Values: &#x27;true&#x27; only Active Articles, &#x27;false&#x27; only Disabled Articles
     * @param {boolean} [odhactive] ODH Active (Published) Activities Filter (Refers to field SmgActive) Article Filter (possible Values: &#x27;true&#x27; only published Article, &#x27;false&#x27; only not published Articles, (default:&#x27;null&#x27;)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    articleGetArticleReducedList: function articleGetArticleReducedList(language, articletype, articlesubtype, odhtagfilter, active, odhactive, options) {
      return article_api_ArticleApiFp(configuration).articleGetArticleReducedList(language, articletype, articlesubtype, odhtagfilter, active, odhactive, options).then(function (request) {
        return request(axios, basePath);
      });
    }
  };
};
/**
 * ArticleApi - object-oriented interface
 * @export
 * @class ArticleApi
 * @extends {BaseAPI}
 */

var article_api_ArticleApi = /*#__PURE__*/function (_BaseAPI) {
  _inherits(ArticleApi, _BaseAPI);

  var _super = _createSuper(ArticleApi);

  function ArticleApi() {
    _classCallCheck(this, ArticleApi);

    return _super.apply(this, arguments);
  }

  _createClass(ArticleApi, [{
    key: "articleGetActivitySingle",

    /**
     *
     * @summary GET Article Single
     * @param {string} id ID of the Article
     * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)
     * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ArticleApi
     */
    value: function articleGetActivitySingle(id, fields, language, options) {
      var _this = this;

      return article_api_ArticleApiFp(this.configuration).articleGetActivitySingle(id, fields, language, options).then(function (request) {
        return request(_this.axios, _this.basePath);
      });
    }
    /**
     *
     * @summary GET Article Single Localized
     * @param {string} id ID of the Article
     * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ArticleApi
     */

  }, {
    key: "articleGetActivitySingleLocalized",
    value: function articleGetActivitySingleLocalized(id, language, options) {
      var _this2 = this;

      return article_api_ArticleApiFp(this.configuration).articleGetActivitySingleLocalized(id, language, options).then(function (request) {
        return request(_this2.axios, _this2.basePath);
      });
    }
    /**
     *
     * @summary GET Article Changed List by Date
     * @param {number} [pagenumber] Pagenumber, (default:1)
     * @param {number} [pagesize] Elements per Page (max 1024), (default:10)
     * @param {string} [seed] Seed &#x27;1 - 10&#x27; for Random Sorting, &#x27;0&#x27; generates a Random Seed, &#x27;null&#x27; disables Random Sorting, (default:null)
     * @param {string} [updatefrom] Date from Format (yyyy-MM-dd) (all Article with LastChange &amp;gt;&#x3D; datefrom are passed), (default: DateTime.Now - 1 Day)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ArticleApi
     */

  }, {
    key: "articleGetAllArticleChanged",
    value: function articleGetAllArticleChanged(pagenumber, pagesize, seed, updatefrom, options) {
      var _this3 = this;

      return article_api_ArticleApiFp(this.configuration).articleGetAllArticleChanged(pagenumber, pagesize, seed, updatefrom, options).then(function (request) {
        return request(_this3.axios, _this3.basePath);
      });
    }
    /**
     *
     * @summary GET Article Types Single
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ArticleApi
     */

  }, {
    key: "articleGetAllArticleTypeSingle",
    value: function articleGetAllArticleTypeSingle(id, options) {
      var _this4 = this;

      return article_api_ArticleApiFp(this.configuration).articleGetAllArticleTypeSingle(id, options).then(function (request) {
        return request(_this4.axios, _this4.basePath);
      });
    }
    /**
     *
     * @summary GET Article Types List
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ArticleApi
     */

  }, {
    key: "articleGetAllArticleTypesList",
    value: function articleGetAllArticleTypesList(options) {
      var _this5 = this;

      return article_api_ArticleApiFp(this.configuration).articleGetAllArticleTypesList(options).then(function (request) {
        return request(_this5.axios, _this5.basePath);
      });
    }
    /**
     *
     * @summary GET Article List
     * @param {number} [pagenumber] Pagenumber, (default:1)
     * @param {number} [pagesize] Elements per Page, (default:10)
     * @param {string} [articletype] Type of the Article (&#x27;null&#x27; &#x3D; Filter disabled, possible values: BITMASK values: 1 &#x3D; basearticle, 2 &#x3D; book article, 4 &#x3D; contentarticle, 8 &#x3D; eventarticle, 16 &#x3D; pressarticle, 32 &#x3D; recipe, 64 &#x3D; touroperator , 128 &#x3D; b2b), (also possible for compatibily reasons: basisartikel, buchtippartikel, contentartikel, veranstaltungsartikel, presseartikel, rezeptartikel, reiseveranstalter, b2bartikel ) (default:&#x27;255&#x27; &#x3D;&#x3D; ALL), REFERENCE TO: GET /api/ArticleTypes
     * @param {string} [articlesubtype] Sub Type of the Article (depends on the Maintype of the Article &#x27;null&#x27; &#x3D; Filter disabled)
     * @param {string} [idlist] IDFilter (Separator &#x27;,&#x27; List of Article IDs), (default:&#x27;null&#x27;)
     * @param {string} [langfilter] Language Filter (Gets only Articles Available in the passed Language)
     * @param {boolean} [sortbyarticledate] Sort By Articledate (&#x27;true&#x27; sorts Articles by Articledate)
     * @param {string} [odhtagfilter] ODH Taglist Filter (refers to Array SmgTags) (String, Separator &#x27;,&#x27; more Tags possible, available Tags reference to &#x27;api/ODHTag?validforentity&#x3D;article&#x27;), (default:&#x27;null&#x27;)
     * @param {boolean} [active] Active Articles Filter (possible Values: &#x27;true&#x27; only Active Articles, &#x27;false&#x27; only Disabled Articles
     * @param {boolean} [odhactive] ODH Active (Published) Activities Filter (Refers to field SmgActive) Article Filter (possible Values: &#x27;true&#x27; only published Article, &#x27;false&#x27; only not published Articles, (default:&#x27;null&#x27;)
     * @param {string} [seed] Seed &#x27;1 - 10&#x27; for Random Sorting, &#x27;0&#x27; generates a Random Seed, &#x27;null&#x27; disables Random Sorting, (default:null)
     * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)
     * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)
     * @param {string} [updatefrom] Date from Format (yyyy-MM-dd) (all GBActivityPoi with LastChange &amp;gt;&#x3D; datefrom are passed), (default: null)
     * @param {string} [searchfilter] String to search for, Title in all languages are searched, (default: null)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ArticleApi
     */

  }, {
    key: "articleGetArticleList",
    value: function articleGetArticleList(pagenumber, pagesize, articletype, articlesubtype, idlist, langfilter, sortbyarticledate, odhtagfilter, active, odhactive, seed, fields, language, updatefrom, searchfilter, options) {
      var _this6 = this;

      return article_api_ArticleApiFp(this.configuration).articleGetArticleList(pagenumber, pagesize, articletype, articlesubtype, idlist, langfilter, sortbyarticledate, odhtagfilter, active, odhactive, seed, fields, language, updatefrom, searchfilter, options).then(function (request) {
        return request(_this6.axios, _this6.basePath);
      });
    }
    /**
     *
     * @summary GET Article List Localized
     * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)
     * @param {number} [pagenumber] Pagenumber, (default:1)
     * @param {number} [pagesize] Elements per Page, (default:10)
     * @param {string} [articletype] Type of the Article (&#x27;null&#x27; &#x3D; Filter disabled, possible values: BITMASK values: 1 &#x3D; basearticle, 2 &#x3D; book article, 4 &#x3D; contentarticle, 8 &#x3D; eventarticle, 16 &#x3D; pressarticle, 32 &#x3D; recipe, 64 &#x3D; touroperator , 128 &#x3D; b2b), (also possible for compatibily reasons: basisartikel, buchtippartikel, contentartikel, veranstaltungsartikel, presseartikel, rezeptartikel, reiseveranstalter, b2bartikel ) (default:&#x27;255&#x27; &#x3D;&#x3D; ALL), REFERENCE TO: GET /api/ArticleTypes
     * @param {string} [articlesubtype] Sub Type of the Article (depends on the Maintype of the Article &#x27;null&#x27; &#x3D; Filter disabled)
     * @param {string} [idlist] IDFilter (Separator &#x27;,&#x27; List of Article IDs), (default:&#x27;null&#x27;)
     * @param {string} [odhtagfilter] ODH Taglist Filter (refers to Array SmgTags) (String, Separator &#x27;,&#x27; more Tags possible, available Tags reference to &#x27;api/ODHTag?validforentity&#x3D;article&#x27;), (default:&#x27;null&#x27;)
     * @param {boolean} [active] Active Articles Filter (possible Values: &#x27;true&#x27; only Active Articles, &#x27;false&#x27; only Disabled Articles
     * @param {boolean} [odhactive] ODH Active (Published) Activities Filter (Refers to field SmgActive) Article Filter (possible Values: &#x27;true&#x27; only published Article, &#x27;false&#x27; only not published Articles, (default:&#x27;null&#x27;)
     * @param {string} [seed] Seed &#x27;1 - 10&#x27; for Random Sorting, &#x27;0&#x27; generates a Random Seed, &#x27;null&#x27; disables Random Sorting, (default:null)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ArticleApi
     */

  }, {
    key: "articleGetArticleListLocalized",
    value: function articleGetArticleListLocalized(language, pagenumber, pagesize, articletype, articlesubtype, idlist, odhtagfilter, active, odhactive, seed, options) {
      var _this7 = this;

      return article_api_ArticleApiFp(this.configuration).articleGetArticleListLocalized(language, pagenumber, pagesize, articletype, articlesubtype, idlist, odhtagfilter, active, odhactive, seed, options).then(function (request) {
        return request(_this7.axios, _this7.basePath);
      });
    }
    /**
     *
     * @summary GET Article List Reduced
     * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)
     * @param {string} [articletype] Type of the Article (&#x27;null&#x27; &#x3D; Filter disabled, possible values: BITMASK values: 1 &#x3D; basearticle, 2 &#x3D; book article, 4 &#x3D; contentarticle, 8 &#x3D; eventarticle, 16 &#x3D; pressarticle, 32 &#x3D; recipe, 64 &#x3D; touroperator , 128 &#x3D; b2b), (also possible for compatibily reasons: basisartikel, buchtippartikel, contentartikel, veranstaltungsartikel, presseartikel, rezeptartikel, reiseveranstalter, b2bartikel ) (default:&#x27;255&#x27; &#x3D;&#x3D; ALL), REFERENCE TO: GET /api/ArticleTypes
     * @param {string} [articlesubtype] Sub Type of the Article (depends on the Maintype of the Article &#x27;null&#x27; &#x3D; Filter disabled)
     * @param {string} [odhtagfilter] ODH Taglist Filter (refers to Array SmgTags) (String, Separator &#x27;,&#x27; more Tags possible, available Tags reference to &#x27;api/ODHTag?validforentity&#x3D;article&#x27;), (default:&#x27;null&#x27;)
     * @param {boolean} [active] Active Articles Filter (possible Values: &#x27;true&#x27; only Active Articles, &#x27;false&#x27; only Disabled Articles
     * @param {boolean} [odhactive] ODH Active (Published) Activities Filter (Refers to field SmgActive) Article Filter (possible Values: &#x27;true&#x27; only published Article, &#x27;false&#x27; only not published Articles, (default:&#x27;null&#x27;)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ArticleApi
     */

  }, {
    key: "articleGetArticleReducedList",
    value: function articleGetArticleReducedList(language, articletype, articlesubtype, odhtagfilter, active, odhactive, options) {
      var _this8 = this;

      return article_api_ArticleApiFp(this.configuration).articleGetArticleReducedList(language, articletype, articlesubtype, odhtagfilter, active, odhactive, options).then(function (request) {
        return request(_this8.axios, _this8.basePath);
      });
    }
  }]);

  return ArticleApi;
}(base_BaseAPI);
// CONCATENATED MODULE: ./src/api/apis/common-api.ts

















/* tslint:disable */

/* eslint-disable */

/**
 * Open Data Hub Api Tourism
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: V1
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
 // Some imports not used depending on template conditions
// @ts-ignore


/**
 * CommonApi - axios parameter creator
 * @export
 */

var common_api_CommonApiAxiosParamCreator = function CommonApiAxiosParamCreator(configuration) {
  return {
    /**
     *
     * @summary GET Area Single
     * @param {string} id ID of the requested data
     * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)
     * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    commonGetAreaSingle: function () {
      var _commonGetAreaSingle = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(id, fields, language) {
        var options,
            localVarPath,
            localVarUrlObj,
            baseOptions,
            localVarRequestOptions,
            localVarHeaderParameter,
            localVarQueryParameter,
            localVarAccessTokenValue,
            query,
            key,
            _key,
            headersFromBaseOptions,
            _args = arguments;

        return regeneratorRuntime.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                options = _args.length > 3 && _args[3] !== undefined ? _args[3] : {};

                if (!(id === null || id === undefined)) {
                  _context.next = 3;
                  break;
                }

                throw new base_RequiredError('id', 'Required parameter id was null or undefined when calling commonGetAreaSingle.');

              case 3:
                localVarPath = "/api/Area/{id}".replace("{".concat("id", "}"), encodeURIComponent(String(id))); // use dummy base URL string because the URL constructor only accepts absolute URLs.

                localVarUrlObj = new URL(localVarPath, 'https://example.com');

                if (configuration) {
                  baseOptions = configuration.baseOptions;
                }

                localVarRequestOptions = _objectSpread2(_objectSpread2({
                  method: 'GET'
                }, baseOptions), options);
                localVarHeaderParameter = {};
                localVarQueryParameter = {}; // authentication oauth2 required
                // oauth required

                if (!(configuration && configuration.accessToken)) {
                  _context.next = 21;
                  break;
                }

                if (!(typeof configuration.accessToken === 'function')) {
                  _context.next = 16;
                  break;
                }

                _context.next = 13;
                return configuration.accessToken("oauth2", [""]);

              case 13:
                _context.t0 = _context.sent;
                _context.next = 19;
                break;

              case 16:
                _context.next = 18;
                return configuration.accessToken;

              case 18:
                _context.t0 = _context.sent;

              case 19:
                localVarAccessTokenValue = _context.t0;
                localVarHeaderParameter["Authorization"] = "Bearer " + localVarAccessTokenValue;

              case 21:
                if (fields !== undefined) {
                  localVarQueryParameter['fields'] = fields;
                }

                if (language !== undefined) {
                  localVarQueryParameter['language'] = language;
                }

                query = new URLSearchParams(localVarUrlObj.search);

                for (key in localVarQueryParameter) {
                  query.set(key, localVarQueryParameter[key]);
                }

                for (_key in options.query) {
                  query.set(_key, options.query[_key]);
                }

                localVarUrlObj.search = new URLSearchParams(query).toString();
                headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                localVarRequestOptions.headers = _objectSpread2(_objectSpread2(_objectSpread2({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                return _context.abrupt("return", {
                  url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                  options: localVarRequestOptions
                });

              case 30:
              case "end":
                return _context.stop();
            }
          }
        }, _callee);
      }));

      function commonGetAreaSingle(_x, _x2, _x3) {
        return _commonGetAreaSingle.apply(this, arguments);
      }

      return commonGetAreaSingle;
    }(),

    /**
     *
     * @summary GET Area List
     * @param {number} [elements] Elements to retrieve (0 &#x3D; Get All)
     * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)
     * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    commonGetAreas: function () {
      var _commonGetAreas = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(elements, fields, language) {
        var options,
            localVarPath,
            localVarUrlObj,
            baseOptions,
            localVarRequestOptions,
            localVarHeaderParameter,
            localVarQueryParameter,
            localVarAccessTokenValue,
            query,
            key,
            _key2,
            headersFromBaseOptions,
            _args2 = arguments;

        return regeneratorRuntime.wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                options = _args2.length > 3 && _args2[3] !== undefined ? _args2[3] : {};
                localVarPath = "/api/Area"; // use dummy base URL string because the URL constructor only accepts absolute URLs.

                localVarUrlObj = new URL(localVarPath, 'https://example.com');

                if (configuration) {
                  baseOptions = configuration.baseOptions;
                }

                localVarRequestOptions = _objectSpread2(_objectSpread2({
                  method: 'GET'
                }, baseOptions), options);
                localVarHeaderParameter = {};
                localVarQueryParameter = {}; // authentication oauth2 required
                // oauth required

                if (!(configuration && configuration.accessToken)) {
                  _context2.next = 19;
                  break;
                }

                if (!(typeof configuration.accessToken === 'function')) {
                  _context2.next = 14;
                  break;
                }

                _context2.next = 11;
                return configuration.accessToken("oauth2", [""]);

              case 11:
                _context2.t0 = _context2.sent;
                _context2.next = 17;
                break;

              case 14:
                _context2.next = 16;
                return configuration.accessToken;

              case 16:
                _context2.t0 = _context2.sent;

              case 17:
                localVarAccessTokenValue = _context2.t0;
                localVarHeaderParameter["Authorization"] = "Bearer " + localVarAccessTokenValue;

              case 19:
                if (elements !== undefined) {
                  localVarQueryParameter['elements'] = elements;
                }

                if (fields !== undefined) {
                  localVarQueryParameter['fields'] = fields;
                }

                if (language !== undefined) {
                  localVarQueryParameter['language'] = language;
                }

                query = new URLSearchParams(localVarUrlObj.search);

                for (key in localVarQueryParameter) {
                  query.set(key, localVarQueryParameter[key]);
                }

                for (_key2 in options.query) {
                  query.set(_key2, options.query[_key2]);
                }

                localVarUrlObj.search = new URLSearchParams(query).toString();
                headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                localVarRequestOptions.headers = _objectSpread2(_objectSpread2(_objectSpread2({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                return _context2.abrupt("return", {
                  url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                  options: localVarRequestOptions
                });

              case 29:
              case "end":
                return _context2.stop();
            }
          }
        }, _callee2);
      }));

      function commonGetAreas(_x4, _x5, _x6) {
        return _commonGetAreas.apply(this, arguments);
      }

      return commonGetAreas;
    }(),

    /**
     *
     * @summary GET District List
     * @param {number} [elements] Elements to retrieve (0 &#x3D; Get All)
     * @param {string} [visibleinsearch] Filter only Elements flagged with visibleinsearch: (possible values: &#x27;true&#x27;,&#x27;false&#x27;), (default:&#x27;false&#x27;)
     * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)
     * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)
     * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    commonGetDistrict: function () {
      var _commonGetDistrict = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(elements, visibleinsearch, latitude, longitude, radius, fields, language) {
        var options,
            localVarPath,
            localVarUrlObj,
            baseOptions,
            localVarRequestOptions,
            localVarHeaderParameter,
            localVarQueryParameter,
            localVarAccessTokenValue,
            query,
            key,
            _key3,
            headersFromBaseOptions,
            _args3 = arguments;

        return regeneratorRuntime.wrap(function _callee3$(_context3) {
          while (1) {
            switch (_context3.prev = _context3.next) {
              case 0:
                options = _args3.length > 7 && _args3[7] !== undefined ? _args3[7] : {};
                localVarPath = "/api/District"; // use dummy base URL string because the URL constructor only accepts absolute URLs.

                localVarUrlObj = new URL(localVarPath, 'https://example.com');

                if (configuration) {
                  baseOptions = configuration.baseOptions;
                }

                localVarRequestOptions = _objectSpread2(_objectSpread2({
                  method: 'GET'
                }, baseOptions), options);
                localVarHeaderParameter = {};
                localVarQueryParameter = {}; // authentication oauth2 required
                // oauth required

                if (!(configuration && configuration.accessToken)) {
                  _context3.next = 19;
                  break;
                }

                if (!(typeof configuration.accessToken === 'function')) {
                  _context3.next = 14;
                  break;
                }

                _context3.next = 11;
                return configuration.accessToken("oauth2", [""]);

              case 11:
                _context3.t0 = _context3.sent;
                _context3.next = 17;
                break;

              case 14:
                _context3.next = 16;
                return configuration.accessToken;

              case 16:
                _context3.t0 = _context3.sent;

              case 17:
                localVarAccessTokenValue = _context3.t0;
                localVarHeaderParameter["Authorization"] = "Bearer " + localVarAccessTokenValue;

              case 19:
                if (elements !== undefined) {
                  localVarQueryParameter['elements'] = elements;
                }

                if (visibleinsearch !== undefined) {
                  localVarQueryParameter['visibleinsearch'] = visibleinsearch;
                }

                if (latitude !== undefined) {
                  localVarQueryParameter['latitude'] = latitude;
                }

                if (longitude !== undefined) {
                  localVarQueryParameter['longitude'] = longitude;
                }

                if (radius !== undefined) {
                  localVarQueryParameter['radius'] = radius;
                }

                if (fields !== undefined) {
                  localVarQueryParameter['fields'] = fields;
                }

                if (language !== undefined) {
                  localVarQueryParameter['language'] = language;
                }

                query = new URLSearchParams(localVarUrlObj.search);

                for (key in localVarQueryParameter) {
                  query.set(key, localVarQueryParameter[key]);
                }

                for (_key3 in options.query) {
                  query.set(_key3, options.query[_key3]);
                }

                localVarUrlObj.search = new URLSearchParams(query).toString();
                headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                localVarRequestOptions.headers = _objectSpread2(_objectSpread2(_objectSpread2({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                return _context3.abrupt("return", {
                  url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                  options: localVarRequestOptions
                });

              case 33:
              case "end":
                return _context3.stop();
            }
          }
        }, _callee3);
      }));

      function commonGetDistrict(_x7, _x8, _x9, _x10, _x11, _x12, _x13) {
        return _commonGetDistrict.apply(this, arguments);
      }

      return commonGetDistrict;
    }(),

    /**
     *
     * @summary GET District Localized List
     * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)
     * @param {number} [elements] Elements to retrieve (0 &#x3D; Get All)
     * @param {string} [visibleinsearch] Filter only Elements flagged with visibleinsearch: (possible values: &#x27;true&#x27;,&#x27;false&#x27;), (default:&#x27;false&#x27;)
     * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    commonGetDistrictLocalized: function () {
      var _commonGetDistrictLocalized = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(language, elements, visibleinsearch, latitude, longitude, radius) {
        var options,
            localVarPath,
            localVarUrlObj,
            baseOptions,
            localVarRequestOptions,
            localVarHeaderParameter,
            localVarQueryParameter,
            localVarAccessTokenValue,
            query,
            key,
            _key4,
            headersFromBaseOptions,
            _args4 = arguments;

        return regeneratorRuntime.wrap(function _callee4$(_context4) {
          while (1) {
            switch (_context4.prev = _context4.next) {
              case 0:
                options = _args4.length > 6 && _args4[6] !== undefined ? _args4[6] : {};
                localVarPath = "/api/DistrictLocalized"; // use dummy base URL string because the URL constructor only accepts absolute URLs.

                localVarUrlObj = new URL(localVarPath, 'https://example.com');

                if (configuration) {
                  baseOptions = configuration.baseOptions;
                }

                localVarRequestOptions = _objectSpread2(_objectSpread2({
                  method: 'GET'
                }, baseOptions), options);
                localVarHeaderParameter = {};
                localVarQueryParameter = {}; // authentication oauth2 required
                // oauth required

                if (!(configuration && configuration.accessToken)) {
                  _context4.next = 19;
                  break;
                }

                if (!(typeof configuration.accessToken === 'function')) {
                  _context4.next = 14;
                  break;
                }

                _context4.next = 11;
                return configuration.accessToken("oauth2", [""]);

              case 11:
                _context4.t0 = _context4.sent;
                _context4.next = 17;
                break;

              case 14:
                _context4.next = 16;
                return configuration.accessToken;

              case 16:
                _context4.t0 = _context4.sent;

              case 17:
                localVarAccessTokenValue = _context4.t0;
                localVarHeaderParameter["Authorization"] = "Bearer " + localVarAccessTokenValue;

              case 19:
                if (language !== undefined) {
                  localVarQueryParameter['language'] = language;
                }

                if (elements !== undefined) {
                  localVarQueryParameter['elements'] = elements;
                }

                if (visibleinsearch !== undefined) {
                  localVarQueryParameter['visibleinsearch'] = visibleinsearch;
                }

                if (latitude !== undefined) {
                  localVarQueryParameter['latitude'] = latitude;
                }

                if (longitude !== undefined) {
                  localVarQueryParameter['longitude'] = longitude;
                }

                if (radius !== undefined) {
                  localVarQueryParameter['radius'] = radius;
                }

                query = new URLSearchParams(localVarUrlObj.search);

                for (key in localVarQueryParameter) {
                  query.set(key, localVarQueryParameter[key]);
                }

                for (_key4 in options.query) {
                  query.set(_key4, options.query[_key4]);
                }

                localVarUrlObj.search = new URLSearchParams(query).toString();
                headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                localVarRequestOptions.headers = _objectSpread2(_objectSpread2(_objectSpread2({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                return _context4.abrupt("return", {
                  url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                  options: localVarRequestOptions
                });

              case 32:
              case "end":
                return _context4.stop();
            }
          }
        }, _callee4);
      }));

      function commonGetDistrictLocalized(_x14, _x15, _x16, _x17, _x18, _x19) {
        return _commonGetDistrictLocalized.apply(this, arguments);
      }

      return commonGetDistrictLocalized;
    }(),

    /**
     *
     * @summary GET District Reduced List
     * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)
     * @param {number} [elements] Elements to retrieve (0 &#x3D; Get All)
     * @param {string} [visibleinsearch] Filter only Elements flagged with visibleinsearch: (possible values: &#x27;true&#x27;,&#x27;false&#x27;), (default:&#x27;false&#x27;)
     * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    commonGetDistrictReduced: function () {
      var _commonGetDistrictReduced = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(language, elements, visibleinsearch, latitude, longitude, radius) {
        var options,
            localVarPath,
            localVarUrlObj,
            baseOptions,
            localVarRequestOptions,
            localVarHeaderParameter,
            localVarQueryParameter,
            localVarAccessTokenValue,
            query,
            key,
            _key5,
            headersFromBaseOptions,
            _args5 = arguments;

        return regeneratorRuntime.wrap(function _callee5$(_context5) {
          while (1) {
            switch (_context5.prev = _context5.next) {
              case 0:
                options = _args5.length > 6 && _args5[6] !== undefined ? _args5[6] : {};
                localVarPath = "/api/DistrictReduced"; // use dummy base URL string because the URL constructor only accepts absolute URLs.

                localVarUrlObj = new URL(localVarPath, 'https://example.com');

                if (configuration) {
                  baseOptions = configuration.baseOptions;
                }

                localVarRequestOptions = _objectSpread2(_objectSpread2({
                  method: 'GET'
                }, baseOptions), options);
                localVarHeaderParameter = {};
                localVarQueryParameter = {}; // authentication oauth2 required
                // oauth required

                if (!(configuration && configuration.accessToken)) {
                  _context5.next = 19;
                  break;
                }

                if (!(typeof configuration.accessToken === 'function')) {
                  _context5.next = 14;
                  break;
                }

                _context5.next = 11;
                return configuration.accessToken("oauth2", [""]);

              case 11:
                _context5.t0 = _context5.sent;
                _context5.next = 17;
                break;

              case 14:
                _context5.next = 16;
                return configuration.accessToken;

              case 16:
                _context5.t0 = _context5.sent;

              case 17:
                localVarAccessTokenValue = _context5.t0;
                localVarHeaderParameter["Authorization"] = "Bearer " + localVarAccessTokenValue;

              case 19:
                if (language !== undefined) {
                  localVarQueryParameter['language'] = language;
                }

                if (elements !== undefined) {
                  localVarQueryParameter['elements'] = elements;
                }

                if (visibleinsearch !== undefined) {
                  localVarQueryParameter['visibleinsearch'] = visibleinsearch;
                }

                if (latitude !== undefined) {
                  localVarQueryParameter['latitude'] = latitude;
                }

                if (longitude !== undefined) {
                  localVarQueryParameter['longitude'] = longitude;
                }

                if (radius !== undefined) {
                  localVarQueryParameter['radius'] = radius;
                }

                query = new URLSearchParams(localVarUrlObj.search);

                for (key in localVarQueryParameter) {
                  query.set(key, localVarQueryParameter[key]);
                }

                for (_key5 in options.query) {
                  query.set(_key5, options.query[_key5]);
                }

                localVarUrlObj.search = new URLSearchParams(query).toString();
                headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                localVarRequestOptions.headers = _objectSpread2(_objectSpread2(_objectSpread2({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                return _context5.abrupt("return", {
                  url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                  options: localVarRequestOptions
                });

              case 32:
              case "end":
                return _context5.stop();
            }
          }
        }, _callee5);
      }));

      function commonGetDistrictReduced(_x20, _x21, _x22, _x23, _x24, _x25) {
        return _commonGetDistrictReduced.apply(this, arguments);
      }

      return commonGetDistrictReduced;
    }(),

    /**
     *
     * @summary GET District Single
     * @param {string} id ID of the requested data
     * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)
     * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    commonGetDistrictSingle: function () {
      var _commonGetDistrictSingle = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6(id, fields, language) {
        var options,
            localVarPath,
            localVarUrlObj,
            baseOptions,
            localVarRequestOptions,
            localVarHeaderParameter,
            localVarQueryParameter,
            localVarAccessTokenValue,
            query,
            key,
            _key6,
            headersFromBaseOptions,
            _args6 = arguments;

        return regeneratorRuntime.wrap(function _callee6$(_context6) {
          while (1) {
            switch (_context6.prev = _context6.next) {
              case 0:
                options = _args6.length > 3 && _args6[3] !== undefined ? _args6[3] : {};

                if (!(id === null || id === undefined)) {
                  _context6.next = 3;
                  break;
                }

                throw new base_RequiredError('id', 'Required parameter id was null or undefined when calling commonGetDistrictSingle.');

              case 3:
                localVarPath = "/api/District/{id}".replace("{".concat("id", "}"), encodeURIComponent(String(id))); // use dummy base URL string because the URL constructor only accepts absolute URLs.

                localVarUrlObj = new URL(localVarPath, 'https://example.com');

                if (configuration) {
                  baseOptions = configuration.baseOptions;
                }

                localVarRequestOptions = _objectSpread2(_objectSpread2({
                  method: 'GET'
                }, baseOptions), options);
                localVarHeaderParameter = {};
                localVarQueryParameter = {}; // authentication oauth2 required
                // oauth required

                if (!(configuration && configuration.accessToken)) {
                  _context6.next = 21;
                  break;
                }

                if (!(typeof configuration.accessToken === 'function')) {
                  _context6.next = 16;
                  break;
                }

                _context6.next = 13;
                return configuration.accessToken("oauth2", [""]);

              case 13:
                _context6.t0 = _context6.sent;
                _context6.next = 19;
                break;

              case 16:
                _context6.next = 18;
                return configuration.accessToken;

              case 18:
                _context6.t0 = _context6.sent;

              case 19:
                localVarAccessTokenValue = _context6.t0;
                localVarHeaderParameter["Authorization"] = "Bearer " + localVarAccessTokenValue;

              case 21:
                if (fields !== undefined) {
                  localVarQueryParameter['fields'] = fields;
                }

                if (language !== undefined) {
                  localVarQueryParameter['language'] = language;
                }

                query = new URLSearchParams(localVarUrlObj.search);

                for (key in localVarQueryParameter) {
                  query.set(key, localVarQueryParameter[key]);
                }

                for (_key6 in options.query) {
                  query.set(_key6, options.query[_key6]);
                }

                localVarUrlObj.search = new URLSearchParams(query).toString();
                headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                localVarRequestOptions.headers = _objectSpread2(_objectSpread2(_objectSpread2({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                return _context6.abrupt("return", {
                  url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                  options: localVarRequestOptions
                });

              case 30:
              case "end":
                return _context6.stop();
            }
          }
        }, _callee6);
      }));

      function commonGetDistrictSingle(_x26, _x27, _x28) {
        return _commonGetDistrictSingle.apply(this, arguments);
      }

      return commonGetDistrictSingle;
    }(),

    /**
     *
     * @summary GET District Localized Single
     * @param {string} id ID of the requested data
     * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    commonGetDistrictSingleLocalized: function () {
      var _commonGetDistrictSingleLocalized = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee7(id, language) {
        var options,
            localVarPath,
            localVarUrlObj,
            baseOptions,
            localVarRequestOptions,
            localVarHeaderParameter,
            localVarQueryParameter,
            localVarAccessTokenValue,
            query,
            key,
            _key7,
            headersFromBaseOptions,
            _args7 = arguments;

        return regeneratorRuntime.wrap(function _callee7$(_context7) {
          while (1) {
            switch (_context7.prev = _context7.next) {
              case 0:
                options = _args7.length > 2 && _args7[2] !== undefined ? _args7[2] : {};

                if (!(id === null || id === undefined)) {
                  _context7.next = 3;
                  break;
                }

                throw new base_RequiredError('id', 'Required parameter id was null or undefined when calling commonGetDistrictSingleLocalized.');

              case 3:
                localVarPath = "/api/DistrictLocalized/{id}".replace("{".concat("id", "}"), encodeURIComponent(String(id))); // use dummy base URL string because the URL constructor only accepts absolute URLs.

                localVarUrlObj = new URL(localVarPath, 'https://example.com');

                if (configuration) {
                  baseOptions = configuration.baseOptions;
                }

                localVarRequestOptions = _objectSpread2(_objectSpread2({
                  method: 'GET'
                }, baseOptions), options);
                localVarHeaderParameter = {};
                localVarQueryParameter = {}; // authentication oauth2 required
                // oauth required

                if (!(configuration && configuration.accessToken)) {
                  _context7.next = 21;
                  break;
                }

                if (!(typeof configuration.accessToken === 'function')) {
                  _context7.next = 16;
                  break;
                }

                _context7.next = 13;
                return configuration.accessToken("oauth2", [""]);

              case 13:
                _context7.t0 = _context7.sent;
                _context7.next = 19;
                break;

              case 16:
                _context7.next = 18;
                return configuration.accessToken;

              case 18:
                _context7.t0 = _context7.sent;

              case 19:
                localVarAccessTokenValue = _context7.t0;
                localVarHeaderParameter["Authorization"] = "Bearer " + localVarAccessTokenValue;

              case 21:
                if (language !== undefined) {
                  localVarQueryParameter['language'] = language;
                }

                query = new URLSearchParams(localVarUrlObj.search);

                for (key in localVarQueryParameter) {
                  query.set(key, localVarQueryParameter[key]);
                }

                for (_key7 in options.query) {
                  query.set(_key7, options.query[_key7]);
                }

                localVarUrlObj.search = new URLSearchParams(query).toString();
                headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                localVarRequestOptions.headers = _objectSpread2(_objectSpread2(_objectSpread2({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                return _context7.abrupt("return", {
                  url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                  options: localVarRequestOptions
                });

              case 29:
              case "end":
                return _context7.stop();
            }
          }
        }, _callee7);
      }));

      function commonGetDistrictSingleLocalized(_x29, _x30) {
        return _commonGetDistrictSingleLocalized.apply(this, arguments);
      }

      return commonGetDistrictSingleLocalized;
    }(),

    /**
     *
     * @summary GET ExperienceArea Single
     * @param {string} id ID of the requested data
     * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)
     * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    commonGetExperienceAreaSingle: function () {
      var _commonGetExperienceAreaSingle = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee8(id, fields, language) {
        var options,
            localVarPath,
            localVarUrlObj,
            baseOptions,
            localVarRequestOptions,
            localVarHeaderParameter,
            localVarQueryParameter,
            localVarAccessTokenValue,
            query,
            key,
            _key8,
            headersFromBaseOptions,
            _args8 = arguments;

        return regeneratorRuntime.wrap(function _callee8$(_context8) {
          while (1) {
            switch (_context8.prev = _context8.next) {
              case 0:
                options = _args8.length > 3 && _args8[3] !== undefined ? _args8[3] : {};

                if (!(id === null || id === undefined)) {
                  _context8.next = 3;
                  break;
                }

                throw new base_RequiredError('id', 'Required parameter id was null or undefined when calling commonGetExperienceAreaSingle.');

              case 3:
                localVarPath = "/api/ExperienceArea/{id}".replace("{".concat("id", "}"), encodeURIComponent(String(id))); // use dummy base URL string because the URL constructor only accepts absolute URLs.

                localVarUrlObj = new URL(localVarPath, 'https://example.com');

                if (configuration) {
                  baseOptions = configuration.baseOptions;
                }

                localVarRequestOptions = _objectSpread2(_objectSpread2({
                  method: 'GET'
                }, baseOptions), options);
                localVarHeaderParameter = {};
                localVarQueryParameter = {}; // authentication oauth2 required
                // oauth required

                if (!(configuration && configuration.accessToken)) {
                  _context8.next = 21;
                  break;
                }

                if (!(typeof configuration.accessToken === 'function')) {
                  _context8.next = 16;
                  break;
                }

                _context8.next = 13;
                return configuration.accessToken("oauth2", [""]);

              case 13:
                _context8.t0 = _context8.sent;
                _context8.next = 19;
                break;

              case 16:
                _context8.next = 18;
                return configuration.accessToken;

              case 18:
                _context8.t0 = _context8.sent;

              case 19:
                localVarAccessTokenValue = _context8.t0;
                localVarHeaderParameter["Authorization"] = "Bearer " + localVarAccessTokenValue;

              case 21:
                if (fields !== undefined) {
                  localVarQueryParameter['fields'] = fields;
                }

                if (language !== undefined) {
                  localVarQueryParameter['language'] = language;
                }

                query = new URLSearchParams(localVarUrlObj.search);

                for (key in localVarQueryParameter) {
                  query.set(key, localVarQueryParameter[key]);
                }

                for (_key8 in options.query) {
                  query.set(_key8, options.query[_key8]);
                }

                localVarUrlObj.search = new URLSearchParams(query).toString();
                headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                localVarRequestOptions.headers = _objectSpread2(_objectSpread2(_objectSpread2({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                return _context8.abrupt("return", {
                  url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                  options: localVarRequestOptions
                });

              case 30:
              case "end":
                return _context8.stop();
            }
          }
        }, _callee8);
      }));

      function commonGetExperienceAreaSingle(_x31, _x32, _x33) {
        return _commonGetExperienceAreaSingle.apply(this, arguments);
      }

      return commonGetExperienceAreaSingle;
    }(),

    /**
     *
     * @summary GET ExperienceArea Localized Single
     * @param {string} id ID of the requested data
     * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    commonGetExperienceAreaSingleLocalized: function () {
      var _commonGetExperienceAreaSingleLocalized = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee9(id, language) {
        var options,
            localVarPath,
            localVarUrlObj,
            baseOptions,
            localVarRequestOptions,
            localVarHeaderParameter,
            localVarQueryParameter,
            localVarAccessTokenValue,
            query,
            key,
            _key9,
            headersFromBaseOptions,
            _args9 = arguments;

        return regeneratorRuntime.wrap(function _callee9$(_context9) {
          while (1) {
            switch (_context9.prev = _context9.next) {
              case 0:
                options = _args9.length > 2 && _args9[2] !== undefined ? _args9[2] : {};

                if (!(id === null || id === undefined)) {
                  _context9.next = 3;
                  break;
                }

                throw new base_RequiredError('id', 'Required parameter id was null or undefined when calling commonGetExperienceAreaSingleLocalized.');

              case 3:
                localVarPath = "/api/ExperienceAreaLocalized/{id}".replace("{".concat("id", "}"), encodeURIComponent(String(id))); // use dummy base URL string because the URL constructor only accepts absolute URLs.

                localVarUrlObj = new URL(localVarPath, 'https://example.com');

                if (configuration) {
                  baseOptions = configuration.baseOptions;
                }

                localVarRequestOptions = _objectSpread2(_objectSpread2({
                  method: 'GET'
                }, baseOptions), options);
                localVarHeaderParameter = {};
                localVarQueryParameter = {}; // authentication oauth2 required
                // oauth required

                if (!(configuration && configuration.accessToken)) {
                  _context9.next = 21;
                  break;
                }

                if (!(typeof configuration.accessToken === 'function')) {
                  _context9.next = 16;
                  break;
                }

                _context9.next = 13;
                return configuration.accessToken("oauth2", [""]);

              case 13:
                _context9.t0 = _context9.sent;
                _context9.next = 19;
                break;

              case 16:
                _context9.next = 18;
                return configuration.accessToken;

              case 18:
                _context9.t0 = _context9.sent;

              case 19:
                localVarAccessTokenValue = _context9.t0;
                localVarHeaderParameter["Authorization"] = "Bearer " + localVarAccessTokenValue;

              case 21:
                if (language !== undefined) {
                  localVarQueryParameter['language'] = language;
                }

                query = new URLSearchParams(localVarUrlObj.search);

                for (key in localVarQueryParameter) {
                  query.set(key, localVarQueryParameter[key]);
                }

                for (_key9 in options.query) {
                  query.set(_key9, options.query[_key9]);
                }

                localVarUrlObj.search = new URLSearchParams(query).toString();
                headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                localVarRequestOptions.headers = _objectSpread2(_objectSpread2(_objectSpread2({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                return _context9.abrupt("return", {
                  url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                  options: localVarRequestOptions
                });

              case 29:
              case "end":
                return _context9.stop();
            }
          }
        }, _callee9);
      }));

      function commonGetExperienceAreaSingleLocalized(_x34, _x35) {
        return _commonGetExperienceAreaSingleLocalized.apply(this, arguments);
      }

      return commonGetExperienceAreaSingleLocalized;
    }(),

    /**
     *
     * @summary GET Experiencearea List
     * @param {number} [elements] Elements to retrieve (0 &#x3D; Get All)
     * @param {string} [visibleinsearch] Filter only Elements flagged with visibleinsearch: (possible values: &#x27;true&#x27;,&#x27;false&#x27;), (default:&#x27;false&#x27;)
     * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)
     * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)
     * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    commonGetExperienceAreas: function () {
      var _commonGetExperienceAreas = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee10(elements, visibleinsearch, latitude, longitude, radius, fields, language) {
        var options,
            localVarPath,
            localVarUrlObj,
            baseOptions,
            localVarRequestOptions,
            localVarHeaderParameter,
            localVarQueryParameter,
            localVarAccessTokenValue,
            query,
            key,
            _key10,
            headersFromBaseOptions,
            _args10 = arguments;

        return regeneratorRuntime.wrap(function _callee10$(_context10) {
          while (1) {
            switch (_context10.prev = _context10.next) {
              case 0:
                options = _args10.length > 7 && _args10[7] !== undefined ? _args10[7] : {};
                localVarPath = "/api/ExperienceArea"; // use dummy base URL string because the URL constructor only accepts absolute URLs.

                localVarUrlObj = new URL(localVarPath, 'https://example.com');

                if (configuration) {
                  baseOptions = configuration.baseOptions;
                }

                localVarRequestOptions = _objectSpread2(_objectSpread2({
                  method: 'GET'
                }, baseOptions), options);
                localVarHeaderParameter = {};
                localVarQueryParameter = {}; // authentication oauth2 required
                // oauth required

                if (!(configuration && configuration.accessToken)) {
                  _context10.next = 19;
                  break;
                }

                if (!(typeof configuration.accessToken === 'function')) {
                  _context10.next = 14;
                  break;
                }

                _context10.next = 11;
                return configuration.accessToken("oauth2", [""]);

              case 11:
                _context10.t0 = _context10.sent;
                _context10.next = 17;
                break;

              case 14:
                _context10.next = 16;
                return configuration.accessToken;

              case 16:
                _context10.t0 = _context10.sent;

              case 17:
                localVarAccessTokenValue = _context10.t0;
                localVarHeaderParameter["Authorization"] = "Bearer " + localVarAccessTokenValue;

              case 19:
                if (elements !== undefined) {
                  localVarQueryParameter['elements'] = elements;
                }

                if (visibleinsearch !== undefined) {
                  localVarQueryParameter['visibleinsearch'] = visibleinsearch;
                }

                if (latitude !== undefined) {
                  localVarQueryParameter['latitude'] = latitude;
                }

                if (longitude !== undefined) {
                  localVarQueryParameter['longitude'] = longitude;
                }

                if (radius !== undefined) {
                  localVarQueryParameter['radius'] = radius;
                }

                if (fields !== undefined) {
                  localVarQueryParameter['fields'] = fields;
                }

                if (language !== undefined) {
                  localVarQueryParameter['language'] = language;
                }

                query = new URLSearchParams(localVarUrlObj.search);

                for (key in localVarQueryParameter) {
                  query.set(key, localVarQueryParameter[key]);
                }

                for (_key10 in options.query) {
                  query.set(_key10, options.query[_key10]);
                }

                localVarUrlObj.search = new URLSearchParams(query).toString();
                headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                localVarRequestOptions.headers = _objectSpread2(_objectSpread2(_objectSpread2({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                return _context10.abrupt("return", {
                  url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                  options: localVarRequestOptions
                });

              case 33:
              case "end":
                return _context10.stop();
            }
          }
        }, _callee10);
      }));

      function commonGetExperienceAreas(_x36, _x37, _x38, _x39, _x40, _x41, _x42) {
        return _commonGetExperienceAreas.apply(this, arguments);
      }

      return commonGetExperienceAreas;
    }(),

    /**
     *
     * @summary GET ExperienceArea Localized List
     * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)
     * @param {number} [elements] Elements to retrieve (0 &#x3D; Get All)
     * @param {string} [visibleinsearch] Filter only Elements flagged with visibleinsearch: (possible values: &#x27;true&#x27;,&#x27;false&#x27;), (default:&#x27;false&#x27;)
     * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    commonGetExperienceAreasLocalized: function () {
      var _commonGetExperienceAreasLocalized = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee11(language, elements, visibleinsearch, latitude, longitude, radius) {
        var options,
            localVarPath,
            localVarUrlObj,
            baseOptions,
            localVarRequestOptions,
            localVarHeaderParameter,
            localVarQueryParameter,
            localVarAccessTokenValue,
            query,
            key,
            _key11,
            headersFromBaseOptions,
            _args11 = arguments;

        return regeneratorRuntime.wrap(function _callee11$(_context11) {
          while (1) {
            switch (_context11.prev = _context11.next) {
              case 0:
                options = _args11.length > 6 && _args11[6] !== undefined ? _args11[6] : {};
                localVarPath = "/api/ExperienceAreaLocalized"; // use dummy base URL string because the URL constructor only accepts absolute URLs.

                localVarUrlObj = new URL(localVarPath, 'https://example.com');

                if (configuration) {
                  baseOptions = configuration.baseOptions;
                }

                localVarRequestOptions = _objectSpread2(_objectSpread2({
                  method: 'GET'
                }, baseOptions), options);
                localVarHeaderParameter = {};
                localVarQueryParameter = {}; // authentication oauth2 required
                // oauth required

                if (!(configuration && configuration.accessToken)) {
                  _context11.next = 19;
                  break;
                }

                if (!(typeof configuration.accessToken === 'function')) {
                  _context11.next = 14;
                  break;
                }

                _context11.next = 11;
                return configuration.accessToken("oauth2", [""]);

              case 11:
                _context11.t0 = _context11.sent;
                _context11.next = 17;
                break;

              case 14:
                _context11.next = 16;
                return configuration.accessToken;

              case 16:
                _context11.t0 = _context11.sent;

              case 17:
                localVarAccessTokenValue = _context11.t0;
                localVarHeaderParameter["Authorization"] = "Bearer " + localVarAccessTokenValue;

              case 19:
                if (language !== undefined) {
                  localVarQueryParameter['language'] = language;
                }

                if (elements !== undefined) {
                  localVarQueryParameter['elements'] = elements;
                }

                if (visibleinsearch !== undefined) {
                  localVarQueryParameter['visibleinsearch'] = visibleinsearch;
                }

                if (latitude !== undefined) {
                  localVarQueryParameter['latitude'] = latitude;
                }

                if (longitude !== undefined) {
                  localVarQueryParameter['longitude'] = longitude;
                }

                if (radius !== undefined) {
                  localVarQueryParameter['radius'] = radius;
                }

                query = new URLSearchParams(localVarUrlObj.search);

                for (key in localVarQueryParameter) {
                  query.set(key, localVarQueryParameter[key]);
                }

                for (_key11 in options.query) {
                  query.set(_key11, options.query[_key11]);
                }

                localVarUrlObj.search = new URLSearchParams(query).toString();
                headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                localVarRequestOptions.headers = _objectSpread2(_objectSpread2(_objectSpread2({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                return _context11.abrupt("return", {
                  url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                  options: localVarRequestOptions
                });

              case 32:
              case "end":
                return _context11.stop();
            }
          }
        }, _callee11);
      }));

      function commonGetExperienceAreasLocalized(_x43, _x44, _x45, _x46, _x47, _x48) {
        return _commonGetExperienceAreasLocalized.apply(this, arguments);
      }

      return commonGetExperienceAreasLocalized;
    }(),

    /**
     *
     * @summary GET ExperienceArea Reduced List
     * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)
     * @param {number} [elements] Elements to retrieve (0 &#x3D; Get All)
     * @param {string} [visibleinsearch] Filter only Elements flagged with visibleinsearch: (possible values: &#x27;true&#x27;,&#x27;false&#x27;), (default:&#x27;false&#x27;)
     * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    commonGetExperienceAreasReduced: function () {
      var _commonGetExperienceAreasReduced = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee12(language, elements, visibleinsearch, latitude, longitude, radius) {
        var options,
            localVarPath,
            localVarUrlObj,
            baseOptions,
            localVarRequestOptions,
            localVarHeaderParameter,
            localVarQueryParameter,
            localVarAccessTokenValue,
            query,
            key,
            _key12,
            headersFromBaseOptions,
            _args12 = arguments;

        return regeneratorRuntime.wrap(function _callee12$(_context12) {
          while (1) {
            switch (_context12.prev = _context12.next) {
              case 0:
                options = _args12.length > 6 && _args12[6] !== undefined ? _args12[6] : {};
                localVarPath = "/api/ExperienceAreaReduced"; // use dummy base URL string because the URL constructor only accepts absolute URLs.

                localVarUrlObj = new URL(localVarPath, 'https://example.com');

                if (configuration) {
                  baseOptions = configuration.baseOptions;
                }

                localVarRequestOptions = _objectSpread2(_objectSpread2({
                  method: 'GET'
                }, baseOptions), options);
                localVarHeaderParameter = {};
                localVarQueryParameter = {}; // authentication oauth2 required
                // oauth required

                if (!(configuration && configuration.accessToken)) {
                  _context12.next = 19;
                  break;
                }

                if (!(typeof configuration.accessToken === 'function')) {
                  _context12.next = 14;
                  break;
                }

                _context12.next = 11;
                return configuration.accessToken("oauth2", [""]);

              case 11:
                _context12.t0 = _context12.sent;
                _context12.next = 17;
                break;

              case 14:
                _context12.next = 16;
                return configuration.accessToken;

              case 16:
                _context12.t0 = _context12.sent;

              case 17:
                localVarAccessTokenValue = _context12.t0;
                localVarHeaderParameter["Authorization"] = "Bearer " + localVarAccessTokenValue;

              case 19:
                if (language !== undefined) {
                  localVarQueryParameter['language'] = language;
                }

                if (elements !== undefined) {
                  localVarQueryParameter['elements'] = elements;
                }

                if (visibleinsearch !== undefined) {
                  localVarQueryParameter['visibleinsearch'] = visibleinsearch;
                }

                if (latitude !== undefined) {
                  localVarQueryParameter['latitude'] = latitude;
                }

                if (longitude !== undefined) {
                  localVarQueryParameter['longitude'] = longitude;
                }

                if (radius !== undefined) {
                  localVarQueryParameter['radius'] = radius;
                }

                query = new URLSearchParams(localVarUrlObj.search);

                for (key in localVarQueryParameter) {
                  query.set(key, localVarQueryParameter[key]);
                }

                for (_key12 in options.query) {
                  query.set(_key12, options.query[_key12]);
                }

                localVarUrlObj.search = new URLSearchParams(query).toString();
                headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                localVarRequestOptions.headers = _objectSpread2(_objectSpread2(_objectSpread2({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                return _context12.abrupt("return", {
                  url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                  options: localVarRequestOptions
                });

              case 32:
              case "end":
                return _context12.stop();
            }
          }
        }, _callee12);
      }));

      function commonGetExperienceAreasReduced(_x49, _x50, _x51, _x52, _x53, _x54) {
        return _commonGetExperienceAreasReduced.apply(this, arguments);
      }

      return commonGetExperienceAreasReduced;
    }(),

    /**
     *
     * @summary GET MetaRegion Single
     * @param {string} id ID of the requested data
     * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)
     * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    commonGetMetaRegionSingle: function () {
      var _commonGetMetaRegionSingle = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee13(id, fields, language) {
        var options,
            localVarPath,
            localVarUrlObj,
            baseOptions,
            localVarRequestOptions,
            localVarHeaderParameter,
            localVarQueryParameter,
            localVarAccessTokenValue,
            query,
            key,
            _key13,
            headersFromBaseOptions,
            _args13 = arguments;

        return regeneratorRuntime.wrap(function _callee13$(_context13) {
          while (1) {
            switch (_context13.prev = _context13.next) {
              case 0:
                options = _args13.length > 3 && _args13[3] !== undefined ? _args13[3] : {};

                if (!(id === null || id === undefined)) {
                  _context13.next = 3;
                  break;
                }

                throw new base_RequiredError('id', 'Required parameter id was null or undefined when calling commonGetMetaRegionSingle.');

              case 3:
                localVarPath = "/api/MetaRegion/{id}".replace("{".concat("id", "}"), encodeURIComponent(String(id))); // use dummy base URL string because the URL constructor only accepts absolute URLs.

                localVarUrlObj = new URL(localVarPath, 'https://example.com');

                if (configuration) {
                  baseOptions = configuration.baseOptions;
                }

                localVarRequestOptions = _objectSpread2(_objectSpread2({
                  method: 'GET'
                }, baseOptions), options);
                localVarHeaderParameter = {};
                localVarQueryParameter = {}; // authentication oauth2 required
                // oauth required

                if (!(configuration && configuration.accessToken)) {
                  _context13.next = 21;
                  break;
                }

                if (!(typeof configuration.accessToken === 'function')) {
                  _context13.next = 16;
                  break;
                }

                _context13.next = 13;
                return configuration.accessToken("oauth2", [""]);

              case 13:
                _context13.t0 = _context13.sent;
                _context13.next = 19;
                break;

              case 16:
                _context13.next = 18;
                return configuration.accessToken;

              case 18:
                _context13.t0 = _context13.sent;

              case 19:
                localVarAccessTokenValue = _context13.t0;
                localVarHeaderParameter["Authorization"] = "Bearer " + localVarAccessTokenValue;

              case 21:
                if (fields !== undefined) {
                  localVarQueryParameter['fields'] = fields;
                }

                if (language !== undefined) {
                  localVarQueryParameter['language'] = language;
                }

                query = new URLSearchParams(localVarUrlObj.search);

                for (key in localVarQueryParameter) {
                  query.set(key, localVarQueryParameter[key]);
                }

                for (_key13 in options.query) {
                  query.set(_key13, options.query[_key13]);
                }

                localVarUrlObj.search = new URLSearchParams(query).toString();
                headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                localVarRequestOptions.headers = _objectSpread2(_objectSpread2(_objectSpread2({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                return _context13.abrupt("return", {
                  url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                  options: localVarRequestOptions
                });

              case 30:
              case "end":
                return _context13.stop();
            }
          }
        }, _callee13);
      }));

      function commonGetMetaRegionSingle(_x55, _x56, _x57) {
        return _commonGetMetaRegionSingle.apply(this, arguments);
      }

      return commonGetMetaRegionSingle;
    }(),

    /**
     *
     * @summary GET MetaRegion Localized Single
     * @param {string} id ID of the requested data
     * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    commonGetMetaRegionSingleLocalized: function () {
      var _commonGetMetaRegionSingleLocalized = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee14(id, language) {
        var options,
            localVarPath,
            localVarUrlObj,
            baseOptions,
            localVarRequestOptions,
            localVarHeaderParameter,
            localVarQueryParameter,
            localVarAccessTokenValue,
            query,
            key,
            _key14,
            headersFromBaseOptions,
            _args14 = arguments;

        return regeneratorRuntime.wrap(function _callee14$(_context14) {
          while (1) {
            switch (_context14.prev = _context14.next) {
              case 0:
                options = _args14.length > 2 && _args14[2] !== undefined ? _args14[2] : {};

                if (!(id === null || id === undefined)) {
                  _context14.next = 3;
                  break;
                }

                throw new base_RequiredError('id', 'Required parameter id was null or undefined when calling commonGetMetaRegionSingleLocalized.');

              case 3:
                localVarPath = "/api/MetaRegionLocalized/{id}".replace("{".concat("id", "}"), encodeURIComponent(String(id))); // use dummy base URL string because the URL constructor only accepts absolute URLs.

                localVarUrlObj = new URL(localVarPath, 'https://example.com');

                if (configuration) {
                  baseOptions = configuration.baseOptions;
                }

                localVarRequestOptions = _objectSpread2(_objectSpread2({
                  method: 'GET'
                }, baseOptions), options);
                localVarHeaderParameter = {};
                localVarQueryParameter = {}; // authentication oauth2 required
                // oauth required

                if (!(configuration && configuration.accessToken)) {
                  _context14.next = 21;
                  break;
                }

                if (!(typeof configuration.accessToken === 'function')) {
                  _context14.next = 16;
                  break;
                }

                _context14.next = 13;
                return configuration.accessToken("oauth2", [""]);

              case 13:
                _context14.t0 = _context14.sent;
                _context14.next = 19;
                break;

              case 16:
                _context14.next = 18;
                return configuration.accessToken;

              case 18:
                _context14.t0 = _context14.sent;

              case 19:
                localVarAccessTokenValue = _context14.t0;
                localVarHeaderParameter["Authorization"] = "Bearer " + localVarAccessTokenValue;

              case 21:
                if (language !== undefined) {
                  localVarQueryParameter['language'] = language;
                }

                query = new URLSearchParams(localVarUrlObj.search);

                for (key in localVarQueryParameter) {
                  query.set(key, localVarQueryParameter[key]);
                }

                for (_key14 in options.query) {
                  query.set(_key14, options.query[_key14]);
                }

                localVarUrlObj.search = new URLSearchParams(query).toString();
                headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                localVarRequestOptions.headers = _objectSpread2(_objectSpread2(_objectSpread2({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                return _context14.abrupt("return", {
                  url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                  options: localVarRequestOptions
                });

              case 29:
              case "end":
                return _context14.stop();
            }
          }
        }, _callee14);
      }));

      function commonGetMetaRegionSingleLocalized(_x58, _x59) {
        return _commonGetMetaRegionSingleLocalized.apply(this, arguments);
      }

      return commonGetMetaRegionSingleLocalized;
    }(),

    /**
     *
     * @summary GET MetaRegion List
     * @param {number} [elements] Elements to retrieve (0 &#x3D; Get All)
     * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)
     * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)
     * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    commonGetMetaRegions: function () {
      var _commonGetMetaRegions = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee15(elements, latitude, longitude, radius, fields, language) {
        var options,
            localVarPath,
            localVarUrlObj,
            baseOptions,
            localVarRequestOptions,
            localVarHeaderParameter,
            localVarQueryParameter,
            localVarAccessTokenValue,
            query,
            key,
            _key15,
            headersFromBaseOptions,
            _args15 = arguments;

        return regeneratorRuntime.wrap(function _callee15$(_context15) {
          while (1) {
            switch (_context15.prev = _context15.next) {
              case 0:
                options = _args15.length > 6 && _args15[6] !== undefined ? _args15[6] : {};
                localVarPath = "/api/MetaRegion"; // use dummy base URL string because the URL constructor only accepts absolute URLs.

                localVarUrlObj = new URL(localVarPath, 'https://example.com');

                if (configuration) {
                  baseOptions = configuration.baseOptions;
                }

                localVarRequestOptions = _objectSpread2(_objectSpread2({
                  method: 'GET'
                }, baseOptions), options);
                localVarHeaderParameter = {};
                localVarQueryParameter = {}; // authentication oauth2 required
                // oauth required

                if (!(configuration && configuration.accessToken)) {
                  _context15.next = 19;
                  break;
                }

                if (!(typeof configuration.accessToken === 'function')) {
                  _context15.next = 14;
                  break;
                }

                _context15.next = 11;
                return configuration.accessToken("oauth2", [""]);

              case 11:
                _context15.t0 = _context15.sent;
                _context15.next = 17;
                break;

              case 14:
                _context15.next = 16;
                return configuration.accessToken;

              case 16:
                _context15.t0 = _context15.sent;

              case 17:
                localVarAccessTokenValue = _context15.t0;
                localVarHeaderParameter["Authorization"] = "Bearer " + localVarAccessTokenValue;

              case 19:
                if (elements !== undefined) {
                  localVarQueryParameter['elements'] = elements;
                }

                if (latitude !== undefined) {
                  localVarQueryParameter['latitude'] = latitude;
                }

                if (longitude !== undefined) {
                  localVarQueryParameter['longitude'] = longitude;
                }

                if (radius !== undefined) {
                  localVarQueryParameter['radius'] = radius;
                }

                if (fields !== undefined) {
                  localVarQueryParameter['fields'] = fields;
                }

                if (language !== undefined) {
                  localVarQueryParameter['language'] = language;
                }

                query = new URLSearchParams(localVarUrlObj.search);

                for (key in localVarQueryParameter) {
                  query.set(key, localVarQueryParameter[key]);
                }

                for (_key15 in options.query) {
                  query.set(_key15, options.query[_key15]);
                }

                localVarUrlObj.search = new URLSearchParams(query).toString();
                headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                localVarRequestOptions.headers = _objectSpread2(_objectSpread2(_objectSpread2({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                return _context15.abrupt("return", {
                  url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                  options: localVarRequestOptions
                });

              case 32:
              case "end":
                return _context15.stop();
            }
          }
        }, _callee15);
      }));

      function commonGetMetaRegions(_x60, _x61, _x62, _x63, _x64, _x65) {
        return _commonGetMetaRegions.apply(this, arguments);
      }

      return commonGetMetaRegions;
    }(),

    /**
     *
     * @summary GET MetaRegion Localized List
     * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)
     * @param {number} [elements] Elements to retrieve (0 &#x3D; Get All)
     * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    commonGetMetaRegionsLocalized: function () {
      var _commonGetMetaRegionsLocalized = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee16(language, elements, latitude, longitude, radius) {
        var options,
            localVarPath,
            localVarUrlObj,
            baseOptions,
            localVarRequestOptions,
            localVarHeaderParameter,
            localVarQueryParameter,
            localVarAccessTokenValue,
            query,
            key,
            _key16,
            headersFromBaseOptions,
            _args16 = arguments;

        return regeneratorRuntime.wrap(function _callee16$(_context16) {
          while (1) {
            switch (_context16.prev = _context16.next) {
              case 0:
                options = _args16.length > 5 && _args16[5] !== undefined ? _args16[5] : {};
                localVarPath = "/api/MetaRegionLocalized"; // use dummy base URL string because the URL constructor only accepts absolute URLs.

                localVarUrlObj = new URL(localVarPath, 'https://example.com');

                if (configuration) {
                  baseOptions = configuration.baseOptions;
                }

                localVarRequestOptions = _objectSpread2(_objectSpread2({
                  method: 'GET'
                }, baseOptions), options);
                localVarHeaderParameter = {};
                localVarQueryParameter = {}; // authentication oauth2 required
                // oauth required

                if (!(configuration && configuration.accessToken)) {
                  _context16.next = 19;
                  break;
                }

                if (!(typeof configuration.accessToken === 'function')) {
                  _context16.next = 14;
                  break;
                }

                _context16.next = 11;
                return configuration.accessToken("oauth2", [""]);

              case 11:
                _context16.t0 = _context16.sent;
                _context16.next = 17;
                break;

              case 14:
                _context16.next = 16;
                return configuration.accessToken;

              case 16:
                _context16.t0 = _context16.sent;

              case 17:
                localVarAccessTokenValue = _context16.t0;
                localVarHeaderParameter["Authorization"] = "Bearer " + localVarAccessTokenValue;

              case 19:
                if (language !== undefined) {
                  localVarQueryParameter['language'] = language;
                }

                if (elements !== undefined) {
                  localVarQueryParameter['elements'] = elements;
                }

                if (latitude !== undefined) {
                  localVarQueryParameter['latitude'] = latitude;
                }

                if (longitude !== undefined) {
                  localVarQueryParameter['longitude'] = longitude;
                }

                if (radius !== undefined) {
                  localVarQueryParameter['radius'] = radius;
                }

                query = new URLSearchParams(localVarUrlObj.search);

                for (key in localVarQueryParameter) {
                  query.set(key, localVarQueryParameter[key]);
                }

                for (_key16 in options.query) {
                  query.set(_key16, options.query[_key16]);
                }

                localVarUrlObj.search = new URLSearchParams(query).toString();
                headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                localVarRequestOptions.headers = _objectSpread2(_objectSpread2(_objectSpread2({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                return _context16.abrupt("return", {
                  url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                  options: localVarRequestOptions
                });

              case 31:
              case "end":
                return _context16.stop();
            }
          }
        }, _callee16);
      }));

      function commonGetMetaRegionsLocalized(_x66, _x67, _x68, _x69, _x70) {
        return _commonGetMetaRegionsLocalized.apply(this, arguments);
      }

      return commonGetMetaRegionsLocalized;
    }(),

    /**
     *
     * @summary GET MetaRegion Reduced List
     * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)
     * @param {number} [elements] Elements to retrieve (0 &#x3D; Get All)
     * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    commonGetMetaRegionsReduced: function () {
      var _commonGetMetaRegionsReduced = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee17(language, elements, latitude, longitude, radius) {
        var options,
            localVarPath,
            localVarUrlObj,
            baseOptions,
            localVarRequestOptions,
            localVarHeaderParameter,
            localVarQueryParameter,
            localVarAccessTokenValue,
            query,
            key,
            _key17,
            headersFromBaseOptions,
            _args17 = arguments;

        return regeneratorRuntime.wrap(function _callee17$(_context17) {
          while (1) {
            switch (_context17.prev = _context17.next) {
              case 0:
                options = _args17.length > 5 && _args17[5] !== undefined ? _args17[5] : {};
                localVarPath = "/api/MetaRegionReduced"; // use dummy base URL string because the URL constructor only accepts absolute URLs.

                localVarUrlObj = new URL(localVarPath, 'https://example.com');

                if (configuration) {
                  baseOptions = configuration.baseOptions;
                }

                localVarRequestOptions = _objectSpread2(_objectSpread2({
                  method: 'GET'
                }, baseOptions), options);
                localVarHeaderParameter = {};
                localVarQueryParameter = {}; // authentication oauth2 required
                // oauth required

                if (!(configuration && configuration.accessToken)) {
                  _context17.next = 19;
                  break;
                }

                if (!(typeof configuration.accessToken === 'function')) {
                  _context17.next = 14;
                  break;
                }

                _context17.next = 11;
                return configuration.accessToken("oauth2", [""]);

              case 11:
                _context17.t0 = _context17.sent;
                _context17.next = 17;
                break;

              case 14:
                _context17.next = 16;
                return configuration.accessToken;

              case 16:
                _context17.t0 = _context17.sent;

              case 17:
                localVarAccessTokenValue = _context17.t0;
                localVarHeaderParameter["Authorization"] = "Bearer " + localVarAccessTokenValue;

              case 19:
                if (language !== undefined) {
                  localVarQueryParameter['language'] = language;
                }

                if (elements !== undefined) {
                  localVarQueryParameter['elements'] = elements;
                }

                if (latitude !== undefined) {
                  localVarQueryParameter['latitude'] = latitude;
                }

                if (longitude !== undefined) {
                  localVarQueryParameter['longitude'] = longitude;
                }

                if (radius !== undefined) {
                  localVarQueryParameter['radius'] = radius;
                }

                query = new URLSearchParams(localVarUrlObj.search);

                for (key in localVarQueryParameter) {
                  query.set(key, localVarQueryParameter[key]);
                }

                for (_key17 in options.query) {
                  query.set(_key17, options.query[_key17]);
                }

                localVarUrlObj.search = new URLSearchParams(query).toString();
                headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                localVarRequestOptions.headers = _objectSpread2(_objectSpread2(_objectSpread2({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                return _context17.abrupt("return", {
                  url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                  options: localVarRequestOptions
                });

              case 31:
              case "end":
                return _context17.stop();
            }
          }
        }, _callee17);
      }));

      function commonGetMetaRegionsReduced(_x71, _x72, _x73, _x74, _x75) {
        return _commonGetMetaRegionsReduced.apply(this, arguments);
      }

      return commonGetMetaRegionsReduced;
    }(),

    /**
     *
     * @summary GET Municipality List
     * @param {number} [elements] Elements to retrieve (0 &#x3D; Get All)
     * @param {string} [visibleinsearch] Filter only Elements flagged with visibleinsearch: (possible values: &#x27;true&#x27;,&#x27;false&#x27;), (default:&#x27;false&#x27;)
     * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)
     * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)
     * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    commonGetMunicipality: function () {
      var _commonGetMunicipality = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee18(elements, visibleinsearch, latitude, longitude, radius, fields, language) {
        var options,
            localVarPath,
            localVarUrlObj,
            baseOptions,
            localVarRequestOptions,
            localVarHeaderParameter,
            localVarQueryParameter,
            localVarAccessTokenValue,
            query,
            key,
            _key18,
            headersFromBaseOptions,
            _args18 = arguments;

        return regeneratorRuntime.wrap(function _callee18$(_context18) {
          while (1) {
            switch (_context18.prev = _context18.next) {
              case 0:
                options = _args18.length > 7 && _args18[7] !== undefined ? _args18[7] : {};
                localVarPath = "/api/Municipality"; // use dummy base URL string because the URL constructor only accepts absolute URLs.

                localVarUrlObj = new URL(localVarPath, 'https://example.com');

                if (configuration) {
                  baseOptions = configuration.baseOptions;
                }

                localVarRequestOptions = _objectSpread2(_objectSpread2({
                  method: 'GET'
                }, baseOptions), options);
                localVarHeaderParameter = {};
                localVarQueryParameter = {}; // authentication oauth2 required
                // oauth required

                if (!(configuration && configuration.accessToken)) {
                  _context18.next = 19;
                  break;
                }

                if (!(typeof configuration.accessToken === 'function')) {
                  _context18.next = 14;
                  break;
                }

                _context18.next = 11;
                return configuration.accessToken("oauth2", [""]);

              case 11:
                _context18.t0 = _context18.sent;
                _context18.next = 17;
                break;

              case 14:
                _context18.next = 16;
                return configuration.accessToken;

              case 16:
                _context18.t0 = _context18.sent;

              case 17:
                localVarAccessTokenValue = _context18.t0;
                localVarHeaderParameter["Authorization"] = "Bearer " + localVarAccessTokenValue;

              case 19:
                if (elements !== undefined) {
                  localVarQueryParameter['elements'] = elements;
                }

                if (visibleinsearch !== undefined) {
                  localVarQueryParameter['visibleinsearch'] = visibleinsearch;
                }

                if (latitude !== undefined) {
                  localVarQueryParameter['latitude'] = latitude;
                }

                if (longitude !== undefined) {
                  localVarQueryParameter['longitude'] = longitude;
                }

                if (radius !== undefined) {
                  localVarQueryParameter['radius'] = radius;
                }

                if (fields !== undefined) {
                  localVarQueryParameter['fields'] = fields;
                }

                if (language !== undefined) {
                  localVarQueryParameter['language'] = language;
                }

                query = new URLSearchParams(localVarUrlObj.search);

                for (key in localVarQueryParameter) {
                  query.set(key, localVarQueryParameter[key]);
                }

                for (_key18 in options.query) {
                  query.set(_key18, options.query[_key18]);
                }

                localVarUrlObj.search = new URLSearchParams(query).toString();
                headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                localVarRequestOptions.headers = _objectSpread2(_objectSpread2(_objectSpread2({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                return _context18.abrupt("return", {
                  url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                  options: localVarRequestOptions
                });

              case 33:
              case "end":
                return _context18.stop();
            }
          }
        }, _callee18);
      }));

      function commonGetMunicipality(_x76, _x77, _x78, _x79, _x80, _x81, _x82) {
        return _commonGetMunicipality.apply(this, arguments);
      }

      return commonGetMunicipality;
    }(),

    /**
     *
     * @summary GET Municipality Localized List
     * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)
     * @param {number} [elements] Elements to retrieve (0 &#x3D; Get All)
     * @param {string} [visibleinsearch] Filter only Elements flagged with visibleinsearch: (possible values: &#x27;true&#x27;,&#x27;false&#x27;), (default:&#x27;false&#x27;)
     * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    commonGetMunicipalityLocalized: function () {
      var _commonGetMunicipalityLocalized = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee19(language, elements, visibleinsearch, latitude, longitude, radius) {
        var options,
            localVarPath,
            localVarUrlObj,
            baseOptions,
            localVarRequestOptions,
            localVarHeaderParameter,
            localVarQueryParameter,
            localVarAccessTokenValue,
            query,
            key,
            _key19,
            headersFromBaseOptions,
            _args19 = arguments;

        return regeneratorRuntime.wrap(function _callee19$(_context19) {
          while (1) {
            switch (_context19.prev = _context19.next) {
              case 0:
                options = _args19.length > 6 && _args19[6] !== undefined ? _args19[6] : {};
                localVarPath = "/api/MunicipalityLocalized"; // use dummy base URL string because the URL constructor only accepts absolute URLs.

                localVarUrlObj = new URL(localVarPath, 'https://example.com');

                if (configuration) {
                  baseOptions = configuration.baseOptions;
                }

                localVarRequestOptions = _objectSpread2(_objectSpread2({
                  method: 'GET'
                }, baseOptions), options);
                localVarHeaderParameter = {};
                localVarQueryParameter = {}; // authentication oauth2 required
                // oauth required

                if (!(configuration && configuration.accessToken)) {
                  _context19.next = 19;
                  break;
                }

                if (!(typeof configuration.accessToken === 'function')) {
                  _context19.next = 14;
                  break;
                }

                _context19.next = 11;
                return configuration.accessToken("oauth2", [""]);

              case 11:
                _context19.t0 = _context19.sent;
                _context19.next = 17;
                break;

              case 14:
                _context19.next = 16;
                return configuration.accessToken;

              case 16:
                _context19.t0 = _context19.sent;

              case 17:
                localVarAccessTokenValue = _context19.t0;
                localVarHeaderParameter["Authorization"] = "Bearer " + localVarAccessTokenValue;

              case 19:
                if (language !== undefined) {
                  localVarQueryParameter['language'] = language;
                }

                if (elements !== undefined) {
                  localVarQueryParameter['elements'] = elements;
                }

                if (visibleinsearch !== undefined) {
                  localVarQueryParameter['visibleinsearch'] = visibleinsearch;
                }

                if (latitude !== undefined) {
                  localVarQueryParameter['latitude'] = latitude;
                }

                if (longitude !== undefined) {
                  localVarQueryParameter['longitude'] = longitude;
                }

                if (radius !== undefined) {
                  localVarQueryParameter['radius'] = radius;
                }

                query = new URLSearchParams(localVarUrlObj.search);

                for (key in localVarQueryParameter) {
                  query.set(key, localVarQueryParameter[key]);
                }

                for (_key19 in options.query) {
                  query.set(_key19, options.query[_key19]);
                }

                localVarUrlObj.search = new URLSearchParams(query).toString();
                headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                localVarRequestOptions.headers = _objectSpread2(_objectSpread2(_objectSpread2({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                return _context19.abrupt("return", {
                  url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                  options: localVarRequestOptions
                });

              case 32:
              case "end":
                return _context19.stop();
            }
          }
        }, _callee19);
      }));

      function commonGetMunicipalityLocalized(_x83, _x84, _x85, _x86, _x87, _x88) {
        return _commonGetMunicipalityLocalized.apply(this, arguments);
      }

      return commonGetMunicipalityLocalized;
    }(),

    /**
     *
     * @summary GET Municipality Reduced List
     * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)
     * @param {number} [elements] Elements to retrieve (0 &#x3D; Get All)
     * @param {string} [visibleinsearch] Filter only Elements flagged with visibleinsearch: (possible values: &#x27;true&#x27;,&#x27;false&#x27;), (default:&#x27;false&#x27;)
     * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    commonGetMunicipalityReduced: function () {
      var _commonGetMunicipalityReduced = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee20(language, elements, visibleinsearch, latitude, longitude, radius) {
        var options,
            localVarPath,
            localVarUrlObj,
            baseOptions,
            localVarRequestOptions,
            localVarHeaderParameter,
            localVarQueryParameter,
            localVarAccessTokenValue,
            query,
            key,
            _key20,
            headersFromBaseOptions,
            _args20 = arguments;

        return regeneratorRuntime.wrap(function _callee20$(_context20) {
          while (1) {
            switch (_context20.prev = _context20.next) {
              case 0:
                options = _args20.length > 6 && _args20[6] !== undefined ? _args20[6] : {};
                localVarPath = "/api/MunicipalityReduced"; // use dummy base URL string because the URL constructor only accepts absolute URLs.

                localVarUrlObj = new URL(localVarPath, 'https://example.com');

                if (configuration) {
                  baseOptions = configuration.baseOptions;
                }

                localVarRequestOptions = _objectSpread2(_objectSpread2({
                  method: 'GET'
                }, baseOptions), options);
                localVarHeaderParameter = {};
                localVarQueryParameter = {}; // authentication oauth2 required
                // oauth required

                if (!(configuration && configuration.accessToken)) {
                  _context20.next = 19;
                  break;
                }

                if (!(typeof configuration.accessToken === 'function')) {
                  _context20.next = 14;
                  break;
                }

                _context20.next = 11;
                return configuration.accessToken("oauth2", [""]);

              case 11:
                _context20.t0 = _context20.sent;
                _context20.next = 17;
                break;

              case 14:
                _context20.next = 16;
                return configuration.accessToken;

              case 16:
                _context20.t0 = _context20.sent;

              case 17:
                localVarAccessTokenValue = _context20.t0;
                localVarHeaderParameter["Authorization"] = "Bearer " + localVarAccessTokenValue;

              case 19:
                if (language !== undefined) {
                  localVarQueryParameter['language'] = language;
                }

                if (elements !== undefined) {
                  localVarQueryParameter['elements'] = elements;
                }

                if (visibleinsearch !== undefined) {
                  localVarQueryParameter['visibleinsearch'] = visibleinsearch;
                }

                if (latitude !== undefined) {
                  localVarQueryParameter['latitude'] = latitude;
                }

                if (longitude !== undefined) {
                  localVarQueryParameter['longitude'] = longitude;
                }

                if (radius !== undefined) {
                  localVarQueryParameter['radius'] = radius;
                }

                query = new URLSearchParams(localVarUrlObj.search);

                for (key in localVarQueryParameter) {
                  query.set(key, localVarQueryParameter[key]);
                }

                for (_key20 in options.query) {
                  query.set(_key20, options.query[_key20]);
                }

                localVarUrlObj.search = new URLSearchParams(query).toString();
                headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                localVarRequestOptions.headers = _objectSpread2(_objectSpread2(_objectSpread2({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                return _context20.abrupt("return", {
                  url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                  options: localVarRequestOptions
                });

              case 32:
              case "end":
                return _context20.stop();
            }
          }
        }, _callee20);
      }));

      function commonGetMunicipalityReduced(_x89, _x90, _x91, _x92, _x93, _x94) {
        return _commonGetMunicipalityReduced.apply(this, arguments);
      }

      return commonGetMunicipalityReduced;
    }(),

    /**
     *
     * @summary GET Municipality Single
     * @param {string} id ID of the requested data
     * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)
     * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    commonGetMunicipalitySingle: function () {
      var _commonGetMunicipalitySingle = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee21(id, fields, language) {
        var options,
            localVarPath,
            localVarUrlObj,
            baseOptions,
            localVarRequestOptions,
            localVarHeaderParameter,
            localVarQueryParameter,
            localVarAccessTokenValue,
            query,
            key,
            _key21,
            headersFromBaseOptions,
            _args21 = arguments;

        return regeneratorRuntime.wrap(function _callee21$(_context21) {
          while (1) {
            switch (_context21.prev = _context21.next) {
              case 0:
                options = _args21.length > 3 && _args21[3] !== undefined ? _args21[3] : {};

                if (!(id === null || id === undefined)) {
                  _context21.next = 3;
                  break;
                }

                throw new base_RequiredError('id', 'Required parameter id was null or undefined when calling commonGetMunicipalitySingle.');

              case 3:
                localVarPath = "/api/Municipality/{id}".replace("{".concat("id", "}"), encodeURIComponent(String(id))); // use dummy base URL string because the URL constructor only accepts absolute URLs.

                localVarUrlObj = new URL(localVarPath, 'https://example.com');

                if (configuration) {
                  baseOptions = configuration.baseOptions;
                }

                localVarRequestOptions = _objectSpread2(_objectSpread2({
                  method: 'GET'
                }, baseOptions), options);
                localVarHeaderParameter = {};
                localVarQueryParameter = {}; // authentication oauth2 required
                // oauth required

                if (!(configuration && configuration.accessToken)) {
                  _context21.next = 21;
                  break;
                }

                if (!(typeof configuration.accessToken === 'function')) {
                  _context21.next = 16;
                  break;
                }

                _context21.next = 13;
                return configuration.accessToken("oauth2", [""]);

              case 13:
                _context21.t0 = _context21.sent;
                _context21.next = 19;
                break;

              case 16:
                _context21.next = 18;
                return configuration.accessToken;

              case 18:
                _context21.t0 = _context21.sent;

              case 19:
                localVarAccessTokenValue = _context21.t0;
                localVarHeaderParameter["Authorization"] = "Bearer " + localVarAccessTokenValue;

              case 21:
                if (fields !== undefined) {
                  localVarQueryParameter['fields'] = fields;
                }

                if (language !== undefined) {
                  localVarQueryParameter['language'] = language;
                }

                query = new URLSearchParams(localVarUrlObj.search);

                for (key in localVarQueryParameter) {
                  query.set(key, localVarQueryParameter[key]);
                }

                for (_key21 in options.query) {
                  query.set(_key21, options.query[_key21]);
                }

                localVarUrlObj.search = new URLSearchParams(query).toString();
                headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                localVarRequestOptions.headers = _objectSpread2(_objectSpread2(_objectSpread2({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                return _context21.abrupt("return", {
                  url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                  options: localVarRequestOptions
                });

              case 30:
              case "end":
                return _context21.stop();
            }
          }
        }, _callee21);
      }));

      function commonGetMunicipalitySingle(_x95, _x96, _x97) {
        return _commonGetMunicipalitySingle.apply(this, arguments);
      }

      return commonGetMunicipalitySingle;
    }(),

    /**
     *
     * @summary GET Municipality Localized Single
     * @param {string} id ID of the requested data
     * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    commonGetMunicipalitySingleLocalized: function () {
      var _commonGetMunicipalitySingleLocalized = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee22(id, language) {
        var options,
            localVarPath,
            localVarUrlObj,
            baseOptions,
            localVarRequestOptions,
            localVarHeaderParameter,
            localVarQueryParameter,
            localVarAccessTokenValue,
            query,
            key,
            _key22,
            headersFromBaseOptions,
            _args22 = arguments;

        return regeneratorRuntime.wrap(function _callee22$(_context22) {
          while (1) {
            switch (_context22.prev = _context22.next) {
              case 0:
                options = _args22.length > 2 && _args22[2] !== undefined ? _args22[2] : {};

                if (!(id === null || id === undefined)) {
                  _context22.next = 3;
                  break;
                }

                throw new base_RequiredError('id', 'Required parameter id was null or undefined when calling commonGetMunicipalitySingleLocalized.');

              case 3:
                localVarPath = "/api/MunicipalityLocalized/{id}".replace("{".concat("id", "}"), encodeURIComponent(String(id))); // use dummy base URL string because the URL constructor only accepts absolute URLs.

                localVarUrlObj = new URL(localVarPath, 'https://example.com');

                if (configuration) {
                  baseOptions = configuration.baseOptions;
                }

                localVarRequestOptions = _objectSpread2(_objectSpread2({
                  method: 'GET'
                }, baseOptions), options);
                localVarHeaderParameter = {};
                localVarQueryParameter = {}; // authentication oauth2 required
                // oauth required

                if (!(configuration && configuration.accessToken)) {
                  _context22.next = 21;
                  break;
                }

                if (!(typeof configuration.accessToken === 'function')) {
                  _context22.next = 16;
                  break;
                }

                _context22.next = 13;
                return configuration.accessToken("oauth2", [""]);

              case 13:
                _context22.t0 = _context22.sent;
                _context22.next = 19;
                break;

              case 16:
                _context22.next = 18;
                return configuration.accessToken;

              case 18:
                _context22.t0 = _context22.sent;

              case 19:
                localVarAccessTokenValue = _context22.t0;
                localVarHeaderParameter["Authorization"] = "Bearer " + localVarAccessTokenValue;

              case 21:
                if (language !== undefined) {
                  localVarQueryParameter['language'] = language;
                }

                query = new URLSearchParams(localVarUrlObj.search);

                for (key in localVarQueryParameter) {
                  query.set(key, localVarQueryParameter[key]);
                }

                for (_key22 in options.query) {
                  query.set(_key22, options.query[_key22]);
                }

                localVarUrlObj.search = new URLSearchParams(query).toString();
                headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                localVarRequestOptions.headers = _objectSpread2(_objectSpread2(_objectSpread2({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                return _context22.abrupt("return", {
                  url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                  options: localVarRequestOptions
                });

              case 29:
              case "end":
                return _context22.stop();
            }
          }
        }, _callee22);
      }));

      function commonGetMunicipalitySingleLocalized(_x98, _x99) {
        return _commonGetMunicipalitySingleLocalized.apply(this, arguments);
      }

      return commonGetMunicipalitySingleLocalized;
    }(),

    /**
     *
     * @summary GET Region Single
     * @param {string} id ID of the requested data
     * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)
     * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    commonGetRegionSingle: function () {
      var _commonGetRegionSingle = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee23(id, fields, language) {
        var options,
            localVarPath,
            localVarUrlObj,
            baseOptions,
            localVarRequestOptions,
            localVarHeaderParameter,
            localVarQueryParameter,
            localVarAccessTokenValue,
            query,
            key,
            _key23,
            headersFromBaseOptions,
            _args23 = arguments;

        return regeneratorRuntime.wrap(function _callee23$(_context23) {
          while (1) {
            switch (_context23.prev = _context23.next) {
              case 0:
                options = _args23.length > 3 && _args23[3] !== undefined ? _args23[3] : {};

                if (!(id === null || id === undefined)) {
                  _context23.next = 3;
                  break;
                }

                throw new base_RequiredError('id', 'Required parameter id was null or undefined when calling commonGetRegionSingle.');

              case 3:
                localVarPath = "/api/Region/{id}".replace("{".concat("id", "}"), encodeURIComponent(String(id))); // use dummy base URL string because the URL constructor only accepts absolute URLs.

                localVarUrlObj = new URL(localVarPath, 'https://example.com');

                if (configuration) {
                  baseOptions = configuration.baseOptions;
                }

                localVarRequestOptions = _objectSpread2(_objectSpread2({
                  method: 'GET'
                }, baseOptions), options);
                localVarHeaderParameter = {};
                localVarQueryParameter = {}; // authentication oauth2 required
                // oauth required

                if (!(configuration && configuration.accessToken)) {
                  _context23.next = 21;
                  break;
                }

                if (!(typeof configuration.accessToken === 'function')) {
                  _context23.next = 16;
                  break;
                }

                _context23.next = 13;
                return configuration.accessToken("oauth2", [""]);

              case 13:
                _context23.t0 = _context23.sent;
                _context23.next = 19;
                break;

              case 16:
                _context23.next = 18;
                return configuration.accessToken;

              case 18:
                _context23.t0 = _context23.sent;

              case 19:
                localVarAccessTokenValue = _context23.t0;
                localVarHeaderParameter["Authorization"] = "Bearer " + localVarAccessTokenValue;

              case 21:
                if (fields !== undefined) {
                  localVarQueryParameter['fields'] = fields;
                }

                if (language !== undefined) {
                  localVarQueryParameter['language'] = language;
                }

                query = new URLSearchParams(localVarUrlObj.search);

                for (key in localVarQueryParameter) {
                  query.set(key, localVarQueryParameter[key]);
                }

                for (_key23 in options.query) {
                  query.set(_key23, options.query[_key23]);
                }

                localVarUrlObj.search = new URLSearchParams(query).toString();
                headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                localVarRequestOptions.headers = _objectSpread2(_objectSpread2(_objectSpread2({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                return _context23.abrupt("return", {
                  url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                  options: localVarRequestOptions
                });

              case 30:
              case "end":
                return _context23.stop();
            }
          }
        }, _callee23);
      }));

      function commonGetRegionSingle(_x100, _x101, _x102) {
        return _commonGetRegionSingle.apply(this, arguments);
      }

      return commonGetRegionSingle;
    }(),

    /**
     *
     * @summary GET Region Localized Single
     * @param {string} id ID of the requested data
     * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    commonGetRegionSingleLocalized: function () {
      var _commonGetRegionSingleLocalized = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee24(id, language) {
        var options,
            localVarPath,
            localVarUrlObj,
            baseOptions,
            localVarRequestOptions,
            localVarHeaderParameter,
            localVarQueryParameter,
            localVarAccessTokenValue,
            query,
            key,
            _key24,
            headersFromBaseOptions,
            _args24 = arguments;

        return regeneratorRuntime.wrap(function _callee24$(_context24) {
          while (1) {
            switch (_context24.prev = _context24.next) {
              case 0:
                options = _args24.length > 2 && _args24[2] !== undefined ? _args24[2] : {};

                if (!(id === null || id === undefined)) {
                  _context24.next = 3;
                  break;
                }

                throw new base_RequiredError('id', 'Required parameter id was null or undefined when calling commonGetRegionSingleLocalized.');

              case 3:
                localVarPath = "/api/RegionLocalized/{id}".replace("{".concat("id", "}"), encodeURIComponent(String(id))); // use dummy base URL string because the URL constructor only accepts absolute URLs.

                localVarUrlObj = new URL(localVarPath, 'https://example.com');

                if (configuration) {
                  baseOptions = configuration.baseOptions;
                }

                localVarRequestOptions = _objectSpread2(_objectSpread2({
                  method: 'GET'
                }, baseOptions), options);
                localVarHeaderParameter = {};
                localVarQueryParameter = {}; // authentication oauth2 required
                // oauth required

                if (!(configuration && configuration.accessToken)) {
                  _context24.next = 21;
                  break;
                }

                if (!(typeof configuration.accessToken === 'function')) {
                  _context24.next = 16;
                  break;
                }

                _context24.next = 13;
                return configuration.accessToken("oauth2", [""]);

              case 13:
                _context24.t0 = _context24.sent;
                _context24.next = 19;
                break;

              case 16:
                _context24.next = 18;
                return configuration.accessToken;

              case 18:
                _context24.t0 = _context24.sent;

              case 19:
                localVarAccessTokenValue = _context24.t0;
                localVarHeaderParameter["Authorization"] = "Bearer " + localVarAccessTokenValue;

              case 21:
                if (language !== undefined) {
                  localVarQueryParameter['language'] = language;
                }

                query = new URLSearchParams(localVarUrlObj.search);

                for (key in localVarQueryParameter) {
                  query.set(key, localVarQueryParameter[key]);
                }

                for (_key24 in options.query) {
                  query.set(_key24, options.query[_key24]);
                }

                localVarUrlObj.search = new URLSearchParams(query).toString();
                headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                localVarRequestOptions.headers = _objectSpread2(_objectSpread2(_objectSpread2({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                return _context24.abrupt("return", {
                  url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                  options: localVarRequestOptions
                });

              case 29:
              case "end":
                return _context24.stop();
            }
          }
        }, _callee24);
      }));

      function commonGetRegionSingleLocalized(_x103, _x104) {
        return _commonGetRegionSingleLocalized.apply(this, arguments);
      }

      return commonGetRegionSingleLocalized;
    }(),

    /**
     *
     * @summary GET Region List
     * @param {number} [elements] Elements to retrieve (0 &#x3D; Get All)
     * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)
     * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)
     * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    commonGetRegions: function () {
      var _commonGetRegions = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee25(elements, latitude, longitude, radius, fields, language) {
        var options,
            localVarPath,
            localVarUrlObj,
            baseOptions,
            localVarRequestOptions,
            localVarHeaderParameter,
            localVarQueryParameter,
            localVarAccessTokenValue,
            query,
            key,
            _key25,
            headersFromBaseOptions,
            _args25 = arguments;

        return regeneratorRuntime.wrap(function _callee25$(_context25) {
          while (1) {
            switch (_context25.prev = _context25.next) {
              case 0:
                options = _args25.length > 6 && _args25[6] !== undefined ? _args25[6] : {};
                localVarPath = "/api/Region"; // use dummy base URL string because the URL constructor only accepts absolute URLs.

                localVarUrlObj = new URL(localVarPath, 'https://example.com');

                if (configuration) {
                  baseOptions = configuration.baseOptions;
                }

                localVarRequestOptions = _objectSpread2(_objectSpread2({
                  method: 'GET'
                }, baseOptions), options);
                localVarHeaderParameter = {};
                localVarQueryParameter = {}; // authentication oauth2 required
                // oauth required

                if (!(configuration && configuration.accessToken)) {
                  _context25.next = 19;
                  break;
                }

                if (!(typeof configuration.accessToken === 'function')) {
                  _context25.next = 14;
                  break;
                }

                _context25.next = 11;
                return configuration.accessToken("oauth2", [""]);

              case 11:
                _context25.t0 = _context25.sent;
                _context25.next = 17;
                break;

              case 14:
                _context25.next = 16;
                return configuration.accessToken;

              case 16:
                _context25.t0 = _context25.sent;

              case 17:
                localVarAccessTokenValue = _context25.t0;
                localVarHeaderParameter["Authorization"] = "Bearer " + localVarAccessTokenValue;

              case 19:
                if (elements !== undefined) {
                  localVarQueryParameter['elements'] = elements;
                }

                if (latitude !== undefined) {
                  localVarQueryParameter['latitude'] = latitude;
                }

                if (longitude !== undefined) {
                  localVarQueryParameter['longitude'] = longitude;
                }

                if (radius !== undefined) {
                  localVarQueryParameter['radius'] = radius;
                }

                if (fields !== undefined) {
                  localVarQueryParameter['fields'] = fields;
                }

                if (language !== undefined) {
                  localVarQueryParameter['language'] = language;
                }

                query = new URLSearchParams(localVarUrlObj.search);

                for (key in localVarQueryParameter) {
                  query.set(key, localVarQueryParameter[key]);
                }

                for (_key25 in options.query) {
                  query.set(_key25, options.query[_key25]);
                }

                localVarUrlObj.search = new URLSearchParams(query).toString();
                headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                localVarRequestOptions.headers = _objectSpread2(_objectSpread2(_objectSpread2({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                return _context25.abrupt("return", {
                  url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                  options: localVarRequestOptions
                });

              case 32:
              case "end":
                return _context25.stop();
            }
          }
        }, _callee25);
      }));

      function commonGetRegions(_x105, _x106, _x107, _x108, _x109, _x110) {
        return _commonGetRegions.apply(this, arguments);
      }

      return commonGetRegions;
    }(),

    /**
     *
     * @summary GET Region Localized List
     * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)
     * @param {number} [elements] Elements to retrieve (0 &#x3D; Get All)
     * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    commonGetRegionsLocalized: function () {
      var _commonGetRegionsLocalized = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee26(language, elements, latitude, longitude, radius) {
        var options,
            localVarPath,
            localVarUrlObj,
            baseOptions,
            localVarRequestOptions,
            localVarHeaderParameter,
            localVarQueryParameter,
            localVarAccessTokenValue,
            query,
            key,
            _key26,
            headersFromBaseOptions,
            _args26 = arguments;

        return regeneratorRuntime.wrap(function _callee26$(_context26) {
          while (1) {
            switch (_context26.prev = _context26.next) {
              case 0:
                options = _args26.length > 5 && _args26[5] !== undefined ? _args26[5] : {};
                localVarPath = "/api/RegionLocalized"; // use dummy base URL string because the URL constructor only accepts absolute URLs.

                localVarUrlObj = new URL(localVarPath, 'https://example.com');

                if (configuration) {
                  baseOptions = configuration.baseOptions;
                }

                localVarRequestOptions = _objectSpread2(_objectSpread2({
                  method: 'GET'
                }, baseOptions), options);
                localVarHeaderParameter = {};
                localVarQueryParameter = {}; // authentication oauth2 required
                // oauth required

                if (!(configuration && configuration.accessToken)) {
                  _context26.next = 19;
                  break;
                }

                if (!(typeof configuration.accessToken === 'function')) {
                  _context26.next = 14;
                  break;
                }

                _context26.next = 11;
                return configuration.accessToken("oauth2", [""]);

              case 11:
                _context26.t0 = _context26.sent;
                _context26.next = 17;
                break;

              case 14:
                _context26.next = 16;
                return configuration.accessToken;

              case 16:
                _context26.t0 = _context26.sent;

              case 17:
                localVarAccessTokenValue = _context26.t0;
                localVarHeaderParameter["Authorization"] = "Bearer " + localVarAccessTokenValue;

              case 19:
                if (language !== undefined) {
                  localVarQueryParameter['language'] = language;
                }

                if (elements !== undefined) {
                  localVarQueryParameter['elements'] = elements;
                }

                if (latitude !== undefined) {
                  localVarQueryParameter['latitude'] = latitude;
                }

                if (longitude !== undefined) {
                  localVarQueryParameter['longitude'] = longitude;
                }

                if (radius !== undefined) {
                  localVarQueryParameter['radius'] = radius;
                }

                query = new URLSearchParams(localVarUrlObj.search);

                for (key in localVarQueryParameter) {
                  query.set(key, localVarQueryParameter[key]);
                }

                for (_key26 in options.query) {
                  query.set(_key26, options.query[_key26]);
                }

                localVarUrlObj.search = new URLSearchParams(query).toString();
                headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                localVarRequestOptions.headers = _objectSpread2(_objectSpread2(_objectSpread2({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                return _context26.abrupt("return", {
                  url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                  options: localVarRequestOptions
                });

              case 31:
              case "end":
                return _context26.stop();
            }
          }
        }, _callee26);
      }));

      function commonGetRegionsLocalized(_x111, _x112, _x113, _x114, _x115) {
        return _commonGetRegionsLocalized.apply(this, arguments);
      }

      return commonGetRegionsLocalized;
    }(),

    /**
     *
     * @summary GET Region Reduced List
     * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)
     * @param {number} [elements] Elements to retrieve (0 &#x3D; Get All)
     * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    commonGetRegionsReduced: function () {
      var _commonGetRegionsReduced = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee27(language, elements, latitude, longitude, radius) {
        var options,
            localVarPath,
            localVarUrlObj,
            baseOptions,
            localVarRequestOptions,
            localVarHeaderParameter,
            localVarQueryParameter,
            localVarAccessTokenValue,
            query,
            key,
            _key27,
            headersFromBaseOptions,
            _args27 = arguments;

        return regeneratorRuntime.wrap(function _callee27$(_context27) {
          while (1) {
            switch (_context27.prev = _context27.next) {
              case 0:
                options = _args27.length > 5 && _args27[5] !== undefined ? _args27[5] : {};
                localVarPath = "/api/RegionReduced"; // use dummy base URL string because the URL constructor only accepts absolute URLs.

                localVarUrlObj = new URL(localVarPath, 'https://example.com');

                if (configuration) {
                  baseOptions = configuration.baseOptions;
                }

                localVarRequestOptions = _objectSpread2(_objectSpread2({
                  method: 'GET'
                }, baseOptions), options);
                localVarHeaderParameter = {};
                localVarQueryParameter = {}; // authentication oauth2 required
                // oauth required

                if (!(configuration && configuration.accessToken)) {
                  _context27.next = 19;
                  break;
                }

                if (!(typeof configuration.accessToken === 'function')) {
                  _context27.next = 14;
                  break;
                }

                _context27.next = 11;
                return configuration.accessToken("oauth2", [""]);

              case 11:
                _context27.t0 = _context27.sent;
                _context27.next = 17;
                break;

              case 14:
                _context27.next = 16;
                return configuration.accessToken;

              case 16:
                _context27.t0 = _context27.sent;

              case 17:
                localVarAccessTokenValue = _context27.t0;
                localVarHeaderParameter["Authorization"] = "Bearer " + localVarAccessTokenValue;

              case 19:
                if (language !== undefined) {
                  localVarQueryParameter['language'] = language;
                }

                if (elements !== undefined) {
                  localVarQueryParameter['elements'] = elements;
                }

                if (latitude !== undefined) {
                  localVarQueryParameter['latitude'] = latitude;
                }

                if (longitude !== undefined) {
                  localVarQueryParameter['longitude'] = longitude;
                }

                if (radius !== undefined) {
                  localVarQueryParameter['radius'] = radius;
                }

                query = new URLSearchParams(localVarUrlObj.search);

                for (key in localVarQueryParameter) {
                  query.set(key, localVarQueryParameter[key]);
                }

                for (_key27 in options.query) {
                  query.set(_key27, options.query[_key27]);
                }

                localVarUrlObj.search = new URLSearchParams(query).toString();
                headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                localVarRequestOptions.headers = _objectSpread2(_objectSpread2(_objectSpread2({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                return _context27.abrupt("return", {
                  url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                  options: localVarRequestOptions
                });

              case 31:
              case "end":
                return _context27.stop();
            }
          }
        }, _callee27);
      }));

      function commonGetRegionsReduced(_x116, _x117, _x118, _x119, _x120) {
        return _commonGetRegionsReduced.apply(this, arguments);
      }

      return commonGetRegionsReduced;
    }(),

    /**
     *
     * @summary GET SkiArea List
     * @param {number} [elements] Elements to retrieve (0 &#x3D; Get All)
     * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)
     * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)
     * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    commonGetSkiArea: function () {
      var _commonGetSkiArea = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee28(elements, latitude, longitude, radius, fields, language) {
        var options,
            localVarPath,
            localVarUrlObj,
            baseOptions,
            localVarRequestOptions,
            localVarHeaderParameter,
            localVarQueryParameter,
            localVarAccessTokenValue,
            query,
            key,
            _key28,
            headersFromBaseOptions,
            _args28 = arguments;

        return regeneratorRuntime.wrap(function _callee28$(_context28) {
          while (1) {
            switch (_context28.prev = _context28.next) {
              case 0:
                options = _args28.length > 6 && _args28[6] !== undefined ? _args28[6] : {};
                localVarPath = "/api/SkiArea"; // use dummy base URL string because the URL constructor only accepts absolute URLs.

                localVarUrlObj = new URL(localVarPath, 'https://example.com');

                if (configuration) {
                  baseOptions = configuration.baseOptions;
                }

                localVarRequestOptions = _objectSpread2(_objectSpread2({
                  method: 'GET'
                }, baseOptions), options);
                localVarHeaderParameter = {};
                localVarQueryParameter = {}; // authentication oauth2 required
                // oauth required

                if (!(configuration && configuration.accessToken)) {
                  _context28.next = 19;
                  break;
                }

                if (!(typeof configuration.accessToken === 'function')) {
                  _context28.next = 14;
                  break;
                }

                _context28.next = 11;
                return configuration.accessToken("oauth2", [""]);

              case 11:
                _context28.t0 = _context28.sent;
                _context28.next = 17;
                break;

              case 14:
                _context28.next = 16;
                return configuration.accessToken;

              case 16:
                _context28.t0 = _context28.sent;

              case 17:
                localVarAccessTokenValue = _context28.t0;
                localVarHeaderParameter["Authorization"] = "Bearer " + localVarAccessTokenValue;

              case 19:
                if (elements !== undefined) {
                  localVarQueryParameter['elements'] = elements;
                }

                if (latitude !== undefined) {
                  localVarQueryParameter['latitude'] = latitude;
                }

                if (longitude !== undefined) {
                  localVarQueryParameter['longitude'] = longitude;
                }

                if (radius !== undefined) {
                  localVarQueryParameter['radius'] = radius;
                }

                if (fields !== undefined) {
                  localVarQueryParameter['fields'] = fields;
                }

                if (language !== undefined) {
                  localVarQueryParameter['language'] = language;
                }

                query = new URLSearchParams(localVarUrlObj.search);

                for (key in localVarQueryParameter) {
                  query.set(key, localVarQueryParameter[key]);
                }

                for (_key28 in options.query) {
                  query.set(_key28, options.query[_key28]);
                }

                localVarUrlObj.search = new URLSearchParams(query).toString();
                headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                localVarRequestOptions.headers = _objectSpread2(_objectSpread2(_objectSpread2({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                return _context28.abrupt("return", {
                  url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                  options: localVarRequestOptions
                });

              case 32:
              case "end":
                return _context28.stop();
            }
          }
        }, _callee28);
      }));

      function commonGetSkiArea(_x121, _x122, _x123, _x124, _x125, _x126) {
        return _commonGetSkiArea.apply(this, arguments);
      }

      return commonGetSkiArea;
    }(),

    /**
     *
     * @summary GET SkiArea Localized List
     * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)
     * @param {number} [elements] Elements to retrieve (0 &#x3D; Get All)
     * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    commonGetSkiAreaLocalized: function () {
      var _commonGetSkiAreaLocalized = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee29(language, elements, latitude, longitude, radius) {
        var options,
            localVarPath,
            localVarUrlObj,
            baseOptions,
            localVarRequestOptions,
            localVarHeaderParameter,
            localVarQueryParameter,
            localVarAccessTokenValue,
            query,
            key,
            _key29,
            headersFromBaseOptions,
            _args29 = arguments;

        return regeneratorRuntime.wrap(function _callee29$(_context29) {
          while (1) {
            switch (_context29.prev = _context29.next) {
              case 0:
                options = _args29.length > 5 && _args29[5] !== undefined ? _args29[5] : {};
                localVarPath = "/api/SkiAreaLocalized"; // use dummy base URL string because the URL constructor only accepts absolute URLs.

                localVarUrlObj = new URL(localVarPath, 'https://example.com');

                if (configuration) {
                  baseOptions = configuration.baseOptions;
                }

                localVarRequestOptions = _objectSpread2(_objectSpread2({
                  method: 'GET'
                }, baseOptions), options);
                localVarHeaderParameter = {};
                localVarQueryParameter = {}; // authentication oauth2 required
                // oauth required

                if (!(configuration && configuration.accessToken)) {
                  _context29.next = 19;
                  break;
                }

                if (!(typeof configuration.accessToken === 'function')) {
                  _context29.next = 14;
                  break;
                }

                _context29.next = 11;
                return configuration.accessToken("oauth2", [""]);

              case 11:
                _context29.t0 = _context29.sent;
                _context29.next = 17;
                break;

              case 14:
                _context29.next = 16;
                return configuration.accessToken;

              case 16:
                _context29.t0 = _context29.sent;

              case 17:
                localVarAccessTokenValue = _context29.t0;
                localVarHeaderParameter["Authorization"] = "Bearer " + localVarAccessTokenValue;

              case 19:
                if (language !== undefined) {
                  localVarQueryParameter['language'] = language;
                }

                if (elements !== undefined) {
                  localVarQueryParameter['elements'] = elements;
                }

                if (latitude !== undefined) {
                  localVarQueryParameter['latitude'] = latitude;
                }

                if (longitude !== undefined) {
                  localVarQueryParameter['longitude'] = longitude;
                }

                if (radius !== undefined) {
                  localVarQueryParameter['radius'] = radius;
                }

                query = new URLSearchParams(localVarUrlObj.search);

                for (key in localVarQueryParameter) {
                  query.set(key, localVarQueryParameter[key]);
                }

                for (_key29 in options.query) {
                  query.set(_key29, options.query[_key29]);
                }

                localVarUrlObj.search = new URLSearchParams(query).toString();
                headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                localVarRequestOptions.headers = _objectSpread2(_objectSpread2(_objectSpread2({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                return _context29.abrupt("return", {
                  url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                  options: localVarRequestOptions
                });

              case 31:
              case "end":
                return _context29.stop();
            }
          }
        }, _callee29);
      }));

      function commonGetSkiAreaLocalized(_x127, _x128, _x129, _x130, _x131) {
        return _commonGetSkiAreaLocalized.apply(this, arguments);
      }

      return commonGetSkiAreaLocalized;
    }(),

    /**
     *
     * @summary GET SkiArea Reduced List
     * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)
     * @param {number} [elements] Elements to retrieve (0 &#x3D; Get All)
     * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    commonGetSkiAreaReduced: function () {
      var _commonGetSkiAreaReduced = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee30(language, elements, latitude, longitude, radius) {
        var options,
            localVarPath,
            localVarUrlObj,
            baseOptions,
            localVarRequestOptions,
            localVarHeaderParameter,
            localVarQueryParameter,
            localVarAccessTokenValue,
            query,
            key,
            _key30,
            headersFromBaseOptions,
            _args30 = arguments;

        return regeneratorRuntime.wrap(function _callee30$(_context30) {
          while (1) {
            switch (_context30.prev = _context30.next) {
              case 0:
                options = _args30.length > 5 && _args30[5] !== undefined ? _args30[5] : {};
                localVarPath = "/api/SkiAreaReduced"; // use dummy base URL string because the URL constructor only accepts absolute URLs.

                localVarUrlObj = new URL(localVarPath, 'https://example.com');

                if (configuration) {
                  baseOptions = configuration.baseOptions;
                }

                localVarRequestOptions = _objectSpread2(_objectSpread2({
                  method: 'GET'
                }, baseOptions), options);
                localVarHeaderParameter = {};
                localVarQueryParameter = {}; // authentication oauth2 required
                // oauth required

                if (!(configuration && configuration.accessToken)) {
                  _context30.next = 19;
                  break;
                }

                if (!(typeof configuration.accessToken === 'function')) {
                  _context30.next = 14;
                  break;
                }

                _context30.next = 11;
                return configuration.accessToken("oauth2", [""]);

              case 11:
                _context30.t0 = _context30.sent;
                _context30.next = 17;
                break;

              case 14:
                _context30.next = 16;
                return configuration.accessToken;

              case 16:
                _context30.t0 = _context30.sent;

              case 17:
                localVarAccessTokenValue = _context30.t0;
                localVarHeaderParameter["Authorization"] = "Bearer " + localVarAccessTokenValue;

              case 19:
                if (language !== undefined) {
                  localVarQueryParameter['language'] = language;
                }

                if (elements !== undefined) {
                  localVarQueryParameter['elements'] = elements;
                }

                if (latitude !== undefined) {
                  localVarQueryParameter['latitude'] = latitude;
                }

                if (longitude !== undefined) {
                  localVarQueryParameter['longitude'] = longitude;
                }

                if (radius !== undefined) {
                  localVarQueryParameter['radius'] = radius;
                }

                query = new URLSearchParams(localVarUrlObj.search);

                for (key in localVarQueryParameter) {
                  query.set(key, localVarQueryParameter[key]);
                }

                for (_key30 in options.query) {
                  query.set(_key30, options.query[_key30]);
                }

                localVarUrlObj.search = new URLSearchParams(query).toString();
                headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                localVarRequestOptions.headers = _objectSpread2(_objectSpread2(_objectSpread2({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                return _context30.abrupt("return", {
                  url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                  options: localVarRequestOptions
                });

              case 31:
              case "end":
                return _context30.stop();
            }
          }
        }, _callee30);
      }));

      function commonGetSkiAreaReduced(_x132, _x133, _x134, _x135, _x136) {
        return _commonGetSkiAreaReduced.apply(this, arguments);
      }

      return commonGetSkiAreaReduced;
    }(),

    /**
     *
     * @summary GET SkiArea Single
     * @param {string} id ID of the requested data
     * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)
     * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    commonGetSkiAreaSingle: function () {
      var _commonGetSkiAreaSingle = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee31(id, fields, language) {
        var options,
            localVarPath,
            localVarUrlObj,
            baseOptions,
            localVarRequestOptions,
            localVarHeaderParameter,
            localVarQueryParameter,
            localVarAccessTokenValue,
            query,
            key,
            _key31,
            headersFromBaseOptions,
            _args31 = arguments;

        return regeneratorRuntime.wrap(function _callee31$(_context31) {
          while (1) {
            switch (_context31.prev = _context31.next) {
              case 0:
                options = _args31.length > 3 && _args31[3] !== undefined ? _args31[3] : {};

                if (!(id === null || id === undefined)) {
                  _context31.next = 3;
                  break;
                }

                throw new base_RequiredError('id', 'Required parameter id was null or undefined when calling commonGetSkiAreaSingle.');

              case 3:
                localVarPath = "/api/SkiArea/{id}".replace("{".concat("id", "}"), encodeURIComponent(String(id))); // use dummy base URL string because the URL constructor only accepts absolute URLs.

                localVarUrlObj = new URL(localVarPath, 'https://example.com');

                if (configuration) {
                  baseOptions = configuration.baseOptions;
                }

                localVarRequestOptions = _objectSpread2(_objectSpread2({
                  method: 'GET'
                }, baseOptions), options);
                localVarHeaderParameter = {};
                localVarQueryParameter = {}; // authentication oauth2 required
                // oauth required

                if (!(configuration && configuration.accessToken)) {
                  _context31.next = 21;
                  break;
                }

                if (!(typeof configuration.accessToken === 'function')) {
                  _context31.next = 16;
                  break;
                }

                _context31.next = 13;
                return configuration.accessToken("oauth2", [""]);

              case 13:
                _context31.t0 = _context31.sent;
                _context31.next = 19;
                break;

              case 16:
                _context31.next = 18;
                return configuration.accessToken;

              case 18:
                _context31.t0 = _context31.sent;

              case 19:
                localVarAccessTokenValue = _context31.t0;
                localVarHeaderParameter["Authorization"] = "Bearer " + localVarAccessTokenValue;

              case 21:
                if (fields !== undefined) {
                  localVarQueryParameter['fields'] = fields;
                }

                if (language !== undefined) {
                  localVarQueryParameter['language'] = language;
                }

                query = new URLSearchParams(localVarUrlObj.search);

                for (key in localVarQueryParameter) {
                  query.set(key, localVarQueryParameter[key]);
                }

                for (_key31 in options.query) {
                  query.set(_key31, options.query[_key31]);
                }

                localVarUrlObj.search = new URLSearchParams(query).toString();
                headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                localVarRequestOptions.headers = _objectSpread2(_objectSpread2(_objectSpread2({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                return _context31.abrupt("return", {
                  url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                  options: localVarRequestOptions
                });

              case 30:
              case "end":
                return _context31.stop();
            }
          }
        }, _callee31);
      }));

      function commonGetSkiAreaSingle(_x137, _x138, _x139) {
        return _commonGetSkiAreaSingle.apply(this, arguments);
      }

      return commonGetSkiAreaSingle;
    }(),

    /**
     *
     * @summary GET SkiArea Localized Single
     * @param {string} id ID of the requested data
     * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    commonGetSkiAreaSingleLocalized: function () {
      var _commonGetSkiAreaSingleLocalized = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee32(id, language) {
        var options,
            localVarPath,
            localVarUrlObj,
            baseOptions,
            localVarRequestOptions,
            localVarHeaderParameter,
            localVarQueryParameter,
            localVarAccessTokenValue,
            query,
            key,
            _key32,
            headersFromBaseOptions,
            _args32 = arguments;

        return regeneratorRuntime.wrap(function _callee32$(_context32) {
          while (1) {
            switch (_context32.prev = _context32.next) {
              case 0:
                options = _args32.length > 2 && _args32[2] !== undefined ? _args32[2] : {};

                if (!(id === null || id === undefined)) {
                  _context32.next = 3;
                  break;
                }

                throw new base_RequiredError('id', 'Required parameter id was null or undefined when calling commonGetSkiAreaSingleLocalized.');

              case 3:
                localVarPath = "/api/SkiAreaLocalized/{id}".replace("{".concat("id", "}"), encodeURIComponent(String(id))); // use dummy base URL string because the URL constructor only accepts absolute URLs.

                localVarUrlObj = new URL(localVarPath, 'https://example.com');

                if (configuration) {
                  baseOptions = configuration.baseOptions;
                }

                localVarRequestOptions = _objectSpread2(_objectSpread2({
                  method: 'GET'
                }, baseOptions), options);
                localVarHeaderParameter = {};
                localVarQueryParameter = {}; // authentication oauth2 required
                // oauth required

                if (!(configuration && configuration.accessToken)) {
                  _context32.next = 21;
                  break;
                }

                if (!(typeof configuration.accessToken === 'function')) {
                  _context32.next = 16;
                  break;
                }

                _context32.next = 13;
                return configuration.accessToken("oauth2", [""]);

              case 13:
                _context32.t0 = _context32.sent;
                _context32.next = 19;
                break;

              case 16:
                _context32.next = 18;
                return configuration.accessToken;

              case 18:
                _context32.t0 = _context32.sent;

              case 19:
                localVarAccessTokenValue = _context32.t0;
                localVarHeaderParameter["Authorization"] = "Bearer " + localVarAccessTokenValue;

              case 21:
                if (language !== undefined) {
                  localVarQueryParameter['language'] = language;
                }

                query = new URLSearchParams(localVarUrlObj.search);

                for (key in localVarQueryParameter) {
                  query.set(key, localVarQueryParameter[key]);
                }

                for (_key32 in options.query) {
                  query.set(_key32, options.query[_key32]);
                }

                localVarUrlObj.search = new URLSearchParams(query).toString();
                headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                localVarRequestOptions.headers = _objectSpread2(_objectSpread2(_objectSpread2({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                return _context32.abrupt("return", {
                  url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                  options: localVarRequestOptions
                });

              case 29:
              case "end":
                return _context32.stop();
            }
          }
        }, _callee32);
      }));

      function commonGetSkiAreaSingleLocalized(_x140, _x141) {
        return _commonGetSkiAreaSingleLocalized.apply(this, arguments);
      }

      return commonGetSkiAreaSingleLocalized;
    }(),

    /**
     *
     * @summary GET SkiRegion List
     * @param {number} [elements] Elements to retrieve (0 &#x3D; Get All)
     * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)
     * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)
     * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    commonGetSkiRegion: function () {
      var _commonGetSkiRegion = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee33(elements, latitude, longitude, radius, fields, language) {
        var options,
            localVarPath,
            localVarUrlObj,
            baseOptions,
            localVarRequestOptions,
            localVarHeaderParameter,
            localVarQueryParameter,
            localVarAccessTokenValue,
            query,
            key,
            _key33,
            headersFromBaseOptions,
            _args33 = arguments;

        return regeneratorRuntime.wrap(function _callee33$(_context33) {
          while (1) {
            switch (_context33.prev = _context33.next) {
              case 0:
                options = _args33.length > 6 && _args33[6] !== undefined ? _args33[6] : {};
                localVarPath = "/api/SkiRegion"; // use dummy base URL string because the URL constructor only accepts absolute URLs.

                localVarUrlObj = new URL(localVarPath, 'https://example.com');

                if (configuration) {
                  baseOptions = configuration.baseOptions;
                }

                localVarRequestOptions = _objectSpread2(_objectSpread2({
                  method: 'GET'
                }, baseOptions), options);
                localVarHeaderParameter = {};
                localVarQueryParameter = {}; // authentication oauth2 required
                // oauth required

                if (!(configuration && configuration.accessToken)) {
                  _context33.next = 19;
                  break;
                }

                if (!(typeof configuration.accessToken === 'function')) {
                  _context33.next = 14;
                  break;
                }

                _context33.next = 11;
                return configuration.accessToken("oauth2", [""]);

              case 11:
                _context33.t0 = _context33.sent;
                _context33.next = 17;
                break;

              case 14:
                _context33.next = 16;
                return configuration.accessToken;

              case 16:
                _context33.t0 = _context33.sent;

              case 17:
                localVarAccessTokenValue = _context33.t0;
                localVarHeaderParameter["Authorization"] = "Bearer " + localVarAccessTokenValue;

              case 19:
                if (elements !== undefined) {
                  localVarQueryParameter['elements'] = elements;
                }

                if (latitude !== undefined) {
                  localVarQueryParameter['latitude'] = latitude;
                }

                if (longitude !== undefined) {
                  localVarQueryParameter['longitude'] = longitude;
                }

                if (radius !== undefined) {
                  localVarQueryParameter['radius'] = radius;
                }

                if (fields !== undefined) {
                  localVarQueryParameter['fields'] = fields;
                }

                if (language !== undefined) {
                  localVarQueryParameter['language'] = language;
                }

                query = new URLSearchParams(localVarUrlObj.search);

                for (key in localVarQueryParameter) {
                  query.set(key, localVarQueryParameter[key]);
                }

                for (_key33 in options.query) {
                  query.set(_key33, options.query[_key33]);
                }

                localVarUrlObj.search = new URLSearchParams(query).toString();
                headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                localVarRequestOptions.headers = _objectSpread2(_objectSpread2(_objectSpread2({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                return _context33.abrupt("return", {
                  url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                  options: localVarRequestOptions
                });

              case 32:
              case "end":
                return _context33.stop();
            }
          }
        }, _callee33);
      }));

      function commonGetSkiRegion(_x142, _x143, _x144, _x145, _x146, _x147) {
        return _commonGetSkiRegion.apply(this, arguments);
      }

      return commonGetSkiRegion;
    }(),

    /**
     *
     * @summary GET SkiRegion Localized List
     * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)
     * @param {number} [elements] Elements to retrieve (0 &#x3D; Get All)
     * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    commonGetSkiRegionLocalized: function () {
      var _commonGetSkiRegionLocalized = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee34(language, elements, latitude, longitude, radius) {
        var options,
            localVarPath,
            localVarUrlObj,
            baseOptions,
            localVarRequestOptions,
            localVarHeaderParameter,
            localVarQueryParameter,
            localVarAccessTokenValue,
            query,
            key,
            _key34,
            headersFromBaseOptions,
            _args34 = arguments;

        return regeneratorRuntime.wrap(function _callee34$(_context34) {
          while (1) {
            switch (_context34.prev = _context34.next) {
              case 0:
                options = _args34.length > 5 && _args34[5] !== undefined ? _args34[5] : {};
                localVarPath = "/api/SkiRegionLocalized"; // use dummy base URL string because the URL constructor only accepts absolute URLs.

                localVarUrlObj = new URL(localVarPath, 'https://example.com');

                if (configuration) {
                  baseOptions = configuration.baseOptions;
                }

                localVarRequestOptions = _objectSpread2(_objectSpread2({
                  method: 'GET'
                }, baseOptions), options);
                localVarHeaderParameter = {};
                localVarQueryParameter = {}; // authentication oauth2 required
                // oauth required

                if (!(configuration && configuration.accessToken)) {
                  _context34.next = 19;
                  break;
                }

                if (!(typeof configuration.accessToken === 'function')) {
                  _context34.next = 14;
                  break;
                }

                _context34.next = 11;
                return configuration.accessToken("oauth2", [""]);

              case 11:
                _context34.t0 = _context34.sent;
                _context34.next = 17;
                break;

              case 14:
                _context34.next = 16;
                return configuration.accessToken;

              case 16:
                _context34.t0 = _context34.sent;

              case 17:
                localVarAccessTokenValue = _context34.t0;
                localVarHeaderParameter["Authorization"] = "Bearer " + localVarAccessTokenValue;

              case 19:
                if (language !== undefined) {
                  localVarQueryParameter['language'] = language;
                }

                if (elements !== undefined) {
                  localVarQueryParameter['elements'] = elements;
                }

                if (latitude !== undefined) {
                  localVarQueryParameter['latitude'] = latitude;
                }

                if (longitude !== undefined) {
                  localVarQueryParameter['longitude'] = longitude;
                }

                if (radius !== undefined) {
                  localVarQueryParameter['radius'] = radius;
                }

                query = new URLSearchParams(localVarUrlObj.search);

                for (key in localVarQueryParameter) {
                  query.set(key, localVarQueryParameter[key]);
                }

                for (_key34 in options.query) {
                  query.set(_key34, options.query[_key34]);
                }

                localVarUrlObj.search = new URLSearchParams(query).toString();
                headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                localVarRequestOptions.headers = _objectSpread2(_objectSpread2(_objectSpread2({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                return _context34.abrupt("return", {
                  url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                  options: localVarRequestOptions
                });

              case 31:
              case "end":
                return _context34.stop();
            }
          }
        }, _callee34);
      }));

      function commonGetSkiRegionLocalized(_x148, _x149, _x150, _x151, _x152) {
        return _commonGetSkiRegionLocalized.apply(this, arguments);
      }

      return commonGetSkiRegionLocalized;
    }(),

    /**
     *
     * @summary GET SkiRegion Reduced List
     * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)
     * @param {number} [elements] Elements to retrieve (0 &#x3D; Get All)
     * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    commonGetSkiRegionReduced: function () {
      var _commonGetSkiRegionReduced = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee35(language, elements, latitude, longitude, radius) {
        var options,
            localVarPath,
            localVarUrlObj,
            baseOptions,
            localVarRequestOptions,
            localVarHeaderParameter,
            localVarQueryParameter,
            localVarAccessTokenValue,
            query,
            key,
            _key35,
            headersFromBaseOptions,
            _args35 = arguments;

        return regeneratorRuntime.wrap(function _callee35$(_context35) {
          while (1) {
            switch (_context35.prev = _context35.next) {
              case 0:
                options = _args35.length > 5 && _args35[5] !== undefined ? _args35[5] : {};
                localVarPath = "/api/SkiRegionReduced"; // use dummy base URL string because the URL constructor only accepts absolute URLs.

                localVarUrlObj = new URL(localVarPath, 'https://example.com');

                if (configuration) {
                  baseOptions = configuration.baseOptions;
                }

                localVarRequestOptions = _objectSpread2(_objectSpread2({
                  method: 'GET'
                }, baseOptions), options);
                localVarHeaderParameter = {};
                localVarQueryParameter = {}; // authentication oauth2 required
                // oauth required

                if (!(configuration && configuration.accessToken)) {
                  _context35.next = 19;
                  break;
                }

                if (!(typeof configuration.accessToken === 'function')) {
                  _context35.next = 14;
                  break;
                }

                _context35.next = 11;
                return configuration.accessToken("oauth2", [""]);

              case 11:
                _context35.t0 = _context35.sent;
                _context35.next = 17;
                break;

              case 14:
                _context35.next = 16;
                return configuration.accessToken;

              case 16:
                _context35.t0 = _context35.sent;

              case 17:
                localVarAccessTokenValue = _context35.t0;
                localVarHeaderParameter["Authorization"] = "Bearer " + localVarAccessTokenValue;

              case 19:
                if (language !== undefined) {
                  localVarQueryParameter['language'] = language;
                }

                if (elements !== undefined) {
                  localVarQueryParameter['elements'] = elements;
                }

                if (latitude !== undefined) {
                  localVarQueryParameter['latitude'] = latitude;
                }

                if (longitude !== undefined) {
                  localVarQueryParameter['longitude'] = longitude;
                }

                if (radius !== undefined) {
                  localVarQueryParameter['radius'] = radius;
                }

                query = new URLSearchParams(localVarUrlObj.search);

                for (key in localVarQueryParameter) {
                  query.set(key, localVarQueryParameter[key]);
                }

                for (_key35 in options.query) {
                  query.set(_key35, options.query[_key35]);
                }

                localVarUrlObj.search = new URLSearchParams(query).toString();
                headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                localVarRequestOptions.headers = _objectSpread2(_objectSpread2(_objectSpread2({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                return _context35.abrupt("return", {
                  url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                  options: localVarRequestOptions
                });

              case 31:
              case "end":
                return _context35.stop();
            }
          }
        }, _callee35);
      }));

      function commonGetSkiRegionReduced(_x153, _x154, _x155, _x156, _x157) {
        return _commonGetSkiRegionReduced.apply(this, arguments);
      }

      return commonGetSkiRegionReduced;
    }(),

    /**
     *
     * @summary GET SkiRegion Single
     * @param {string} id ID of the requested data
     * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)
     * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    commonGetSkiRegionSingle: function () {
      var _commonGetSkiRegionSingle = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee36(id, fields, language) {
        var options,
            localVarPath,
            localVarUrlObj,
            baseOptions,
            localVarRequestOptions,
            localVarHeaderParameter,
            localVarQueryParameter,
            localVarAccessTokenValue,
            query,
            key,
            _key36,
            headersFromBaseOptions,
            _args36 = arguments;

        return regeneratorRuntime.wrap(function _callee36$(_context36) {
          while (1) {
            switch (_context36.prev = _context36.next) {
              case 0:
                options = _args36.length > 3 && _args36[3] !== undefined ? _args36[3] : {};

                if (!(id === null || id === undefined)) {
                  _context36.next = 3;
                  break;
                }

                throw new base_RequiredError('id', 'Required parameter id was null or undefined when calling commonGetSkiRegionSingle.');

              case 3:
                localVarPath = "/api/SkiRegion/{id}".replace("{".concat("id", "}"), encodeURIComponent(String(id))); // use dummy base URL string because the URL constructor only accepts absolute URLs.

                localVarUrlObj = new URL(localVarPath, 'https://example.com');

                if (configuration) {
                  baseOptions = configuration.baseOptions;
                }

                localVarRequestOptions = _objectSpread2(_objectSpread2({
                  method: 'GET'
                }, baseOptions), options);
                localVarHeaderParameter = {};
                localVarQueryParameter = {}; // authentication oauth2 required
                // oauth required

                if (!(configuration && configuration.accessToken)) {
                  _context36.next = 21;
                  break;
                }

                if (!(typeof configuration.accessToken === 'function')) {
                  _context36.next = 16;
                  break;
                }

                _context36.next = 13;
                return configuration.accessToken("oauth2", [""]);

              case 13:
                _context36.t0 = _context36.sent;
                _context36.next = 19;
                break;

              case 16:
                _context36.next = 18;
                return configuration.accessToken;

              case 18:
                _context36.t0 = _context36.sent;

              case 19:
                localVarAccessTokenValue = _context36.t0;
                localVarHeaderParameter["Authorization"] = "Bearer " + localVarAccessTokenValue;

              case 21:
                if (fields !== undefined) {
                  localVarQueryParameter['fields'] = fields;
                }

                if (language !== undefined) {
                  localVarQueryParameter['language'] = language;
                }

                query = new URLSearchParams(localVarUrlObj.search);

                for (key in localVarQueryParameter) {
                  query.set(key, localVarQueryParameter[key]);
                }

                for (_key36 in options.query) {
                  query.set(_key36, options.query[_key36]);
                }

                localVarUrlObj.search = new URLSearchParams(query).toString();
                headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                localVarRequestOptions.headers = _objectSpread2(_objectSpread2(_objectSpread2({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                return _context36.abrupt("return", {
                  url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                  options: localVarRequestOptions
                });

              case 30:
              case "end":
                return _context36.stop();
            }
          }
        }, _callee36);
      }));

      function commonGetSkiRegionSingle(_x158, _x159, _x160) {
        return _commonGetSkiRegionSingle.apply(this, arguments);
      }

      return commonGetSkiRegionSingle;
    }(),

    /**
     *
     * @summary GET SkiRegion Localized Single
     * @param {string} id ID of the requested data
     * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    commonGetSkiRegionSingleLocalized: function () {
      var _commonGetSkiRegionSingleLocalized = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee37(id, language) {
        var options,
            localVarPath,
            localVarUrlObj,
            baseOptions,
            localVarRequestOptions,
            localVarHeaderParameter,
            localVarQueryParameter,
            localVarAccessTokenValue,
            query,
            key,
            _key37,
            headersFromBaseOptions,
            _args37 = arguments;

        return regeneratorRuntime.wrap(function _callee37$(_context37) {
          while (1) {
            switch (_context37.prev = _context37.next) {
              case 0:
                options = _args37.length > 2 && _args37[2] !== undefined ? _args37[2] : {};

                if (!(id === null || id === undefined)) {
                  _context37.next = 3;
                  break;
                }

                throw new base_RequiredError('id', 'Required parameter id was null or undefined when calling commonGetSkiRegionSingleLocalized.');

              case 3:
                localVarPath = "/api/SkiRegionLocalized/{id}".replace("{".concat("id", "}"), encodeURIComponent(String(id))); // use dummy base URL string because the URL constructor only accepts absolute URLs.

                localVarUrlObj = new URL(localVarPath, 'https://example.com');

                if (configuration) {
                  baseOptions = configuration.baseOptions;
                }

                localVarRequestOptions = _objectSpread2(_objectSpread2({
                  method: 'GET'
                }, baseOptions), options);
                localVarHeaderParameter = {};
                localVarQueryParameter = {}; // authentication oauth2 required
                // oauth required

                if (!(configuration && configuration.accessToken)) {
                  _context37.next = 21;
                  break;
                }

                if (!(typeof configuration.accessToken === 'function')) {
                  _context37.next = 16;
                  break;
                }

                _context37.next = 13;
                return configuration.accessToken("oauth2", [""]);

              case 13:
                _context37.t0 = _context37.sent;
                _context37.next = 19;
                break;

              case 16:
                _context37.next = 18;
                return configuration.accessToken;

              case 18:
                _context37.t0 = _context37.sent;

              case 19:
                localVarAccessTokenValue = _context37.t0;
                localVarHeaderParameter["Authorization"] = "Bearer " + localVarAccessTokenValue;

              case 21:
                if (language !== undefined) {
                  localVarQueryParameter['language'] = language;
                }

                query = new URLSearchParams(localVarUrlObj.search);

                for (key in localVarQueryParameter) {
                  query.set(key, localVarQueryParameter[key]);
                }

                for (_key37 in options.query) {
                  query.set(_key37, options.query[_key37]);
                }

                localVarUrlObj.search = new URLSearchParams(query).toString();
                headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                localVarRequestOptions.headers = _objectSpread2(_objectSpread2(_objectSpread2({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                return _context37.abrupt("return", {
                  url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                  options: localVarRequestOptions
                });

              case 29:
              case "end":
                return _context37.stop();
            }
          }
        }, _callee37);
      }));

      function commonGetSkiRegionSingleLocalized(_x161, _x162) {
        return _commonGetSkiRegionSingleLocalized.apply(this, arguments);
      }

      return commonGetSkiRegionSingleLocalized;
    }(),

    /**
     *
     * @summary GET TourismAssociation List
     * @param {number} [elements] Elements to retrieve (0 &#x3D; Get All)
     * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)
     * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)
     * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    commonGetTourismverein: function () {
      var _commonGetTourismverein = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee38(elements, latitude, longitude, radius, fields, language) {
        var options,
            localVarPath,
            localVarUrlObj,
            baseOptions,
            localVarRequestOptions,
            localVarHeaderParameter,
            localVarQueryParameter,
            localVarAccessTokenValue,
            query,
            key,
            _key38,
            headersFromBaseOptions,
            _args38 = arguments;

        return regeneratorRuntime.wrap(function _callee38$(_context38) {
          while (1) {
            switch (_context38.prev = _context38.next) {
              case 0:
                options = _args38.length > 6 && _args38[6] !== undefined ? _args38[6] : {};
                localVarPath = "/api/TourismAssociation"; // use dummy base URL string because the URL constructor only accepts absolute URLs.

                localVarUrlObj = new URL(localVarPath, 'https://example.com');

                if (configuration) {
                  baseOptions = configuration.baseOptions;
                }

                localVarRequestOptions = _objectSpread2(_objectSpread2({
                  method: 'GET'
                }, baseOptions), options);
                localVarHeaderParameter = {};
                localVarQueryParameter = {}; // authentication oauth2 required
                // oauth required

                if (!(configuration && configuration.accessToken)) {
                  _context38.next = 19;
                  break;
                }

                if (!(typeof configuration.accessToken === 'function')) {
                  _context38.next = 14;
                  break;
                }

                _context38.next = 11;
                return configuration.accessToken("oauth2", [""]);

              case 11:
                _context38.t0 = _context38.sent;
                _context38.next = 17;
                break;

              case 14:
                _context38.next = 16;
                return configuration.accessToken;

              case 16:
                _context38.t0 = _context38.sent;

              case 17:
                localVarAccessTokenValue = _context38.t0;
                localVarHeaderParameter["Authorization"] = "Bearer " + localVarAccessTokenValue;

              case 19:
                if (elements !== undefined) {
                  localVarQueryParameter['elements'] = elements;
                }

                if (latitude !== undefined) {
                  localVarQueryParameter['latitude'] = latitude;
                }

                if (longitude !== undefined) {
                  localVarQueryParameter['longitude'] = longitude;
                }

                if (radius !== undefined) {
                  localVarQueryParameter['radius'] = radius;
                }

                if (fields !== undefined) {
                  localVarQueryParameter['fields'] = fields;
                }

                if (language !== undefined) {
                  localVarQueryParameter['language'] = language;
                }

                query = new URLSearchParams(localVarUrlObj.search);

                for (key in localVarQueryParameter) {
                  query.set(key, localVarQueryParameter[key]);
                }

                for (_key38 in options.query) {
                  query.set(_key38, options.query[_key38]);
                }

                localVarUrlObj.search = new URLSearchParams(query).toString();
                headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                localVarRequestOptions.headers = _objectSpread2(_objectSpread2(_objectSpread2({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                return _context38.abrupt("return", {
                  url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                  options: localVarRequestOptions
                });

              case 32:
              case "end":
                return _context38.stop();
            }
          }
        }, _callee38);
      }));

      function commonGetTourismverein(_x163, _x164, _x165, _x166, _x167, _x168) {
        return _commonGetTourismverein.apply(this, arguments);
      }

      return commonGetTourismverein;
    }(),

    /**
     *
     * @summary GET TourismAssociation Localized List
     * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)
     * @param {number} [elements] Elements to retrieve (0 &#x3D; Get All)
     * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    commonGetTourismvereinLocalized: function () {
      var _commonGetTourismvereinLocalized = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee39(language, elements, latitude, longitude, radius) {
        var options,
            localVarPath,
            localVarUrlObj,
            baseOptions,
            localVarRequestOptions,
            localVarHeaderParameter,
            localVarQueryParameter,
            localVarAccessTokenValue,
            query,
            key,
            _key39,
            headersFromBaseOptions,
            _args39 = arguments;

        return regeneratorRuntime.wrap(function _callee39$(_context39) {
          while (1) {
            switch (_context39.prev = _context39.next) {
              case 0:
                options = _args39.length > 5 && _args39[5] !== undefined ? _args39[5] : {};
                localVarPath = "/api/TourismAssociationLocalized"; // use dummy base URL string because the URL constructor only accepts absolute URLs.

                localVarUrlObj = new URL(localVarPath, 'https://example.com');

                if (configuration) {
                  baseOptions = configuration.baseOptions;
                }

                localVarRequestOptions = _objectSpread2(_objectSpread2({
                  method: 'GET'
                }, baseOptions), options);
                localVarHeaderParameter = {};
                localVarQueryParameter = {}; // authentication oauth2 required
                // oauth required

                if (!(configuration && configuration.accessToken)) {
                  _context39.next = 19;
                  break;
                }

                if (!(typeof configuration.accessToken === 'function')) {
                  _context39.next = 14;
                  break;
                }

                _context39.next = 11;
                return configuration.accessToken("oauth2", [""]);

              case 11:
                _context39.t0 = _context39.sent;
                _context39.next = 17;
                break;

              case 14:
                _context39.next = 16;
                return configuration.accessToken;

              case 16:
                _context39.t0 = _context39.sent;

              case 17:
                localVarAccessTokenValue = _context39.t0;
                localVarHeaderParameter["Authorization"] = "Bearer " + localVarAccessTokenValue;

              case 19:
                if (language !== undefined) {
                  localVarQueryParameter['language'] = language;
                }

                if (elements !== undefined) {
                  localVarQueryParameter['elements'] = elements;
                }

                if (latitude !== undefined) {
                  localVarQueryParameter['latitude'] = latitude;
                }

                if (longitude !== undefined) {
                  localVarQueryParameter['longitude'] = longitude;
                }

                if (radius !== undefined) {
                  localVarQueryParameter['radius'] = radius;
                }

                query = new URLSearchParams(localVarUrlObj.search);

                for (key in localVarQueryParameter) {
                  query.set(key, localVarQueryParameter[key]);
                }

                for (_key39 in options.query) {
                  query.set(_key39, options.query[_key39]);
                }

                localVarUrlObj.search = new URLSearchParams(query).toString();
                headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                localVarRequestOptions.headers = _objectSpread2(_objectSpread2(_objectSpread2({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                return _context39.abrupt("return", {
                  url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                  options: localVarRequestOptions
                });

              case 31:
              case "end":
                return _context39.stop();
            }
          }
        }, _callee39);
      }));

      function commonGetTourismvereinLocalized(_x169, _x170, _x171, _x172, _x173) {
        return _commonGetTourismvereinLocalized.apply(this, arguments);
      }

      return commonGetTourismvereinLocalized;
    }(),

    /**
     *
     * @summary GET TourismAssociation Reduced List
     * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)
     * @param {number} [elements] Elements to retrieve (0 &#x3D; Get All)
     * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    commonGetTourismvereinReduced: function () {
      var _commonGetTourismvereinReduced = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee40(language, elements, latitude, longitude, radius) {
        var options,
            localVarPath,
            localVarUrlObj,
            baseOptions,
            localVarRequestOptions,
            localVarHeaderParameter,
            localVarQueryParameter,
            localVarAccessTokenValue,
            query,
            key,
            _key40,
            headersFromBaseOptions,
            _args40 = arguments;

        return regeneratorRuntime.wrap(function _callee40$(_context40) {
          while (1) {
            switch (_context40.prev = _context40.next) {
              case 0:
                options = _args40.length > 5 && _args40[5] !== undefined ? _args40[5] : {};
                localVarPath = "/api/TourismAssociationReduced"; // use dummy base URL string because the URL constructor only accepts absolute URLs.

                localVarUrlObj = new URL(localVarPath, 'https://example.com');

                if (configuration) {
                  baseOptions = configuration.baseOptions;
                }

                localVarRequestOptions = _objectSpread2(_objectSpread2({
                  method: 'GET'
                }, baseOptions), options);
                localVarHeaderParameter = {};
                localVarQueryParameter = {}; // authentication oauth2 required
                // oauth required

                if (!(configuration && configuration.accessToken)) {
                  _context40.next = 19;
                  break;
                }

                if (!(typeof configuration.accessToken === 'function')) {
                  _context40.next = 14;
                  break;
                }

                _context40.next = 11;
                return configuration.accessToken("oauth2", [""]);

              case 11:
                _context40.t0 = _context40.sent;
                _context40.next = 17;
                break;

              case 14:
                _context40.next = 16;
                return configuration.accessToken;

              case 16:
                _context40.t0 = _context40.sent;

              case 17:
                localVarAccessTokenValue = _context40.t0;
                localVarHeaderParameter["Authorization"] = "Bearer " + localVarAccessTokenValue;

              case 19:
                if (language !== undefined) {
                  localVarQueryParameter['language'] = language;
                }

                if (elements !== undefined) {
                  localVarQueryParameter['elements'] = elements;
                }

                if (latitude !== undefined) {
                  localVarQueryParameter['latitude'] = latitude;
                }

                if (longitude !== undefined) {
                  localVarQueryParameter['longitude'] = longitude;
                }

                if (radius !== undefined) {
                  localVarQueryParameter['radius'] = radius;
                }

                query = new URLSearchParams(localVarUrlObj.search);

                for (key in localVarQueryParameter) {
                  query.set(key, localVarQueryParameter[key]);
                }

                for (_key40 in options.query) {
                  query.set(_key40, options.query[_key40]);
                }

                localVarUrlObj.search = new URLSearchParams(query).toString();
                headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                localVarRequestOptions.headers = _objectSpread2(_objectSpread2(_objectSpread2({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                return _context40.abrupt("return", {
                  url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                  options: localVarRequestOptions
                });

              case 31:
              case "end":
                return _context40.stop();
            }
          }
        }, _callee40);
      }));

      function commonGetTourismvereinReduced(_x174, _x175, _x176, _x177, _x178) {
        return _commonGetTourismvereinReduced.apply(this, arguments);
      }

      return commonGetTourismvereinReduced;
    }(),

    /**
     *
     * @summary GET TourismAssociation Single
     * @param {string} id ID of the requested data
     * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)
     * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    commonGetTourismvereinSingle: function () {
      var _commonGetTourismvereinSingle = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee41(id, fields, language) {
        var options,
            localVarPath,
            localVarUrlObj,
            baseOptions,
            localVarRequestOptions,
            localVarHeaderParameter,
            localVarQueryParameter,
            localVarAccessTokenValue,
            query,
            key,
            _key41,
            headersFromBaseOptions,
            _args41 = arguments;

        return regeneratorRuntime.wrap(function _callee41$(_context41) {
          while (1) {
            switch (_context41.prev = _context41.next) {
              case 0:
                options = _args41.length > 3 && _args41[3] !== undefined ? _args41[3] : {};

                if (!(id === null || id === undefined)) {
                  _context41.next = 3;
                  break;
                }

                throw new base_RequiredError('id', 'Required parameter id was null or undefined when calling commonGetTourismvereinSingle.');

              case 3:
                localVarPath = "/api/TourismAssociation/{id}".replace("{".concat("id", "}"), encodeURIComponent(String(id))); // use dummy base URL string because the URL constructor only accepts absolute URLs.

                localVarUrlObj = new URL(localVarPath, 'https://example.com');

                if (configuration) {
                  baseOptions = configuration.baseOptions;
                }

                localVarRequestOptions = _objectSpread2(_objectSpread2({
                  method: 'GET'
                }, baseOptions), options);
                localVarHeaderParameter = {};
                localVarQueryParameter = {}; // authentication oauth2 required
                // oauth required

                if (!(configuration && configuration.accessToken)) {
                  _context41.next = 21;
                  break;
                }

                if (!(typeof configuration.accessToken === 'function')) {
                  _context41.next = 16;
                  break;
                }

                _context41.next = 13;
                return configuration.accessToken("oauth2", [""]);

              case 13:
                _context41.t0 = _context41.sent;
                _context41.next = 19;
                break;

              case 16:
                _context41.next = 18;
                return configuration.accessToken;

              case 18:
                _context41.t0 = _context41.sent;

              case 19:
                localVarAccessTokenValue = _context41.t0;
                localVarHeaderParameter["Authorization"] = "Bearer " + localVarAccessTokenValue;

              case 21:
                if (fields !== undefined) {
                  localVarQueryParameter['fields'] = fields;
                }

                if (language !== undefined) {
                  localVarQueryParameter['language'] = language;
                }

                query = new URLSearchParams(localVarUrlObj.search);

                for (key in localVarQueryParameter) {
                  query.set(key, localVarQueryParameter[key]);
                }

                for (_key41 in options.query) {
                  query.set(_key41, options.query[_key41]);
                }

                localVarUrlObj.search = new URLSearchParams(query).toString();
                headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                localVarRequestOptions.headers = _objectSpread2(_objectSpread2(_objectSpread2({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                return _context41.abrupt("return", {
                  url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                  options: localVarRequestOptions
                });

              case 30:
              case "end":
                return _context41.stop();
            }
          }
        }, _callee41);
      }));

      function commonGetTourismvereinSingle(_x179, _x180, _x181) {
        return _commonGetTourismvereinSingle.apply(this, arguments);
      }

      return commonGetTourismvereinSingle;
    }(),

    /**
     *
     * @summary GET TourismAssociation Localized Single
     * @param {string} id ID of the requested data
     * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    commonGetTourismvereinSingleLocalized: function () {
      var _commonGetTourismvereinSingleLocalized = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee42(id, language) {
        var options,
            localVarPath,
            localVarUrlObj,
            baseOptions,
            localVarRequestOptions,
            localVarHeaderParameter,
            localVarQueryParameter,
            localVarAccessTokenValue,
            query,
            key,
            _key42,
            headersFromBaseOptions,
            _args42 = arguments;

        return regeneratorRuntime.wrap(function _callee42$(_context42) {
          while (1) {
            switch (_context42.prev = _context42.next) {
              case 0:
                options = _args42.length > 2 && _args42[2] !== undefined ? _args42[2] : {};

                if (!(id === null || id === undefined)) {
                  _context42.next = 3;
                  break;
                }

                throw new base_RequiredError('id', 'Required parameter id was null or undefined when calling commonGetTourismvereinSingleLocalized.');

              case 3:
                localVarPath = "/api/TourismAssociationLocalized/{id}".replace("{".concat("id", "}"), encodeURIComponent(String(id))); // use dummy base URL string because the URL constructor only accepts absolute URLs.

                localVarUrlObj = new URL(localVarPath, 'https://example.com');

                if (configuration) {
                  baseOptions = configuration.baseOptions;
                }

                localVarRequestOptions = _objectSpread2(_objectSpread2({
                  method: 'GET'
                }, baseOptions), options);
                localVarHeaderParameter = {};
                localVarQueryParameter = {}; // authentication oauth2 required
                // oauth required

                if (!(configuration && configuration.accessToken)) {
                  _context42.next = 21;
                  break;
                }

                if (!(typeof configuration.accessToken === 'function')) {
                  _context42.next = 16;
                  break;
                }

                _context42.next = 13;
                return configuration.accessToken("oauth2", [""]);

              case 13:
                _context42.t0 = _context42.sent;
                _context42.next = 19;
                break;

              case 16:
                _context42.next = 18;
                return configuration.accessToken;

              case 18:
                _context42.t0 = _context42.sent;

              case 19:
                localVarAccessTokenValue = _context42.t0;
                localVarHeaderParameter["Authorization"] = "Bearer " + localVarAccessTokenValue;

              case 21:
                if (language !== undefined) {
                  localVarQueryParameter['language'] = language;
                }

                query = new URLSearchParams(localVarUrlObj.search);

                for (key in localVarQueryParameter) {
                  query.set(key, localVarQueryParameter[key]);
                }

                for (_key42 in options.query) {
                  query.set(_key42, options.query[_key42]);
                }

                localVarUrlObj.search = new URLSearchParams(query).toString();
                headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                localVarRequestOptions.headers = _objectSpread2(_objectSpread2(_objectSpread2({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                return _context42.abrupt("return", {
                  url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                  options: localVarRequestOptions
                });

              case 29:
              case "end":
                return _context42.stop();
            }
          }
        }, _callee42);
      }));

      function commonGetTourismvereinSingleLocalized(_x182, _x183) {
        return _commonGetTourismvereinSingleLocalized.apply(this, arguments);
      }

      return commonGetTourismvereinSingleLocalized;
    }(),

    /**
     *
     * @summary GET Wine Awards List
     * @param {number} [elements] Elements to retrieve (0 &#x3D; Get All)
     * @param {string} [wineid] WineId
     * @param {string} [companyid] Company Id
     * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)
     * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    commonGetWineAwardsList: function () {
      var _commonGetWineAwardsList = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee43(elements, wineid, companyid, fields, language) {
        var options,
            localVarPath,
            localVarUrlObj,
            baseOptions,
            localVarRequestOptions,
            localVarHeaderParameter,
            localVarQueryParameter,
            localVarAccessTokenValue,
            query,
            key,
            _key43,
            headersFromBaseOptions,
            _args43 = arguments;

        return regeneratorRuntime.wrap(function _callee43$(_context43) {
          while (1) {
            switch (_context43.prev = _context43.next) {
              case 0:
                options = _args43.length > 5 && _args43[5] !== undefined ? _args43[5] : {};
                localVarPath = "/api/WineAward"; // use dummy base URL string because the URL constructor only accepts absolute URLs.

                localVarUrlObj = new URL(localVarPath, 'https://example.com');

                if (configuration) {
                  baseOptions = configuration.baseOptions;
                }

                localVarRequestOptions = _objectSpread2(_objectSpread2({
                  method: 'GET'
                }, baseOptions), options);
                localVarHeaderParameter = {};
                localVarQueryParameter = {}; // authentication oauth2 required
                // oauth required

                if (!(configuration && configuration.accessToken)) {
                  _context43.next = 19;
                  break;
                }

                if (!(typeof configuration.accessToken === 'function')) {
                  _context43.next = 14;
                  break;
                }

                _context43.next = 11;
                return configuration.accessToken("oauth2", [""]);

              case 11:
                _context43.t0 = _context43.sent;
                _context43.next = 17;
                break;

              case 14:
                _context43.next = 16;
                return configuration.accessToken;

              case 16:
                _context43.t0 = _context43.sent;

              case 17:
                localVarAccessTokenValue = _context43.t0;
                localVarHeaderParameter["Authorization"] = "Bearer " + localVarAccessTokenValue;

              case 19:
                if (elements !== undefined) {
                  localVarQueryParameter['elements'] = elements;
                }

                if (wineid !== undefined) {
                  localVarQueryParameter['wineid'] = wineid;
                }

                if (companyid !== undefined) {
                  localVarQueryParameter['companyid'] = companyid;
                }

                if (fields !== undefined) {
                  localVarQueryParameter['fields'] = fields;
                }

                if (language !== undefined) {
                  localVarQueryParameter['language'] = language;
                }

                query = new URLSearchParams(localVarUrlObj.search);

                for (key in localVarQueryParameter) {
                  query.set(key, localVarQueryParameter[key]);
                }

                for (_key43 in options.query) {
                  query.set(_key43, options.query[_key43]);
                }

                localVarUrlObj.search = new URLSearchParams(query).toString();
                headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                localVarRequestOptions.headers = _objectSpread2(_objectSpread2(_objectSpread2({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                return _context43.abrupt("return", {
                  url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                  options: localVarRequestOptions
                });

              case 31:
              case "end":
                return _context43.stop();
            }
          }
        }, _callee43);
      }));

      function commonGetWineAwardsList(_x184, _x185, _x186, _x187, _x188) {
        return _commonGetWineAwardsList.apply(this, arguments);
      }

      return commonGetWineAwardsList;
    }(),

    /**
     *
     * @summary GET Wine Award Single
     * @param {string} id ID of the requested data
     * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)
     * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    commonGetWineAwardsSingle: function () {
      var _commonGetWineAwardsSingle = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee44(id, fields, language) {
        var options,
            localVarPath,
            localVarUrlObj,
            baseOptions,
            localVarRequestOptions,
            localVarHeaderParameter,
            localVarQueryParameter,
            localVarAccessTokenValue,
            query,
            key,
            _key44,
            headersFromBaseOptions,
            _args44 = arguments;

        return regeneratorRuntime.wrap(function _callee44$(_context44) {
          while (1) {
            switch (_context44.prev = _context44.next) {
              case 0:
                options = _args44.length > 3 && _args44[3] !== undefined ? _args44[3] : {};

                if (!(id === null || id === undefined)) {
                  _context44.next = 3;
                  break;
                }

                throw new base_RequiredError('id', 'Required parameter id was null or undefined when calling commonGetWineAwardsSingle.');

              case 3:
                localVarPath = "/api/WineAward/{id}".replace("{".concat("id", "}"), encodeURIComponent(String(id))); // use dummy base URL string because the URL constructor only accepts absolute URLs.

                localVarUrlObj = new URL(localVarPath, 'https://example.com');

                if (configuration) {
                  baseOptions = configuration.baseOptions;
                }

                localVarRequestOptions = _objectSpread2(_objectSpread2({
                  method: 'GET'
                }, baseOptions), options);
                localVarHeaderParameter = {};
                localVarQueryParameter = {}; // authentication oauth2 required
                // oauth required

                if (!(configuration && configuration.accessToken)) {
                  _context44.next = 21;
                  break;
                }

                if (!(typeof configuration.accessToken === 'function')) {
                  _context44.next = 16;
                  break;
                }

                _context44.next = 13;
                return configuration.accessToken("oauth2", [""]);

              case 13:
                _context44.t0 = _context44.sent;
                _context44.next = 19;
                break;

              case 16:
                _context44.next = 18;
                return configuration.accessToken;

              case 18:
                _context44.t0 = _context44.sent;

              case 19:
                localVarAccessTokenValue = _context44.t0;
                localVarHeaderParameter["Authorization"] = "Bearer " + localVarAccessTokenValue;

              case 21:
                if (fields !== undefined) {
                  localVarQueryParameter['fields'] = fields;
                }

                if (language !== undefined) {
                  localVarQueryParameter['language'] = language;
                }

                query = new URLSearchParams(localVarUrlObj.search);

                for (key in localVarQueryParameter) {
                  query.set(key, localVarQueryParameter[key]);
                }

                for (_key44 in options.query) {
                  query.set(_key44, options.query[_key44]);
                }

                localVarUrlObj.search = new URLSearchParams(query).toString();
                headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                localVarRequestOptions.headers = _objectSpread2(_objectSpread2(_objectSpread2({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                return _context44.abrupt("return", {
                  url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                  options: localVarRequestOptions
                });

              case 30:
              case "end":
                return _context44.stop();
            }
          }
        }, _callee44);
      }));

      function commonGetWineAwardsSingle(_x189, _x190, _x191) {
        return _commonGetWineAwardsSingle.apply(this, arguments);
      }

      return commonGetWineAwardsSingle;
    }()
  };
};
/**
 * CommonApi - functional programming interface
 * @export
 */

var common_api_CommonApiFp = function CommonApiFp(configuration) {
  return {
    /**
     *
     * @summary GET Area Single
     * @param {string} id ID of the requested data
     * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)
     * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    commonGetAreaSingle: function commonGetAreaSingle(id, fields, language, options) {
      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee45() {
        var localVarAxiosArgs;
        return regeneratorRuntime.wrap(function _callee45$(_context45) {
          while (1) {
            switch (_context45.prev = _context45.next) {
              case 0:
                _context45.next = 2;
                return common_api_CommonApiAxiosParamCreator(configuration).commonGetAreaSingle(id, fields, language, options);

              case 2:
                localVarAxiosArgs = _context45.sent;
                return _context45.abrupt("return", function () {
                  var axios = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : axios_default.a;
                  var basePath = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : BASE_PATH;

                  var axiosRequestArgs = _objectSpread2(_objectSpread2({}, localVarAxiosArgs.options), {}, {
                    url: basePath + localVarAxiosArgs.url
                  });

                  return axios.request(axiosRequestArgs);
                });

              case 4:
              case "end":
                return _context45.stop();
            }
          }
        }, _callee45);
      }))();
    },

    /**
     *
     * @summary GET Area List
     * @param {number} [elements] Elements to retrieve (0 &#x3D; Get All)
     * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)
     * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    commonGetAreas: function commonGetAreas(elements, fields, language, options) {
      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee46() {
        var localVarAxiosArgs;
        return regeneratorRuntime.wrap(function _callee46$(_context46) {
          while (1) {
            switch (_context46.prev = _context46.next) {
              case 0:
                _context46.next = 2;
                return common_api_CommonApiAxiosParamCreator(configuration).commonGetAreas(elements, fields, language, options);

              case 2:
                localVarAxiosArgs = _context46.sent;
                return _context46.abrupt("return", function () {
                  var axios = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : axios_default.a;
                  var basePath = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : BASE_PATH;

                  var axiosRequestArgs = _objectSpread2(_objectSpread2({}, localVarAxiosArgs.options), {}, {
                    url: basePath + localVarAxiosArgs.url
                  });

                  return axios.request(axiosRequestArgs);
                });

              case 4:
              case "end":
                return _context46.stop();
            }
          }
        }, _callee46);
      }))();
    },

    /**
     *
     * @summary GET District List
     * @param {number} [elements] Elements to retrieve (0 &#x3D; Get All)
     * @param {string} [visibleinsearch] Filter only Elements flagged with visibleinsearch: (possible values: &#x27;true&#x27;,&#x27;false&#x27;), (default:&#x27;false&#x27;)
     * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)
     * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)
     * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    commonGetDistrict: function commonGetDistrict(elements, visibleinsearch, latitude, longitude, radius, fields, language, options) {
      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee47() {
        var localVarAxiosArgs;
        return regeneratorRuntime.wrap(function _callee47$(_context47) {
          while (1) {
            switch (_context47.prev = _context47.next) {
              case 0:
                _context47.next = 2;
                return common_api_CommonApiAxiosParamCreator(configuration).commonGetDistrict(elements, visibleinsearch, latitude, longitude, radius, fields, language, options);

              case 2:
                localVarAxiosArgs = _context47.sent;
                return _context47.abrupt("return", function () {
                  var axios = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : axios_default.a;
                  var basePath = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : BASE_PATH;

                  var axiosRequestArgs = _objectSpread2(_objectSpread2({}, localVarAxiosArgs.options), {}, {
                    url: basePath + localVarAxiosArgs.url
                  });

                  return axios.request(axiosRequestArgs);
                });

              case 4:
              case "end":
                return _context47.stop();
            }
          }
        }, _callee47);
      }))();
    },

    /**
     *
     * @summary GET District Localized List
     * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)
     * @param {number} [elements] Elements to retrieve (0 &#x3D; Get All)
     * @param {string} [visibleinsearch] Filter only Elements flagged with visibleinsearch: (possible values: &#x27;true&#x27;,&#x27;false&#x27;), (default:&#x27;false&#x27;)
     * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    commonGetDistrictLocalized: function commonGetDistrictLocalized(language, elements, visibleinsearch, latitude, longitude, radius, options) {
      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee48() {
        var localVarAxiosArgs;
        return regeneratorRuntime.wrap(function _callee48$(_context48) {
          while (1) {
            switch (_context48.prev = _context48.next) {
              case 0:
                _context48.next = 2;
                return common_api_CommonApiAxiosParamCreator(configuration).commonGetDistrictLocalized(language, elements, visibleinsearch, latitude, longitude, radius, options);

              case 2:
                localVarAxiosArgs = _context48.sent;
                return _context48.abrupt("return", function () {
                  var axios = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : axios_default.a;
                  var basePath = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : BASE_PATH;

                  var axiosRequestArgs = _objectSpread2(_objectSpread2({}, localVarAxiosArgs.options), {}, {
                    url: basePath + localVarAxiosArgs.url
                  });

                  return axios.request(axiosRequestArgs);
                });

              case 4:
              case "end":
                return _context48.stop();
            }
          }
        }, _callee48);
      }))();
    },

    /**
     *
     * @summary GET District Reduced List
     * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)
     * @param {number} [elements] Elements to retrieve (0 &#x3D; Get All)
     * @param {string} [visibleinsearch] Filter only Elements flagged with visibleinsearch: (possible values: &#x27;true&#x27;,&#x27;false&#x27;), (default:&#x27;false&#x27;)
     * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    commonGetDistrictReduced: function commonGetDistrictReduced(language, elements, visibleinsearch, latitude, longitude, radius, options) {
      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee49() {
        var localVarAxiosArgs;
        return regeneratorRuntime.wrap(function _callee49$(_context49) {
          while (1) {
            switch (_context49.prev = _context49.next) {
              case 0:
                _context49.next = 2;
                return common_api_CommonApiAxiosParamCreator(configuration).commonGetDistrictReduced(language, elements, visibleinsearch, latitude, longitude, radius, options);

              case 2:
                localVarAxiosArgs = _context49.sent;
                return _context49.abrupt("return", function () {
                  var axios = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : axios_default.a;
                  var basePath = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : BASE_PATH;

                  var axiosRequestArgs = _objectSpread2(_objectSpread2({}, localVarAxiosArgs.options), {}, {
                    url: basePath + localVarAxiosArgs.url
                  });

                  return axios.request(axiosRequestArgs);
                });

              case 4:
              case "end":
                return _context49.stop();
            }
          }
        }, _callee49);
      }))();
    },

    /**
     *
     * @summary GET District Single
     * @param {string} id ID of the requested data
     * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)
     * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    commonGetDistrictSingle: function commonGetDistrictSingle(id, fields, language, options) {
      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee50() {
        var localVarAxiosArgs;
        return regeneratorRuntime.wrap(function _callee50$(_context50) {
          while (1) {
            switch (_context50.prev = _context50.next) {
              case 0:
                _context50.next = 2;
                return common_api_CommonApiAxiosParamCreator(configuration).commonGetDistrictSingle(id, fields, language, options);

              case 2:
                localVarAxiosArgs = _context50.sent;
                return _context50.abrupt("return", function () {
                  var axios = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : axios_default.a;
                  var basePath = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : BASE_PATH;

                  var axiosRequestArgs = _objectSpread2(_objectSpread2({}, localVarAxiosArgs.options), {}, {
                    url: basePath + localVarAxiosArgs.url
                  });

                  return axios.request(axiosRequestArgs);
                });

              case 4:
              case "end":
                return _context50.stop();
            }
          }
        }, _callee50);
      }))();
    },

    /**
     *
     * @summary GET District Localized Single
     * @param {string} id ID of the requested data
     * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    commonGetDistrictSingleLocalized: function commonGetDistrictSingleLocalized(id, language, options) {
      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee51() {
        var localVarAxiosArgs;
        return regeneratorRuntime.wrap(function _callee51$(_context51) {
          while (1) {
            switch (_context51.prev = _context51.next) {
              case 0:
                _context51.next = 2;
                return common_api_CommonApiAxiosParamCreator(configuration).commonGetDistrictSingleLocalized(id, language, options);

              case 2:
                localVarAxiosArgs = _context51.sent;
                return _context51.abrupt("return", function () {
                  var axios = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : axios_default.a;
                  var basePath = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : BASE_PATH;

                  var axiosRequestArgs = _objectSpread2(_objectSpread2({}, localVarAxiosArgs.options), {}, {
                    url: basePath + localVarAxiosArgs.url
                  });

                  return axios.request(axiosRequestArgs);
                });

              case 4:
              case "end":
                return _context51.stop();
            }
          }
        }, _callee51);
      }))();
    },

    /**
     *
     * @summary GET ExperienceArea Single
     * @param {string} id ID of the requested data
     * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)
     * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    commonGetExperienceAreaSingle: function commonGetExperienceAreaSingle(id, fields, language, options) {
      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee52() {
        var localVarAxiosArgs;
        return regeneratorRuntime.wrap(function _callee52$(_context52) {
          while (1) {
            switch (_context52.prev = _context52.next) {
              case 0:
                _context52.next = 2;
                return common_api_CommonApiAxiosParamCreator(configuration).commonGetExperienceAreaSingle(id, fields, language, options);

              case 2:
                localVarAxiosArgs = _context52.sent;
                return _context52.abrupt("return", function () {
                  var axios = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : axios_default.a;
                  var basePath = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : BASE_PATH;

                  var axiosRequestArgs = _objectSpread2(_objectSpread2({}, localVarAxiosArgs.options), {}, {
                    url: basePath + localVarAxiosArgs.url
                  });

                  return axios.request(axiosRequestArgs);
                });

              case 4:
              case "end":
                return _context52.stop();
            }
          }
        }, _callee52);
      }))();
    },

    /**
     *
     * @summary GET ExperienceArea Localized Single
     * @param {string} id ID of the requested data
     * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    commonGetExperienceAreaSingleLocalized: function commonGetExperienceAreaSingleLocalized(id, language, options) {
      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee53() {
        var localVarAxiosArgs;
        return regeneratorRuntime.wrap(function _callee53$(_context53) {
          while (1) {
            switch (_context53.prev = _context53.next) {
              case 0:
                _context53.next = 2;
                return common_api_CommonApiAxiosParamCreator(configuration).commonGetExperienceAreaSingleLocalized(id, language, options);

              case 2:
                localVarAxiosArgs = _context53.sent;
                return _context53.abrupt("return", function () {
                  var axios = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : axios_default.a;
                  var basePath = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : BASE_PATH;

                  var axiosRequestArgs = _objectSpread2(_objectSpread2({}, localVarAxiosArgs.options), {}, {
                    url: basePath + localVarAxiosArgs.url
                  });

                  return axios.request(axiosRequestArgs);
                });

              case 4:
              case "end":
                return _context53.stop();
            }
          }
        }, _callee53);
      }))();
    },

    /**
     *
     * @summary GET Experiencearea List
     * @param {number} [elements] Elements to retrieve (0 &#x3D; Get All)
     * @param {string} [visibleinsearch] Filter only Elements flagged with visibleinsearch: (possible values: &#x27;true&#x27;,&#x27;false&#x27;), (default:&#x27;false&#x27;)
     * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)
     * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)
     * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    commonGetExperienceAreas: function commonGetExperienceAreas(elements, visibleinsearch, latitude, longitude, radius, fields, language, options) {
      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee54() {
        var localVarAxiosArgs;
        return regeneratorRuntime.wrap(function _callee54$(_context54) {
          while (1) {
            switch (_context54.prev = _context54.next) {
              case 0:
                _context54.next = 2;
                return common_api_CommonApiAxiosParamCreator(configuration).commonGetExperienceAreas(elements, visibleinsearch, latitude, longitude, radius, fields, language, options);

              case 2:
                localVarAxiosArgs = _context54.sent;
                return _context54.abrupt("return", function () {
                  var axios = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : axios_default.a;
                  var basePath = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : BASE_PATH;

                  var axiosRequestArgs = _objectSpread2(_objectSpread2({}, localVarAxiosArgs.options), {}, {
                    url: basePath + localVarAxiosArgs.url
                  });

                  return axios.request(axiosRequestArgs);
                });

              case 4:
              case "end":
                return _context54.stop();
            }
          }
        }, _callee54);
      }))();
    },

    /**
     *
     * @summary GET ExperienceArea Localized List
     * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)
     * @param {number} [elements] Elements to retrieve (0 &#x3D; Get All)
     * @param {string} [visibleinsearch] Filter only Elements flagged with visibleinsearch: (possible values: &#x27;true&#x27;,&#x27;false&#x27;), (default:&#x27;false&#x27;)
     * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    commonGetExperienceAreasLocalized: function commonGetExperienceAreasLocalized(language, elements, visibleinsearch, latitude, longitude, radius, options) {
      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee55() {
        var localVarAxiosArgs;
        return regeneratorRuntime.wrap(function _callee55$(_context55) {
          while (1) {
            switch (_context55.prev = _context55.next) {
              case 0:
                _context55.next = 2;
                return common_api_CommonApiAxiosParamCreator(configuration).commonGetExperienceAreasLocalized(language, elements, visibleinsearch, latitude, longitude, radius, options);

              case 2:
                localVarAxiosArgs = _context55.sent;
                return _context55.abrupt("return", function () {
                  var axios = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : axios_default.a;
                  var basePath = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : BASE_PATH;

                  var axiosRequestArgs = _objectSpread2(_objectSpread2({}, localVarAxiosArgs.options), {}, {
                    url: basePath + localVarAxiosArgs.url
                  });

                  return axios.request(axiosRequestArgs);
                });

              case 4:
              case "end":
                return _context55.stop();
            }
          }
        }, _callee55);
      }))();
    },

    /**
     *
     * @summary GET ExperienceArea Reduced List
     * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)
     * @param {number} [elements] Elements to retrieve (0 &#x3D; Get All)
     * @param {string} [visibleinsearch] Filter only Elements flagged with visibleinsearch: (possible values: &#x27;true&#x27;,&#x27;false&#x27;), (default:&#x27;false&#x27;)
     * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    commonGetExperienceAreasReduced: function commonGetExperienceAreasReduced(language, elements, visibleinsearch, latitude, longitude, radius, options) {
      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee56() {
        var localVarAxiosArgs;
        return regeneratorRuntime.wrap(function _callee56$(_context56) {
          while (1) {
            switch (_context56.prev = _context56.next) {
              case 0:
                _context56.next = 2;
                return common_api_CommonApiAxiosParamCreator(configuration).commonGetExperienceAreasReduced(language, elements, visibleinsearch, latitude, longitude, radius, options);

              case 2:
                localVarAxiosArgs = _context56.sent;
                return _context56.abrupt("return", function () {
                  var axios = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : axios_default.a;
                  var basePath = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : BASE_PATH;

                  var axiosRequestArgs = _objectSpread2(_objectSpread2({}, localVarAxiosArgs.options), {}, {
                    url: basePath + localVarAxiosArgs.url
                  });

                  return axios.request(axiosRequestArgs);
                });

              case 4:
              case "end":
                return _context56.stop();
            }
          }
        }, _callee56);
      }))();
    },

    /**
     *
     * @summary GET MetaRegion Single
     * @param {string} id ID of the requested data
     * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)
     * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    commonGetMetaRegionSingle: function commonGetMetaRegionSingle(id, fields, language, options) {
      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee57() {
        var localVarAxiosArgs;
        return regeneratorRuntime.wrap(function _callee57$(_context57) {
          while (1) {
            switch (_context57.prev = _context57.next) {
              case 0:
                _context57.next = 2;
                return common_api_CommonApiAxiosParamCreator(configuration).commonGetMetaRegionSingle(id, fields, language, options);

              case 2:
                localVarAxiosArgs = _context57.sent;
                return _context57.abrupt("return", function () {
                  var axios = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : axios_default.a;
                  var basePath = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : BASE_PATH;

                  var axiosRequestArgs = _objectSpread2(_objectSpread2({}, localVarAxiosArgs.options), {}, {
                    url: basePath + localVarAxiosArgs.url
                  });

                  return axios.request(axiosRequestArgs);
                });

              case 4:
              case "end":
                return _context57.stop();
            }
          }
        }, _callee57);
      }))();
    },

    /**
     *
     * @summary GET MetaRegion Localized Single
     * @param {string} id ID of the requested data
     * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    commonGetMetaRegionSingleLocalized: function commonGetMetaRegionSingleLocalized(id, language, options) {
      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee58() {
        var localVarAxiosArgs;
        return regeneratorRuntime.wrap(function _callee58$(_context58) {
          while (1) {
            switch (_context58.prev = _context58.next) {
              case 0:
                _context58.next = 2;
                return common_api_CommonApiAxiosParamCreator(configuration).commonGetMetaRegionSingleLocalized(id, language, options);

              case 2:
                localVarAxiosArgs = _context58.sent;
                return _context58.abrupt("return", function () {
                  var axios = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : axios_default.a;
                  var basePath = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : BASE_PATH;

                  var axiosRequestArgs = _objectSpread2(_objectSpread2({}, localVarAxiosArgs.options), {}, {
                    url: basePath + localVarAxiosArgs.url
                  });

                  return axios.request(axiosRequestArgs);
                });

              case 4:
              case "end":
                return _context58.stop();
            }
          }
        }, _callee58);
      }))();
    },

    /**
     *
     * @summary GET MetaRegion List
     * @param {number} [elements] Elements to retrieve (0 &#x3D; Get All)
     * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)
     * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)
     * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    commonGetMetaRegions: function commonGetMetaRegions(elements, latitude, longitude, radius, fields, language, options) {
      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee59() {
        var localVarAxiosArgs;
        return regeneratorRuntime.wrap(function _callee59$(_context59) {
          while (1) {
            switch (_context59.prev = _context59.next) {
              case 0:
                _context59.next = 2;
                return common_api_CommonApiAxiosParamCreator(configuration).commonGetMetaRegions(elements, latitude, longitude, radius, fields, language, options);

              case 2:
                localVarAxiosArgs = _context59.sent;
                return _context59.abrupt("return", function () {
                  var axios = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : axios_default.a;
                  var basePath = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : BASE_PATH;

                  var axiosRequestArgs = _objectSpread2(_objectSpread2({}, localVarAxiosArgs.options), {}, {
                    url: basePath + localVarAxiosArgs.url
                  });

                  return axios.request(axiosRequestArgs);
                });

              case 4:
              case "end":
                return _context59.stop();
            }
          }
        }, _callee59);
      }))();
    },

    /**
     *
     * @summary GET MetaRegion Localized List
     * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)
     * @param {number} [elements] Elements to retrieve (0 &#x3D; Get All)
     * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    commonGetMetaRegionsLocalized: function commonGetMetaRegionsLocalized(language, elements, latitude, longitude, radius, options) {
      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee60() {
        var localVarAxiosArgs;
        return regeneratorRuntime.wrap(function _callee60$(_context60) {
          while (1) {
            switch (_context60.prev = _context60.next) {
              case 0:
                _context60.next = 2;
                return common_api_CommonApiAxiosParamCreator(configuration).commonGetMetaRegionsLocalized(language, elements, latitude, longitude, radius, options);

              case 2:
                localVarAxiosArgs = _context60.sent;
                return _context60.abrupt("return", function () {
                  var axios = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : axios_default.a;
                  var basePath = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : BASE_PATH;

                  var axiosRequestArgs = _objectSpread2(_objectSpread2({}, localVarAxiosArgs.options), {}, {
                    url: basePath + localVarAxiosArgs.url
                  });

                  return axios.request(axiosRequestArgs);
                });

              case 4:
              case "end":
                return _context60.stop();
            }
          }
        }, _callee60);
      }))();
    },

    /**
     *
     * @summary GET MetaRegion Reduced List
     * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)
     * @param {number} [elements] Elements to retrieve (0 &#x3D; Get All)
     * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    commonGetMetaRegionsReduced: function commonGetMetaRegionsReduced(language, elements, latitude, longitude, radius, options) {
      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee61() {
        var localVarAxiosArgs;
        return regeneratorRuntime.wrap(function _callee61$(_context61) {
          while (1) {
            switch (_context61.prev = _context61.next) {
              case 0:
                _context61.next = 2;
                return common_api_CommonApiAxiosParamCreator(configuration).commonGetMetaRegionsReduced(language, elements, latitude, longitude, radius, options);

              case 2:
                localVarAxiosArgs = _context61.sent;
                return _context61.abrupt("return", function () {
                  var axios = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : axios_default.a;
                  var basePath = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : BASE_PATH;

                  var axiosRequestArgs = _objectSpread2(_objectSpread2({}, localVarAxiosArgs.options), {}, {
                    url: basePath + localVarAxiosArgs.url
                  });

                  return axios.request(axiosRequestArgs);
                });

              case 4:
              case "end":
                return _context61.stop();
            }
          }
        }, _callee61);
      }))();
    },

    /**
     *
     * @summary GET Municipality List
     * @param {number} [elements] Elements to retrieve (0 &#x3D; Get All)
     * @param {string} [visibleinsearch] Filter only Elements flagged with visibleinsearch: (possible values: &#x27;true&#x27;,&#x27;false&#x27;), (default:&#x27;false&#x27;)
     * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)
     * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)
     * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    commonGetMunicipality: function commonGetMunicipality(elements, visibleinsearch, latitude, longitude, radius, fields, language, options) {
      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee62() {
        var localVarAxiosArgs;
        return regeneratorRuntime.wrap(function _callee62$(_context62) {
          while (1) {
            switch (_context62.prev = _context62.next) {
              case 0:
                _context62.next = 2;
                return common_api_CommonApiAxiosParamCreator(configuration).commonGetMunicipality(elements, visibleinsearch, latitude, longitude, radius, fields, language, options);

              case 2:
                localVarAxiosArgs = _context62.sent;
                return _context62.abrupt("return", function () {
                  var axios = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : axios_default.a;
                  var basePath = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : BASE_PATH;

                  var axiosRequestArgs = _objectSpread2(_objectSpread2({}, localVarAxiosArgs.options), {}, {
                    url: basePath + localVarAxiosArgs.url
                  });

                  return axios.request(axiosRequestArgs);
                });

              case 4:
              case "end":
                return _context62.stop();
            }
          }
        }, _callee62);
      }))();
    },

    /**
     *
     * @summary GET Municipality Localized List
     * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)
     * @param {number} [elements] Elements to retrieve (0 &#x3D; Get All)
     * @param {string} [visibleinsearch] Filter only Elements flagged with visibleinsearch: (possible values: &#x27;true&#x27;,&#x27;false&#x27;), (default:&#x27;false&#x27;)
     * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    commonGetMunicipalityLocalized: function commonGetMunicipalityLocalized(language, elements, visibleinsearch, latitude, longitude, radius, options) {
      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee63() {
        var localVarAxiosArgs;
        return regeneratorRuntime.wrap(function _callee63$(_context63) {
          while (1) {
            switch (_context63.prev = _context63.next) {
              case 0:
                _context63.next = 2;
                return common_api_CommonApiAxiosParamCreator(configuration).commonGetMunicipalityLocalized(language, elements, visibleinsearch, latitude, longitude, radius, options);

              case 2:
                localVarAxiosArgs = _context63.sent;
                return _context63.abrupt("return", function () {
                  var axios = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : axios_default.a;
                  var basePath = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : BASE_PATH;

                  var axiosRequestArgs = _objectSpread2(_objectSpread2({}, localVarAxiosArgs.options), {}, {
                    url: basePath + localVarAxiosArgs.url
                  });

                  return axios.request(axiosRequestArgs);
                });

              case 4:
              case "end":
                return _context63.stop();
            }
          }
        }, _callee63);
      }))();
    },

    /**
     *
     * @summary GET Municipality Reduced List
     * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)
     * @param {number} [elements] Elements to retrieve (0 &#x3D; Get All)
     * @param {string} [visibleinsearch] Filter only Elements flagged with visibleinsearch: (possible values: &#x27;true&#x27;,&#x27;false&#x27;), (default:&#x27;false&#x27;)
     * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    commonGetMunicipalityReduced: function commonGetMunicipalityReduced(language, elements, visibleinsearch, latitude, longitude, radius, options) {
      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee64() {
        var localVarAxiosArgs;
        return regeneratorRuntime.wrap(function _callee64$(_context64) {
          while (1) {
            switch (_context64.prev = _context64.next) {
              case 0:
                _context64.next = 2;
                return common_api_CommonApiAxiosParamCreator(configuration).commonGetMunicipalityReduced(language, elements, visibleinsearch, latitude, longitude, radius, options);

              case 2:
                localVarAxiosArgs = _context64.sent;
                return _context64.abrupt("return", function () {
                  var axios = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : axios_default.a;
                  var basePath = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : BASE_PATH;

                  var axiosRequestArgs = _objectSpread2(_objectSpread2({}, localVarAxiosArgs.options), {}, {
                    url: basePath + localVarAxiosArgs.url
                  });

                  return axios.request(axiosRequestArgs);
                });

              case 4:
              case "end":
                return _context64.stop();
            }
          }
        }, _callee64);
      }))();
    },

    /**
     *
     * @summary GET Municipality Single
     * @param {string} id ID of the requested data
     * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)
     * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    commonGetMunicipalitySingle: function commonGetMunicipalitySingle(id, fields, language, options) {
      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee65() {
        var localVarAxiosArgs;
        return regeneratorRuntime.wrap(function _callee65$(_context65) {
          while (1) {
            switch (_context65.prev = _context65.next) {
              case 0:
                _context65.next = 2;
                return common_api_CommonApiAxiosParamCreator(configuration).commonGetMunicipalitySingle(id, fields, language, options);

              case 2:
                localVarAxiosArgs = _context65.sent;
                return _context65.abrupt("return", function () {
                  var axios = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : axios_default.a;
                  var basePath = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : BASE_PATH;

                  var axiosRequestArgs = _objectSpread2(_objectSpread2({}, localVarAxiosArgs.options), {}, {
                    url: basePath + localVarAxiosArgs.url
                  });

                  return axios.request(axiosRequestArgs);
                });

              case 4:
              case "end":
                return _context65.stop();
            }
          }
        }, _callee65);
      }))();
    },

    /**
     *
     * @summary GET Municipality Localized Single
     * @param {string} id ID of the requested data
     * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    commonGetMunicipalitySingleLocalized: function commonGetMunicipalitySingleLocalized(id, language, options) {
      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee66() {
        var localVarAxiosArgs;
        return regeneratorRuntime.wrap(function _callee66$(_context66) {
          while (1) {
            switch (_context66.prev = _context66.next) {
              case 0:
                _context66.next = 2;
                return common_api_CommonApiAxiosParamCreator(configuration).commonGetMunicipalitySingleLocalized(id, language, options);

              case 2:
                localVarAxiosArgs = _context66.sent;
                return _context66.abrupt("return", function () {
                  var axios = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : axios_default.a;
                  var basePath = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : BASE_PATH;

                  var axiosRequestArgs = _objectSpread2(_objectSpread2({}, localVarAxiosArgs.options), {}, {
                    url: basePath + localVarAxiosArgs.url
                  });

                  return axios.request(axiosRequestArgs);
                });

              case 4:
              case "end":
                return _context66.stop();
            }
          }
        }, _callee66);
      }))();
    },

    /**
     *
     * @summary GET Region Single
     * @param {string} id ID of the requested data
     * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)
     * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    commonGetRegionSingle: function commonGetRegionSingle(id, fields, language, options) {
      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee67() {
        var localVarAxiosArgs;
        return regeneratorRuntime.wrap(function _callee67$(_context67) {
          while (1) {
            switch (_context67.prev = _context67.next) {
              case 0:
                _context67.next = 2;
                return common_api_CommonApiAxiosParamCreator(configuration).commonGetRegionSingle(id, fields, language, options);

              case 2:
                localVarAxiosArgs = _context67.sent;
                return _context67.abrupt("return", function () {
                  var axios = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : axios_default.a;
                  var basePath = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : BASE_PATH;

                  var axiosRequestArgs = _objectSpread2(_objectSpread2({}, localVarAxiosArgs.options), {}, {
                    url: basePath + localVarAxiosArgs.url
                  });

                  return axios.request(axiosRequestArgs);
                });

              case 4:
              case "end":
                return _context67.stop();
            }
          }
        }, _callee67);
      }))();
    },

    /**
     *
     * @summary GET Region Localized Single
     * @param {string} id ID of the requested data
     * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    commonGetRegionSingleLocalized: function commonGetRegionSingleLocalized(id, language, options) {
      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee68() {
        var localVarAxiosArgs;
        return regeneratorRuntime.wrap(function _callee68$(_context68) {
          while (1) {
            switch (_context68.prev = _context68.next) {
              case 0:
                _context68.next = 2;
                return common_api_CommonApiAxiosParamCreator(configuration).commonGetRegionSingleLocalized(id, language, options);

              case 2:
                localVarAxiosArgs = _context68.sent;
                return _context68.abrupt("return", function () {
                  var axios = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : axios_default.a;
                  var basePath = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : BASE_PATH;

                  var axiosRequestArgs = _objectSpread2(_objectSpread2({}, localVarAxiosArgs.options), {}, {
                    url: basePath + localVarAxiosArgs.url
                  });

                  return axios.request(axiosRequestArgs);
                });

              case 4:
              case "end":
                return _context68.stop();
            }
          }
        }, _callee68);
      }))();
    },

    /**
     *
     * @summary GET Region List
     * @param {number} [elements] Elements to retrieve (0 &#x3D; Get All)
     * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)
     * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)
     * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    commonGetRegions: function commonGetRegions(elements, latitude, longitude, radius, fields, language, options) {
      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee69() {
        var localVarAxiosArgs;
        return regeneratorRuntime.wrap(function _callee69$(_context69) {
          while (1) {
            switch (_context69.prev = _context69.next) {
              case 0:
                _context69.next = 2;
                return common_api_CommonApiAxiosParamCreator(configuration).commonGetRegions(elements, latitude, longitude, radius, fields, language, options);

              case 2:
                localVarAxiosArgs = _context69.sent;
                return _context69.abrupt("return", function () {
                  var axios = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : axios_default.a;
                  var basePath = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : BASE_PATH;

                  var axiosRequestArgs = _objectSpread2(_objectSpread2({}, localVarAxiosArgs.options), {}, {
                    url: basePath + localVarAxiosArgs.url
                  });

                  return axios.request(axiosRequestArgs);
                });

              case 4:
              case "end":
                return _context69.stop();
            }
          }
        }, _callee69);
      }))();
    },

    /**
     *
     * @summary GET Region Localized List
     * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)
     * @param {number} [elements] Elements to retrieve (0 &#x3D; Get All)
     * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    commonGetRegionsLocalized: function commonGetRegionsLocalized(language, elements, latitude, longitude, radius, options) {
      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee70() {
        var localVarAxiosArgs;
        return regeneratorRuntime.wrap(function _callee70$(_context70) {
          while (1) {
            switch (_context70.prev = _context70.next) {
              case 0:
                _context70.next = 2;
                return common_api_CommonApiAxiosParamCreator(configuration).commonGetRegionsLocalized(language, elements, latitude, longitude, radius, options);

              case 2:
                localVarAxiosArgs = _context70.sent;
                return _context70.abrupt("return", function () {
                  var axios = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : axios_default.a;
                  var basePath = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : BASE_PATH;

                  var axiosRequestArgs = _objectSpread2(_objectSpread2({}, localVarAxiosArgs.options), {}, {
                    url: basePath + localVarAxiosArgs.url
                  });

                  return axios.request(axiosRequestArgs);
                });

              case 4:
              case "end":
                return _context70.stop();
            }
          }
        }, _callee70);
      }))();
    },

    /**
     *
     * @summary GET Region Reduced List
     * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)
     * @param {number} [elements] Elements to retrieve (0 &#x3D; Get All)
     * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    commonGetRegionsReduced: function commonGetRegionsReduced(language, elements, latitude, longitude, radius, options) {
      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee71() {
        var localVarAxiosArgs;
        return regeneratorRuntime.wrap(function _callee71$(_context71) {
          while (1) {
            switch (_context71.prev = _context71.next) {
              case 0:
                _context71.next = 2;
                return common_api_CommonApiAxiosParamCreator(configuration).commonGetRegionsReduced(language, elements, latitude, longitude, radius, options);

              case 2:
                localVarAxiosArgs = _context71.sent;
                return _context71.abrupt("return", function () {
                  var axios = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : axios_default.a;
                  var basePath = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : BASE_PATH;

                  var axiosRequestArgs = _objectSpread2(_objectSpread2({}, localVarAxiosArgs.options), {}, {
                    url: basePath + localVarAxiosArgs.url
                  });

                  return axios.request(axiosRequestArgs);
                });

              case 4:
              case "end":
                return _context71.stop();
            }
          }
        }, _callee71);
      }))();
    },

    /**
     *
     * @summary GET SkiArea List
     * @param {number} [elements] Elements to retrieve (0 &#x3D; Get All)
     * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)
     * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)
     * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    commonGetSkiArea: function commonGetSkiArea(elements, latitude, longitude, radius, fields, language, options) {
      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee72() {
        var localVarAxiosArgs;
        return regeneratorRuntime.wrap(function _callee72$(_context72) {
          while (1) {
            switch (_context72.prev = _context72.next) {
              case 0:
                _context72.next = 2;
                return common_api_CommonApiAxiosParamCreator(configuration).commonGetSkiArea(elements, latitude, longitude, radius, fields, language, options);

              case 2:
                localVarAxiosArgs = _context72.sent;
                return _context72.abrupt("return", function () {
                  var axios = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : axios_default.a;
                  var basePath = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : BASE_PATH;

                  var axiosRequestArgs = _objectSpread2(_objectSpread2({}, localVarAxiosArgs.options), {}, {
                    url: basePath + localVarAxiosArgs.url
                  });

                  return axios.request(axiosRequestArgs);
                });

              case 4:
              case "end":
                return _context72.stop();
            }
          }
        }, _callee72);
      }))();
    },

    /**
     *
     * @summary GET SkiArea Localized List
     * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)
     * @param {number} [elements] Elements to retrieve (0 &#x3D; Get All)
     * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    commonGetSkiAreaLocalized: function commonGetSkiAreaLocalized(language, elements, latitude, longitude, radius, options) {
      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee73() {
        var localVarAxiosArgs;
        return regeneratorRuntime.wrap(function _callee73$(_context73) {
          while (1) {
            switch (_context73.prev = _context73.next) {
              case 0:
                _context73.next = 2;
                return common_api_CommonApiAxiosParamCreator(configuration).commonGetSkiAreaLocalized(language, elements, latitude, longitude, radius, options);

              case 2:
                localVarAxiosArgs = _context73.sent;
                return _context73.abrupt("return", function () {
                  var axios = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : axios_default.a;
                  var basePath = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : BASE_PATH;

                  var axiosRequestArgs = _objectSpread2(_objectSpread2({}, localVarAxiosArgs.options), {}, {
                    url: basePath + localVarAxiosArgs.url
                  });

                  return axios.request(axiosRequestArgs);
                });

              case 4:
              case "end":
                return _context73.stop();
            }
          }
        }, _callee73);
      }))();
    },

    /**
     *
     * @summary GET SkiArea Reduced List
     * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)
     * @param {number} [elements] Elements to retrieve (0 &#x3D; Get All)
     * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    commonGetSkiAreaReduced: function commonGetSkiAreaReduced(language, elements, latitude, longitude, radius, options) {
      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee74() {
        var localVarAxiosArgs;
        return regeneratorRuntime.wrap(function _callee74$(_context74) {
          while (1) {
            switch (_context74.prev = _context74.next) {
              case 0:
                _context74.next = 2;
                return common_api_CommonApiAxiosParamCreator(configuration).commonGetSkiAreaReduced(language, elements, latitude, longitude, radius, options);

              case 2:
                localVarAxiosArgs = _context74.sent;
                return _context74.abrupt("return", function () {
                  var axios = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : axios_default.a;
                  var basePath = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : BASE_PATH;

                  var axiosRequestArgs = _objectSpread2(_objectSpread2({}, localVarAxiosArgs.options), {}, {
                    url: basePath + localVarAxiosArgs.url
                  });

                  return axios.request(axiosRequestArgs);
                });

              case 4:
              case "end":
                return _context74.stop();
            }
          }
        }, _callee74);
      }))();
    },

    /**
     *
     * @summary GET SkiArea Single
     * @param {string} id ID of the requested data
     * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)
     * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    commonGetSkiAreaSingle: function commonGetSkiAreaSingle(id, fields, language, options) {
      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee75() {
        var localVarAxiosArgs;
        return regeneratorRuntime.wrap(function _callee75$(_context75) {
          while (1) {
            switch (_context75.prev = _context75.next) {
              case 0:
                _context75.next = 2;
                return common_api_CommonApiAxiosParamCreator(configuration).commonGetSkiAreaSingle(id, fields, language, options);

              case 2:
                localVarAxiosArgs = _context75.sent;
                return _context75.abrupt("return", function () {
                  var axios = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : axios_default.a;
                  var basePath = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : BASE_PATH;

                  var axiosRequestArgs = _objectSpread2(_objectSpread2({}, localVarAxiosArgs.options), {}, {
                    url: basePath + localVarAxiosArgs.url
                  });

                  return axios.request(axiosRequestArgs);
                });

              case 4:
              case "end":
                return _context75.stop();
            }
          }
        }, _callee75);
      }))();
    },

    /**
     *
     * @summary GET SkiArea Localized Single
     * @param {string} id ID of the requested data
     * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    commonGetSkiAreaSingleLocalized: function commonGetSkiAreaSingleLocalized(id, language, options) {
      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee76() {
        var localVarAxiosArgs;
        return regeneratorRuntime.wrap(function _callee76$(_context76) {
          while (1) {
            switch (_context76.prev = _context76.next) {
              case 0:
                _context76.next = 2;
                return common_api_CommonApiAxiosParamCreator(configuration).commonGetSkiAreaSingleLocalized(id, language, options);

              case 2:
                localVarAxiosArgs = _context76.sent;
                return _context76.abrupt("return", function () {
                  var axios = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : axios_default.a;
                  var basePath = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : BASE_PATH;

                  var axiosRequestArgs = _objectSpread2(_objectSpread2({}, localVarAxiosArgs.options), {}, {
                    url: basePath + localVarAxiosArgs.url
                  });

                  return axios.request(axiosRequestArgs);
                });

              case 4:
              case "end":
                return _context76.stop();
            }
          }
        }, _callee76);
      }))();
    },

    /**
     *
     * @summary GET SkiRegion List
     * @param {number} [elements] Elements to retrieve (0 &#x3D; Get All)
     * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)
     * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)
     * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    commonGetSkiRegion: function commonGetSkiRegion(elements, latitude, longitude, radius, fields, language, options) {
      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee77() {
        var localVarAxiosArgs;
        return regeneratorRuntime.wrap(function _callee77$(_context77) {
          while (1) {
            switch (_context77.prev = _context77.next) {
              case 0:
                _context77.next = 2;
                return common_api_CommonApiAxiosParamCreator(configuration).commonGetSkiRegion(elements, latitude, longitude, radius, fields, language, options);

              case 2:
                localVarAxiosArgs = _context77.sent;
                return _context77.abrupt("return", function () {
                  var axios = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : axios_default.a;
                  var basePath = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : BASE_PATH;

                  var axiosRequestArgs = _objectSpread2(_objectSpread2({}, localVarAxiosArgs.options), {}, {
                    url: basePath + localVarAxiosArgs.url
                  });

                  return axios.request(axiosRequestArgs);
                });

              case 4:
              case "end":
                return _context77.stop();
            }
          }
        }, _callee77);
      }))();
    },

    /**
     *
     * @summary GET SkiRegion Localized List
     * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)
     * @param {number} [elements] Elements to retrieve (0 &#x3D; Get All)
     * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    commonGetSkiRegionLocalized: function commonGetSkiRegionLocalized(language, elements, latitude, longitude, radius, options) {
      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee78() {
        var localVarAxiosArgs;
        return regeneratorRuntime.wrap(function _callee78$(_context78) {
          while (1) {
            switch (_context78.prev = _context78.next) {
              case 0:
                _context78.next = 2;
                return common_api_CommonApiAxiosParamCreator(configuration).commonGetSkiRegionLocalized(language, elements, latitude, longitude, radius, options);

              case 2:
                localVarAxiosArgs = _context78.sent;
                return _context78.abrupt("return", function () {
                  var axios = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : axios_default.a;
                  var basePath = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : BASE_PATH;

                  var axiosRequestArgs = _objectSpread2(_objectSpread2({}, localVarAxiosArgs.options), {}, {
                    url: basePath + localVarAxiosArgs.url
                  });

                  return axios.request(axiosRequestArgs);
                });

              case 4:
              case "end":
                return _context78.stop();
            }
          }
        }, _callee78);
      }))();
    },

    /**
     *
     * @summary GET SkiRegion Reduced List
     * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)
     * @param {number} [elements] Elements to retrieve (0 &#x3D; Get All)
     * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    commonGetSkiRegionReduced: function commonGetSkiRegionReduced(language, elements, latitude, longitude, radius, options) {
      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee79() {
        var localVarAxiosArgs;
        return regeneratorRuntime.wrap(function _callee79$(_context79) {
          while (1) {
            switch (_context79.prev = _context79.next) {
              case 0:
                _context79.next = 2;
                return common_api_CommonApiAxiosParamCreator(configuration).commonGetSkiRegionReduced(language, elements, latitude, longitude, radius, options);

              case 2:
                localVarAxiosArgs = _context79.sent;
                return _context79.abrupt("return", function () {
                  var axios = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : axios_default.a;
                  var basePath = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : BASE_PATH;

                  var axiosRequestArgs = _objectSpread2(_objectSpread2({}, localVarAxiosArgs.options), {}, {
                    url: basePath + localVarAxiosArgs.url
                  });

                  return axios.request(axiosRequestArgs);
                });

              case 4:
              case "end":
                return _context79.stop();
            }
          }
        }, _callee79);
      }))();
    },

    /**
     *
     * @summary GET SkiRegion Single
     * @param {string} id ID of the requested data
     * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)
     * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    commonGetSkiRegionSingle: function commonGetSkiRegionSingle(id, fields, language, options) {
      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee80() {
        var localVarAxiosArgs;
        return regeneratorRuntime.wrap(function _callee80$(_context80) {
          while (1) {
            switch (_context80.prev = _context80.next) {
              case 0:
                _context80.next = 2;
                return common_api_CommonApiAxiosParamCreator(configuration).commonGetSkiRegionSingle(id, fields, language, options);

              case 2:
                localVarAxiosArgs = _context80.sent;
                return _context80.abrupt("return", function () {
                  var axios = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : axios_default.a;
                  var basePath = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : BASE_PATH;

                  var axiosRequestArgs = _objectSpread2(_objectSpread2({}, localVarAxiosArgs.options), {}, {
                    url: basePath + localVarAxiosArgs.url
                  });

                  return axios.request(axiosRequestArgs);
                });

              case 4:
              case "end":
                return _context80.stop();
            }
          }
        }, _callee80);
      }))();
    },

    /**
     *
     * @summary GET SkiRegion Localized Single
     * @param {string} id ID of the requested data
     * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    commonGetSkiRegionSingleLocalized: function commonGetSkiRegionSingleLocalized(id, language, options) {
      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee81() {
        var localVarAxiosArgs;
        return regeneratorRuntime.wrap(function _callee81$(_context81) {
          while (1) {
            switch (_context81.prev = _context81.next) {
              case 0:
                _context81.next = 2;
                return common_api_CommonApiAxiosParamCreator(configuration).commonGetSkiRegionSingleLocalized(id, language, options);

              case 2:
                localVarAxiosArgs = _context81.sent;
                return _context81.abrupt("return", function () {
                  var axios = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : axios_default.a;
                  var basePath = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : BASE_PATH;

                  var axiosRequestArgs = _objectSpread2(_objectSpread2({}, localVarAxiosArgs.options), {}, {
                    url: basePath + localVarAxiosArgs.url
                  });

                  return axios.request(axiosRequestArgs);
                });

              case 4:
              case "end":
                return _context81.stop();
            }
          }
        }, _callee81);
      }))();
    },

    /**
     *
     * @summary GET TourismAssociation List
     * @param {number} [elements] Elements to retrieve (0 &#x3D; Get All)
     * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)
     * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)
     * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    commonGetTourismverein: function commonGetTourismverein(elements, latitude, longitude, radius, fields, language, options) {
      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee82() {
        var localVarAxiosArgs;
        return regeneratorRuntime.wrap(function _callee82$(_context82) {
          while (1) {
            switch (_context82.prev = _context82.next) {
              case 0:
                _context82.next = 2;
                return common_api_CommonApiAxiosParamCreator(configuration).commonGetTourismverein(elements, latitude, longitude, radius, fields, language, options);

              case 2:
                localVarAxiosArgs = _context82.sent;
                return _context82.abrupt("return", function () {
                  var axios = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : axios_default.a;
                  var basePath = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : BASE_PATH;

                  var axiosRequestArgs = _objectSpread2(_objectSpread2({}, localVarAxiosArgs.options), {}, {
                    url: basePath + localVarAxiosArgs.url
                  });

                  return axios.request(axiosRequestArgs);
                });

              case 4:
              case "end":
                return _context82.stop();
            }
          }
        }, _callee82);
      }))();
    },

    /**
     *
     * @summary GET TourismAssociation Localized List
     * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)
     * @param {number} [elements] Elements to retrieve (0 &#x3D; Get All)
     * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    commonGetTourismvereinLocalized: function commonGetTourismvereinLocalized(language, elements, latitude, longitude, radius, options) {
      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee83() {
        var localVarAxiosArgs;
        return regeneratorRuntime.wrap(function _callee83$(_context83) {
          while (1) {
            switch (_context83.prev = _context83.next) {
              case 0:
                _context83.next = 2;
                return common_api_CommonApiAxiosParamCreator(configuration).commonGetTourismvereinLocalized(language, elements, latitude, longitude, radius, options);

              case 2:
                localVarAxiosArgs = _context83.sent;
                return _context83.abrupt("return", function () {
                  var axios = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : axios_default.a;
                  var basePath = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : BASE_PATH;

                  var axiosRequestArgs = _objectSpread2(_objectSpread2({}, localVarAxiosArgs.options), {}, {
                    url: basePath + localVarAxiosArgs.url
                  });

                  return axios.request(axiosRequestArgs);
                });

              case 4:
              case "end":
                return _context83.stop();
            }
          }
        }, _callee83);
      }))();
    },

    /**
     *
     * @summary GET TourismAssociation Reduced List
     * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)
     * @param {number} [elements] Elements to retrieve (0 &#x3D; Get All)
     * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    commonGetTourismvereinReduced: function commonGetTourismvereinReduced(language, elements, latitude, longitude, radius, options) {
      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee84() {
        var localVarAxiosArgs;
        return regeneratorRuntime.wrap(function _callee84$(_context84) {
          while (1) {
            switch (_context84.prev = _context84.next) {
              case 0:
                _context84.next = 2;
                return common_api_CommonApiAxiosParamCreator(configuration).commonGetTourismvereinReduced(language, elements, latitude, longitude, radius, options);

              case 2:
                localVarAxiosArgs = _context84.sent;
                return _context84.abrupt("return", function () {
                  var axios = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : axios_default.a;
                  var basePath = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : BASE_PATH;

                  var axiosRequestArgs = _objectSpread2(_objectSpread2({}, localVarAxiosArgs.options), {}, {
                    url: basePath + localVarAxiosArgs.url
                  });

                  return axios.request(axiosRequestArgs);
                });

              case 4:
              case "end":
                return _context84.stop();
            }
          }
        }, _callee84);
      }))();
    },

    /**
     *
     * @summary GET TourismAssociation Single
     * @param {string} id ID of the requested data
     * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)
     * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    commonGetTourismvereinSingle: function commonGetTourismvereinSingle(id, fields, language, options) {
      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee85() {
        var localVarAxiosArgs;
        return regeneratorRuntime.wrap(function _callee85$(_context85) {
          while (1) {
            switch (_context85.prev = _context85.next) {
              case 0:
                _context85.next = 2;
                return common_api_CommonApiAxiosParamCreator(configuration).commonGetTourismvereinSingle(id, fields, language, options);

              case 2:
                localVarAxiosArgs = _context85.sent;
                return _context85.abrupt("return", function () {
                  var axios = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : axios_default.a;
                  var basePath = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : BASE_PATH;

                  var axiosRequestArgs = _objectSpread2(_objectSpread2({}, localVarAxiosArgs.options), {}, {
                    url: basePath + localVarAxiosArgs.url
                  });

                  return axios.request(axiosRequestArgs);
                });

              case 4:
              case "end":
                return _context85.stop();
            }
          }
        }, _callee85);
      }))();
    },

    /**
     *
     * @summary GET TourismAssociation Localized Single
     * @param {string} id ID of the requested data
     * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    commonGetTourismvereinSingleLocalized: function commonGetTourismvereinSingleLocalized(id, language, options) {
      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee86() {
        var localVarAxiosArgs;
        return regeneratorRuntime.wrap(function _callee86$(_context86) {
          while (1) {
            switch (_context86.prev = _context86.next) {
              case 0:
                _context86.next = 2;
                return common_api_CommonApiAxiosParamCreator(configuration).commonGetTourismvereinSingleLocalized(id, language, options);

              case 2:
                localVarAxiosArgs = _context86.sent;
                return _context86.abrupt("return", function () {
                  var axios = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : axios_default.a;
                  var basePath = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : BASE_PATH;

                  var axiosRequestArgs = _objectSpread2(_objectSpread2({}, localVarAxiosArgs.options), {}, {
                    url: basePath + localVarAxiosArgs.url
                  });

                  return axios.request(axiosRequestArgs);
                });

              case 4:
              case "end":
                return _context86.stop();
            }
          }
        }, _callee86);
      }))();
    },

    /**
     *
     * @summary GET Wine Awards List
     * @param {number} [elements] Elements to retrieve (0 &#x3D; Get All)
     * @param {string} [wineid] WineId
     * @param {string} [companyid] Company Id
     * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)
     * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    commonGetWineAwardsList: function commonGetWineAwardsList(elements, wineid, companyid, fields, language, options) {
      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee87() {
        var localVarAxiosArgs;
        return regeneratorRuntime.wrap(function _callee87$(_context87) {
          while (1) {
            switch (_context87.prev = _context87.next) {
              case 0:
                _context87.next = 2;
                return common_api_CommonApiAxiosParamCreator(configuration).commonGetWineAwardsList(elements, wineid, companyid, fields, language, options);

              case 2:
                localVarAxiosArgs = _context87.sent;
                return _context87.abrupt("return", function () {
                  var axios = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : axios_default.a;
                  var basePath = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : BASE_PATH;

                  var axiosRequestArgs = _objectSpread2(_objectSpread2({}, localVarAxiosArgs.options), {}, {
                    url: basePath + localVarAxiosArgs.url
                  });

                  return axios.request(axiosRequestArgs);
                });

              case 4:
              case "end":
                return _context87.stop();
            }
          }
        }, _callee87);
      }))();
    },

    /**
     *
     * @summary GET Wine Award Single
     * @param {string} id ID of the requested data
     * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)
     * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    commonGetWineAwardsSingle: function commonGetWineAwardsSingle(id, fields, language, options) {
      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee88() {
        var localVarAxiosArgs;
        return regeneratorRuntime.wrap(function _callee88$(_context88) {
          while (1) {
            switch (_context88.prev = _context88.next) {
              case 0:
                _context88.next = 2;
                return common_api_CommonApiAxiosParamCreator(configuration).commonGetWineAwardsSingle(id, fields, language, options);

              case 2:
                localVarAxiosArgs = _context88.sent;
                return _context88.abrupt("return", function () {
                  var axios = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : axios_default.a;
                  var basePath = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : BASE_PATH;

                  var axiosRequestArgs = _objectSpread2(_objectSpread2({}, localVarAxiosArgs.options), {}, {
                    url: basePath + localVarAxiosArgs.url
                  });

                  return axios.request(axiosRequestArgs);
                });

              case 4:
              case "end":
                return _context88.stop();
            }
          }
        }, _callee88);
      }))();
    }
  };
};
/**
 * CommonApi - factory interface
 * @export
 */

var CommonApiFactory = function CommonApiFactory(configuration, basePath, axios) {
  return {
    /**
     *
     * @summary GET Area Single
     * @param {string} id ID of the requested data
     * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)
     * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    commonGetAreaSingle: function commonGetAreaSingle(id, fields, language, options) {
      return common_api_CommonApiFp(configuration).commonGetAreaSingle(id, fields, language, options).then(function (request) {
        return request(axios, basePath);
      });
    },

    /**
     *
     * @summary GET Area List
     * @param {number} [elements] Elements to retrieve (0 &#x3D; Get All)
     * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)
     * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    commonGetAreas: function commonGetAreas(elements, fields, language, options) {
      return common_api_CommonApiFp(configuration).commonGetAreas(elements, fields, language, options).then(function (request) {
        return request(axios, basePath);
      });
    },

    /**
     *
     * @summary GET District List
     * @param {number} [elements] Elements to retrieve (0 &#x3D; Get All)
     * @param {string} [visibleinsearch] Filter only Elements flagged with visibleinsearch: (possible values: &#x27;true&#x27;,&#x27;false&#x27;), (default:&#x27;false&#x27;)
     * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)
     * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)
     * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    commonGetDistrict: function commonGetDistrict(elements, visibleinsearch, latitude, longitude, radius, fields, language, options) {
      return common_api_CommonApiFp(configuration).commonGetDistrict(elements, visibleinsearch, latitude, longitude, radius, fields, language, options).then(function (request) {
        return request(axios, basePath);
      });
    },

    /**
     *
     * @summary GET District Localized List
     * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)
     * @param {number} [elements] Elements to retrieve (0 &#x3D; Get All)
     * @param {string} [visibleinsearch] Filter only Elements flagged with visibleinsearch: (possible values: &#x27;true&#x27;,&#x27;false&#x27;), (default:&#x27;false&#x27;)
     * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    commonGetDistrictLocalized: function commonGetDistrictLocalized(language, elements, visibleinsearch, latitude, longitude, radius, options) {
      return common_api_CommonApiFp(configuration).commonGetDistrictLocalized(language, elements, visibleinsearch, latitude, longitude, radius, options).then(function (request) {
        return request(axios, basePath);
      });
    },

    /**
     *
     * @summary GET District Reduced List
     * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)
     * @param {number} [elements] Elements to retrieve (0 &#x3D; Get All)
     * @param {string} [visibleinsearch] Filter only Elements flagged with visibleinsearch: (possible values: &#x27;true&#x27;,&#x27;false&#x27;), (default:&#x27;false&#x27;)
     * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    commonGetDistrictReduced: function commonGetDistrictReduced(language, elements, visibleinsearch, latitude, longitude, radius, options) {
      return common_api_CommonApiFp(configuration).commonGetDistrictReduced(language, elements, visibleinsearch, latitude, longitude, radius, options).then(function (request) {
        return request(axios, basePath);
      });
    },

    /**
     *
     * @summary GET District Single
     * @param {string} id ID of the requested data
     * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)
     * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    commonGetDistrictSingle: function commonGetDistrictSingle(id, fields, language, options) {
      return common_api_CommonApiFp(configuration).commonGetDistrictSingle(id, fields, language, options).then(function (request) {
        return request(axios, basePath);
      });
    },

    /**
     *
     * @summary GET District Localized Single
     * @param {string} id ID of the requested data
     * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    commonGetDistrictSingleLocalized: function commonGetDistrictSingleLocalized(id, language, options) {
      return common_api_CommonApiFp(configuration).commonGetDistrictSingleLocalized(id, language, options).then(function (request) {
        return request(axios, basePath);
      });
    },

    /**
     *
     * @summary GET ExperienceArea Single
     * @param {string} id ID of the requested data
     * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)
     * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    commonGetExperienceAreaSingle: function commonGetExperienceAreaSingle(id, fields, language, options) {
      return common_api_CommonApiFp(configuration).commonGetExperienceAreaSingle(id, fields, language, options).then(function (request) {
        return request(axios, basePath);
      });
    },

    /**
     *
     * @summary GET ExperienceArea Localized Single
     * @param {string} id ID of the requested data
     * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    commonGetExperienceAreaSingleLocalized: function commonGetExperienceAreaSingleLocalized(id, language, options) {
      return common_api_CommonApiFp(configuration).commonGetExperienceAreaSingleLocalized(id, language, options).then(function (request) {
        return request(axios, basePath);
      });
    },

    /**
     *
     * @summary GET Experiencearea List
     * @param {number} [elements] Elements to retrieve (0 &#x3D; Get All)
     * @param {string} [visibleinsearch] Filter only Elements flagged with visibleinsearch: (possible values: &#x27;true&#x27;,&#x27;false&#x27;), (default:&#x27;false&#x27;)
     * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)
     * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)
     * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    commonGetExperienceAreas: function commonGetExperienceAreas(elements, visibleinsearch, latitude, longitude, radius, fields, language, options) {
      return common_api_CommonApiFp(configuration).commonGetExperienceAreas(elements, visibleinsearch, latitude, longitude, radius, fields, language, options).then(function (request) {
        return request(axios, basePath);
      });
    },

    /**
     *
     * @summary GET ExperienceArea Localized List
     * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)
     * @param {number} [elements] Elements to retrieve (0 &#x3D; Get All)
     * @param {string} [visibleinsearch] Filter only Elements flagged with visibleinsearch: (possible values: &#x27;true&#x27;,&#x27;false&#x27;), (default:&#x27;false&#x27;)
     * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    commonGetExperienceAreasLocalized: function commonGetExperienceAreasLocalized(language, elements, visibleinsearch, latitude, longitude, radius, options) {
      return common_api_CommonApiFp(configuration).commonGetExperienceAreasLocalized(language, elements, visibleinsearch, latitude, longitude, radius, options).then(function (request) {
        return request(axios, basePath);
      });
    },

    /**
     *
     * @summary GET ExperienceArea Reduced List
     * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)
     * @param {number} [elements] Elements to retrieve (0 &#x3D; Get All)
     * @param {string} [visibleinsearch] Filter only Elements flagged with visibleinsearch: (possible values: &#x27;true&#x27;,&#x27;false&#x27;), (default:&#x27;false&#x27;)
     * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    commonGetExperienceAreasReduced: function commonGetExperienceAreasReduced(language, elements, visibleinsearch, latitude, longitude, radius, options) {
      return common_api_CommonApiFp(configuration).commonGetExperienceAreasReduced(language, elements, visibleinsearch, latitude, longitude, radius, options).then(function (request) {
        return request(axios, basePath);
      });
    },

    /**
     *
     * @summary GET MetaRegion Single
     * @param {string} id ID of the requested data
     * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)
     * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    commonGetMetaRegionSingle: function commonGetMetaRegionSingle(id, fields, language, options) {
      return common_api_CommonApiFp(configuration).commonGetMetaRegionSingle(id, fields, language, options).then(function (request) {
        return request(axios, basePath);
      });
    },

    /**
     *
     * @summary GET MetaRegion Localized Single
     * @param {string} id ID of the requested data
     * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    commonGetMetaRegionSingleLocalized: function commonGetMetaRegionSingleLocalized(id, language, options) {
      return common_api_CommonApiFp(configuration).commonGetMetaRegionSingleLocalized(id, language, options).then(function (request) {
        return request(axios, basePath);
      });
    },

    /**
     *
     * @summary GET MetaRegion List
     * @param {number} [elements] Elements to retrieve (0 &#x3D; Get All)
     * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)
     * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)
     * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    commonGetMetaRegions: function commonGetMetaRegions(elements, latitude, longitude, radius, fields, language, options) {
      return common_api_CommonApiFp(configuration).commonGetMetaRegions(elements, latitude, longitude, radius, fields, language, options).then(function (request) {
        return request(axios, basePath);
      });
    },

    /**
     *
     * @summary GET MetaRegion Localized List
     * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)
     * @param {number} [elements] Elements to retrieve (0 &#x3D; Get All)
     * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    commonGetMetaRegionsLocalized: function commonGetMetaRegionsLocalized(language, elements, latitude, longitude, radius, options) {
      return common_api_CommonApiFp(configuration).commonGetMetaRegionsLocalized(language, elements, latitude, longitude, radius, options).then(function (request) {
        return request(axios, basePath);
      });
    },

    /**
     *
     * @summary GET MetaRegion Reduced List
     * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)
     * @param {number} [elements] Elements to retrieve (0 &#x3D; Get All)
     * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    commonGetMetaRegionsReduced: function commonGetMetaRegionsReduced(language, elements, latitude, longitude, radius, options) {
      return common_api_CommonApiFp(configuration).commonGetMetaRegionsReduced(language, elements, latitude, longitude, radius, options).then(function (request) {
        return request(axios, basePath);
      });
    },

    /**
     *
     * @summary GET Municipality List
     * @param {number} [elements] Elements to retrieve (0 &#x3D; Get All)
     * @param {string} [visibleinsearch] Filter only Elements flagged with visibleinsearch: (possible values: &#x27;true&#x27;,&#x27;false&#x27;), (default:&#x27;false&#x27;)
     * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)
     * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)
     * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    commonGetMunicipality: function commonGetMunicipality(elements, visibleinsearch, latitude, longitude, radius, fields, language, options) {
      return common_api_CommonApiFp(configuration).commonGetMunicipality(elements, visibleinsearch, latitude, longitude, radius, fields, language, options).then(function (request) {
        return request(axios, basePath);
      });
    },

    /**
     *
     * @summary GET Municipality Localized List
     * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)
     * @param {number} [elements] Elements to retrieve (0 &#x3D; Get All)
     * @param {string} [visibleinsearch] Filter only Elements flagged with visibleinsearch: (possible values: &#x27;true&#x27;,&#x27;false&#x27;), (default:&#x27;false&#x27;)
     * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    commonGetMunicipalityLocalized: function commonGetMunicipalityLocalized(language, elements, visibleinsearch, latitude, longitude, radius, options) {
      return common_api_CommonApiFp(configuration).commonGetMunicipalityLocalized(language, elements, visibleinsearch, latitude, longitude, radius, options).then(function (request) {
        return request(axios, basePath);
      });
    },

    /**
     *
     * @summary GET Municipality Reduced List
     * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)
     * @param {number} [elements] Elements to retrieve (0 &#x3D; Get All)
     * @param {string} [visibleinsearch] Filter only Elements flagged with visibleinsearch: (possible values: &#x27;true&#x27;,&#x27;false&#x27;), (default:&#x27;false&#x27;)
     * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    commonGetMunicipalityReduced: function commonGetMunicipalityReduced(language, elements, visibleinsearch, latitude, longitude, radius, options) {
      return common_api_CommonApiFp(configuration).commonGetMunicipalityReduced(language, elements, visibleinsearch, latitude, longitude, radius, options).then(function (request) {
        return request(axios, basePath);
      });
    },

    /**
     *
     * @summary GET Municipality Single
     * @param {string} id ID of the requested data
     * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)
     * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    commonGetMunicipalitySingle: function commonGetMunicipalitySingle(id, fields, language, options) {
      return common_api_CommonApiFp(configuration).commonGetMunicipalitySingle(id, fields, language, options).then(function (request) {
        return request(axios, basePath);
      });
    },

    /**
     *
     * @summary GET Municipality Localized Single
     * @param {string} id ID of the requested data
     * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    commonGetMunicipalitySingleLocalized: function commonGetMunicipalitySingleLocalized(id, language, options) {
      return common_api_CommonApiFp(configuration).commonGetMunicipalitySingleLocalized(id, language, options).then(function (request) {
        return request(axios, basePath);
      });
    },

    /**
     *
     * @summary GET Region Single
     * @param {string} id ID of the requested data
     * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)
     * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    commonGetRegionSingle: function commonGetRegionSingle(id, fields, language, options) {
      return common_api_CommonApiFp(configuration).commonGetRegionSingle(id, fields, language, options).then(function (request) {
        return request(axios, basePath);
      });
    },

    /**
     *
     * @summary GET Region Localized Single
     * @param {string} id ID of the requested data
     * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    commonGetRegionSingleLocalized: function commonGetRegionSingleLocalized(id, language, options) {
      return common_api_CommonApiFp(configuration).commonGetRegionSingleLocalized(id, language, options).then(function (request) {
        return request(axios, basePath);
      });
    },

    /**
     *
     * @summary GET Region List
     * @param {number} [elements] Elements to retrieve (0 &#x3D; Get All)
     * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)
     * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)
     * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    commonGetRegions: function commonGetRegions(elements, latitude, longitude, radius, fields, language, options) {
      return common_api_CommonApiFp(configuration).commonGetRegions(elements, latitude, longitude, radius, fields, language, options).then(function (request) {
        return request(axios, basePath);
      });
    },

    /**
     *
     * @summary GET Region Localized List
     * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)
     * @param {number} [elements] Elements to retrieve (0 &#x3D; Get All)
     * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    commonGetRegionsLocalized: function commonGetRegionsLocalized(language, elements, latitude, longitude, radius, options) {
      return common_api_CommonApiFp(configuration).commonGetRegionsLocalized(language, elements, latitude, longitude, radius, options).then(function (request) {
        return request(axios, basePath);
      });
    },

    /**
     *
     * @summary GET Region Reduced List
     * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)
     * @param {number} [elements] Elements to retrieve (0 &#x3D; Get All)
     * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    commonGetRegionsReduced: function commonGetRegionsReduced(language, elements, latitude, longitude, radius, options) {
      return common_api_CommonApiFp(configuration).commonGetRegionsReduced(language, elements, latitude, longitude, radius, options).then(function (request) {
        return request(axios, basePath);
      });
    },

    /**
     *
     * @summary GET SkiArea List
     * @param {number} [elements] Elements to retrieve (0 &#x3D; Get All)
     * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)
     * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)
     * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    commonGetSkiArea: function commonGetSkiArea(elements, latitude, longitude, radius, fields, language, options) {
      return common_api_CommonApiFp(configuration).commonGetSkiArea(elements, latitude, longitude, radius, fields, language, options).then(function (request) {
        return request(axios, basePath);
      });
    },

    /**
     *
     * @summary GET SkiArea Localized List
     * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)
     * @param {number} [elements] Elements to retrieve (0 &#x3D; Get All)
     * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    commonGetSkiAreaLocalized: function commonGetSkiAreaLocalized(language, elements, latitude, longitude, radius, options) {
      return common_api_CommonApiFp(configuration).commonGetSkiAreaLocalized(language, elements, latitude, longitude, radius, options).then(function (request) {
        return request(axios, basePath);
      });
    },

    /**
     *
     * @summary GET SkiArea Reduced List
     * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)
     * @param {number} [elements] Elements to retrieve (0 &#x3D; Get All)
     * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    commonGetSkiAreaReduced: function commonGetSkiAreaReduced(language, elements, latitude, longitude, radius, options) {
      return common_api_CommonApiFp(configuration).commonGetSkiAreaReduced(language, elements, latitude, longitude, radius, options).then(function (request) {
        return request(axios, basePath);
      });
    },

    /**
     *
     * @summary GET SkiArea Single
     * @param {string} id ID of the requested data
     * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)
     * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    commonGetSkiAreaSingle: function commonGetSkiAreaSingle(id, fields, language, options) {
      return common_api_CommonApiFp(configuration).commonGetSkiAreaSingle(id, fields, language, options).then(function (request) {
        return request(axios, basePath);
      });
    },

    /**
     *
     * @summary GET SkiArea Localized Single
     * @param {string} id ID of the requested data
     * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    commonGetSkiAreaSingleLocalized: function commonGetSkiAreaSingleLocalized(id, language, options) {
      return common_api_CommonApiFp(configuration).commonGetSkiAreaSingleLocalized(id, language, options).then(function (request) {
        return request(axios, basePath);
      });
    },

    /**
     *
     * @summary GET SkiRegion List
     * @param {number} [elements] Elements to retrieve (0 &#x3D; Get All)
     * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)
     * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)
     * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    commonGetSkiRegion: function commonGetSkiRegion(elements, latitude, longitude, radius, fields, language, options) {
      return common_api_CommonApiFp(configuration).commonGetSkiRegion(elements, latitude, longitude, radius, fields, language, options).then(function (request) {
        return request(axios, basePath);
      });
    },

    /**
     *
     * @summary GET SkiRegion Localized List
     * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)
     * @param {number} [elements] Elements to retrieve (0 &#x3D; Get All)
     * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    commonGetSkiRegionLocalized: function commonGetSkiRegionLocalized(language, elements, latitude, longitude, radius, options) {
      return common_api_CommonApiFp(configuration).commonGetSkiRegionLocalized(language, elements, latitude, longitude, radius, options).then(function (request) {
        return request(axios, basePath);
      });
    },

    /**
     *
     * @summary GET SkiRegion Reduced List
     * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)
     * @param {number} [elements] Elements to retrieve (0 &#x3D; Get All)
     * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    commonGetSkiRegionReduced: function commonGetSkiRegionReduced(language, elements, latitude, longitude, radius, options) {
      return common_api_CommonApiFp(configuration).commonGetSkiRegionReduced(language, elements, latitude, longitude, radius, options).then(function (request) {
        return request(axios, basePath);
      });
    },

    /**
     *
     * @summary GET SkiRegion Single
     * @param {string} id ID of the requested data
     * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)
     * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    commonGetSkiRegionSingle: function commonGetSkiRegionSingle(id, fields, language, options) {
      return common_api_CommonApiFp(configuration).commonGetSkiRegionSingle(id, fields, language, options).then(function (request) {
        return request(axios, basePath);
      });
    },

    /**
     *
     * @summary GET SkiRegion Localized Single
     * @param {string} id ID of the requested data
     * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    commonGetSkiRegionSingleLocalized: function commonGetSkiRegionSingleLocalized(id, language, options) {
      return common_api_CommonApiFp(configuration).commonGetSkiRegionSingleLocalized(id, language, options).then(function (request) {
        return request(axios, basePath);
      });
    },

    /**
     *
     * @summary GET TourismAssociation List
     * @param {number} [elements] Elements to retrieve (0 &#x3D; Get All)
     * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)
     * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)
     * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    commonGetTourismverein: function commonGetTourismverein(elements, latitude, longitude, radius, fields, language, options) {
      return common_api_CommonApiFp(configuration).commonGetTourismverein(elements, latitude, longitude, radius, fields, language, options).then(function (request) {
        return request(axios, basePath);
      });
    },

    /**
     *
     * @summary GET TourismAssociation Localized List
     * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)
     * @param {number} [elements] Elements to retrieve (0 &#x3D; Get All)
     * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    commonGetTourismvereinLocalized: function commonGetTourismvereinLocalized(language, elements, latitude, longitude, radius, options) {
      return common_api_CommonApiFp(configuration).commonGetTourismvereinLocalized(language, elements, latitude, longitude, radius, options).then(function (request) {
        return request(axios, basePath);
      });
    },

    /**
     *
     * @summary GET TourismAssociation Reduced List
     * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)
     * @param {number} [elements] Elements to retrieve (0 &#x3D; Get All)
     * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    commonGetTourismvereinReduced: function commonGetTourismvereinReduced(language, elements, latitude, longitude, radius, options) {
      return common_api_CommonApiFp(configuration).commonGetTourismvereinReduced(language, elements, latitude, longitude, radius, options).then(function (request) {
        return request(axios, basePath);
      });
    },

    /**
     *
     * @summary GET TourismAssociation Single
     * @param {string} id ID of the requested data
     * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)
     * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    commonGetTourismvereinSingle: function commonGetTourismvereinSingle(id, fields, language, options) {
      return common_api_CommonApiFp(configuration).commonGetTourismvereinSingle(id, fields, language, options).then(function (request) {
        return request(axios, basePath);
      });
    },

    /**
     *
     * @summary GET TourismAssociation Localized Single
     * @param {string} id ID of the requested data
     * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    commonGetTourismvereinSingleLocalized: function commonGetTourismvereinSingleLocalized(id, language, options) {
      return common_api_CommonApiFp(configuration).commonGetTourismvereinSingleLocalized(id, language, options).then(function (request) {
        return request(axios, basePath);
      });
    },

    /**
     *
     * @summary GET Wine Awards List
     * @param {number} [elements] Elements to retrieve (0 &#x3D; Get All)
     * @param {string} [wineid] WineId
     * @param {string} [companyid] Company Id
     * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)
     * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    commonGetWineAwardsList: function commonGetWineAwardsList(elements, wineid, companyid, fields, language, options) {
      return common_api_CommonApiFp(configuration).commonGetWineAwardsList(elements, wineid, companyid, fields, language, options).then(function (request) {
        return request(axios, basePath);
      });
    },

    /**
     *
     * @summary GET Wine Award Single
     * @param {string} id ID of the requested data
     * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)
     * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    commonGetWineAwardsSingle: function commonGetWineAwardsSingle(id, fields, language, options) {
      return common_api_CommonApiFp(configuration).commonGetWineAwardsSingle(id, fields, language, options).then(function (request) {
        return request(axios, basePath);
      });
    }
  };
};
/**
 * CommonApi - object-oriented interface
 * @export
 * @class CommonApi
 * @extends {BaseAPI}
 */

var common_api_CommonApi = /*#__PURE__*/function (_BaseAPI) {
  _inherits(CommonApi, _BaseAPI);

  var _super = _createSuper(CommonApi);

  function CommonApi() {
    _classCallCheck(this, CommonApi);

    return _super.apply(this, arguments);
  }

  _createClass(CommonApi, [{
    key: "commonGetAreaSingle",

    /**
     *
     * @summary GET Area Single
     * @param {string} id ID of the requested data
     * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)
     * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CommonApi
     */
    value: function commonGetAreaSingle(id, fields, language, options) {
      var _this = this;

      return common_api_CommonApiFp(this.configuration).commonGetAreaSingle(id, fields, language, options).then(function (request) {
        return request(_this.axios, _this.basePath);
      });
    }
    /**
     *
     * @summary GET Area List
     * @param {number} [elements] Elements to retrieve (0 &#x3D; Get All)
     * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)
     * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CommonApi
     */

  }, {
    key: "commonGetAreas",
    value: function commonGetAreas(elements, fields, language, options) {
      var _this2 = this;

      return common_api_CommonApiFp(this.configuration).commonGetAreas(elements, fields, language, options).then(function (request) {
        return request(_this2.axios, _this2.basePath);
      });
    }
    /**
     *
     * @summary GET District List
     * @param {number} [elements] Elements to retrieve (0 &#x3D; Get All)
     * @param {string} [visibleinsearch] Filter only Elements flagged with visibleinsearch: (possible values: &#x27;true&#x27;,&#x27;false&#x27;), (default:&#x27;false&#x27;)
     * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)
     * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)
     * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CommonApi
     */

  }, {
    key: "commonGetDistrict",
    value: function commonGetDistrict(elements, visibleinsearch, latitude, longitude, radius, fields, language, options) {
      var _this3 = this;

      return common_api_CommonApiFp(this.configuration).commonGetDistrict(elements, visibleinsearch, latitude, longitude, radius, fields, language, options).then(function (request) {
        return request(_this3.axios, _this3.basePath);
      });
    }
    /**
     *
     * @summary GET District Localized List
     * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)
     * @param {number} [elements] Elements to retrieve (0 &#x3D; Get All)
     * @param {string} [visibleinsearch] Filter only Elements flagged with visibleinsearch: (possible values: &#x27;true&#x27;,&#x27;false&#x27;), (default:&#x27;false&#x27;)
     * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CommonApi
     */

  }, {
    key: "commonGetDistrictLocalized",
    value: function commonGetDistrictLocalized(language, elements, visibleinsearch, latitude, longitude, radius, options) {
      var _this4 = this;

      return common_api_CommonApiFp(this.configuration).commonGetDistrictLocalized(language, elements, visibleinsearch, latitude, longitude, radius, options).then(function (request) {
        return request(_this4.axios, _this4.basePath);
      });
    }
    /**
     *
     * @summary GET District Reduced List
     * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)
     * @param {number} [elements] Elements to retrieve (0 &#x3D; Get All)
     * @param {string} [visibleinsearch] Filter only Elements flagged with visibleinsearch: (possible values: &#x27;true&#x27;,&#x27;false&#x27;), (default:&#x27;false&#x27;)
     * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CommonApi
     */

  }, {
    key: "commonGetDistrictReduced",
    value: function commonGetDistrictReduced(language, elements, visibleinsearch, latitude, longitude, radius, options) {
      var _this5 = this;

      return common_api_CommonApiFp(this.configuration).commonGetDistrictReduced(language, elements, visibleinsearch, latitude, longitude, radius, options).then(function (request) {
        return request(_this5.axios, _this5.basePath);
      });
    }
    /**
     *
     * @summary GET District Single
     * @param {string} id ID of the requested data
     * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)
     * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CommonApi
     */

  }, {
    key: "commonGetDistrictSingle",
    value: function commonGetDistrictSingle(id, fields, language, options) {
      var _this6 = this;

      return common_api_CommonApiFp(this.configuration).commonGetDistrictSingle(id, fields, language, options).then(function (request) {
        return request(_this6.axios, _this6.basePath);
      });
    }
    /**
     *
     * @summary GET District Localized Single
     * @param {string} id ID of the requested data
     * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CommonApi
     */

  }, {
    key: "commonGetDistrictSingleLocalized",
    value: function commonGetDistrictSingleLocalized(id, language, options) {
      var _this7 = this;

      return common_api_CommonApiFp(this.configuration).commonGetDistrictSingleLocalized(id, language, options).then(function (request) {
        return request(_this7.axios, _this7.basePath);
      });
    }
    /**
     *
     * @summary GET ExperienceArea Single
     * @param {string} id ID of the requested data
     * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)
     * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CommonApi
     */

  }, {
    key: "commonGetExperienceAreaSingle",
    value: function commonGetExperienceAreaSingle(id, fields, language, options) {
      var _this8 = this;

      return common_api_CommonApiFp(this.configuration).commonGetExperienceAreaSingle(id, fields, language, options).then(function (request) {
        return request(_this8.axios, _this8.basePath);
      });
    }
    /**
     *
     * @summary GET ExperienceArea Localized Single
     * @param {string} id ID of the requested data
     * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CommonApi
     */

  }, {
    key: "commonGetExperienceAreaSingleLocalized",
    value: function commonGetExperienceAreaSingleLocalized(id, language, options) {
      var _this9 = this;

      return common_api_CommonApiFp(this.configuration).commonGetExperienceAreaSingleLocalized(id, language, options).then(function (request) {
        return request(_this9.axios, _this9.basePath);
      });
    }
    /**
     *
     * @summary GET Experiencearea List
     * @param {number} [elements] Elements to retrieve (0 &#x3D; Get All)
     * @param {string} [visibleinsearch] Filter only Elements flagged with visibleinsearch: (possible values: &#x27;true&#x27;,&#x27;false&#x27;), (default:&#x27;false&#x27;)
     * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)
     * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)
     * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CommonApi
     */

  }, {
    key: "commonGetExperienceAreas",
    value: function commonGetExperienceAreas(elements, visibleinsearch, latitude, longitude, radius, fields, language, options) {
      var _this10 = this;

      return common_api_CommonApiFp(this.configuration).commonGetExperienceAreas(elements, visibleinsearch, latitude, longitude, radius, fields, language, options).then(function (request) {
        return request(_this10.axios, _this10.basePath);
      });
    }
    /**
     *
     * @summary GET ExperienceArea Localized List
     * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)
     * @param {number} [elements] Elements to retrieve (0 &#x3D; Get All)
     * @param {string} [visibleinsearch] Filter only Elements flagged with visibleinsearch: (possible values: &#x27;true&#x27;,&#x27;false&#x27;), (default:&#x27;false&#x27;)
     * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CommonApi
     */

  }, {
    key: "commonGetExperienceAreasLocalized",
    value: function commonGetExperienceAreasLocalized(language, elements, visibleinsearch, latitude, longitude, radius, options) {
      var _this11 = this;

      return common_api_CommonApiFp(this.configuration).commonGetExperienceAreasLocalized(language, elements, visibleinsearch, latitude, longitude, radius, options).then(function (request) {
        return request(_this11.axios, _this11.basePath);
      });
    }
    /**
     *
     * @summary GET ExperienceArea Reduced List
     * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)
     * @param {number} [elements] Elements to retrieve (0 &#x3D; Get All)
     * @param {string} [visibleinsearch] Filter only Elements flagged with visibleinsearch: (possible values: &#x27;true&#x27;,&#x27;false&#x27;), (default:&#x27;false&#x27;)
     * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CommonApi
     */

  }, {
    key: "commonGetExperienceAreasReduced",
    value: function commonGetExperienceAreasReduced(language, elements, visibleinsearch, latitude, longitude, radius, options) {
      var _this12 = this;

      return common_api_CommonApiFp(this.configuration).commonGetExperienceAreasReduced(language, elements, visibleinsearch, latitude, longitude, radius, options).then(function (request) {
        return request(_this12.axios, _this12.basePath);
      });
    }
    /**
     *
     * @summary GET MetaRegion Single
     * @param {string} id ID of the requested data
     * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)
     * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CommonApi
     */

  }, {
    key: "commonGetMetaRegionSingle",
    value: function commonGetMetaRegionSingle(id, fields, language, options) {
      var _this13 = this;

      return common_api_CommonApiFp(this.configuration).commonGetMetaRegionSingle(id, fields, language, options).then(function (request) {
        return request(_this13.axios, _this13.basePath);
      });
    }
    /**
     *
     * @summary GET MetaRegion Localized Single
     * @param {string} id ID of the requested data
     * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CommonApi
     */

  }, {
    key: "commonGetMetaRegionSingleLocalized",
    value: function commonGetMetaRegionSingleLocalized(id, language, options) {
      var _this14 = this;

      return common_api_CommonApiFp(this.configuration).commonGetMetaRegionSingleLocalized(id, language, options).then(function (request) {
        return request(_this14.axios, _this14.basePath);
      });
    }
    /**
     *
     * @summary GET MetaRegion List
     * @param {number} [elements] Elements to retrieve (0 &#x3D; Get All)
     * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)
     * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)
     * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CommonApi
     */

  }, {
    key: "commonGetMetaRegions",
    value: function commonGetMetaRegions(elements, latitude, longitude, radius, fields, language, options) {
      var _this15 = this;

      return common_api_CommonApiFp(this.configuration).commonGetMetaRegions(elements, latitude, longitude, radius, fields, language, options).then(function (request) {
        return request(_this15.axios, _this15.basePath);
      });
    }
    /**
     *
     * @summary GET MetaRegion Localized List
     * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)
     * @param {number} [elements] Elements to retrieve (0 &#x3D; Get All)
     * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CommonApi
     */

  }, {
    key: "commonGetMetaRegionsLocalized",
    value: function commonGetMetaRegionsLocalized(language, elements, latitude, longitude, radius, options) {
      var _this16 = this;

      return common_api_CommonApiFp(this.configuration).commonGetMetaRegionsLocalized(language, elements, latitude, longitude, radius, options).then(function (request) {
        return request(_this16.axios, _this16.basePath);
      });
    }
    /**
     *
     * @summary GET MetaRegion Reduced List
     * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)
     * @param {number} [elements] Elements to retrieve (0 &#x3D; Get All)
     * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CommonApi
     */

  }, {
    key: "commonGetMetaRegionsReduced",
    value: function commonGetMetaRegionsReduced(language, elements, latitude, longitude, radius, options) {
      var _this17 = this;

      return common_api_CommonApiFp(this.configuration).commonGetMetaRegionsReduced(language, elements, latitude, longitude, radius, options).then(function (request) {
        return request(_this17.axios, _this17.basePath);
      });
    }
    /**
     *
     * @summary GET Municipality List
     * @param {number} [elements] Elements to retrieve (0 &#x3D; Get All)
     * @param {string} [visibleinsearch] Filter only Elements flagged with visibleinsearch: (possible values: &#x27;true&#x27;,&#x27;false&#x27;), (default:&#x27;false&#x27;)
     * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)
     * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)
     * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CommonApi
     */

  }, {
    key: "commonGetMunicipality",
    value: function commonGetMunicipality(elements, visibleinsearch, latitude, longitude, radius, fields, language, options) {
      var _this18 = this;

      return common_api_CommonApiFp(this.configuration).commonGetMunicipality(elements, visibleinsearch, latitude, longitude, radius, fields, language, options).then(function (request) {
        return request(_this18.axios, _this18.basePath);
      });
    }
    /**
     *
     * @summary GET Municipality Localized List
     * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)
     * @param {number} [elements] Elements to retrieve (0 &#x3D; Get All)
     * @param {string} [visibleinsearch] Filter only Elements flagged with visibleinsearch: (possible values: &#x27;true&#x27;,&#x27;false&#x27;), (default:&#x27;false&#x27;)
     * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CommonApi
     */

  }, {
    key: "commonGetMunicipalityLocalized",
    value: function commonGetMunicipalityLocalized(language, elements, visibleinsearch, latitude, longitude, radius, options) {
      var _this19 = this;

      return common_api_CommonApiFp(this.configuration).commonGetMunicipalityLocalized(language, elements, visibleinsearch, latitude, longitude, radius, options).then(function (request) {
        return request(_this19.axios, _this19.basePath);
      });
    }
    /**
     *
     * @summary GET Municipality Reduced List
     * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)
     * @param {number} [elements] Elements to retrieve (0 &#x3D; Get All)
     * @param {string} [visibleinsearch] Filter only Elements flagged with visibleinsearch: (possible values: &#x27;true&#x27;,&#x27;false&#x27;), (default:&#x27;false&#x27;)
     * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CommonApi
     */

  }, {
    key: "commonGetMunicipalityReduced",
    value: function commonGetMunicipalityReduced(language, elements, visibleinsearch, latitude, longitude, radius, options) {
      var _this20 = this;

      return common_api_CommonApiFp(this.configuration).commonGetMunicipalityReduced(language, elements, visibleinsearch, latitude, longitude, radius, options).then(function (request) {
        return request(_this20.axios, _this20.basePath);
      });
    }
    /**
     *
     * @summary GET Municipality Single
     * @param {string} id ID of the requested data
     * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)
     * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CommonApi
     */

  }, {
    key: "commonGetMunicipalitySingle",
    value: function commonGetMunicipalitySingle(id, fields, language, options) {
      var _this21 = this;

      return common_api_CommonApiFp(this.configuration).commonGetMunicipalitySingle(id, fields, language, options).then(function (request) {
        return request(_this21.axios, _this21.basePath);
      });
    }
    /**
     *
     * @summary GET Municipality Localized Single
     * @param {string} id ID of the requested data
     * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CommonApi
     */

  }, {
    key: "commonGetMunicipalitySingleLocalized",
    value: function commonGetMunicipalitySingleLocalized(id, language, options) {
      var _this22 = this;

      return common_api_CommonApiFp(this.configuration).commonGetMunicipalitySingleLocalized(id, language, options).then(function (request) {
        return request(_this22.axios, _this22.basePath);
      });
    }
    /**
     *
     * @summary GET Region Single
     * @param {string} id ID of the requested data
     * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)
     * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CommonApi
     */

  }, {
    key: "commonGetRegionSingle",
    value: function commonGetRegionSingle(id, fields, language, options) {
      var _this23 = this;

      return common_api_CommonApiFp(this.configuration).commonGetRegionSingle(id, fields, language, options).then(function (request) {
        return request(_this23.axios, _this23.basePath);
      });
    }
    /**
     *
     * @summary GET Region Localized Single
     * @param {string} id ID of the requested data
     * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CommonApi
     */

  }, {
    key: "commonGetRegionSingleLocalized",
    value: function commonGetRegionSingleLocalized(id, language, options) {
      var _this24 = this;

      return common_api_CommonApiFp(this.configuration).commonGetRegionSingleLocalized(id, language, options).then(function (request) {
        return request(_this24.axios, _this24.basePath);
      });
    }
    /**
     *
     * @summary GET Region List
     * @param {number} [elements] Elements to retrieve (0 &#x3D; Get All)
     * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)
     * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)
     * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CommonApi
     */

  }, {
    key: "commonGetRegions",
    value: function commonGetRegions(elements, latitude, longitude, radius, fields, language, options) {
      var _this25 = this;

      return common_api_CommonApiFp(this.configuration).commonGetRegions(elements, latitude, longitude, radius, fields, language, options).then(function (request) {
        return request(_this25.axios, _this25.basePath);
      });
    }
    /**
     *
     * @summary GET Region Localized List
     * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)
     * @param {number} [elements] Elements to retrieve (0 &#x3D; Get All)
     * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CommonApi
     */

  }, {
    key: "commonGetRegionsLocalized",
    value: function commonGetRegionsLocalized(language, elements, latitude, longitude, radius, options) {
      var _this26 = this;

      return common_api_CommonApiFp(this.configuration).commonGetRegionsLocalized(language, elements, latitude, longitude, radius, options).then(function (request) {
        return request(_this26.axios, _this26.basePath);
      });
    }
    /**
     *
     * @summary GET Region Reduced List
     * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)
     * @param {number} [elements] Elements to retrieve (0 &#x3D; Get All)
     * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CommonApi
     */

  }, {
    key: "commonGetRegionsReduced",
    value: function commonGetRegionsReduced(language, elements, latitude, longitude, radius, options) {
      var _this27 = this;

      return common_api_CommonApiFp(this.configuration).commonGetRegionsReduced(language, elements, latitude, longitude, radius, options).then(function (request) {
        return request(_this27.axios, _this27.basePath);
      });
    }
    /**
     *
     * @summary GET SkiArea List
     * @param {number} [elements] Elements to retrieve (0 &#x3D; Get All)
     * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)
     * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)
     * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CommonApi
     */

  }, {
    key: "commonGetSkiArea",
    value: function commonGetSkiArea(elements, latitude, longitude, radius, fields, language, options) {
      var _this28 = this;

      return common_api_CommonApiFp(this.configuration).commonGetSkiArea(elements, latitude, longitude, radius, fields, language, options).then(function (request) {
        return request(_this28.axios, _this28.basePath);
      });
    }
    /**
     *
     * @summary GET SkiArea Localized List
     * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)
     * @param {number} [elements] Elements to retrieve (0 &#x3D; Get All)
     * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CommonApi
     */

  }, {
    key: "commonGetSkiAreaLocalized",
    value: function commonGetSkiAreaLocalized(language, elements, latitude, longitude, radius, options) {
      var _this29 = this;

      return common_api_CommonApiFp(this.configuration).commonGetSkiAreaLocalized(language, elements, latitude, longitude, radius, options).then(function (request) {
        return request(_this29.axios, _this29.basePath);
      });
    }
    /**
     *
     * @summary GET SkiArea Reduced List
     * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)
     * @param {number} [elements] Elements to retrieve (0 &#x3D; Get All)
     * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CommonApi
     */

  }, {
    key: "commonGetSkiAreaReduced",
    value: function commonGetSkiAreaReduced(language, elements, latitude, longitude, radius, options) {
      var _this30 = this;

      return common_api_CommonApiFp(this.configuration).commonGetSkiAreaReduced(language, elements, latitude, longitude, radius, options).then(function (request) {
        return request(_this30.axios, _this30.basePath);
      });
    }
    /**
     *
     * @summary GET SkiArea Single
     * @param {string} id ID of the requested data
     * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)
     * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CommonApi
     */

  }, {
    key: "commonGetSkiAreaSingle",
    value: function commonGetSkiAreaSingle(id, fields, language, options) {
      var _this31 = this;

      return common_api_CommonApiFp(this.configuration).commonGetSkiAreaSingle(id, fields, language, options).then(function (request) {
        return request(_this31.axios, _this31.basePath);
      });
    }
    /**
     *
     * @summary GET SkiArea Localized Single
     * @param {string} id ID of the requested data
     * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CommonApi
     */

  }, {
    key: "commonGetSkiAreaSingleLocalized",
    value: function commonGetSkiAreaSingleLocalized(id, language, options) {
      var _this32 = this;

      return common_api_CommonApiFp(this.configuration).commonGetSkiAreaSingleLocalized(id, language, options).then(function (request) {
        return request(_this32.axios, _this32.basePath);
      });
    }
    /**
     *
     * @summary GET SkiRegion List
     * @param {number} [elements] Elements to retrieve (0 &#x3D; Get All)
     * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)
     * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)
     * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CommonApi
     */

  }, {
    key: "commonGetSkiRegion",
    value: function commonGetSkiRegion(elements, latitude, longitude, radius, fields, language, options) {
      var _this33 = this;

      return common_api_CommonApiFp(this.configuration).commonGetSkiRegion(elements, latitude, longitude, radius, fields, language, options).then(function (request) {
        return request(_this33.axios, _this33.basePath);
      });
    }
    /**
     *
     * @summary GET SkiRegion Localized List
     * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)
     * @param {number} [elements] Elements to retrieve (0 &#x3D; Get All)
     * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CommonApi
     */

  }, {
    key: "commonGetSkiRegionLocalized",
    value: function commonGetSkiRegionLocalized(language, elements, latitude, longitude, radius, options) {
      var _this34 = this;

      return common_api_CommonApiFp(this.configuration).commonGetSkiRegionLocalized(language, elements, latitude, longitude, radius, options).then(function (request) {
        return request(_this34.axios, _this34.basePath);
      });
    }
    /**
     *
     * @summary GET SkiRegion Reduced List
     * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)
     * @param {number} [elements] Elements to retrieve (0 &#x3D; Get All)
     * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CommonApi
     */

  }, {
    key: "commonGetSkiRegionReduced",
    value: function commonGetSkiRegionReduced(language, elements, latitude, longitude, radius, options) {
      var _this35 = this;

      return common_api_CommonApiFp(this.configuration).commonGetSkiRegionReduced(language, elements, latitude, longitude, radius, options).then(function (request) {
        return request(_this35.axios, _this35.basePath);
      });
    }
    /**
     *
     * @summary GET SkiRegion Single
     * @param {string} id ID of the requested data
     * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)
     * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CommonApi
     */

  }, {
    key: "commonGetSkiRegionSingle",
    value: function commonGetSkiRegionSingle(id, fields, language, options) {
      var _this36 = this;

      return common_api_CommonApiFp(this.configuration).commonGetSkiRegionSingle(id, fields, language, options).then(function (request) {
        return request(_this36.axios, _this36.basePath);
      });
    }
    /**
     *
     * @summary GET SkiRegion Localized Single
     * @param {string} id ID of the requested data
     * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CommonApi
     */

  }, {
    key: "commonGetSkiRegionSingleLocalized",
    value: function commonGetSkiRegionSingleLocalized(id, language, options) {
      var _this37 = this;

      return common_api_CommonApiFp(this.configuration).commonGetSkiRegionSingleLocalized(id, language, options).then(function (request) {
        return request(_this37.axios, _this37.basePath);
      });
    }
    /**
     *
     * @summary GET TourismAssociation List
     * @param {number} [elements] Elements to retrieve (0 &#x3D; Get All)
     * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)
     * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)
     * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CommonApi
     */

  }, {
    key: "commonGetTourismverein",
    value: function commonGetTourismverein(elements, latitude, longitude, radius, fields, language, options) {
      var _this38 = this;

      return common_api_CommonApiFp(this.configuration).commonGetTourismverein(elements, latitude, longitude, radius, fields, language, options).then(function (request) {
        return request(_this38.axios, _this38.basePath);
      });
    }
    /**
     *
     * @summary GET TourismAssociation Localized List
     * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)
     * @param {number} [elements] Elements to retrieve (0 &#x3D; Get All)
     * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CommonApi
     */

  }, {
    key: "commonGetTourismvereinLocalized",
    value: function commonGetTourismvereinLocalized(language, elements, latitude, longitude, radius, options) {
      var _this39 = this;

      return common_api_CommonApiFp(this.configuration).commonGetTourismvereinLocalized(language, elements, latitude, longitude, radius, options).then(function (request) {
        return request(_this39.axios, _this39.basePath);
      });
    }
    /**
     *
     * @summary GET TourismAssociation Reduced List
     * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)
     * @param {number} [elements] Elements to retrieve (0 &#x3D; Get All)
     * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CommonApi
     */

  }, {
    key: "commonGetTourismvereinReduced",
    value: function commonGetTourismvereinReduced(language, elements, latitude, longitude, radius, options) {
      var _this40 = this;

      return common_api_CommonApiFp(this.configuration).commonGetTourismvereinReduced(language, elements, latitude, longitude, radius, options).then(function (request) {
        return request(_this40.axios, _this40.basePath);
      });
    }
    /**
     *
     * @summary GET TourismAssociation Single
     * @param {string} id ID of the requested data
     * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)
     * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CommonApi
     */

  }, {
    key: "commonGetTourismvereinSingle",
    value: function commonGetTourismvereinSingle(id, fields, language, options) {
      var _this41 = this;

      return common_api_CommonApiFp(this.configuration).commonGetTourismvereinSingle(id, fields, language, options).then(function (request) {
        return request(_this41.axios, _this41.basePath);
      });
    }
    /**
     *
     * @summary GET TourismAssociation Localized Single
     * @param {string} id ID of the requested data
     * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CommonApi
     */

  }, {
    key: "commonGetTourismvereinSingleLocalized",
    value: function commonGetTourismvereinSingleLocalized(id, language, options) {
      var _this42 = this;

      return common_api_CommonApiFp(this.configuration).commonGetTourismvereinSingleLocalized(id, language, options).then(function (request) {
        return request(_this42.axios, _this42.basePath);
      });
    }
    /**
     *
     * @summary GET Wine Awards List
     * @param {number} [elements] Elements to retrieve (0 &#x3D; Get All)
     * @param {string} [wineid] WineId
     * @param {string} [companyid] Company Id
     * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)
     * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CommonApi
     */

  }, {
    key: "commonGetWineAwardsList",
    value: function commonGetWineAwardsList(elements, wineid, companyid, fields, language, options) {
      var _this43 = this;

      return common_api_CommonApiFp(this.configuration).commonGetWineAwardsList(elements, wineid, companyid, fields, language, options).then(function (request) {
        return request(_this43.axios, _this43.basePath);
      });
    }
    /**
     *
     * @summary GET Wine Award Single
     * @param {string} id ID of the requested data
     * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)
     * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CommonApi
     */

  }, {
    key: "commonGetWineAwardsSingle",
    value: function commonGetWineAwardsSingle(id, fields, language, options) {
      var _this44 = this;

      return common_api_CommonApiFp(this.configuration).commonGetWineAwardsSingle(id, fields, language, options).then(function (request) {
        return request(_this44.axios, _this44.basePath);
      });
    }
  }]);

  return CommonApi;
}(base_BaseAPI);
// CONCATENATED MODULE: ./src/api/apis/event-api.ts

















/* tslint:disable */

/* eslint-disable */

/**
 * Open Data Hub Api Tourism
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: V1
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
 // Some imports not used depending on template conditions
// @ts-ignore


/**
 * EventApi - axios parameter creator
 * @export
 */

var event_api_EventApiAxiosParamCreator = function EventApiAxiosParamCreator(configuration) {
  return {
    /**
     *
     * @summary GET Event Topic List
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    eventGetAllEventTopicList: function () {
      var _eventGetAllEventTopicList = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {
        var options,
            localVarPath,
            localVarUrlObj,
            baseOptions,
            localVarRequestOptions,
            localVarHeaderParameter,
            localVarQueryParameter,
            localVarAccessTokenValue,
            query,
            key,
            _key,
            headersFromBaseOptions,
            _args = arguments;

        return regeneratorRuntime.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                options = _args.length > 0 && _args[0] !== undefined ? _args[0] : {};
                localVarPath = "/api/EventTopics"; // use dummy base URL string because the URL constructor only accepts absolute URLs.

                localVarUrlObj = new URL(localVarPath, 'https://example.com');

                if (configuration) {
                  baseOptions = configuration.baseOptions;
                }

                localVarRequestOptions = _objectSpread2(_objectSpread2({
                  method: 'GET'
                }, baseOptions), options);
                localVarHeaderParameter = {};
                localVarQueryParameter = {}; // authentication oauth2 required
                // oauth required

                if (!(configuration && configuration.accessToken)) {
                  _context.next = 19;
                  break;
                }

                if (!(typeof configuration.accessToken === 'function')) {
                  _context.next = 14;
                  break;
                }

                _context.next = 11;
                return configuration.accessToken("oauth2", [""]);

              case 11:
                _context.t0 = _context.sent;
                _context.next = 17;
                break;

              case 14:
                _context.next = 16;
                return configuration.accessToken;

              case 16:
                _context.t0 = _context.sent;

              case 17:
                localVarAccessTokenValue = _context.t0;
                localVarHeaderParameter["Authorization"] = "Bearer " + localVarAccessTokenValue;

              case 19:
                query = new URLSearchParams(localVarUrlObj.search);

                for (key in localVarQueryParameter) {
                  query.set(key, localVarQueryParameter[key]);
                }

                for (_key in options.query) {
                  query.set(_key, options.query[_key]);
                }

                localVarUrlObj.search = new URLSearchParams(query).toString();
                headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                localVarRequestOptions.headers = _objectSpread2(_objectSpread2(_objectSpread2({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                return _context.abrupt("return", {
                  url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                  options: localVarRequestOptions
                });

              case 26:
              case "end":
                return _context.stop();
            }
          }
        }, _callee);
      }));

      function eventGetAllEventTopicList() {
        return _eventGetAllEventTopicList.apply(this, arguments);
      }

      return eventGetAllEventTopicList;
    }(),

    /**
     *
     * @summary GET Event Changed List by Date
     * @param {number} [pagenumber] Pagenumber, (default:1)
     * @param {number} [pagesize] Elements per Page, (default:10)
     * @param {string} [seed] Seed &#x27;1 - 10&#x27; for Random Sorting, &#x27;0&#x27; generates a Random Seed, &#x27;null&#x27; disables Random Sorting, (default:null)
     * @param {string} [updatefrom] Date from Format (yyyy-MM-dd) (all Event with LastChange &amp;gt;&#x3D; datefrom are passed), (default: DateTime.Now - 1 Day)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    eventGetAllEventsChanged: function () {
      var _eventGetAllEventsChanged = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(pagenumber, pagesize, seed, updatefrom) {
        var options,
            localVarPath,
            localVarUrlObj,
            baseOptions,
            localVarRequestOptions,
            localVarHeaderParameter,
            localVarQueryParameter,
            localVarAccessTokenValue,
            query,
            key,
            _key2,
            headersFromBaseOptions,
            _args2 = arguments;

        return regeneratorRuntime.wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                options = _args2.length > 4 && _args2[4] !== undefined ? _args2[4] : {};
                localVarPath = "/api/EventChanged"; // use dummy base URL string because the URL constructor only accepts absolute URLs.

                localVarUrlObj = new URL(localVarPath, 'https://example.com');

                if (configuration) {
                  baseOptions = configuration.baseOptions;
                }

                localVarRequestOptions = _objectSpread2(_objectSpread2({
                  method: 'GET'
                }, baseOptions), options);
                localVarHeaderParameter = {};
                localVarQueryParameter = {}; // authentication oauth2 required
                // oauth required

                if (!(configuration && configuration.accessToken)) {
                  _context2.next = 19;
                  break;
                }

                if (!(typeof configuration.accessToken === 'function')) {
                  _context2.next = 14;
                  break;
                }

                _context2.next = 11;
                return configuration.accessToken("oauth2", [""]);

              case 11:
                _context2.t0 = _context2.sent;
                _context2.next = 17;
                break;

              case 14:
                _context2.next = 16;
                return configuration.accessToken;

              case 16:
                _context2.t0 = _context2.sent;

              case 17:
                localVarAccessTokenValue = _context2.t0;
                localVarHeaderParameter["Authorization"] = "Bearer " + localVarAccessTokenValue;

              case 19:
                if (pagenumber !== undefined) {
                  localVarQueryParameter['pagenumber'] = pagenumber;
                }

                if (pagesize !== undefined) {
                  localVarQueryParameter['pagesize'] = pagesize;
                }

                if (seed !== undefined) {
                  localVarQueryParameter['seed'] = seed;
                }

                if (updatefrom !== undefined) {
                  localVarQueryParameter['updatefrom'] = updatefrom;
                }

                query = new URLSearchParams(localVarUrlObj.search);

                for (key in localVarQueryParameter) {
                  query.set(key, localVarQueryParameter[key]);
                }

                for (_key2 in options.query) {
                  query.set(_key2, options.query[_key2]);
                }

                localVarUrlObj.search = new URLSearchParams(query).toString();
                headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                localVarRequestOptions.headers = _objectSpread2(_objectSpread2(_objectSpread2({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                return _context2.abrupt("return", {
                  url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                  options: localVarRequestOptions
                });

              case 30:
              case "end":
                return _context2.stop();
            }
          }
        }, _callee2);
      }));

      function eventGetAllEventsChanged(_x, _x2, _x3, _x4) {
        return _eventGetAllEventsChanged.apply(this, arguments);
      }

      return eventGetAllEventsChanged;
    }(),

    /**
     *
     * @summary GET Event Localized Single
     * @param {string} id ID of the Event
     * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    eventGetEventLocalizedSingle: function () {
      var _eventGetEventLocalizedSingle = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(id, language) {
        var options,
            localVarPath,
            localVarUrlObj,
            baseOptions,
            localVarRequestOptions,
            localVarHeaderParameter,
            localVarQueryParameter,
            localVarAccessTokenValue,
            query,
            key,
            _key3,
            headersFromBaseOptions,
            _args3 = arguments;

        return regeneratorRuntime.wrap(function _callee3$(_context3) {
          while (1) {
            switch (_context3.prev = _context3.next) {
              case 0:
                options = _args3.length > 2 && _args3[2] !== undefined ? _args3[2] : {};

                if (!(id === null || id === undefined)) {
                  _context3.next = 3;
                  break;
                }

                throw new base_RequiredError('id', 'Required parameter id was null or undefined when calling eventGetEventLocalizedSingle.');

              case 3:
                localVarPath = "/api/EventLocalized/{id}".replace("{".concat("id", "}"), encodeURIComponent(String(id))); // use dummy base URL string because the URL constructor only accepts absolute URLs.

                localVarUrlObj = new URL(localVarPath, 'https://example.com');

                if (configuration) {
                  baseOptions = configuration.baseOptions;
                }

                localVarRequestOptions = _objectSpread2(_objectSpread2({
                  method: 'GET'
                }, baseOptions), options);
                localVarHeaderParameter = {};
                localVarQueryParameter = {}; // authentication oauth2 required
                // oauth required

                if (!(configuration && configuration.accessToken)) {
                  _context3.next = 21;
                  break;
                }

                if (!(typeof configuration.accessToken === 'function')) {
                  _context3.next = 16;
                  break;
                }

                _context3.next = 13;
                return configuration.accessToken("oauth2", [""]);

              case 13:
                _context3.t0 = _context3.sent;
                _context3.next = 19;
                break;

              case 16:
                _context3.next = 18;
                return configuration.accessToken;

              case 18:
                _context3.t0 = _context3.sent;

              case 19:
                localVarAccessTokenValue = _context3.t0;
                localVarHeaderParameter["Authorization"] = "Bearer " + localVarAccessTokenValue;

              case 21:
                if (language !== undefined) {
                  localVarQueryParameter['language'] = language;
                }

                query = new URLSearchParams(localVarUrlObj.search);

                for (key in localVarQueryParameter) {
                  query.set(key, localVarQueryParameter[key]);
                }

                for (_key3 in options.query) {
                  query.set(_key3, options.query[_key3]);
                }

                localVarUrlObj.search = new URLSearchParams(query).toString();
                headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                localVarRequestOptions.headers = _objectSpread2(_objectSpread2(_objectSpread2({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                return _context3.abrupt("return", {
                  url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                  options: localVarRequestOptions
                });

              case 29:
              case "end":
                return _context3.stop();
            }
          }
        }, _callee3);
      }));

      function eventGetEventLocalizedSingle(_x5, _x6) {
        return _eventGetEventLocalizedSingle.apply(this, arguments);
      }

      return eventGetEventLocalizedSingle;
    }(),

    /**
     *
     * @summary GET Event Single
     * @param {string} id ID of the Event
     * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)
     * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    eventGetEventSingle: function () {
      var _eventGetEventSingle = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(id, fields, language) {
        var options,
            localVarPath,
            localVarUrlObj,
            baseOptions,
            localVarRequestOptions,
            localVarHeaderParameter,
            localVarQueryParameter,
            localVarAccessTokenValue,
            query,
            key,
            _key4,
            headersFromBaseOptions,
            _args4 = arguments;

        return regeneratorRuntime.wrap(function _callee4$(_context4) {
          while (1) {
            switch (_context4.prev = _context4.next) {
              case 0:
                options = _args4.length > 3 && _args4[3] !== undefined ? _args4[3] : {};

                if (!(id === null || id === undefined)) {
                  _context4.next = 3;
                  break;
                }

                throw new base_RequiredError('id', 'Required parameter id was null or undefined when calling eventGetEventSingle.');

              case 3:
                localVarPath = "/api/Event/{id}".replace("{".concat("id", "}"), encodeURIComponent(String(id))); // use dummy base URL string because the URL constructor only accepts absolute URLs.

                localVarUrlObj = new URL(localVarPath, 'https://example.com');

                if (configuration) {
                  baseOptions = configuration.baseOptions;
                }

                localVarRequestOptions = _objectSpread2(_objectSpread2({
                  method: 'GET'
                }, baseOptions), options);
                localVarHeaderParameter = {};
                localVarQueryParameter = {}; // authentication oauth2 required
                // oauth required

                if (!(configuration && configuration.accessToken)) {
                  _context4.next = 21;
                  break;
                }

                if (!(typeof configuration.accessToken === 'function')) {
                  _context4.next = 16;
                  break;
                }

                _context4.next = 13;
                return configuration.accessToken("oauth2", [""]);

              case 13:
                _context4.t0 = _context4.sent;
                _context4.next = 19;
                break;

              case 16:
                _context4.next = 18;
                return configuration.accessToken;

              case 18:
                _context4.t0 = _context4.sent;

              case 19:
                localVarAccessTokenValue = _context4.t0;
                localVarHeaderParameter["Authorization"] = "Bearer " + localVarAccessTokenValue;

              case 21:
                if (fields !== undefined) {
                  localVarQueryParameter['fields'] = fields;
                }

                if (language !== undefined) {
                  localVarQueryParameter['language'] = language;
                }

                query = new URLSearchParams(localVarUrlObj.search);

                for (key in localVarQueryParameter) {
                  query.set(key, localVarQueryParameter[key]);
                }

                for (_key4 in options.query) {
                  query.set(_key4, options.query[_key4]);
                }

                localVarUrlObj.search = new URLSearchParams(query).toString();
                headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                localVarRequestOptions.headers = _objectSpread2(_objectSpread2(_objectSpread2({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                return _context4.abrupt("return", {
                  url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                  options: localVarRequestOptions
                });

              case 30:
              case "end":
                return _context4.stop();
            }
          }
        }, _callee4);
      }));

      function eventGetEventSingle(_x7, _x8, _x9) {
        return _eventGetEventSingle.apply(this, arguments);
      }

      return eventGetEventSingle;
    }(),

    /**
     *
     * @summary GET Event List
     * @param {number} [pagenumber] Pagenumber, (default:1)
     * @param {number} [pagesize] Elements per Page, (default:10)
     * @param {string} [idlist] IDFilter (Separator &#x27;,&#x27; List of Event IDs, &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)
     * @param {string} [locfilter] Locfilter (Separator &#x27;,&#x27; possible values: reg + REGIONID &#x3D; (Filter by Region), reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMVEREINID &#x3D; (Filter by Tourismverein), mun + MUNICIPALITYID &#x3D; (Filter by Municipality), fra + FRACTIONID &#x3D; (Filter by Fraction), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)
     * @param {string} [rancfilter] Rancfilter (Ranc 0-5 possible)
     * @param {string} [typefilter] Typefilter (Type of Event: not used yet)
     * @param {string} [topicfilter] Topic ID Filter (Filter by Topic ID) BITMASK
     * @param {string} [orgfilter] Organization Filter (Filter by Organizer RID)
     * @param {string} [odhtagfilter] ODH Taglist Filter (refers to Array SmgTags) (String, Separator &#x27;,&#x27; more Tags possible, available Tags reference to &#x27;api/ODHTag?validforentity&#x3D;event&#x27;), (default:&#x27;null&#x27;)
     * @param {boolean} [active] Active Events Filter (possible Values: &#x27;true&#x27; only Active Events, &#x27;false&#x27; only Disabled Events, (default:&#x27;null&#x27;)
     * @param {boolean} [odhactive] ODH Active (Published) Events Filter (Refers to field SmgActive) Events Filter (possible Values: &#x27;true&#x27; only published Events, &#x27;false&#x27; only not published Events, (default:&#x27;null&#x27;)
     * @param {string} [source] Source Filter (Filter by datasource &#x27;lts&#x27;)
     * @param {string} [begindate] BeginDate of Events (Format: yyyy-MM-dd)
     * @param {string} [enddate] EndDate of Events (Format: yyyy-MM-dd)
     * @param {string} [sort] Sorting of Events (&#x27;desc&#x27;: Descending, default, &#x27;asc&#x27;: Ascending)
     * @param {string} [seed] Seed &#x27;1 - 10&#x27; for Random Sorting, &#x27;0&#x27; generates a Random Seed, &#x27;null&#x27; disables Random Sorting, (default:null)
     * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)
     * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)
     * @param {string} [langfilter]
     * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)
     * @param {string} [updatefrom] Date from Format (yyyy-MM-dd) (all GBActivityPoi with LastChange &amp;gt;&#x3D; datefrom are passed), (default: null)
     * @param {string} [searchfilter] String to search for, Title in all languages are searched, (default: null)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    eventGetEvents: function () {
      var _eventGetEvents = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(pagenumber, pagesize, idlist, locfilter, rancfilter, typefilter, topicfilter, orgfilter, odhtagfilter, active, odhactive, source, begindate, enddate, sort, seed, latitude, longitude, radius, fields, langfilter, language, updatefrom, searchfilter) {
        var options,
            localVarPath,
            localVarUrlObj,
            baseOptions,
            localVarRequestOptions,
            localVarHeaderParameter,
            localVarQueryParameter,
            localVarAccessTokenValue,
            query,
            key,
            _key5,
            headersFromBaseOptions,
            _args5 = arguments;

        return regeneratorRuntime.wrap(function _callee5$(_context5) {
          while (1) {
            switch (_context5.prev = _context5.next) {
              case 0:
                options = _args5.length > 24 && _args5[24] !== undefined ? _args5[24] : {};
                localVarPath = "/api/Event"; // use dummy base URL string because the URL constructor only accepts absolute URLs.

                localVarUrlObj = new URL(localVarPath, 'https://example.com');

                if (configuration) {
                  baseOptions = configuration.baseOptions;
                }

                localVarRequestOptions = _objectSpread2(_objectSpread2({
                  method: 'GET'
                }, baseOptions), options);
                localVarHeaderParameter = {};
                localVarQueryParameter = {}; // authentication oauth2 required
                // oauth required

                if (!(configuration && configuration.accessToken)) {
                  _context5.next = 19;
                  break;
                }

                if (!(typeof configuration.accessToken === 'function')) {
                  _context5.next = 14;
                  break;
                }

                _context5.next = 11;
                return configuration.accessToken("oauth2", [""]);

              case 11:
                _context5.t0 = _context5.sent;
                _context5.next = 17;
                break;

              case 14:
                _context5.next = 16;
                return configuration.accessToken;

              case 16:
                _context5.t0 = _context5.sent;

              case 17:
                localVarAccessTokenValue = _context5.t0;
                localVarHeaderParameter["Authorization"] = "Bearer " + localVarAccessTokenValue;

              case 19:
                if (pagenumber !== undefined) {
                  localVarQueryParameter['pagenumber'] = pagenumber;
                }

                if (pagesize !== undefined) {
                  localVarQueryParameter['pagesize'] = pagesize;
                }

                if (idlist !== undefined) {
                  localVarQueryParameter['idlist'] = idlist;
                }

                if (locfilter !== undefined) {
                  localVarQueryParameter['locfilter'] = locfilter;
                }

                if (rancfilter !== undefined) {
                  localVarQueryParameter['rancfilter'] = rancfilter;
                }

                if (typefilter !== undefined) {
                  localVarQueryParameter['typefilter'] = typefilter;
                }

                if (topicfilter !== undefined) {
                  localVarQueryParameter['topicfilter'] = topicfilter;
                }

                if (orgfilter !== undefined) {
                  localVarQueryParameter['orgfilter'] = orgfilter;
                }

                if (odhtagfilter !== undefined) {
                  localVarQueryParameter['odhtagfilter'] = odhtagfilter;
                }

                if (active !== undefined) {
                  localVarQueryParameter['active'] = active;
                }

                if (odhactive !== undefined) {
                  localVarQueryParameter['odhactive'] = odhactive;
                }

                if (source !== undefined) {
                  localVarQueryParameter['source'] = source;
                }

                if (begindate !== undefined) {
                  localVarQueryParameter['begindate'] = begindate;
                }

                if (enddate !== undefined) {
                  localVarQueryParameter['enddate'] = enddate;
                }

                if (sort !== undefined) {
                  localVarQueryParameter['sort'] = sort;
                }

                if (seed !== undefined) {
                  localVarQueryParameter['seed'] = seed;
                }

                if (latitude !== undefined) {
                  localVarQueryParameter['latitude'] = latitude;
                }

                if (longitude !== undefined) {
                  localVarQueryParameter['longitude'] = longitude;
                }

                if (radius !== undefined) {
                  localVarQueryParameter['radius'] = radius;
                }

                if (fields !== undefined) {
                  localVarQueryParameter['fields'] = fields;
                }

                if (langfilter !== undefined) {
                  localVarQueryParameter['langfilter'] = langfilter;
                }

                if (language !== undefined) {
                  localVarQueryParameter['language'] = language;
                }

                if (updatefrom !== undefined) {
                  localVarQueryParameter['updatefrom'] = updatefrom;
                }

                if (searchfilter !== undefined) {
                  localVarQueryParameter['searchfilter'] = searchfilter;
                }

                query = new URLSearchParams(localVarUrlObj.search);

                for (key in localVarQueryParameter) {
                  query.set(key, localVarQueryParameter[key]);
                }

                for (_key5 in options.query) {
                  query.set(_key5, options.query[_key5]);
                }

                localVarUrlObj.search = new URLSearchParams(query).toString();
                headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                localVarRequestOptions.headers = _objectSpread2(_objectSpread2(_objectSpread2({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                return _context5.abrupt("return", {
                  url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                  options: localVarRequestOptions
                });

              case 50:
              case "end":
                return _context5.stop();
            }
          }
        }, _callee5);
      }));

      function eventGetEvents(_x10, _x11, _x12, _x13, _x14, _x15, _x16, _x17, _x18, _x19, _x20, _x21, _x22, _x23, _x24, _x25, _x26, _x27, _x28, _x29, _x30, _x31, _x32, _x33) {
        return _eventGetEvents.apply(this, arguments);
      }

      return eventGetEvents;
    }(),

    /**
     *
     * @summary GET Event Localized List
     * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)
     * @param {number} [pagenumber] Pagenumber, (default:1)
     * @param {number} [pagesize] Elements per Page, (default:10)
     * @param {string} [idlist] IDFilter (Separator &#x27;,&#x27; List of Event IDs, &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)
     * @param {string} [locfilter] Locfilter (Separator &#x27;,&#x27; possible values: reg + REGIONID &#x3D; (Filter by Region), reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMVEREINID &#x3D; (Filter by Tourismverein), mun + MUNICIPALITYID &#x3D; (Filter by Municipality), fra + FRACTIONID &#x3D; (Filter by Fraction), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)
     * @param {string} [rancfilter] Rancfilter (Ranc 0-5 possible)
     * @param {string} [typefilter] Typefilter (Type of Event: not used yet)
     * @param {string} [topicfilter] Topic ID Filter (Filter by Topic ID) BITMASK
     * @param {string} [orgfilter] Organization Filter (Filter by Organizer RID)
     * @param {string} [odhtagfilter] ODH Taglist Filter (refers to Array SmgTags) (String, Separator &#x27;,&#x27; more Tags possible, available Tags reference to &#x27;api/ODHTag?validforentity&#x3D;event&#x27;), (default:&#x27;null&#x27;)
     * @param {boolean} [active] Active Events Filter (possible Values: &#x27;true&#x27; only Active Events, &#x27;false&#x27; only Disabled Events, (default:&#x27;null&#x27;)
     * @param {boolean} [odhactive] ODH Active (Published) Events Filter (Refers to field SmgActive) Events Filter (possible Values: &#x27;true&#x27; only published Events, &#x27;false&#x27; only not published Events, (default:&#x27;null&#x27;)
     * @param {string} [begindate] BeginDate of Events (Format: yyyy-MM-dd)
     * @param {string} [enddate] EndDate of Events (Format: yyyy-MM-dd)
     * @param {string} [seed] Seed &#x27;1 - 10&#x27; for Random Sorting, &#x27;0&#x27; generates a Random Seed, &#x27;null&#x27; disables Random Sorting, (default:null)
     * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    eventGetEventsLocalized: function () {
      var _eventGetEventsLocalized = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6(language, pagenumber, pagesize, idlist, locfilter, rancfilter, typefilter, topicfilter, orgfilter, odhtagfilter, active, odhactive, begindate, enddate, seed, latitude, longitude, radius) {
        var options,
            localVarPath,
            localVarUrlObj,
            baseOptions,
            localVarRequestOptions,
            localVarHeaderParameter,
            localVarQueryParameter,
            localVarAccessTokenValue,
            query,
            key,
            _key6,
            headersFromBaseOptions,
            _args6 = arguments;

        return regeneratorRuntime.wrap(function _callee6$(_context6) {
          while (1) {
            switch (_context6.prev = _context6.next) {
              case 0:
                options = _args6.length > 18 && _args6[18] !== undefined ? _args6[18] : {};
                localVarPath = "/api/EventLocalized"; // use dummy base URL string because the URL constructor only accepts absolute URLs.

                localVarUrlObj = new URL(localVarPath, 'https://example.com');

                if (configuration) {
                  baseOptions = configuration.baseOptions;
                }

                localVarRequestOptions = _objectSpread2(_objectSpread2({
                  method: 'GET'
                }, baseOptions), options);
                localVarHeaderParameter = {};
                localVarQueryParameter = {}; // authentication oauth2 required
                // oauth required

                if (!(configuration && configuration.accessToken)) {
                  _context6.next = 19;
                  break;
                }

                if (!(typeof configuration.accessToken === 'function')) {
                  _context6.next = 14;
                  break;
                }

                _context6.next = 11;
                return configuration.accessToken("oauth2", [""]);

              case 11:
                _context6.t0 = _context6.sent;
                _context6.next = 17;
                break;

              case 14:
                _context6.next = 16;
                return configuration.accessToken;

              case 16:
                _context6.t0 = _context6.sent;

              case 17:
                localVarAccessTokenValue = _context6.t0;
                localVarHeaderParameter["Authorization"] = "Bearer " + localVarAccessTokenValue;

              case 19:
                if (language !== undefined) {
                  localVarQueryParameter['language'] = language;
                }

                if (pagenumber !== undefined) {
                  localVarQueryParameter['pagenumber'] = pagenumber;
                }

                if (pagesize !== undefined) {
                  localVarQueryParameter['pagesize'] = pagesize;
                }

                if (idlist !== undefined) {
                  localVarQueryParameter['idlist'] = idlist;
                }

                if (locfilter !== undefined) {
                  localVarQueryParameter['locfilter'] = locfilter;
                }

                if (rancfilter !== undefined) {
                  localVarQueryParameter['rancfilter'] = rancfilter;
                }

                if (typefilter !== undefined) {
                  localVarQueryParameter['typefilter'] = typefilter;
                }

                if (topicfilter !== undefined) {
                  localVarQueryParameter['topicfilter'] = topicfilter;
                }

                if (orgfilter !== undefined) {
                  localVarQueryParameter['orgfilter'] = orgfilter;
                }

                if (odhtagfilter !== undefined) {
                  localVarQueryParameter['odhtagfilter'] = odhtagfilter;
                }

                if (active !== undefined) {
                  localVarQueryParameter['active'] = active;
                }

                if (odhactive !== undefined) {
                  localVarQueryParameter['odhactive'] = odhactive;
                }

                if (begindate !== undefined) {
                  localVarQueryParameter['begindate'] = begindate;
                }

                if (enddate !== undefined) {
                  localVarQueryParameter['enddate'] = enddate;
                }

                if (seed !== undefined) {
                  localVarQueryParameter['seed'] = seed;
                }

                if (latitude !== undefined) {
                  localVarQueryParameter['latitude'] = latitude;
                }

                if (longitude !== undefined) {
                  localVarQueryParameter['longitude'] = longitude;
                }

                if (radius !== undefined) {
                  localVarQueryParameter['radius'] = radius;
                }

                query = new URLSearchParams(localVarUrlObj.search);

                for (key in localVarQueryParameter) {
                  query.set(key, localVarQueryParameter[key]);
                }

                for (_key6 in options.query) {
                  query.set(_key6, options.query[_key6]);
                }

                localVarUrlObj.search = new URLSearchParams(query).toString();
                headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                localVarRequestOptions.headers = _objectSpread2(_objectSpread2(_objectSpread2({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                return _context6.abrupt("return", {
                  url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                  options: localVarRequestOptions
                });

              case 44:
              case "end":
                return _context6.stop();
            }
          }
        }, _callee6);
      }));

      function eventGetEventsLocalized(_x34, _x35, _x36, _x37, _x38, _x39, _x40, _x41, _x42, _x43, _x44, _x45, _x46, _x47, _x48, _x49, _x50, _x51) {
        return _eventGetEventsLocalized.apply(this, arguments);
      }

      return eventGetEventsLocalized;
    }(),

    /**
     *
     * @summary GET Event List Reduced
     * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)
     * @param {string} [locfilter] Locfilter (Separator &#x27;,&#x27; possible values: reg + REGIONID &#x3D; (Filter by Region), reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMVEREINID &#x3D; (Filter by Tourismverein), mun + MUNICIPALITYID &#x3D; (Filter by Municipality), fra + FRACTIONID &#x3D; (Filter by Fraction), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)
     * @param {string} [rancfilter] Rancfilter (Ranc 0-5 possible)
     * @param {string} [typefilter] Typefilter (Type of Event: not used yet)
     * @param {string} [topicfilter] Topic ID Filter (Filter by Topic ID) BITMASK
     * @param {string} [orgfilter] Organization Filter (Filter by Organizer RID)
     * @param {string} [odhtagfilter] ODH Taglist Filter (refers to Array SmgTags) (String, Separator &#x27;,&#x27; more Tags possible, available Tags reference to &#x27;api/ODHTag?validforentity&#x3D;event&#x27;), (default:&#x27;null&#x27;)
     * @param {string} [source]
     * @param {boolean} [active] Active Events Filter (possible Values: &#x27;true&#x27; only Active Events, &#x27;false&#x27; only Disabled Events, (default:&#x27;null&#x27;)
     * @param {boolean} [odhactive] ODH Active (Published) Events Filter (Refers to field SmgActive) Events Filter (possible Values: &#x27;true&#x27; only published Events, &#x27;false&#x27; only not published Events, (default:&#x27;null&#x27;)
     * @param {string} [begindate] BeginDate of Events (Format: yyyy-MM-dd)
     * @param {string} [enddate] EndDate of Events (Format: yyyy-MM-dd)
     * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)
     * @param {string} [fields] Select fields to display, by Default Title and Id are selected if fields filter is null More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    eventGetEventsReduced: function () {
      var _eventGetEventsReduced = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee7(language, locfilter, rancfilter, typefilter, topicfilter, orgfilter, odhtagfilter, source, active, odhactive, begindate, enddate, latitude, longitude, radius, fields) {
        var options,
            localVarPath,
            localVarUrlObj,
            baseOptions,
            localVarRequestOptions,
            localVarHeaderParameter,
            localVarQueryParameter,
            localVarAccessTokenValue,
            query,
            key,
            _key7,
            headersFromBaseOptions,
            _args7 = arguments;

        return regeneratorRuntime.wrap(function _callee7$(_context7) {
          while (1) {
            switch (_context7.prev = _context7.next) {
              case 0:
                options = _args7.length > 16 && _args7[16] !== undefined ? _args7[16] : {};
                localVarPath = "/api/EventReduced"; // use dummy base URL string because the URL constructor only accepts absolute URLs.

                localVarUrlObj = new URL(localVarPath, 'https://example.com');

                if (configuration) {
                  baseOptions = configuration.baseOptions;
                }

                localVarRequestOptions = _objectSpread2(_objectSpread2({
                  method: 'GET'
                }, baseOptions), options);
                localVarHeaderParameter = {};
                localVarQueryParameter = {}; // authentication oauth2 required
                // oauth required

                if (!(configuration && configuration.accessToken)) {
                  _context7.next = 19;
                  break;
                }

                if (!(typeof configuration.accessToken === 'function')) {
                  _context7.next = 14;
                  break;
                }

                _context7.next = 11;
                return configuration.accessToken("oauth2", [""]);

              case 11:
                _context7.t0 = _context7.sent;
                _context7.next = 17;
                break;

              case 14:
                _context7.next = 16;
                return configuration.accessToken;

              case 16:
                _context7.t0 = _context7.sent;

              case 17:
                localVarAccessTokenValue = _context7.t0;
                localVarHeaderParameter["Authorization"] = "Bearer " + localVarAccessTokenValue;

              case 19:
                if (language !== undefined) {
                  localVarQueryParameter['language'] = language;
                }

                if (locfilter !== undefined) {
                  localVarQueryParameter['locfilter'] = locfilter;
                }

                if (rancfilter !== undefined) {
                  localVarQueryParameter['rancfilter'] = rancfilter;
                }

                if (typefilter !== undefined) {
                  localVarQueryParameter['typefilter'] = typefilter;
                }

                if (topicfilter !== undefined) {
                  localVarQueryParameter['topicfilter'] = topicfilter;
                }

                if (orgfilter !== undefined) {
                  localVarQueryParameter['orgfilter'] = orgfilter;
                }

                if (odhtagfilter !== undefined) {
                  localVarQueryParameter['odhtagfilter'] = odhtagfilter;
                }

                if (source !== undefined) {
                  localVarQueryParameter['source'] = source;
                }

                if (active !== undefined) {
                  localVarQueryParameter['active'] = active;
                }

                if (odhactive !== undefined) {
                  localVarQueryParameter['odhactive'] = odhactive;
                }

                if (begindate !== undefined) {
                  localVarQueryParameter['begindate'] = begindate;
                }

                if (enddate !== undefined) {
                  localVarQueryParameter['enddate'] = enddate;
                }

                if (latitude !== undefined) {
                  localVarQueryParameter['latitude'] = latitude;
                }

                if (longitude !== undefined) {
                  localVarQueryParameter['longitude'] = longitude;
                }

                if (radius !== undefined) {
                  localVarQueryParameter['radius'] = radius;
                }

                if (fields !== undefined) {
                  localVarQueryParameter['fields'] = fields;
                }

                query = new URLSearchParams(localVarUrlObj.search);

                for (key in localVarQueryParameter) {
                  query.set(key, localVarQueryParameter[key]);
                }

                for (_key7 in options.query) {
                  query.set(_key7, options.query[_key7]);
                }

                localVarUrlObj.search = new URLSearchParams(query).toString();
                headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                localVarRequestOptions.headers = _objectSpread2(_objectSpread2(_objectSpread2({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                return _context7.abrupt("return", {
                  url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                  options: localVarRequestOptions
                });

              case 42:
              case "end":
                return _context7.stop();
            }
          }
        }, _callee7);
      }));

      function eventGetEventsReduced(_x52, _x53, _x54, _x55, _x56, _x57, _x58, _x59, _x60, _x61, _x62, _x63, _x64, _x65, _x66, _x67) {
        return _eventGetEventsReduced.apply(this, arguments);
      }

      return eventGetEventsReduced;
    }(),

    /**
     *
     * @summary GET Event Topic Single
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    eventGetSingleEventTopicList: function () {
      var _eventGetSingleEventTopicList = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee8(id) {
        var options,
            localVarPath,
            localVarUrlObj,
            baseOptions,
            localVarRequestOptions,
            localVarHeaderParameter,
            localVarQueryParameter,
            localVarAccessTokenValue,
            query,
            key,
            _key8,
            headersFromBaseOptions,
            _args8 = arguments;

        return regeneratorRuntime.wrap(function _callee8$(_context8) {
          while (1) {
            switch (_context8.prev = _context8.next) {
              case 0:
                options = _args8.length > 1 && _args8[1] !== undefined ? _args8[1] : {};

                if (!(id === null || id === undefined)) {
                  _context8.next = 3;
                  break;
                }

                throw new base_RequiredError('id', 'Required parameter id was null or undefined when calling eventGetSingleEventTopicList.');

              case 3:
                localVarPath = "/api/EventTopics/{id}".replace("{".concat("id", "}"), encodeURIComponent(String(id))); // use dummy base URL string because the URL constructor only accepts absolute URLs.

                localVarUrlObj = new URL(localVarPath, 'https://example.com');

                if (configuration) {
                  baseOptions = configuration.baseOptions;
                }

                localVarRequestOptions = _objectSpread2(_objectSpread2({
                  method: 'GET'
                }, baseOptions), options);
                localVarHeaderParameter = {};
                localVarQueryParameter = {}; // authentication oauth2 required
                // oauth required

                if (!(configuration && configuration.accessToken)) {
                  _context8.next = 21;
                  break;
                }

                if (!(typeof configuration.accessToken === 'function')) {
                  _context8.next = 16;
                  break;
                }

                _context8.next = 13;
                return configuration.accessToken("oauth2", [""]);

              case 13:
                _context8.t0 = _context8.sent;
                _context8.next = 19;
                break;

              case 16:
                _context8.next = 18;
                return configuration.accessToken;

              case 18:
                _context8.t0 = _context8.sent;

              case 19:
                localVarAccessTokenValue = _context8.t0;
                localVarHeaderParameter["Authorization"] = "Bearer " + localVarAccessTokenValue;

              case 21:
                query = new URLSearchParams(localVarUrlObj.search);

                for (key in localVarQueryParameter) {
                  query.set(key, localVarQueryParameter[key]);
                }

                for (_key8 in options.query) {
                  query.set(_key8, options.query[_key8]);
                }

                localVarUrlObj.search = new URLSearchParams(query).toString();
                headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                localVarRequestOptions.headers = _objectSpread2(_objectSpread2(_objectSpread2({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                return _context8.abrupt("return", {
                  url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                  options: localVarRequestOptions
                });

              case 28:
              case "end":
                return _context8.stop();
            }
          }
        }, _callee8);
      }));

      function eventGetSingleEventTopicList(_x68) {
        return _eventGetSingleEventTopicList.apply(this, arguments);
      }

      return eventGetSingleEventTopicList;
    }()
  };
};
/**
 * EventApi - functional programming interface
 * @export
 */

var event_api_EventApiFp = function EventApiFp(configuration) {
  return {
    /**
     *
     * @summary GET Event Topic List
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    eventGetAllEventTopicList: function eventGetAllEventTopicList(options) {
      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee9() {
        var localVarAxiosArgs;
        return regeneratorRuntime.wrap(function _callee9$(_context9) {
          while (1) {
            switch (_context9.prev = _context9.next) {
              case 0:
                _context9.next = 2;
                return event_api_EventApiAxiosParamCreator(configuration).eventGetAllEventTopicList(options);

              case 2:
                localVarAxiosArgs = _context9.sent;
                return _context9.abrupt("return", function () {
                  var axios = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : axios_default.a;
                  var basePath = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : BASE_PATH;

                  var axiosRequestArgs = _objectSpread2(_objectSpread2({}, localVarAxiosArgs.options), {}, {
                    url: basePath + localVarAxiosArgs.url
                  });

                  return axios.request(axiosRequestArgs);
                });

              case 4:
              case "end":
                return _context9.stop();
            }
          }
        }, _callee9);
      }))();
    },

    /**
     *
     * @summary GET Event Changed List by Date
     * @param {number} [pagenumber] Pagenumber, (default:1)
     * @param {number} [pagesize] Elements per Page, (default:10)
     * @param {string} [seed] Seed &#x27;1 - 10&#x27; for Random Sorting, &#x27;0&#x27; generates a Random Seed, &#x27;null&#x27; disables Random Sorting, (default:null)
     * @param {string} [updatefrom] Date from Format (yyyy-MM-dd) (all Event with LastChange &amp;gt;&#x3D; datefrom are passed), (default: DateTime.Now - 1 Day)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    eventGetAllEventsChanged: function eventGetAllEventsChanged(pagenumber, pagesize, seed, updatefrom, options) {
      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee10() {
        var localVarAxiosArgs;
        return regeneratorRuntime.wrap(function _callee10$(_context10) {
          while (1) {
            switch (_context10.prev = _context10.next) {
              case 0:
                _context10.next = 2;
                return event_api_EventApiAxiosParamCreator(configuration).eventGetAllEventsChanged(pagenumber, pagesize, seed, updatefrom, options);

              case 2:
                localVarAxiosArgs = _context10.sent;
                return _context10.abrupt("return", function () {
                  var axios = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : axios_default.a;
                  var basePath = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : BASE_PATH;

                  var axiosRequestArgs = _objectSpread2(_objectSpread2({}, localVarAxiosArgs.options), {}, {
                    url: basePath + localVarAxiosArgs.url
                  });

                  return axios.request(axiosRequestArgs);
                });

              case 4:
              case "end":
                return _context10.stop();
            }
          }
        }, _callee10);
      }))();
    },

    /**
     *
     * @summary GET Event Localized Single
     * @param {string} id ID of the Event
     * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    eventGetEventLocalizedSingle: function eventGetEventLocalizedSingle(id, language, options) {
      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee11() {
        var localVarAxiosArgs;
        return regeneratorRuntime.wrap(function _callee11$(_context11) {
          while (1) {
            switch (_context11.prev = _context11.next) {
              case 0:
                _context11.next = 2;
                return event_api_EventApiAxiosParamCreator(configuration).eventGetEventLocalizedSingle(id, language, options);

              case 2:
                localVarAxiosArgs = _context11.sent;
                return _context11.abrupt("return", function () {
                  var axios = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : axios_default.a;
                  var basePath = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : BASE_PATH;

                  var axiosRequestArgs = _objectSpread2(_objectSpread2({}, localVarAxiosArgs.options), {}, {
                    url: basePath + localVarAxiosArgs.url
                  });

                  return axios.request(axiosRequestArgs);
                });

              case 4:
              case "end":
                return _context11.stop();
            }
          }
        }, _callee11);
      }))();
    },

    /**
     *
     * @summary GET Event Single
     * @param {string} id ID of the Event
     * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)
     * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    eventGetEventSingle: function eventGetEventSingle(id, fields, language, options) {
      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee12() {
        var localVarAxiosArgs;
        return regeneratorRuntime.wrap(function _callee12$(_context12) {
          while (1) {
            switch (_context12.prev = _context12.next) {
              case 0:
                _context12.next = 2;
                return event_api_EventApiAxiosParamCreator(configuration).eventGetEventSingle(id, fields, language, options);

              case 2:
                localVarAxiosArgs = _context12.sent;
                return _context12.abrupt("return", function () {
                  var axios = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : axios_default.a;
                  var basePath = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : BASE_PATH;

                  var axiosRequestArgs = _objectSpread2(_objectSpread2({}, localVarAxiosArgs.options), {}, {
                    url: basePath + localVarAxiosArgs.url
                  });

                  return axios.request(axiosRequestArgs);
                });

              case 4:
              case "end":
                return _context12.stop();
            }
          }
        }, _callee12);
      }))();
    },

    /**
     *
     * @summary GET Event List
     * @param {number} [pagenumber] Pagenumber, (default:1)
     * @param {number} [pagesize] Elements per Page, (default:10)
     * @param {string} [idlist] IDFilter (Separator &#x27;,&#x27; List of Event IDs, &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)
     * @param {string} [locfilter] Locfilter (Separator &#x27;,&#x27; possible values: reg + REGIONID &#x3D; (Filter by Region), reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMVEREINID &#x3D; (Filter by Tourismverein), mun + MUNICIPALITYID &#x3D; (Filter by Municipality), fra + FRACTIONID &#x3D; (Filter by Fraction), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)
     * @param {string} [rancfilter] Rancfilter (Ranc 0-5 possible)
     * @param {string} [typefilter] Typefilter (Type of Event: not used yet)
     * @param {string} [topicfilter] Topic ID Filter (Filter by Topic ID) BITMASK
     * @param {string} [orgfilter] Organization Filter (Filter by Organizer RID)
     * @param {string} [odhtagfilter] ODH Taglist Filter (refers to Array SmgTags) (String, Separator &#x27;,&#x27; more Tags possible, available Tags reference to &#x27;api/ODHTag?validforentity&#x3D;event&#x27;), (default:&#x27;null&#x27;)
     * @param {boolean} [active] Active Events Filter (possible Values: &#x27;true&#x27; only Active Events, &#x27;false&#x27; only Disabled Events, (default:&#x27;null&#x27;)
     * @param {boolean} [odhactive] ODH Active (Published) Events Filter (Refers to field SmgActive) Events Filter (possible Values: &#x27;true&#x27; only published Events, &#x27;false&#x27; only not published Events, (default:&#x27;null&#x27;)
     * @param {string} [source] Source Filter (Filter by datasource &#x27;lts&#x27;)
     * @param {string} [begindate] BeginDate of Events (Format: yyyy-MM-dd)
     * @param {string} [enddate] EndDate of Events (Format: yyyy-MM-dd)
     * @param {string} [sort] Sorting of Events (&#x27;desc&#x27;: Descending, default, &#x27;asc&#x27;: Ascending)
     * @param {string} [seed] Seed &#x27;1 - 10&#x27; for Random Sorting, &#x27;0&#x27; generates a Random Seed, &#x27;null&#x27; disables Random Sorting, (default:null)
     * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)
     * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)
     * @param {string} [langfilter]
     * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)
     * @param {string} [updatefrom] Date from Format (yyyy-MM-dd) (all GBActivityPoi with LastChange &amp;gt;&#x3D; datefrom are passed), (default: null)
     * @param {string} [searchfilter] String to search for, Title in all languages are searched, (default: null)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    eventGetEvents: function eventGetEvents(pagenumber, pagesize, idlist, locfilter, rancfilter, typefilter, topicfilter, orgfilter, odhtagfilter, active, odhactive, source, begindate, enddate, sort, seed, latitude, longitude, radius, fields, langfilter, language, updatefrom, searchfilter, options) {
      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee13() {
        var localVarAxiosArgs;
        return regeneratorRuntime.wrap(function _callee13$(_context13) {
          while (1) {
            switch (_context13.prev = _context13.next) {
              case 0:
                _context13.next = 2;
                return event_api_EventApiAxiosParamCreator(configuration).eventGetEvents(pagenumber, pagesize, idlist, locfilter, rancfilter, typefilter, topicfilter, orgfilter, odhtagfilter, active, odhactive, source, begindate, enddate, sort, seed, latitude, longitude, radius, fields, langfilter, language, updatefrom, searchfilter, options);

              case 2:
                localVarAxiosArgs = _context13.sent;
                return _context13.abrupt("return", function () {
                  var axios = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : axios_default.a;
                  var basePath = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : BASE_PATH;

                  var axiosRequestArgs = _objectSpread2(_objectSpread2({}, localVarAxiosArgs.options), {}, {
                    url: basePath + localVarAxiosArgs.url
                  });

                  return axios.request(axiosRequestArgs);
                });

              case 4:
              case "end":
                return _context13.stop();
            }
          }
        }, _callee13);
      }))();
    },

    /**
     *
     * @summary GET Event Localized List
     * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)
     * @param {number} [pagenumber] Pagenumber, (default:1)
     * @param {number} [pagesize] Elements per Page, (default:10)
     * @param {string} [idlist] IDFilter (Separator &#x27;,&#x27; List of Event IDs, &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)
     * @param {string} [locfilter] Locfilter (Separator &#x27;,&#x27; possible values: reg + REGIONID &#x3D; (Filter by Region), reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMVEREINID &#x3D; (Filter by Tourismverein), mun + MUNICIPALITYID &#x3D; (Filter by Municipality), fra + FRACTIONID &#x3D; (Filter by Fraction), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)
     * @param {string} [rancfilter] Rancfilter (Ranc 0-5 possible)
     * @param {string} [typefilter] Typefilter (Type of Event: not used yet)
     * @param {string} [topicfilter] Topic ID Filter (Filter by Topic ID) BITMASK
     * @param {string} [orgfilter] Organization Filter (Filter by Organizer RID)
     * @param {string} [odhtagfilter] ODH Taglist Filter (refers to Array SmgTags) (String, Separator &#x27;,&#x27; more Tags possible, available Tags reference to &#x27;api/ODHTag?validforentity&#x3D;event&#x27;), (default:&#x27;null&#x27;)
     * @param {boolean} [active] Active Events Filter (possible Values: &#x27;true&#x27; only Active Events, &#x27;false&#x27; only Disabled Events, (default:&#x27;null&#x27;)
     * @param {boolean} [odhactive] ODH Active (Published) Events Filter (Refers to field SmgActive) Events Filter (possible Values: &#x27;true&#x27; only published Events, &#x27;false&#x27; only not published Events, (default:&#x27;null&#x27;)
     * @param {string} [begindate] BeginDate of Events (Format: yyyy-MM-dd)
     * @param {string} [enddate] EndDate of Events (Format: yyyy-MM-dd)
     * @param {string} [seed] Seed &#x27;1 - 10&#x27; for Random Sorting, &#x27;0&#x27; generates a Random Seed, &#x27;null&#x27; disables Random Sorting, (default:null)
     * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    eventGetEventsLocalized: function eventGetEventsLocalized(language, pagenumber, pagesize, idlist, locfilter, rancfilter, typefilter, topicfilter, orgfilter, odhtagfilter, active, odhactive, begindate, enddate, seed, latitude, longitude, radius, options) {
      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee14() {
        var localVarAxiosArgs;
        return regeneratorRuntime.wrap(function _callee14$(_context14) {
          while (1) {
            switch (_context14.prev = _context14.next) {
              case 0:
                _context14.next = 2;
                return event_api_EventApiAxiosParamCreator(configuration).eventGetEventsLocalized(language, pagenumber, pagesize, idlist, locfilter, rancfilter, typefilter, topicfilter, orgfilter, odhtagfilter, active, odhactive, begindate, enddate, seed, latitude, longitude, radius, options);

              case 2:
                localVarAxiosArgs = _context14.sent;
                return _context14.abrupt("return", function () {
                  var axios = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : axios_default.a;
                  var basePath = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : BASE_PATH;

                  var axiosRequestArgs = _objectSpread2(_objectSpread2({}, localVarAxiosArgs.options), {}, {
                    url: basePath + localVarAxiosArgs.url
                  });

                  return axios.request(axiosRequestArgs);
                });

              case 4:
              case "end":
                return _context14.stop();
            }
          }
        }, _callee14);
      }))();
    },

    /**
     *
     * @summary GET Event List Reduced
     * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)
     * @param {string} [locfilter] Locfilter (Separator &#x27;,&#x27; possible values: reg + REGIONID &#x3D; (Filter by Region), reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMVEREINID &#x3D; (Filter by Tourismverein), mun + MUNICIPALITYID &#x3D; (Filter by Municipality), fra + FRACTIONID &#x3D; (Filter by Fraction), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)
     * @param {string} [rancfilter] Rancfilter (Ranc 0-5 possible)
     * @param {string} [typefilter] Typefilter (Type of Event: not used yet)
     * @param {string} [topicfilter] Topic ID Filter (Filter by Topic ID) BITMASK
     * @param {string} [orgfilter] Organization Filter (Filter by Organizer RID)
     * @param {string} [odhtagfilter] ODH Taglist Filter (refers to Array SmgTags) (String, Separator &#x27;,&#x27; more Tags possible, available Tags reference to &#x27;api/ODHTag?validforentity&#x3D;event&#x27;), (default:&#x27;null&#x27;)
     * @param {string} [source]
     * @param {boolean} [active] Active Events Filter (possible Values: &#x27;true&#x27; only Active Events, &#x27;false&#x27; only Disabled Events, (default:&#x27;null&#x27;)
     * @param {boolean} [odhactive] ODH Active (Published) Events Filter (Refers to field SmgActive) Events Filter (possible Values: &#x27;true&#x27; only published Events, &#x27;false&#x27; only not published Events, (default:&#x27;null&#x27;)
     * @param {string} [begindate] BeginDate of Events (Format: yyyy-MM-dd)
     * @param {string} [enddate] EndDate of Events (Format: yyyy-MM-dd)
     * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)
     * @param {string} [fields] Select fields to display, by Default Title and Id are selected if fields filter is null More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    eventGetEventsReduced: function eventGetEventsReduced(language, locfilter, rancfilter, typefilter, topicfilter, orgfilter, odhtagfilter, source, active, odhactive, begindate, enddate, latitude, longitude, radius, fields, options) {
      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee15() {
        var localVarAxiosArgs;
        return regeneratorRuntime.wrap(function _callee15$(_context15) {
          while (1) {
            switch (_context15.prev = _context15.next) {
              case 0:
                _context15.next = 2;
                return event_api_EventApiAxiosParamCreator(configuration).eventGetEventsReduced(language, locfilter, rancfilter, typefilter, topicfilter, orgfilter, odhtagfilter, source, active, odhactive, begindate, enddate, latitude, longitude, radius, fields, options);

              case 2:
                localVarAxiosArgs = _context15.sent;
                return _context15.abrupt("return", function () {
                  var axios = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : axios_default.a;
                  var basePath = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : BASE_PATH;

                  var axiosRequestArgs = _objectSpread2(_objectSpread2({}, localVarAxiosArgs.options), {}, {
                    url: basePath + localVarAxiosArgs.url
                  });

                  return axios.request(axiosRequestArgs);
                });

              case 4:
              case "end":
                return _context15.stop();
            }
          }
        }, _callee15);
      }))();
    },

    /**
     *
     * @summary GET Event Topic Single
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    eventGetSingleEventTopicList: function eventGetSingleEventTopicList(id, options) {
      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee16() {
        var localVarAxiosArgs;
        return regeneratorRuntime.wrap(function _callee16$(_context16) {
          while (1) {
            switch (_context16.prev = _context16.next) {
              case 0:
                _context16.next = 2;
                return event_api_EventApiAxiosParamCreator(configuration).eventGetSingleEventTopicList(id, options);

              case 2:
                localVarAxiosArgs = _context16.sent;
                return _context16.abrupt("return", function () {
                  var axios = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : axios_default.a;
                  var basePath = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : BASE_PATH;

                  var axiosRequestArgs = _objectSpread2(_objectSpread2({}, localVarAxiosArgs.options), {}, {
                    url: basePath + localVarAxiosArgs.url
                  });

                  return axios.request(axiosRequestArgs);
                });

              case 4:
              case "end":
                return _context16.stop();
            }
          }
        }, _callee16);
      }))();
    }
  };
};
/**
 * EventApi - factory interface
 * @export
 */

var EventApiFactory = function EventApiFactory(configuration, basePath, axios) {
  return {
    /**
     *
     * @summary GET Event Topic List
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    eventGetAllEventTopicList: function eventGetAllEventTopicList(options) {
      return event_api_EventApiFp(configuration).eventGetAllEventTopicList(options).then(function (request) {
        return request(axios, basePath);
      });
    },

    /**
     *
     * @summary GET Event Changed List by Date
     * @param {number} [pagenumber] Pagenumber, (default:1)
     * @param {number} [pagesize] Elements per Page, (default:10)
     * @param {string} [seed] Seed &#x27;1 - 10&#x27; for Random Sorting, &#x27;0&#x27; generates a Random Seed, &#x27;null&#x27; disables Random Sorting, (default:null)
     * @param {string} [updatefrom] Date from Format (yyyy-MM-dd) (all Event with LastChange &amp;gt;&#x3D; datefrom are passed), (default: DateTime.Now - 1 Day)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    eventGetAllEventsChanged: function eventGetAllEventsChanged(pagenumber, pagesize, seed, updatefrom, options) {
      return event_api_EventApiFp(configuration).eventGetAllEventsChanged(pagenumber, pagesize, seed, updatefrom, options).then(function (request) {
        return request(axios, basePath);
      });
    },

    /**
     *
     * @summary GET Event Localized Single
     * @param {string} id ID of the Event
     * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    eventGetEventLocalizedSingle: function eventGetEventLocalizedSingle(id, language, options) {
      return event_api_EventApiFp(configuration).eventGetEventLocalizedSingle(id, language, options).then(function (request) {
        return request(axios, basePath);
      });
    },

    /**
     *
     * @summary GET Event Single
     * @param {string} id ID of the Event
     * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)
     * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    eventGetEventSingle: function eventGetEventSingle(id, fields, language, options) {
      return event_api_EventApiFp(configuration).eventGetEventSingle(id, fields, language, options).then(function (request) {
        return request(axios, basePath);
      });
    },

    /**
     *
     * @summary GET Event List
     * @param {number} [pagenumber] Pagenumber, (default:1)
     * @param {number} [pagesize] Elements per Page, (default:10)
     * @param {string} [idlist] IDFilter (Separator &#x27;,&#x27; List of Event IDs, &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)
     * @param {string} [locfilter] Locfilter (Separator &#x27;,&#x27; possible values: reg + REGIONID &#x3D; (Filter by Region), reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMVEREINID &#x3D; (Filter by Tourismverein), mun + MUNICIPALITYID &#x3D; (Filter by Municipality), fra + FRACTIONID &#x3D; (Filter by Fraction), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)
     * @param {string} [rancfilter] Rancfilter (Ranc 0-5 possible)
     * @param {string} [typefilter] Typefilter (Type of Event: not used yet)
     * @param {string} [topicfilter] Topic ID Filter (Filter by Topic ID) BITMASK
     * @param {string} [orgfilter] Organization Filter (Filter by Organizer RID)
     * @param {string} [odhtagfilter] ODH Taglist Filter (refers to Array SmgTags) (String, Separator &#x27;,&#x27; more Tags possible, available Tags reference to &#x27;api/ODHTag?validforentity&#x3D;event&#x27;), (default:&#x27;null&#x27;)
     * @param {boolean} [active] Active Events Filter (possible Values: &#x27;true&#x27; only Active Events, &#x27;false&#x27; only Disabled Events, (default:&#x27;null&#x27;)
     * @param {boolean} [odhactive] ODH Active (Published) Events Filter (Refers to field SmgActive) Events Filter (possible Values: &#x27;true&#x27; only published Events, &#x27;false&#x27; only not published Events, (default:&#x27;null&#x27;)
     * @param {string} [source] Source Filter (Filter by datasource &#x27;lts&#x27;)
     * @param {string} [begindate] BeginDate of Events (Format: yyyy-MM-dd)
     * @param {string} [enddate] EndDate of Events (Format: yyyy-MM-dd)
     * @param {string} [sort] Sorting of Events (&#x27;desc&#x27;: Descending, default, &#x27;asc&#x27;: Ascending)
     * @param {string} [seed] Seed &#x27;1 - 10&#x27; for Random Sorting, &#x27;0&#x27; generates a Random Seed, &#x27;null&#x27; disables Random Sorting, (default:null)
     * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)
     * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)
     * @param {string} [langfilter]
     * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)
     * @param {string} [updatefrom] Date from Format (yyyy-MM-dd) (all GBActivityPoi with LastChange &amp;gt;&#x3D; datefrom are passed), (default: null)
     * @param {string} [searchfilter] String to search for, Title in all languages are searched, (default: null)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    eventGetEvents: function eventGetEvents(pagenumber, pagesize, idlist, locfilter, rancfilter, typefilter, topicfilter, orgfilter, odhtagfilter, active, odhactive, source, begindate, enddate, sort, seed, latitude, longitude, radius, fields, langfilter, language, updatefrom, searchfilter, options) {
      return event_api_EventApiFp(configuration).eventGetEvents(pagenumber, pagesize, idlist, locfilter, rancfilter, typefilter, topicfilter, orgfilter, odhtagfilter, active, odhactive, source, begindate, enddate, sort, seed, latitude, longitude, radius, fields, langfilter, language, updatefrom, searchfilter, options).then(function (request) {
        return request(axios, basePath);
      });
    },

    /**
     *
     * @summary GET Event Localized List
     * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)
     * @param {number} [pagenumber] Pagenumber, (default:1)
     * @param {number} [pagesize] Elements per Page, (default:10)
     * @param {string} [idlist] IDFilter (Separator &#x27;,&#x27; List of Event IDs, &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)
     * @param {string} [locfilter] Locfilter (Separator &#x27;,&#x27; possible values: reg + REGIONID &#x3D; (Filter by Region), reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMVEREINID &#x3D; (Filter by Tourismverein), mun + MUNICIPALITYID &#x3D; (Filter by Municipality), fra + FRACTIONID &#x3D; (Filter by Fraction), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)
     * @param {string} [rancfilter] Rancfilter (Ranc 0-5 possible)
     * @param {string} [typefilter] Typefilter (Type of Event: not used yet)
     * @param {string} [topicfilter] Topic ID Filter (Filter by Topic ID) BITMASK
     * @param {string} [orgfilter] Organization Filter (Filter by Organizer RID)
     * @param {string} [odhtagfilter] ODH Taglist Filter (refers to Array SmgTags) (String, Separator &#x27;,&#x27; more Tags possible, available Tags reference to &#x27;api/ODHTag?validforentity&#x3D;event&#x27;), (default:&#x27;null&#x27;)
     * @param {boolean} [active] Active Events Filter (possible Values: &#x27;true&#x27; only Active Events, &#x27;false&#x27; only Disabled Events, (default:&#x27;null&#x27;)
     * @param {boolean} [odhactive] ODH Active (Published) Events Filter (Refers to field SmgActive) Events Filter (possible Values: &#x27;true&#x27; only published Events, &#x27;false&#x27; only not published Events, (default:&#x27;null&#x27;)
     * @param {string} [begindate] BeginDate of Events (Format: yyyy-MM-dd)
     * @param {string} [enddate] EndDate of Events (Format: yyyy-MM-dd)
     * @param {string} [seed] Seed &#x27;1 - 10&#x27; for Random Sorting, &#x27;0&#x27; generates a Random Seed, &#x27;null&#x27; disables Random Sorting, (default:null)
     * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    eventGetEventsLocalized: function eventGetEventsLocalized(language, pagenumber, pagesize, idlist, locfilter, rancfilter, typefilter, topicfilter, orgfilter, odhtagfilter, active, odhactive, begindate, enddate, seed, latitude, longitude, radius, options) {
      return event_api_EventApiFp(configuration).eventGetEventsLocalized(language, pagenumber, pagesize, idlist, locfilter, rancfilter, typefilter, topicfilter, orgfilter, odhtagfilter, active, odhactive, begindate, enddate, seed, latitude, longitude, radius, options).then(function (request) {
        return request(axios, basePath);
      });
    },

    /**
     *
     * @summary GET Event List Reduced
     * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)
     * @param {string} [locfilter] Locfilter (Separator &#x27;,&#x27; possible values: reg + REGIONID &#x3D; (Filter by Region), reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMVEREINID &#x3D; (Filter by Tourismverein), mun + MUNICIPALITYID &#x3D; (Filter by Municipality), fra + FRACTIONID &#x3D; (Filter by Fraction), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)
     * @param {string} [rancfilter] Rancfilter (Ranc 0-5 possible)
     * @param {string} [typefilter] Typefilter (Type of Event: not used yet)
     * @param {string} [topicfilter] Topic ID Filter (Filter by Topic ID) BITMASK
     * @param {string} [orgfilter] Organization Filter (Filter by Organizer RID)
     * @param {string} [odhtagfilter] ODH Taglist Filter (refers to Array SmgTags) (String, Separator &#x27;,&#x27; more Tags possible, available Tags reference to &#x27;api/ODHTag?validforentity&#x3D;event&#x27;), (default:&#x27;null&#x27;)
     * @param {string} [source]
     * @param {boolean} [active] Active Events Filter (possible Values: &#x27;true&#x27; only Active Events, &#x27;false&#x27; only Disabled Events, (default:&#x27;null&#x27;)
     * @param {boolean} [odhactive] ODH Active (Published) Events Filter (Refers to field SmgActive) Events Filter (possible Values: &#x27;true&#x27; only published Events, &#x27;false&#x27; only not published Events, (default:&#x27;null&#x27;)
     * @param {string} [begindate] BeginDate of Events (Format: yyyy-MM-dd)
     * @param {string} [enddate] EndDate of Events (Format: yyyy-MM-dd)
     * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)
     * @param {string} [fields] Select fields to display, by Default Title and Id are selected if fields filter is null More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    eventGetEventsReduced: function eventGetEventsReduced(language, locfilter, rancfilter, typefilter, topicfilter, orgfilter, odhtagfilter, source, active, odhactive, begindate, enddate, latitude, longitude, radius, fields, options) {
      return event_api_EventApiFp(configuration).eventGetEventsReduced(language, locfilter, rancfilter, typefilter, topicfilter, orgfilter, odhtagfilter, source, active, odhactive, begindate, enddate, latitude, longitude, radius, fields, options).then(function (request) {
        return request(axios, basePath);
      });
    },

    /**
     *
     * @summary GET Event Topic Single
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    eventGetSingleEventTopicList: function eventGetSingleEventTopicList(id, options) {
      return event_api_EventApiFp(configuration).eventGetSingleEventTopicList(id, options).then(function (request) {
        return request(axios, basePath);
      });
    }
  };
};
/**
 * EventApi - object-oriented interface
 * @export
 * @class EventApi
 * @extends {BaseAPI}
 */

var event_api_EventApi = /*#__PURE__*/function (_BaseAPI) {
  _inherits(EventApi, _BaseAPI);

  var _super = _createSuper(EventApi);

  function EventApi() {
    _classCallCheck(this, EventApi);

    return _super.apply(this, arguments);
  }

  _createClass(EventApi, [{
    key: "eventGetAllEventTopicList",

    /**
     *
     * @summary GET Event Topic List
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof EventApi
     */
    value: function eventGetAllEventTopicList(options) {
      var _this = this;

      return event_api_EventApiFp(this.configuration).eventGetAllEventTopicList(options).then(function (request) {
        return request(_this.axios, _this.basePath);
      });
    }
    /**
     *
     * @summary GET Event Changed List by Date
     * @param {number} [pagenumber] Pagenumber, (default:1)
     * @param {number} [pagesize] Elements per Page, (default:10)
     * @param {string} [seed] Seed &#x27;1 - 10&#x27; for Random Sorting, &#x27;0&#x27; generates a Random Seed, &#x27;null&#x27; disables Random Sorting, (default:null)
     * @param {string} [updatefrom] Date from Format (yyyy-MM-dd) (all Event with LastChange &amp;gt;&#x3D; datefrom are passed), (default: DateTime.Now - 1 Day)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof EventApi
     */

  }, {
    key: "eventGetAllEventsChanged",
    value: function eventGetAllEventsChanged(pagenumber, pagesize, seed, updatefrom, options) {
      var _this2 = this;

      return event_api_EventApiFp(this.configuration).eventGetAllEventsChanged(pagenumber, pagesize, seed, updatefrom, options).then(function (request) {
        return request(_this2.axios, _this2.basePath);
      });
    }
    /**
     *
     * @summary GET Event Localized Single
     * @param {string} id ID of the Event
     * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof EventApi
     */

  }, {
    key: "eventGetEventLocalizedSingle",
    value: function eventGetEventLocalizedSingle(id, language, options) {
      var _this3 = this;

      return event_api_EventApiFp(this.configuration).eventGetEventLocalizedSingle(id, language, options).then(function (request) {
        return request(_this3.axios, _this3.basePath);
      });
    }
    /**
     *
     * @summary GET Event Single
     * @param {string} id ID of the Event
     * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)
     * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof EventApi
     */

  }, {
    key: "eventGetEventSingle",
    value: function eventGetEventSingle(id, fields, language, options) {
      var _this4 = this;

      return event_api_EventApiFp(this.configuration).eventGetEventSingle(id, fields, language, options).then(function (request) {
        return request(_this4.axios, _this4.basePath);
      });
    }
    /**
     *
     * @summary GET Event List
     * @param {number} [pagenumber] Pagenumber, (default:1)
     * @param {number} [pagesize] Elements per Page, (default:10)
     * @param {string} [idlist] IDFilter (Separator &#x27;,&#x27; List of Event IDs, &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)
     * @param {string} [locfilter] Locfilter (Separator &#x27;,&#x27; possible values: reg + REGIONID &#x3D; (Filter by Region), reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMVEREINID &#x3D; (Filter by Tourismverein), mun + MUNICIPALITYID &#x3D; (Filter by Municipality), fra + FRACTIONID &#x3D; (Filter by Fraction), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)
     * @param {string} [rancfilter] Rancfilter (Ranc 0-5 possible)
     * @param {string} [typefilter] Typefilter (Type of Event: not used yet)
     * @param {string} [topicfilter] Topic ID Filter (Filter by Topic ID) BITMASK
     * @param {string} [orgfilter] Organization Filter (Filter by Organizer RID)
     * @param {string} [odhtagfilter] ODH Taglist Filter (refers to Array SmgTags) (String, Separator &#x27;,&#x27; more Tags possible, available Tags reference to &#x27;api/ODHTag?validforentity&#x3D;event&#x27;), (default:&#x27;null&#x27;)
     * @param {boolean} [active] Active Events Filter (possible Values: &#x27;true&#x27; only Active Events, &#x27;false&#x27; only Disabled Events, (default:&#x27;null&#x27;)
     * @param {boolean} [odhactive] ODH Active (Published) Events Filter (Refers to field SmgActive) Events Filter (possible Values: &#x27;true&#x27; only published Events, &#x27;false&#x27; only not published Events, (default:&#x27;null&#x27;)
     * @param {string} [source] Source Filter (Filter by datasource &#x27;lts&#x27;)
     * @param {string} [begindate] BeginDate of Events (Format: yyyy-MM-dd)
     * @param {string} [enddate] EndDate of Events (Format: yyyy-MM-dd)
     * @param {string} [sort] Sorting of Events (&#x27;desc&#x27;: Descending, default, &#x27;asc&#x27;: Ascending)
     * @param {string} [seed] Seed &#x27;1 - 10&#x27; for Random Sorting, &#x27;0&#x27; generates a Random Seed, &#x27;null&#x27; disables Random Sorting, (default:null)
     * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)
     * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)
     * @param {string} [langfilter]
     * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)
     * @param {string} [updatefrom] Date from Format (yyyy-MM-dd) (all GBActivityPoi with LastChange &amp;gt;&#x3D; datefrom are passed), (default: null)
     * @param {string} [searchfilter] String to search for, Title in all languages are searched, (default: null)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof EventApi
     */

  }, {
    key: "eventGetEvents",
    value: function eventGetEvents(pagenumber, pagesize, idlist, locfilter, rancfilter, typefilter, topicfilter, orgfilter, odhtagfilter, active, odhactive, source, begindate, enddate, sort, seed, latitude, longitude, radius, fields, langfilter, language, updatefrom, searchfilter, options) {
      var _this5 = this;

      return event_api_EventApiFp(this.configuration).eventGetEvents(pagenumber, pagesize, idlist, locfilter, rancfilter, typefilter, topicfilter, orgfilter, odhtagfilter, active, odhactive, source, begindate, enddate, sort, seed, latitude, longitude, radius, fields, langfilter, language, updatefrom, searchfilter, options).then(function (request) {
        return request(_this5.axios, _this5.basePath);
      });
    }
    /**
     *
     * @summary GET Event Localized List
     * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)
     * @param {number} [pagenumber] Pagenumber, (default:1)
     * @param {number} [pagesize] Elements per Page, (default:10)
     * @param {string} [idlist] IDFilter (Separator &#x27;,&#x27; List of Event IDs, &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)
     * @param {string} [locfilter] Locfilter (Separator &#x27;,&#x27; possible values: reg + REGIONID &#x3D; (Filter by Region), reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMVEREINID &#x3D; (Filter by Tourismverein), mun + MUNICIPALITYID &#x3D; (Filter by Municipality), fra + FRACTIONID &#x3D; (Filter by Fraction), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)
     * @param {string} [rancfilter] Rancfilter (Ranc 0-5 possible)
     * @param {string} [typefilter] Typefilter (Type of Event: not used yet)
     * @param {string} [topicfilter] Topic ID Filter (Filter by Topic ID) BITMASK
     * @param {string} [orgfilter] Organization Filter (Filter by Organizer RID)
     * @param {string} [odhtagfilter] ODH Taglist Filter (refers to Array SmgTags) (String, Separator &#x27;,&#x27; more Tags possible, available Tags reference to &#x27;api/ODHTag?validforentity&#x3D;event&#x27;), (default:&#x27;null&#x27;)
     * @param {boolean} [active] Active Events Filter (possible Values: &#x27;true&#x27; only Active Events, &#x27;false&#x27; only Disabled Events, (default:&#x27;null&#x27;)
     * @param {boolean} [odhactive] ODH Active (Published) Events Filter (Refers to field SmgActive) Events Filter (possible Values: &#x27;true&#x27; only published Events, &#x27;false&#x27; only not published Events, (default:&#x27;null&#x27;)
     * @param {string} [begindate] BeginDate of Events (Format: yyyy-MM-dd)
     * @param {string} [enddate] EndDate of Events (Format: yyyy-MM-dd)
     * @param {string} [seed] Seed &#x27;1 - 10&#x27; for Random Sorting, &#x27;0&#x27; generates a Random Seed, &#x27;null&#x27; disables Random Sorting, (default:null)
     * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof EventApi
     */

  }, {
    key: "eventGetEventsLocalized",
    value: function eventGetEventsLocalized(language, pagenumber, pagesize, idlist, locfilter, rancfilter, typefilter, topicfilter, orgfilter, odhtagfilter, active, odhactive, begindate, enddate, seed, latitude, longitude, radius, options) {
      var _this6 = this;

      return event_api_EventApiFp(this.configuration).eventGetEventsLocalized(language, pagenumber, pagesize, idlist, locfilter, rancfilter, typefilter, topicfilter, orgfilter, odhtagfilter, active, odhactive, begindate, enddate, seed, latitude, longitude, radius, options).then(function (request) {
        return request(_this6.axios, _this6.basePath);
      });
    }
    /**
     *
     * @summary GET Event List Reduced
     * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)
     * @param {string} [locfilter] Locfilter (Separator &#x27;,&#x27; possible values: reg + REGIONID &#x3D; (Filter by Region), reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMVEREINID &#x3D; (Filter by Tourismverein), mun + MUNICIPALITYID &#x3D; (Filter by Municipality), fra + FRACTIONID &#x3D; (Filter by Fraction), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)
     * @param {string} [rancfilter] Rancfilter (Ranc 0-5 possible)
     * @param {string} [typefilter] Typefilter (Type of Event: not used yet)
     * @param {string} [topicfilter] Topic ID Filter (Filter by Topic ID) BITMASK
     * @param {string} [orgfilter] Organization Filter (Filter by Organizer RID)
     * @param {string} [odhtagfilter] ODH Taglist Filter (refers to Array SmgTags) (String, Separator &#x27;,&#x27; more Tags possible, available Tags reference to &#x27;api/ODHTag?validforentity&#x3D;event&#x27;), (default:&#x27;null&#x27;)
     * @param {string} [source]
     * @param {boolean} [active] Active Events Filter (possible Values: &#x27;true&#x27; only Active Events, &#x27;false&#x27; only Disabled Events, (default:&#x27;null&#x27;)
     * @param {boolean} [odhactive] ODH Active (Published) Events Filter (Refers to field SmgActive) Events Filter (possible Values: &#x27;true&#x27; only published Events, &#x27;false&#x27; only not published Events, (default:&#x27;null&#x27;)
     * @param {string} [begindate] BeginDate of Events (Format: yyyy-MM-dd)
     * @param {string} [enddate] EndDate of Events (Format: yyyy-MM-dd)
     * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)
     * @param {string} [fields] Select fields to display, by Default Title and Id are selected if fields filter is null More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof EventApi
     */

  }, {
    key: "eventGetEventsReduced",
    value: function eventGetEventsReduced(language, locfilter, rancfilter, typefilter, topicfilter, orgfilter, odhtagfilter, source, active, odhactive, begindate, enddate, latitude, longitude, radius, fields, options) {
      var _this7 = this;

      return event_api_EventApiFp(this.configuration).eventGetEventsReduced(language, locfilter, rancfilter, typefilter, topicfilter, orgfilter, odhtagfilter, source, active, odhactive, begindate, enddate, latitude, longitude, radius, fields, options).then(function (request) {
        return request(_this7.axios, _this7.basePath);
      });
    }
    /**
     *
     * @summary GET Event Topic Single
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof EventApi
     */

  }, {
    key: "eventGetSingleEventTopicList",
    value: function eventGetSingleEventTopicList(id, options) {
      var _this8 = this;

      return event_api_EventApiFp(this.configuration).eventGetSingleEventTopicList(id, options).then(function (request) {
        return request(_this8.axios, _this8.basePath);
      });
    }
  }]);

  return EventApi;
}(base_BaseAPI);
// CONCATENATED MODULE: ./src/api/apis/gastronomy-api.ts

















/* tslint:disable */

/* eslint-disable */

/**
 * Open Data Hub Api Tourism
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: V1
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
 // Some imports not used depending on template conditions
// @ts-ignore


/**
 * GastronomyApi - axios parameter creator
 * @export
 */

var gastronomy_api_GastronomyApiAxiosParamCreator = function GastronomyApiAxiosParamCreator(configuration) {
  return {
    /**
     *
     * @summary GET Gastronomy Changed List by Date
     * @param {number} [pagenumber] Pagenumber, (default:1)
     * @param {number} [pagesize] Elements per Page, (default:10)
     * @param {string} [seed] Seed &#x27;1 - 10&#x27; for Random Sorting, &#x27;0&#x27; generates a Random Seed, &#x27;null&#x27; disables Random Sorting, (default:null)
     * @param {string} [updatefrom] Date from Format (yyyy-MM-dd) (all Gastronomy with LastChange &amp;gt;&#x3D; datefrom are passed), (default: DateTime.Now - 1 Day)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    gastronomyGetAllGastronomyChanged: function () {
      var _gastronomyGetAllGastronomyChanged = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(pagenumber, pagesize, seed, updatefrom) {
        var options,
            localVarPath,
            localVarUrlObj,
            baseOptions,
            localVarRequestOptions,
            localVarHeaderParameter,
            localVarQueryParameter,
            localVarAccessTokenValue,
            query,
            key,
            _key,
            headersFromBaseOptions,
            _args = arguments;

        return regeneratorRuntime.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                options = _args.length > 4 && _args[4] !== undefined ? _args[4] : {};
                localVarPath = "/api/GastronomyChanged"; // use dummy base URL string because the URL constructor only accepts absolute URLs.

                localVarUrlObj = new URL(localVarPath, 'https://example.com');

                if (configuration) {
                  baseOptions = configuration.baseOptions;
                }

                localVarRequestOptions = _objectSpread2(_objectSpread2({
                  method: 'GET'
                }, baseOptions), options);
                localVarHeaderParameter = {};
                localVarQueryParameter = {}; // authentication oauth2 required
                // oauth required

                if (!(configuration && configuration.accessToken)) {
                  _context.next = 19;
                  break;
                }

                if (!(typeof configuration.accessToken === 'function')) {
                  _context.next = 14;
                  break;
                }

                _context.next = 11;
                return configuration.accessToken("oauth2", [""]);

              case 11:
                _context.t0 = _context.sent;
                _context.next = 17;
                break;

              case 14:
                _context.next = 16;
                return configuration.accessToken;

              case 16:
                _context.t0 = _context.sent;

              case 17:
                localVarAccessTokenValue = _context.t0;
                localVarHeaderParameter["Authorization"] = "Bearer " + localVarAccessTokenValue;

              case 19:
                if (pagenumber !== undefined) {
                  localVarQueryParameter['pagenumber'] = pagenumber;
                }

                if (pagesize !== undefined) {
                  localVarQueryParameter['pagesize'] = pagesize;
                }

                if (seed !== undefined) {
                  localVarQueryParameter['seed'] = seed;
                }

                if (updatefrom !== undefined) {
                  localVarQueryParameter['updatefrom'] = updatefrom;
                }

                query = new URLSearchParams(localVarUrlObj.search);

                for (key in localVarQueryParameter) {
                  query.set(key, localVarQueryParameter[key]);
                }

                for (_key in options.query) {
                  query.set(_key, options.query[_key]);
                }

                localVarUrlObj.search = new URLSearchParams(query).toString();
                headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                localVarRequestOptions.headers = _objectSpread2(_objectSpread2(_objectSpread2({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                return _context.abrupt("return", {
                  url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                  options: localVarRequestOptions
                });

              case 30:
              case "end":
                return _context.stop();
            }
          }
        }, _callee);
      }));

      function gastronomyGetAllGastronomyChanged(_x, _x2, _x3, _x4) {
        return _gastronomyGetAllGastronomyChanged.apply(this, arguments);
      }

      return gastronomyGetAllGastronomyChanged;
    }(),

    /**
     *
     * @summary GET Gastronomy Types List
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    gastronomyGetAllGastronomyTypesList: function () {
      var _gastronomyGetAllGastronomyTypesList = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {
        var options,
            localVarPath,
            localVarUrlObj,
            baseOptions,
            localVarRequestOptions,
            localVarHeaderParameter,
            localVarQueryParameter,
            localVarAccessTokenValue,
            query,
            key,
            _key2,
            headersFromBaseOptions,
            _args2 = arguments;

        return regeneratorRuntime.wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                options = _args2.length > 0 && _args2[0] !== undefined ? _args2[0] : {};
                localVarPath = "/api/GastronomyTypes"; // use dummy base URL string because the URL constructor only accepts absolute URLs.

                localVarUrlObj = new URL(localVarPath, 'https://example.com');

                if (configuration) {
                  baseOptions = configuration.baseOptions;
                }

                localVarRequestOptions = _objectSpread2(_objectSpread2({
                  method: 'GET'
                }, baseOptions), options);
                localVarHeaderParameter = {};
                localVarQueryParameter = {}; // authentication oauth2 required
                // oauth required

                if (!(configuration && configuration.accessToken)) {
                  _context2.next = 19;
                  break;
                }

                if (!(typeof configuration.accessToken === 'function')) {
                  _context2.next = 14;
                  break;
                }

                _context2.next = 11;
                return configuration.accessToken("oauth2", [""]);

              case 11:
                _context2.t0 = _context2.sent;
                _context2.next = 17;
                break;

              case 14:
                _context2.next = 16;
                return configuration.accessToken;

              case 16:
                _context2.t0 = _context2.sent;

              case 17:
                localVarAccessTokenValue = _context2.t0;
                localVarHeaderParameter["Authorization"] = "Bearer " + localVarAccessTokenValue;

              case 19:
                query = new URLSearchParams(localVarUrlObj.search);

                for (key in localVarQueryParameter) {
                  query.set(key, localVarQueryParameter[key]);
                }

                for (_key2 in options.query) {
                  query.set(_key2, options.query[_key2]);
                }

                localVarUrlObj.search = new URLSearchParams(query).toString();
                headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                localVarRequestOptions.headers = _objectSpread2(_objectSpread2(_objectSpread2({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                return _context2.abrupt("return", {
                  url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                  options: localVarRequestOptions
                });

              case 26:
              case "end":
                return _context2.stop();
            }
          }
        }, _callee2);
      }));

      function gastronomyGetAllGastronomyTypesList() {
        return _gastronomyGetAllGastronomyTypesList.apply(this, arguments);
      }

      return gastronomyGetAllGastronomyTypesList;
    }(),

    /**
     *
     * @summary GET Gastronomy Types Single
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    gastronomyGetApiGastronomyTypesById: function () {
      var _gastronomyGetApiGastronomyTypesById = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(id) {
        var options,
            localVarPath,
            localVarUrlObj,
            baseOptions,
            localVarRequestOptions,
            localVarHeaderParameter,
            localVarQueryParameter,
            localVarAccessTokenValue,
            query,
            key,
            _key3,
            headersFromBaseOptions,
            _args3 = arguments;

        return regeneratorRuntime.wrap(function _callee3$(_context3) {
          while (1) {
            switch (_context3.prev = _context3.next) {
              case 0:
                options = _args3.length > 1 && _args3[1] !== undefined ? _args3[1] : {};

                if (!(id === null || id === undefined)) {
                  _context3.next = 3;
                  break;
                }

                throw new base_RequiredError('id', 'Required parameter id was null or undefined when calling gastronomyGetApiGastronomyTypesById.');

              case 3:
                localVarPath = "/api/GastronomyTypes/{id}".replace("{".concat("id", "}"), encodeURIComponent(String(id))); // use dummy base URL string because the URL constructor only accepts absolute URLs.

                localVarUrlObj = new URL(localVarPath, 'https://example.com');

                if (configuration) {
                  baseOptions = configuration.baseOptions;
                }

                localVarRequestOptions = _objectSpread2(_objectSpread2({
                  method: 'GET'
                }, baseOptions), options);
                localVarHeaderParameter = {};
                localVarQueryParameter = {}; // authentication oauth2 required
                // oauth required

                if (!(configuration && configuration.accessToken)) {
                  _context3.next = 21;
                  break;
                }

                if (!(typeof configuration.accessToken === 'function')) {
                  _context3.next = 16;
                  break;
                }

                _context3.next = 13;
                return configuration.accessToken("oauth2", [""]);

              case 13:
                _context3.t0 = _context3.sent;
                _context3.next = 19;
                break;

              case 16:
                _context3.next = 18;
                return configuration.accessToken;

              case 18:
                _context3.t0 = _context3.sent;

              case 19:
                localVarAccessTokenValue = _context3.t0;
                localVarHeaderParameter["Authorization"] = "Bearer " + localVarAccessTokenValue;

              case 21:
                query = new URLSearchParams(localVarUrlObj.search);

                for (key in localVarQueryParameter) {
                  query.set(key, localVarQueryParameter[key]);
                }

                for (_key3 in options.query) {
                  query.set(_key3, options.query[_key3]);
                }

                localVarUrlObj.search = new URLSearchParams(query).toString();
                headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                localVarRequestOptions.headers = _objectSpread2(_objectSpread2(_objectSpread2({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                return _context3.abrupt("return", {
                  url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                  options: localVarRequestOptions
                });

              case 28:
              case "end":
                return _context3.stop();
            }
          }
        }, _callee3);
      }));

      function gastronomyGetApiGastronomyTypesById(_x5) {
        return _gastronomyGetApiGastronomyTypesById.apply(this, arguments);
      }

      return gastronomyGetApiGastronomyTypesById;
    }(),

    /**
     *
     * @summary GET Gastronomy List
     * @param {number} [pagenumber] Pagenumber, (default:1)
     * @param {number} [pagesize] Elements per Page, (default:10)
     * @param {string} [idlist] IDFilter (Separator &#x27;,&#x27; List of Activity IDs), (default:&#x27;null&#x27;)
     * @param {string} [locfilter] Locfilter (Separator &#x27;,&#x27; possible values: reg + REGIONID &#x3D; (Filter by Region), reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMVEREINID &#x3D; (Filter by Tourismverein), mun + MUNICIPALITYID &#x3D; (Filter by Municipality), fra + FRACTIONID &#x3D; (Filter by Fraction)), (default:&#x27;null&#x27;)
     * @param {string} [dishcodefilter] Dish Code Filter (BITMASK values: 1 &#x3D; (Speisen), 2 &#x3D; (Vorspeise), 4 &#x3D; (Hauptspeise), 8 &#x3D; (Nachspeise), 16 &#x3D; (Tagesgericht), 32 &#x3D; (Menü), 64 &#x3D; (Degustationsmenü), 128 &#x3D; (Kindermenüs), 256 &#x3D; (Mittagsmenüs)
     * @param {string} [ceremonycodefilter] Ceremony Code Filter (BITMASK  values: 1 &#x3D; (Familienfeiern), 2 &#x3D; (Hochzeiten), 4 &#x3D; (Geburtstagsfeiern), 8 &#x3D; (Firmenessen), 16 &#x3D; (Weihnachtsessen), 32 &#x3D; (Sylvestermenü), 64 &#x3D; (Seminare / Tagungen), 128 &#x3D; (Versammlungen)
     * @param {string} [categorycodefilter] Category Code Filter (BITMASK  values: 1 &#x3D; (Restaurant), 2 &#x3D; (Bar / Café / Bistro), 4 &#x3D; (Pub / Disco), 8 &#x3D; (Apres Ski), 16 &#x3D; (Jausenstation), 32 &#x3D; (Pizzeria), 64 &#x3D; (Bäuerlicher Schankbetrieb), 128 &#x3D; (Buschenschank), 256 &#x3D; (Hofschank), 512 &#x3D; (Törggele Lokale), 1024 &#x3D; (Schnellimbiss), 2048 &#x3D; (Mensa), 4096 &#x3D; (Vinothek /Weinhaus / Taverne), 8192 &#x3D; (Eisdiele), 16348 &#x3D; (Gasthaus), 32768 &#x3D; (Gasthof), 65536 &#x3D; (Braugarten), 131072 &#x3D; (Schutzhütte), 262144 &#x3D; (Alm), 524288 &#x3D; (Skihütte)
     * @param {string} [facilitycodefilter] Facility Code Filter (BITMASK  values: 1 &#x3D; (American Express), 2 &#x3D; (Diners Club), 4 &#x3D; (Eurocard / Mastercard), 8 &#x3D; (Visa), 16 &#x3D; (Hunde erlaubt), 32 &#x3D; (Geeignet für Busse), 64 &#x3D; (Garten), 128 &#x3D; (Garagen), 256 &#x3D; (Bierbar), 512 &#x3D; (Kinderspielplatz), 1024 &#x3D; (Spielzimmer), 2048 &#x3D; (Spielplatz), 4096 &#x3D; (Parkplätze), 8192 &#x3D; (Raucherräume), 16348 &#x3D; (Terrasse), 32768 &#x3D; (Behindertengerecht), 65536 &#x3D; (Biergarten), 131072 &#x3D; (Aussichtsterrasse), 262144 &#x3D; (Wintergarten), 524288 &#x3D; (Gault Millau Südtirol), 1048576 &#x3D; (Guida Espresso), 2097152 &#x3D; (Gambero Rosso), 4194304 &#x3D; (Feinschmecker), 8388608 &#x3D; (Aral Schlemmer Atlas), 16777216 &#x3D; (Varta Führer), 33554432 &#x3D; (Bertelsmann), 67108864 &#x3D; (Preis für Südtiroler Weinkultur), 134217728 &#x3D; (Michelin), 268435456 &#x3D; (Roter Hahn), 536870912 &#x3D; (Tafelspitz))
     * @param {string} [cuisinecodefilter] Cuisine Code Filter (BITMASK  values: 1 &#x3D; (Vegetarische Küche), 2 &#x3D; (Glutenfreie Küche), 4 &#x3D; (Laktosefreie Kost), 8 &#x3D; (Warme Küche), 16 &#x3D; (Südtiroler Spezialitäten), 32 &#x3D; (Gourmet Küche), 64 &#x3D; (Italienische Küche), 128 &#x3D; (Internationale Küche), 256 &#x3D; (Pizza), 512 &#x3D; (Fischspezialitäten), 1024 &#x3D; (Asiatische Küche), 2048 &#x3D; (Wildspezialitäten), 4096 &#x3D; (Produkte eigener Erzeugung), 8192 &#x3D; (Diätküche), 16348 &#x3D; (Grillspezialitäten), 32768 &#x3D; (Ladinische Küche), 65536 &#x3D; (Kleine Karte), 131072 &#x3D; (Fischwochen), 262144 &#x3D; (Spargelwochen), 524288 &#x3D; (Lammwochen), 1048576 &#x3D; (Wildwochen), 2097152 &#x3D; (Vorspeisewochen), 4194304 &#x3D; (Nudelwochen), 8388608 &#x3D; (Kräuterwochen), 16777216 &#x3D; (Kindermenüs), 33554432 &#x3D; (Mittagsmenüs))
     * @param {string} [odhtagfilter] ODH Taglist Filter (refers to Array SmgTags) (String, Separator &#x27;,&#x27; more Tags possible, available Tags reference to &#x27;api/ODHTag?validforentity&#x3D;gastronomy&#x27;), (default:&#x27;null&#x27;)
     * @param {boolean} [active] Active Gastronomies Filter (possible Values: &#x27;true&#x27; only Active Gastronomies, &#x27;false&#x27; only Disabled Gastronomies
     * @param {boolean} [odhactive] ODH Active (Published) Gastronomies Filter (Refers to field SmgActive) Gastronomies Filter (possible Values: &#x27;true&#x27; only published Gastronomies, &#x27;false&#x27; only not published Gastronomies, (default:&#x27;null&#x27;)
     * @param {string} [seed] Seed &#x27;1 - 10&#x27; for Random Sorting, &#x27;0&#x27; generates a Random Seed, &#x27;null&#x27; disables Random Sorting, (default:null)
     * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)
     * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)
     * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)
     * @param {string} [updatefrom] Date from Format (yyyy-MM-dd) (all GBActivityPoi with LastChange &amp;gt;&#x3D; datefrom are passed), (default: null)
     * @param {string} [searchfilter] String to search for, Title in all languages are searched, (default: null)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    gastronomyGetGastronomyList: function () {
      var _gastronomyGetGastronomyList = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(pagenumber, pagesize, idlist, locfilter, dishcodefilter, ceremonycodefilter, categorycodefilter, facilitycodefilter, cuisinecodefilter, odhtagfilter, active, odhactive, seed, latitude, longitude, radius, fields, language, updatefrom, searchfilter) {
        var options,
            localVarPath,
            localVarUrlObj,
            baseOptions,
            localVarRequestOptions,
            localVarHeaderParameter,
            localVarQueryParameter,
            localVarAccessTokenValue,
            query,
            key,
            _key4,
            headersFromBaseOptions,
            _args4 = arguments;

        return regeneratorRuntime.wrap(function _callee4$(_context4) {
          while (1) {
            switch (_context4.prev = _context4.next) {
              case 0:
                options = _args4.length > 20 && _args4[20] !== undefined ? _args4[20] : {};
                localVarPath = "/api/Gastronomy"; // use dummy base URL string because the URL constructor only accepts absolute URLs.

                localVarUrlObj = new URL(localVarPath, 'https://example.com');

                if (configuration) {
                  baseOptions = configuration.baseOptions;
                }

                localVarRequestOptions = _objectSpread2(_objectSpread2({
                  method: 'GET'
                }, baseOptions), options);
                localVarHeaderParameter = {};
                localVarQueryParameter = {}; // authentication oauth2 required
                // oauth required

                if (!(configuration && configuration.accessToken)) {
                  _context4.next = 19;
                  break;
                }

                if (!(typeof configuration.accessToken === 'function')) {
                  _context4.next = 14;
                  break;
                }

                _context4.next = 11;
                return configuration.accessToken("oauth2", [""]);

              case 11:
                _context4.t0 = _context4.sent;
                _context4.next = 17;
                break;

              case 14:
                _context4.next = 16;
                return configuration.accessToken;

              case 16:
                _context4.t0 = _context4.sent;

              case 17:
                localVarAccessTokenValue = _context4.t0;
                localVarHeaderParameter["Authorization"] = "Bearer " + localVarAccessTokenValue;

              case 19:
                if (pagenumber !== undefined) {
                  localVarQueryParameter['pagenumber'] = pagenumber;
                }

                if (pagesize !== undefined) {
                  localVarQueryParameter['pagesize'] = pagesize;
                }

                if (idlist !== undefined) {
                  localVarQueryParameter['idlist'] = idlist;
                }

                if (locfilter !== undefined) {
                  localVarQueryParameter['locfilter'] = locfilter;
                }

                if (dishcodefilter !== undefined) {
                  localVarQueryParameter['dishcodefilter'] = dishcodefilter;
                }

                if (ceremonycodefilter !== undefined) {
                  localVarQueryParameter['ceremonycodefilter'] = ceremonycodefilter;
                }

                if (categorycodefilter !== undefined) {
                  localVarQueryParameter['categorycodefilter'] = categorycodefilter;
                }

                if (facilitycodefilter !== undefined) {
                  localVarQueryParameter['facilitycodefilter'] = facilitycodefilter;
                }

                if (cuisinecodefilter !== undefined) {
                  localVarQueryParameter['cuisinecodefilter'] = cuisinecodefilter;
                }

                if (odhtagfilter !== undefined) {
                  localVarQueryParameter['odhtagfilter'] = odhtagfilter;
                }

                if (active !== undefined) {
                  localVarQueryParameter['active'] = active;
                }

                if (odhactive !== undefined) {
                  localVarQueryParameter['odhactive'] = odhactive;
                }

                if (seed !== undefined) {
                  localVarQueryParameter['seed'] = seed;
                }

                if (latitude !== undefined) {
                  localVarQueryParameter['latitude'] = latitude;
                }

                if (longitude !== undefined) {
                  localVarQueryParameter['longitude'] = longitude;
                }

                if (radius !== undefined) {
                  localVarQueryParameter['radius'] = radius;
                }

                if (fields !== undefined) {
                  localVarQueryParameter['fields'] = fields;
                }

                if (language !== undefined) {
                  localVarQueryParameter['language'] = language;
                }

                if (updatefrom !== undefined) {
                  localVarQueryParameter['updatefrom'] = updatefrom;
                }

                if (searchfilter !== undefined) {
                  localVarQueryParameter['searchfilter'] = searchfilter;
                }

                query = new URLSearchParams(localVarUrlObj.search);

                for (key in localVarQueryParameter) {
                  query.set(key, localVarQueryParameter[key]);
                }

                for (_key4 in options.query) {
                  query.set(_key4, options.query[_key4]);
                }

                localVarUrlObj.search = new URLSearchParams(query).toString();
                headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                localVarRequestOptions.headers = _objectSpread2(_objectSpread2(_objectSpread2({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                return _context4.abrupt("return", {
                  url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                  options: localVarRequestOptions
                });

              case 46:
              case "end":
                return _context4.stop();
            }
          }
        }, _callee4);
      }));

      function gastronomyGetGastronomyList(_x6, _x7, _x8, _x9, _x10, _x11, _x12, _x13, _x14, _x15, _x16, _x17, _x18, _x19, _x20, _x21, _x22, _x23, _x24, _x25) {
        return _gastronomyGetGastronomyList.apply(this, arguments);
      }

      return gastronomyGetGastronomyList;
    }(),

    /**
     *
     * @summary GET Gastronomy Localized List
     * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)
     * @param {number} [pagenumber] Pagenumber, (default:1)
     * @param {number} [pagesize] Elements per Page, (default:10)
     * @param {string} [idlist] IDFilter (Separator &#x27;,&#x27; List of Activity IDs), (default:&#x27;null&#x27;)
     * @param {string} [locfilter] Locfilter (Separator &#x27;,&#x27; possible values: reg + REGIONID &#x3D; (Filter by Region), reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMVEREINID &#x3D; (Filter by Tourismverein), mun + MUNICIPALITYID &#x3D; (Filter by Municipality), fra + FRACTIONID &#x3D; (Filter by Fraction)), (default:&#x27;null&#x27;)
     * @param {string} [dishcodefilter] Dish Code Filter (BITMASK values: 1 &#x3D; (Speisen), 2 &#x3D; (Vorspeise), 4 &#x3D; (Hauptspeise), 8 &#x3D; (Nachspeise), 16 &#x3D; (Tagesgericht), 32 &#x3D; (Menü), 64 &#x3D; (Degustationsmenü), 128 &#x3D; (Kindermenüs), 256 &#x3D; (Mittagsmenüs)
     * @param {string} [ceremonycodefilter] Ceremony Code Filter (BITMASK  values: 1 &#x3D; (Familienfeiern), 2 &#x3D; (Hochzeiten), 4 &#x3D; (Geburtstagsfeiern), 8 &#x3D; (Firmenessen), 16 &#x3D; (Weihnachtsessen), 32 &#x3D; (Sylvestermenü), 64 &#x3D; (Seminare / Tagungen), 128 &#x3D; (Versammlungen)
     * @param {string} [categorycodefilter] Category Code Filter (BITMASK  values: 1 &#x3D; (Restaurant), 2 &#x3D; (Bar / Café / Bistro), 4 &#x3D; (Pub / Disco), 8 &#x3D; (Apres Ski), 16 &#x3D; (Jausenstation), 32 &#x3D; (Pizzeria), 64 &#x3D; (Bäuerlicher Schankbetrieb), 128 &#x3D; (Buschenschank), 256 &#x3D; (Hofschank), 512 &#x3D; (Törggele Lokale), 1024 &#x3D; (Schnellimbiss), 2048 &#x3D; (Mensa), 4096 &#x3D; (Vinothek /Weinhaus / Taverne), 8192 &#x3D; (Eisdiele), 16348 &#x3D; (Gasthaus), 32768 &#x3D; (Gasthof), 65536 &#x3D; (Braugarten), 131072 &#x3D; (Schutzhütte), 262144 &#x3D; (Alm), 524288 &#x3D; (Skihütte)
     * @param {string} [facilitycodefilter] Facility Code Filter (BITMASK  values: 1 &#x3D; (American Express), 2 &#x3D; (Diners Club), 4 &#x3D; (Eurocard / Mastercard), 8 &#x3D; (Visa), 16 &#x3D; (Hunde erlaubt), 32 &#x3D; (Geeignet für Busse), 64 &#x3D; (Garten), 128 &#x3D; (Garagen), 256 &#x3D; (Bierbar), 512 &#x3D; (Kinderspielplatz), 1024 &#x3D; (Spielzimmer), 2048 &#x3D; (Spielplatz), 4096 &#x3D; (Parkplätze), 8192 &#x3D; (Raucherräume), 16348 &#x3D; (Terrasse), 32768 &#x3D; (Behindertengerecht), 65536 &#x3D; (Biergarten), 131072 &#x3D; (Aussichtsterrasse), 262144 &#x3D; (Wintergarten), 524288 &#x3D; (Gault Millau Südtirol), 1048576 &#x3D; (Guida Espresso), 2097152 &#x3D; (Gambero Rosso), 4194304 &#x3D; (Feinschmecker), 8388608 &#x3D; (Aral Schlemmer Atlas), 16777216 &#x3D; (Varta Führer), 33554432 &#x3D; (Bertelsmann), 67108864 &#x3D; (Preis für Südtiroler Weinkultur), 134217728 &#x3D; (Michelin), 268435456 &#x3D; (Roter Hahn), 536870912 &#x3D; (Tafelspitz))
     * @param {string} [cuisinecodefilter] Cuisine Code Filter (BITMASK  values: 1 &#x3D; (Vegetarische Küche), 2 &#x3D; (Glutenfreie Küche), 4 &#x3D; (Laktosefreie Kost), 8 &#x3D; (Warme Küche), 16 &#x3D; (Südtiroler Spezialitäten), 32 &#x3D; (Gourmet Küche), 64 &#x3D; (Italienische Küche), 128 &#x3D; (Internationale Küche), 256 &#x3D; (Pizza), 512 &#x3D; (Fischspezialitäten), 1024 &#x3D; (Asiatische Küche), 2048 &#x3D; (Wildspezialitäten), 4096 &#x3D; (Produkte eigener Erzeugung), 8192 &#x3D; (Diätküche), 16348 &#x3D; (Grillspezialitäten), 32768 &#x3D; (Ladinische Küche), 65536 &#x3D; (Kleine Karte), 131072 &#x3D; (Fischwochen), 262144 &#x3D; (Spargelwochen), 524288 &#x3D; (Lammwochen), 1048576 &#x3D; (Wildwochen), 2097152 &#x3D; (Vorspeisewochen), 4194304 &#x3D; (Nudelwochen), 8388608 &#x3D; (Kräuterwochen), 16777216 &#x3D; (Kindermenüs), 33554432 &#x3D; (Mittagsmenüs))
     * @param {string} [odhtagfilter] ODH Taglist Filter (refers to Array SmgTags) (String, Separator &#x27;,&#x27; more Tags possible, available Tags reference to &#x27;api/ODHTag?validforentity&#x3D;gastronomy&#x27;), (default:&#x27;null&#x27;)
     * @param {boolean} [active] Active Gastronomies Filter (possible Values: &#x27;true&#x27; only Active Gastronomies, &#x27;false&#x27; only Disabled Gastronomies
     * @param {boolean} [odhactive] ODH Active (Published) Gastronomies Filter (Refers to field SmgActive) Gastronomies Filter (possible Values: &#x27;true&#x27; only published Gastronomies, &#x27;false&#x27; only not published Gastronomies, (default:&#x27;null&#x27;)
     * @param {string} [seed] Seed &#x27;1 - 10&#x27; for Random Sorting, &#x27;0&#x27; generates a Random Seed, &#x27;null&#x27; disables Random Sorting, (default:null)
     * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    gastronomyGetGastronomyListLocalized: function () {
      var _gastronomyGetGastronomyListLocalized = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(language, pagenumber, pagesize, idlist, locfilter, dishcodefilter, ceremonycodefilter, categorycodefilter, facilitycodefilter, cuisinecodefilter, odhtagfilter, active, odhactive, seed, latitude, longitude, radius) {
        var options,
            localVarPath,
            localVarUrlObj,
            baseOptions,
            localVarRequestOptions,
            localVarHeaderParameter,
            localVarQueryParameter,
            localVarAccessTokenValue,
            query,
            key,
            _key5,
            headersFromBaseOptions,
            _args5 = arguments;

        return regeneratorRuntime.wrap(function _callee5$(_context5) {
          while (1) {
            switch (_context5.prev = _context5.next) {
              case 0:
                options = _args5.length > 17 && _args5[17] !== undefined ? _args5[17] : {};
                localVarPath = "/api/GastronomyLocalized"; // use dummy base URL string because the URL constructor only accepts absolute URLs.

                localVarUrlObj = new URL(localVarPath, 'https://example.com');

                if (configuration) {
                  baseOptions = configuration.baseOptions;
                }

                localVarRequestOptions = _objectSpread2(_objectSpread2({
                  method: 'GET'
                }, baseOptions), options);
                localVarHeaderParameter = {};
                localVarQueryParameter = {}; // authentication oauth2 required
                // oauth required

                if (!(configuration && configuration.accessToken)) {
                  _context5.next = 19;
                  break;
                }

                if (!(typeof configuration.accessToken === 'function')) {
                  _context5.next = 14;
                  break;
                }

                _context5.next = 11;
                return configuration.accessToken("oauth2", [""]);

              case 11:
                _context5.t0 = _context5.sent;
                _context5.next = 17;
                break;

              case 14:
                _context5.next = 16;
                return configuration.accessToken;

              case 16:
                _context5.t0 = _context5.sent;

              case 17:
                localVarAccessTokenValue = _context5.t0;
                localVarHeaderParameter["Authorization"] = "Bearer " + localVarAccessTokenValue;

              case 19:
                if (language !== undefined) {
                  localVarQueryParameter['language'] = language;
                }

                if (pagenumber !== undefined) {
                  localVarQueryParameter['pagenumber'] = pagenumber;
                }

                if (pagesize !== undefined) {
                  localVarQueryParameter['pagesize'] = pagesize;
                }

                if (idlist !== undefined) {
                  localVarQueryParameter['idlist'] = idlist;
                }

                if (locfilter !== undefined) {
                  localVarQueryParameter['locfilter'] = locfilter;
                }

                if (dishcodefilter !== undefined) {
                  localVarQueryParameter['dishcodefilter'] = dishcodefilter;
                }

                if (ceremonycodefilter !== undefined) {
                  localVarQueryParameter['ceremonycodefilter'] = ceremonycodefilter;
                }

                if (categorycodefilter !== undefined) {
                  localVarQueryParameter['categorycodefilter'] = categorycodefilter;
                }

                if (facilitycodefilter !== undefined) {
                  localVarQueryParameter['facilitycodefilter'] = facilitycodefilter;
                }

                if (cuisinecodefilter !== undefined) {
                  localVarQueryParameter['cuisinecodefilter'] = cuisinecodefilter;
                }

                if (odhtagfilter !== undefined) {
                  localVarQueryParameter['odhtagfilter'] = odhtagfilter;
                }

                if (active !== undefined) {
                  localVarQueryParameter['active'] = active;
                }

                if (odhactive !== undefined) {
                  localVarQueryParameter['odhactive'] = odhactive;
                }

                if (seed !== undefined) {
                  localVarQueryParameter['seed'] = seed;
                }

                if (latitude !== undefined) {
                  localVarQueryParameter['latitude'] = latitude;
                }

                if (longitude !== undefined) {
                  localVarQueryParameter['longitude'] = longitude;
                }

                if (radius !== undefined) {
                  localVarQueryParameter['radius'] = radius;
                }

                query = new URLSearchParams(localVarUrlObj.search);

                for (key in localVarQueryParameter) {
                  query.set(key, localVarQueryParameter[key]);
                }

                for (_key5 in options.query) {
                  query.set(_key5, options.query[_key5]);
                }

                localVarUrlObj.search = new URLSearchParams(query).toString();
                headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                localVarRequestOptions.headers = _objectSpread2(_objectSpread2(_objectSpread2({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                return _context5.abrupt("return", {
                  url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                  options: localVarRequestOptions
                });

              case 43:
              case "end":
                return _context5.stop();
            }
          }
        }, _callee5);
      }));

      function gastronomyGetGastronomyListLocalized(_x26, _x27, _x28, _x29, _x30, _x31, _x32, _x33, _x34, _x35, _x36, _x37, _x38, _x39, _x40, _x41, _x42) {
        return _gastronomyGetGastronomyListLocalized.apply(this, arguments);
      }

      return gastronomyGetGastronomyListLocalized;
    }(),

    /**
     *
     * @summary GET Gastronomy Reduced List
     * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)
     * @param {string} [locfilter] Locfilter (Separator &#x27;,&#x27; possible values: reg + REGIONID &#x3D; (Filter by Region), reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMVEREINID &#x3D; (Filter by Tourismverein), mun + MUNICIPALITYID &#x3D; (Filter by Municipality), fra + FRACTIONID &#x3D; (Filter by Fraction)), (default:&#x27;null&#x27;)
     * @param {string} [dishcodefilter] Dish Code Filter (BITMASK values: 1 &#x3D; (Speisen), 2 &#x3D; (Vorspeise), 4 &#x3D; (Hauptspeise), 8 &#x3D; (Nachspeise), 16 &#x3D; (Tagesgericht), 32 &#x3D; (Menü), 64 &#x3D; (Degustationsmenü), 128 &#x3D; (Kindermenüs), 256 &#x3D; (Mittagsmenüs)
     * @param {string} [ceremonycodefilter] Ceremony Code Filter (BITMASK  values: 1 &#x3D; (Familienfeiern), 2 &#x3D; (Hochzeiten), 4 &#x3D; (Geburtstagsfeiern), 8 &#x3D; (Firmenessen), 16 &#x3D; (Weihnachtsessen), 32 &#x3D; (Sylvestermenü), 64 &#x3D; (Seminare / Tagungen), 128 &#x3D; (Versammlungen)
     * @param {string} [categorycodefilter] Category Code Filter (BITMASK  values: 1 &#x3D; (Restaurant), 2 &#x3D; (Bar / Café / Bistro), 4 &#x3D; (Pub / Disco), 8 &#x3D; (Apres Ski), 16 &#x3D; (Jausenstation), 32 &#x3D; (Pizzeria), 64 &#x3D; (Bäuerlicher Schankbetrieb), 128 &#x3D; (Buschenschank), 256 &#x3D; (Hofschank), 512 &#x3D; (Törggele Lokale), 1024 &#x3D; (Schnellimbiss), 2048 &#x3D; (Mensa), 4096 &#x3D; (Vinothek /Weinhaus / Taverne), 8192 &#x3D; (Eisdiele), 16348 &#x3D; (Gasthaus), 32768 &#x3D; (Gasthof), 65536 &#x3D; (Braugarten), 131072 &#x3D; (Schutzhütte), 262144 &#x3D; (Alm), 524288 &#x3D; (Skihütte)
     * @param {string} [facilitycodefilter] Facility Code Filter (BITMASK  values: 1 &#x3D; (American Express), 2 &#x3D; (Diners Club), 4 &#x3D; (Eurocard / Mastercard), 8 &#x3D; (Visa), 16 &#x3D; (Hunde erlaubt), 32 &#x3D; (Geeignet für Busse), 64 &#x3D; (Garten), 128 &#x3D; (Garagen), 256 &#x3D; (Bierbar), 512 &#x3D; (Kinderspielplatz), 1024 &#x3D; (Spielzimmer), 2048 &#x3D; (Spielplatz), 4096 &#x3D; (Parkplätze), 8192 &#x3D; (Raucherräume), 16348 &#x3D; (Terrasse), 32768 &#x3D; (Behindertengerecht), 65536 &#x3D; (Biergarten), 131072 &#x3D; (Aussichtsterrasse), 262144 &#x3D; (Wintergarten), 524288 &#x3D; (Gault Millau Südtirol), 1048576 &#x3D; (Guida Espresso), 2097152 &#x3D; (Gambero Rosso), 4194304 &#x3D; (Feinschmecker), 8388608 &#x3D; (Aral Schlemmer Atlas), 16777216 &#x3D; (Varta Führer), 33554432 &#x3D; (Bertelsmann), 67108864 &#x3D; (Preis für Südtiroler Weinkultur), 134217728 &#x3D; (Michelin), 268435456 &#x3D; (Roter Hahn), 536870912 &#x3D; (Tafelspitz))
     * @param {string} [cuisinecodefilter] Cuisine Code Filter (BITMASK  values: 1 &#x3D; (Vegetarische Küche), 2 &#x3D; (Glutenfreie Küche), 4 &#x3D; (Laktosefreie Kost), 8 &#x3D; (Warme Küche), 16 &#x3D; (Südtiroler Spezialitäten), 32 &#x3D; (Gourmet Küche), 64 &#x3D; (Italienische Küche), 128 &#x3D; (Internationale Küche), 256 &#x3D; (Pizza), 512 &#x3D; (Fischspezialitäten), 1024 &#x3D; (Asiatische Küche), 2048 &#x3D; (Wildspezialitäten), 4096 &#x3D; (Produkte eigener Erzeugung), 8192 &#x3D; (Diätküche), 16348 &#x3D; (Grillspezialitäten), 32768 &#x3D; (Ladinische Küche), 65536 &#x3D; (Kleine Karte), 131072 &#x3D; (Fischwochen), 262144 &#x3D; (Spargelwochen), 524288 &#x3D; (Lammwochen), 1048576 &#x3D; (Wildwochen), 2097152 &#x3D; (Vorspeisewochen), 4194304 &#x3D; (Nudelwochen), 8388608 &#x3D; (Kräuterwochen), 16777216 &#x3D; (Kindermenüs), 33554432 &#x3D; (Mittagsmenüs))
     * @param {string} [odhtagfilter] ODH Taglist Filter (refers to Array SmgTags) (String, Separator &#x27;,&#x27; more Tags possible, available Tags reference to &#x27;api/ODHTag?validforentity&#x3D;gastronomy&#x27;), (default:&#x27;null&#x27;)
     * @param {boolean} [active] Active Gastronomies Filter (possible Values: &#x27;true&#x27; only Active Gastronomies, &#x27;false&#x27; only Disabled Gastronomies
     * @param {boolean} [odhactive] ODH Active (Published) Gastronomies Filter (Refers to field SmgActive) Gastronomies Filter (possible Values: &#x27;true&#x27; only published Gastronomies, &#x27;false&#x27; only not published Gastronomies, (default:&#x27;null&#x27;)
     * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)
     * @param {string} [fields] Select fields to display, by Default Title and Id are selected if fields filter is null More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    gastronomyGetGastronomyListReduced: function () {
      var _gastronomyGetGastronomyListReduced = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6(language, locfilter, dishcodefilter, ceremonycodefilter, categorycodefilter, facilitycodefilter, cuisinecodefilter, odhtagfilter, active, odhactive, latitude, longitude, radius, fields) {
        var options,
            localVarPath,
            localVarUrlObj,
            baseOptions,
            localVarRequestOptions,
            localVarHeaderParameter,
            localVarQueryParameter,
            localVarAccessTokenValue,
            query,
            key,
            _key6,
            headersFromBaseOptions,
            _args6 = arguments;

        return regeneratorRuntime.wrap(function _callee6$(_context6) {
          while (1) {
            switch (_context6.prev = _context6.next) {
              case 0:
                options = _args6.length > 14 && _args6[14] !== undefined ? _args6[14] : {};
                localVarPath = "/api/GastronomyReduced"; // use dummy base URL string because the URL constructor only accepts absolute URLs.

                localVarUrlObj = new URL(localVarPath, 'https://example.com');

                if (configuration) {
                  baseOptions = configuration.baseOptions;
                }

                localVarRequestOptions = _objectSpread2(_objectSpread2({
                  method: 'GET'
                }, baseOptions), options);
                localVarHeaderParameter = {};
                localVarQueryParameter = {}; // authentication oauth2 required
                // oauth required

                if (!(configuration && configuration.accessToken)) {
                  _context6.next = 19;
                  break;
                }

                if (!(typeof configuration.accessToken === 'function')) {
                  _context6.next = 14;
                  break;
                }

                _context6.next = 11;
                return configuration.accessToken("oauth2", [""]);

              case 11:
                _context6.t0 = _context6.sent;
                _context6.next = 17;
                break;

              case 14:
                _context6.next = 16;
                return configuration.accessToken;

              case 16:
                _context6.t0 = _context6.sent;

              case 17:
                localVarAccessTokenValue = _context6.t0;
                localVarHeaderParameter["Authorization"] = "Bearer " + localVarAccessTokenValue;

              case 19:
                if (language !== undefined) {
                  localVarQueryParameter['language'] = language;
                }

                if (locfilter !== undefined) {
                  localVarQueryParameter['locfilter'] = locfilter;
                }

                if (dishcodefilter !== undefined) {
                  localVarQueryParameter['dishcodefilter'] = dishcodefilter;
                }

                if (ceremonycodefilter !== undefined) {
                  localVarQueryParameter['ceremonycodefilter'] = ceremonycodefilter;
                }

                if (categorycodefilter !== undefined) {
                  localVarQueryParameter['categorycodefilter'] = categorycodefilter;
                }

                if (facilitycodefilter !== undefined) {
                  localVarQueryParameter['facilitycodefilter'] = facilitycodefilter;
                }

                if (cuisinecodefilter !== undefined) {
                  localVarQueryParameter['cuisinecodefilter'] = cuisinecodefilter;
                }

                if (odhtagfilter !== undefined) {
                  localVarQueryParameter['odhtagfilter'] = odhtagfilter;
                }

                if (active !== undefined) {
                  localVarQueryParameter['active'] = active;
                }

                if (odhactive !== undefined) {
                  localVarQueryParameter['odhactive'] = odhactive;
                }

                if (latitude !== undefined) {
                  localVarQueryParameter['latitude'] = latitude;
                }

                if (longitude !== undefined) {
                  localVarQueryParameter['longitude'] = longitude;
                }

                if (radius !== undefined) {
                  localVarQueryParameter['radius'] = radius;
                }

                if (fields !== undefined) {
                  localVarQueryParameter['fields'] = fields;
                }

                query = new URLSearchParams(localVarUrlObj.search);

                for (key in localVarQueryParameter) {
                  query.set(key, localVarQueryParameter[key]);
                }

                for (_key6 in options.query) {
                  query.set(_key6, options.query[_key6]);
                }

                localVarUrlObj.search = new URLSearchParams(query).toString();
                headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                localVarRequestOptions.headers = _objectSpread2(_objectSpread2(_objectSpread2({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                return _context6.abrupt("return", {
                  url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                  options: localVarRequestOptions
                });

              case 40:
              case "end":
                return _context6.stop();
            }
          }
        }, _callee6);
      }));

      function gastronomyGetGastronomyListReduced(_x43, _x44, _x45, _x46, _x47, _x48, _x49, _x50, _x51, _x52, _x53, _x54, _x55, _x56) {
        return _gastronomyGetGastronomyListReduced.apply(this, arguments);
      }

      return gastronomyGetGastronomyListReduced;
    }(),

    /**
     *
     * @summary GET Gastronomy Single
     * @param {string} id ID of the Gastronomy
     * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)
     * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    gastronomyGetGastronomySingle: function () {
      var _gastronomyGetGastronomySingle = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee7(id, fields, language) {
        var options,
            localVarPath,
            localVarUrlObj,
            baseOptions,
            localVarRequestOptions,
            localVarHeaderParameter,
            localVarQueryParameter,
            localVarAccessTokenValue,
            query,
            key,
            _key7,
            headersFromBaseOptions,
            _args7 = arguments;

        return regeneratorRuntime.wrap(function _callee7$(_context7) {
          while (1) {
            switch (_context7.prev = _context7.next) {
              case 0:
                options = _args7.length > 3 && _args7[3] !== undefined ? _args7[3] : {};

                if (!(id === null || id === undefined)) {
                  _context7.next = 3;
                  break;
                }

                throw new base_RequiredError('id', 'Required parameter id was null or undefined when calling gastronomyGetGastronomySingle.');

              case 3:
                localVarPath = "/api/Gastronomy/{id}".replace("{".concat("id", "}"), encodeURIComponent(String(id))); // use dummy base URL string because the URL constructor only accepts absolute URLs.

                localVarUrlObj = new URL(localVarPath, 'https://example.com');

                if (configuration) {
                  baseOptions = configuration.baseOptions;
                }

                localVarRequestOptions = _objectSpread2(_objectSpread2({
                  method: 'GET'
                }, baseOptions), options);
                localVarHeaderParameter = {};
                localVarQueryParameter = {}; // authentication oauth2 required
                // oauth required

                if (!(configuration && configuration.accessToken)) {
                  _context7.next = 21;
                  break;
                }

                if (!(typeof configuration.accessToken === 'function')) {
                  _context7.next = 16;
                  break;
                }

                _context7.next = 13;
                return configuration.accessToken("oauth2", [""]);

              case 13:
                _context7.t0 = _context7.sent;
                _context7.next = 19;
                break;

              case 16:
                _context7.next = 18;
                return configuration.accessToken;

              case 18:
                _context7.t0 = _context7.sent;

              case 19:
                localVarAccessTokenValue = _context7.t0;
                localVarHeaderParameter["Authorization"] = "Bearer " + localVarAccessTokenValue;

              case 21:
                if (fields !== undefined) {
                  localVarQueryParameter['fields'] = fields;
                }

                if (language !== undefined) {
                  localVarQueryParameter['language'] = language;
                }

                query = new URLSearchParams(localVarUrlObj.search);

                for (key in localVarQueryParameter) {
                  query.set(key, localVarQueryParameter[key]);
                }

                for (_key7 in options.query) {
                  query.set(_key7, options.query[_key7]);
                }

                localVarUrlObj.search = new URLSearchParams(query).toString();
                headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                localVarRequestOptions.headers = _objectSpread2(_objectSpread2(_objectSpread2({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                return _context7.abrupt("return", {
                  url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                  options: localVarRequestOptions
                });

              case 30:
              case "end":
                return _context7.stop();
            }
          }
        }, _callee7);
      }));

      function gastronomyGetGastronomySingle(_x57, _x58, _x59) {
        return _gastronomyGetGastronomySingle.apply(this, arguments);
      }

      return gastronomyGetGastronomySingle;
    }(),

    /**
     *
     * @summary GET Gastronomy Localized Single
     * @param {string} id ID of the Gastronomy
     * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    gastronomyGetGastronomySingleLocalized: function () {
      var _gastronomyGetGastronomySingleLocalized = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee8(id, language) {
        var options,
            localVarPath,
            localVarUrlObj,
            baseOptions,
            localVarRequestOptions,
            localVarHeaderParameter,
            localVarQueryParameter,
            localVarAccessTokenValue,
            query,
            key,
            _key8,
            headersFromBaseOptions,
            _args8 = arguments;

        return regeneratorRuntime.wrap(function _callee8$(_context8) {
          while (1) {
            switch (_context8.prev = _context8.next) {
              case 0:
                options = _args8.length > 2 && _args8[2] !== undefined ? _args8[2] : {};

                if (!(id === null || id === undefined)) {
                  _context8.next = 3;
                  break;
                }

                throw new base_RequiredError('id', 'Required parameter id was null or undefined when calling gastronomyGetGastronomySingleLocalized.');

              case 3:
                localVarPath = "/api/GastronomyLocalized/{id}".replace("{".concat("id", "}"), encodeURIComponent(String(id))); // use dummy base URL string because the URL constructor only accepts absolute URLs.

                localVarUrlObj = new URL(localVarPath, 'https://example.com');

                if (configuration) {
                  baseOptions = configuration.baseOptions;
                }

                localVarRequestOptions = _objectSpread2(_objectSpread2({
                  method: 'GET'
                }, baseOptions), options);
                localVarHeaderParameter = {};
                localVarQueryParameter = {}; // authentication oauth2 required
                // oauth required

                if (!(configuration && configuration.accessToken)) {
                  _context8.next = 21;
                  break;
                }

                if (!(typeof configuration.accessToken === 'function')) {
                  _context8.next = 16;
                  break;
                }

                _context8.next = 13;
                return configuration.accessToken("oauth2", [""]);

              case 13:
                _context8.t0 = _context8.sent;
                _context8.next = 19;
                break;

              case 16:
                _context8.next = 18;
                return configuration.accessToken;

              case 18:
                _context8.t0 = _context8.sent;

              case 19:
                localVarAccessTokenValue = _context8.t0;
                localVarHeaderParameter["Authorization"] = "Bearer " + localVarAccessTokenValue;

              case 21:
                if (language !== undefined) {
                  localVarQueryParameter['language'] = language;
                }

                query = new URLSearchParams(localVarUrlObj.search);

                for (key in localVarQueryParameter) {
                  query.set(key, localVarQueryParameter[key]);
                }

                for (_key8 in options.query) {
                  query.set(_key8, options.query[_key8]);
                }

                localVarUrlObj.search = new URLSearchParams(query).toString();
                headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                localVarRequestOptions.headers = _objectSpread2(_objectSpread2(_objectSpread2({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                return _context8.abrupt("return", {
                  url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                  options: localVarRequestOptions
                });

              case 29:
              case "end":
                return _context8.stop();
            }
          }
        }, _callee8);
      }));

      function gastronomyGetGastronomySingleLocalized(_x60, _x61) {
        return _gastronomyGetGastronomySingleLocalized.apply(this, arguments);
      }

      return gastronomyGetGastronomySingleLocalized;
    }()
  };
};
/**
 * GastronomyApi - functional programming interface
 * @export
 */

var gastronomy_api_GastronomyApiFp = function GastronomyApiFp(configuration) {
  return {
    /**
     *
     * @summary GET Gastronomy Changed List by Date
     * @param {number} [pagenumber] Pagenumber, (default:1)
     * @param {number} [pagesize] Elements per Page, (default:10)
     * @param {string} [seed] Seed &#x27;1 - 10&#x27; for Random Sorting, &#x27;0&#x27; generates a Random Seed, &#x27;null&#x27; disables Random Sorting, (default:null)
     * @param {string} [updatefrom] Date from Format (yyyy-MM-dd) (all Gastronomy with LastChange &amp;gt;&#x3D; datefrom are passed), (default: DateTime.Now - 1 Day)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    gastronomyGetAllGastronomyChanged: function gastronomyGetAllGastronomyChanged(pagenumber, pagesize, seed, updatefrom, options) {
      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee9() {
        var localVarAxiosArgs;
        return regeneratorRuntime.wrap(function _callee9$(_context9) {
          while (1) {
            switch (_context9.prev = _context9.next) {
              case 0:
                _context9.next = 2;
                return gastronomy_api_GastronomyApiAxiosParamCreator(configuration).gastronomyGetAllGastronomyChanged(pagenumber, pagesize, seed, updatefrom, options);

              case 2:
                localVarAxiosArgs = _context9.sent;
                return _context9.abrupt("return", function () {
                  var axios = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : axios_default.a;
                  var basePath = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : BASE_PATH;

                  var axiosRequestArgs = _objectSpread2(_objectSpread2({}, localVarAxiosArgs.options), {}, {
                    url: basePath + localVarAxiosArgs.url
                  });

                  return axios.request(axiosRequestArgs);
                });

              case 4:
              case "end":
                return _context9.stop();
            }
          }
        }, _callee9);
      }))();
    },

    /**
     *
     * @summary GET Gastronomy Types List
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    gastronomyGetAllGastronomyTypesList: function gastronomyGetAllGastronomyTypesList(options) {
      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee10() {
        var localVarAxiosArgs;
        return regeneratorRuntime.wrap(function _callee10$(_context10) {
          while (1) {
            switch (_context10.prev = _context10.next) {
              case 0:
                _context10.next = 2;
                return gastronomy_api_GastronomyApiAxiosParamCreator(configuration).gastronomyGetAllGastronomyTypesList(options);

              case 2:
                localVarAxiosArgs = _context10.sent;
                return _context10.abrupt("return", function () {
                  var axios = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : axios_default.a;
                  var basePath = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : BASE_PATH;

                  var axiosRequestArgs = _objectSpread2(_objectSpread2({}, localVarAxiosArgs.options), {}, {
                    url: basePath + localVarAxiosArgs.url
                  });

                  return axios.request(axiosRequestArgs);
                });

              case 4:
              case "end":
                return _context10.stop();
            }
          }
        }, _callee10);
      }))();
    },

    /**
     *
     * @summary GET Gastronomy Types Single
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    gastronomyGetApiGastronomyTypesById: function gastronomyGetApiGastronomyTypesById(id, options) {
      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee11() {
        var localVarAxiosArgs;
        return regeneratorRuntime.wrap(function _callee11$(_context11) {
          while (1) {
            switch (_context11.prev = _context11.next) {
              case 0:
                _context11.next = 2;
                return gastronomy_api_GastronomyApiAxiosParamCreator(configuration).gastronomyGetApiGastronomyTypesById(id, options);

              case 2:
                localVarAxiosArgs = _context11.sent;
                return _context11.abrupt("return", function () {
                  var axios = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : axios_default.a;
                  var basePath = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : BASE_PATH;

                  var axiosRequestArgs = _objectSpread2(_objectSpread2({}, localVarAxiosArgs.options), {}, {
                    url: basePath + localVarAxiosArgs.url
                  });

                  return axios.request(axiosRequestArgs);
                });

              case 4:
              case "end":
                return _context11.stop();
            }
          }
        }, _callee11);
      }))();
    },

    /**
     *
     * @summary GET Gastronomy List
     * @param {number} [pagenumber] Pagenumber, (default:1)
     * @param {number} [pagesize] Elements per Page, (default:10)
     * @param {string} [idlist] IDFilter (Separator &#x27;,&#x27; List of Activity IDs), (default:&#x27;null&#x27;)
     * @param {string} [locfilter] Locfilter (Separator &#x27;,&#x27; possible values: reg + REGIONID &#x3D; (Filter by Region), reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMVEREINID &#x3D; (Filter by Tourismverein), mun + MUNICIPALITYID &#x3D; (Filter by Municipality), fra + FRACTIONID &#x3D; (Filter by Fraction)), (default:&#x27;null&#x27;)
     * @param {string} [dishcodefilter] Dish Code Filter (BITMASK values: 1 &#x3D; (Speisen), 2 &#x3D; (Vorspeise), 4 &#x3D; (Hauptspeise), 8 &#x3D; (Nachspeise), 16 &#x3D; (Tagesgericht), 32 &#x3D; (Menü), 64 &#x3D; (Degustationsmenü), 128 &#x3D; (Kindermenüs), 256 &#x3D; (Mittagsmenüs)
     * @param {string} [ceremonycodefilter] Ceremony Code Filter (BITMASK  values: 1 &#x3D; (Familienfeiern), 2 &#x3D; (Hochzeiten), 4 &#x3D; (Geburtstagsfeiern), 8 &#x3D; (Firmenessen), 16 &#x3D; (Weihnachtsessen), 32 &#x3D; (Sylvestermenü), 64 &#x3D; (Seminare / Tagungen), 128 &#x3D; (Versammlungen)
     * @param {string} [categorycodefilter] Category Code Filter (BITMASK  values: 1 &#x3D; (Restaurant), 2 &#x3D; (Bar / Café / Bistro), 4 &#x3D; (Pub / Disco), 8 &#x3D; (Apres Ski), 16 &#x3D; (Jausenstation), 32 &#x3D; (Pizzeria), 64 &#x3D; (Bäuerlicher Schankbetrieb), 128 &#x3D; (Buschenschank), 256 &#x3D; (Hofschank), 512 &#x3D; (Törggele Lokale), 1024 &#x3D; (Schnellimbiss), 2048 &#x3D; (Mensa), 4096 &#x3D; (Vinothek /Weinhaus / Taverne), 8192 &#x3D; (Eisdiele), 16348 &#x3D; (Gasthaus), 32768 &#x3D; (Gasthof), 65536 &#x3D; (Braugarten), 131072 &#x3D; (Schutzhütte), 262144 &#x3D; (Alm), 524288 &#x3D; (Skihütte)
     * @param {string} [facilitycodefilter] Facility Code Filter (BITMASK  values: 1 &#x3D; (American Express), 2 &#x3D; (Diners Club), 4 &#x3D; (Eurocard / Mastercard), 8 &#x3D; (Visa), 16 &#x3D; (Hunde erlaubt), 32 &#x3D; (Geeignet für Busse), 64 &#x3D; (Garten), 128 &#x3D; (Garagen), 256 &#x3D; (Bierbar), 512 &#x3D; (Kinderspielplatz), 1024 &#x3D; (Spielzimmer), 2048 &#x3D; (Spielplatz), 4096 &#x3D; (Parkplätze), 8192 &#x3D; (Raucherräume), 16348 &#x3D; (Terrasse), 32768 &#x3D; (Behindertengerecht), 65536 &#x3D; (Biergarten), 131072 &#x3D; (Aussichtsterrasse), 262144 &#x3D; (Wintergarten), 524288 &#x3D; (Gault Millau Südtirol), 1048576 &#x3D; (Guida Espresso), 2097152 &#x3D; (Gambero Rosso), 4194304 &#x3D; (Feinschmecker), 8388608 &#x3D; (Aral Schlemmer Atlas), 16777216 &#x3D; (Varta Führer), 33554432 &#x3D; (Bertelsmann), 67108864 &#x3D; (Preis für Südtiroler Weinkultur), 134217728 &#x3D; (Michelin), 268435456 &#x3D; (Roter Hahn), 536870912 &#x3D; (Tafelspitz))
     * @param {string} [cuisinecodefilter] Cuisine Code Filter (BITMASK  values: 1 &#x3D; (Vegetarische Küche), 2 &#x3D; (Glutenfreie Küche), 4 &#x3D; (Laktosefreie Kost), 8 &#x3D; (Warme Küche), 16 &#x3D; (Südtiroler Spezialitäten), 32 &#x3D; (Gourmet Küche), 64 &#x3D; (Italienische Küche), 128 &#x3D; (Internationale Küche), 256 &#x3D; (Pizza), 512 &#x3D; (Fischspezialitäten), 1024 &#x3D; (Asiatische Küche), 2048 &#x3D; (Wildspezialitäten), 4096 &#x3D; (Produkte eigener Erzeugung), 8192 &#x3D; (Diätküche), 16348 &#x3D; (Grillspezialitäten), 32768 &#x3D; (Ladinische Küche), 65536 &#x3D; (Kleine Karte), 131072 &#x3D; (Fischwochen), 262144 &#x3D; (Spargelwochen), 524288 &#x3D; (Lammwochen), 1048576 &#x3D; (Wildwochen), 2097152 &#x3D; (Vorspeisewochen), 4194304 &#x3D; (Nudelwochen), 8388608 &#x3D; (Kräuterwochen), 16777216 &#x3D; (Kindermenüs), 33554432 &#x3D; (Mittagsmenüs))
     * @param {string} [odhtagfilter] ODH Taglist Filter (refers to Array SmgTags) (String, Separator &#x27;,&#x27; more Tags possible, available Tags reference to &#x27;api/ODHTag?validforentity&#x3D;gastronomy&#x27;), (default:&#x27;null&#x27;)
     * @param {boolean} [active] Active Gastronomies Filter (possible Values: &#x27;true&#x27; only Active Gastronomies, &#x27;false&#x27; only Disabled Gastronomies
     * @param {boolean} [odhactive] ODH Active (Published) Gastronomies Filter (Refers to field SmgActive) Gastronomies Filter (possible Values: &#x27;true&#x27; only published Gastronomies, &#x27;false&#x27; only not published Gastronomies, (default:&#x27;null&#x27;)
     * @param {string} [seed] Seed &#x27;1 - 10&#x27; for Random Sorting, &#x27;0&#x27; generates a Random Seed, &#x27;null&#x27; disables Random Sorting, (default:null)
     * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)
     * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)
     * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)
     * @param {string} [updatefrom] Date from Format (yyyy-MM-dd) (all GBActivityPoi with LastChange &amp;gt;&#x3D; datefrom are passed), (default: null)
     * @param {string} [searchfilter] String to search for, Title in all languages are searched, (default: null)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    gastronomyGetGastronomyList: function gastronomyGetGastronomyList(pagenumber, pagesize, idlist, locfilter, dishcodefilter, ceremonycodefilter, categorycodefilter, facilitycodefilter, cuisinecodefilter, odhtagfilter, active, odhactive, seed, latitude, longitude, radius, fields, language, updatefrom, searchfilter, options) {
      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee12() {
        var localVarAxiosArgs;
        return regeneratorRuntime.wrap(function _callee12$(_context12) {
          while (1) {
            switch (_context12.prev = _context12.next) {
              case 0:
                _context12.next = 2;
                return gastronomy_api_GastronomyApiAxiosParamCreator(configuration).gastronomyGetGastronomyList(pagenumber, pagesize, idlist, locfilter, dishcodefilter, ceremonycodefilter, categorycodefilter, facilitycodefilter, cuisinecodefilter, odhtagfilter, active, odhactive, seed, latitude, longitude, radius, fields, language, updatefrom, searchfilter, options);

              case 2:
                localVarAxiosArgs = _context12.sent;
                return _context12.abrupt("return", function () {
                  var axios = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : axios_default.a;
                  var basePath = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : BASE_PATH;

                  var axiosRequestArgs = _objectSpread2(_objectSpread2({}, localVarAxiosArgs.options), {}, {
                    url: basePath + localVarAxiosArgs.url
                  });

                  return axios.request(axiosRequestArgs);
                });

              case 4:
              case "end":
                return _context12.stop();
            }
          }
        }, _callee12);
      }))();
    },

    /**
     *
     * @summary GET Gastronomy Localized List
     * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)
     * @param {number} [pagenumber] Pagenumber, (default:1)
     * @param {number} [pagesize] Elements per Page, (default:10)
     * @param {string} [idlist] IDFilter (Separator &#x27;,&#x27; List of Activity IDs), (default:&#x27;null&#x27;)
     * @param {string} [locfilter] Locfilter (Separator &#x27;,&#x27; possible values: reg + REGIONID &#x3D; (Filter by Region), reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMVEREINID &#x3D; (Filter by Tourismverein), mun + MUNICIPALITYID &#x3D; (Filter by Municipality), fra + FRACTIONID &#x3D; (Filter by Fraction)), (default:&#x27;null&#x27;)
     * @param {string} [dishcodefilter] Dish Code Filter (BITMASK values: 1 &#x3D; (Speisen), 2 &#x3D; (Vorspeise), 4 &#x3D; (Hauptspeise), 8 &#x3D; (Nachspeise), 16 &#x3D; (Tagesgericht), 32 &#x3D; (Menü), 64 &#x3D; (Degustationsmenü), 128 &#x3D; (Kindermenüs), 256 &#x3D; (Mittagsmenüs)
     * @param {string} [ceremonycodefilter] Ceremony Code Filter (BITMASK  values: 1 &#x3D; (Familienfeiern), 2 &#x3D; (Hochzeiten), 4 &#x3D; (Geburtstagsfeiern), 8 &#x3D; (Firmenessen), 16 &#x3D; (Weihnachtsessen), 32 &#x3D; (Sylvestermenü), 64 &#x3D; (Seminare / Tagungen), 128 &#x3D; (Versammlungen)
     * @param {string} [categorycodefilter] Category Code Filter (BITMASK  values: 1 &#x3D; (Restaurant), 2 &#x3D; (Bar / Café / Bistro), 4 &#x3D; (Pub / Disco), 8 &#x3D; (Apres Ski), 16 &#x3D; (Jausenstation), 32 &#x3D; (Pizzeria), 64 &#x3D; (Bäuerlicher Schankbetrieb), 128 &#x3D; (Buschenschank), 256 &#x3D; (Hofschank), 512 &#x3D; (Törggele Lokale), 1024 &#x3D; (Schnellimbiss), 2048 &#x3D; (Mensa), 4096 &#x3D; (Vinothek /Weinhaus / Taverne), 8192 &#x3D; (Eisdiele), 16348 &#x3D; (Gasthaus), 32768 &#x3D; (Gasthof), 65536 &#x3D; (Braugarten), 131072 &#x3D; (Schutzhütte), 262144 &#x3D; (Alm), 524288 &#x3D; (Skihütte)
     * @param {string} [facilitycodefilter] Facility Code Filter (BITMASK  values: 1 &#x3D; (American Express), 2 &#x3D; (Diners Club), 4 &#x3D; (Eurocard / Mastercard), 8 &#x3D; (Visa), 16 &#x3D; (Hunde erlaubt), 32 &#x3D; (Geeignet für Busse), 64 &#x3D; (Garten), 128 &#x3D; (Garagen), 256 &#x3D; (Bierbar), 512 &#x3D; (Kinderspielplatz), 1024 &#x3D; (Spielzimmer), 2048 &#x3D; (Spielplatz), 4096 &#x3D; (Parkplätze), 8192 &#x3D; (Raucherräume), 16348 &#x3D; (Terrasse), 32768 &#x3D; (Behindertengerecht), 65536 &#x3D; (Biergarten), 131072 &#x3D; (Aussichtsterrasse), 262144 &#x3D; (Wintergarten), 524288 &#x3D; (Gault Millau Südtirol), 1048576 &#x3D; (Guida Espresso), 2097152 &#x3D; (Gambero Rosso), 4194304 &#x3D; (Feinschmecker), 8388608 &#x3D; (Aral Schlemmer Atlas), 16777216 &#x3D; (Varta Führer), 33554432 &#x3D; (Bertelsmann), 67108864 &#x3D; (Preis für Südtiroler Weinkultur), 134217728 &#x3D; (Michelin), 268435456 &#x3D; (Roter Hahn), 536870912 &#x3D; (Tafelspitz))
     * @param {string} [cuisinecodefilter] Cuisine Code Filter (BITMASK  values: 1 &#x3D; (Vegetarische Küche), 2 &#x3D; (Glutenfreie Küche), 4 &#x3D; (Laktosefreie Kost), 8 &#x3D; (Warme Küche), 16 &#x3D; (Südtiroler Spezialitäten), 32 &#x3D; (Gourmet Küche), 64 &#x3D; (Italienische Küche), 128 &#x3D; (Internationale Küche), 256 &#x3D; (Pizza), 512 &#x3D; (Fischspezialitäten), 1024 &#x3D; (Asiatische Küche), 2048 &#x3D; (Wildspezialitäten), 4096 &#x3D; (Produkte eigener Erzeugung), 8192 &#x3D; (Diätküche), 16348 &#x3D; (Grillspezialitäten), 32768 &#x3D; (Ladinische Küche), 65536 &#x3D; (Kleine Karte), 131072 &#x3D; (Fischwochen), 262144 &#x3D; (Spargelwochen), 524288 &#x3D; (Lammwochen), 1048576 &#x3D; (Wildwochen), 2097152 &#x3D; (Vorspeisewochen), 4194304 &#x3D; (Nudelwochen), 8388608 &#x3D; (Kräuterwochen), 16777216 &#x3D; (Kindermenüs), 33554432 &#x3D; (Mittagsmenüs))
     * @param {string} [odhtagfilter] ODH Taglist Filter (refers to Array SmgTags) (String, Separator &#x27;,&#x27; more Tags possible, available Tags reference to &#x27;api/ODHTag?validforentity&#x3D;gastronomy&#x27;), (default:&#x27;null&#x27;)
     * @param {boolean} [active] Active Gastronomies Filter (possible Values: &#x27;true&#x27; only Active Gastronomies, &#x27;false&#x27; only Disabled Gastronomies
     * @param {boolean} [odhactive] ODH Active (Published) Gastronomies Filter (Refers to field SmgActive) Gastronomies Filter (possible Values: &#x27;true&#x27; only published Gastronomies, &#x27;false&#x27; only not published Gastronomies, (default:&#x27;null&#x27;)
     * @param {string} [seed] Seed &#x27;1 - 10&#x27; for Random Sorting, &#x27;0&#x27; generates a Random Seed, &#x27;null&#x27; disables Random Sorting, (default:null)
     * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    gastronomyGetGastronomyListLocalized: function gastronomyGetGastronomyListLocalized(language, pagenumber, pagesize, idlist, locfilter, dishcodefilter, ceremonycodefilter, categorycodefilter, facilitycodefilter, cuisinecodefilter, odhtagfilter, active, odhactive, seed, latitude, longitude, radius, options) {
      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee13() {
        var localVarAxiosArgs;
        return regeneratorRuntime.wrap(function _callee13$(_context13) {
          while (1) {
            switch (_context13.prev = _context13.next) {
              case 0:
                _context13.next = 2;
                return gastronomy_api_GastronomyApiAxiosParamCreator(configuration).gastronomyGetGastronomyListLocalized(language, pagenumber, pagesize, idlist, locfilter, dishcodefilter, ceremonycodefilter, categorycodefilter, facilitycodefilter, cuisinecodefilter, odhtagfilter, active, odhactive, seed, latitude, longitude, radius, options);

              case 2:
                localVarAxiosArgs = _context13.sent;
                return _context13.abrupt("return", function () {
                  var axios = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : axios_default.a;
                  var basePath = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : BASE_PATH;

                  var axiosRequestArgs = _objectSpread2(_objectSpread2({}, localVarAxiosArgs.options), {}, {
                    url: basePath + localVarAxiosArgs.url
                  });

                  return axios.request(axiosRequestArgs);
                });

              case 4:
              case "end":
                return _context13.stop();
            }
          }
        }, _callee13);
      }))();
    },

    /**
     *
     * @summary GET Gastronomy Reduced List
     * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)
     * @param {string} [locfilter] Locfilter (Separator &#x27;,&#x27; possible values: reg + REGIONID &#x3D; (Filter by Region), reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMVEREINID &#x3D; (Filter by Tourismverein), mun + MUNICIPALITYID &#x3D; (Filter by Municipality), fra + FRACTIONID &#x3D; (Filter by Fraction)), (default:&#x27;null&#x27;)
     * @param {string} [dishcodefilter] Dish Code Filter (BITMASK values: 1 &#x3D; (Speisen), 2 &#x3D; (Vorspeise), 4 &#x3D; (Hauptspeise), 8 &#x3D; (Nachspeise), 16 &#x3D; (Tagesgericht), 32 &#x3D; (Menü), 64 &#x3D; (Degustationsmenü), 128 &#x3D; (Kindermenüs), 256 &#x3D; (Mittagsmenüs)
     * @param {string} [ceremonycodefilter] Ceremony Code Filter (BITMASK  values: 1 &#x3D; (Familienfeiern), 2 &#x3D; (Hochzeiten), 4 &#x3D; (Geburtstagsfeiern), 8 &#x3D; (Firmenessen), 16 &#x3D; (Weihnachtsessen), 32 &#x3D; (Sylvestermenü), 64 &#x3D; (Seminare / Tagungen), 128 &#x3D; (Versammlungen)
     * @param {string} [categorycodefilter] Category Code Filter (BITMASK  values: 1 &#x3D; (Restaurant), 2 &#x3D; (Bar / Café / Bistro), 4 &#x3D; (Pub / Disco), 8 &#x3D; (Apres Ski), 16 &#x3D; (Jausenstation), 32 &#x3D; (Pizzeria), 64 &#x3D; (Bäuerlicher Schankbetrieb), 128 &#x3D; (Buschenschank), 256 &#x3D; (Hofschank), 512 &#x3D; (Törggele Lokale), 1024 &#x3D; (Schnellimbiss), 2048 &#x3D; (Mensa), 4096 &#x3D; (Vinothek /Weinhaus / Taverne), 8192 &#x3D; (Eisdiele), 16348 &#x3D; (Gasthaus), 32768 &#x3D; (Gasthof), 65536 &#x3D; (Braugarten), 131072 &#x3D; (Schutzhütte), 262144 &#x3D; (Alm), 524288 &#x3D; (Skihütte)
     * @param {string} [facilitycodefilter] Facility Code Filter (BITMASK  values: 1 &#x3D; (American Express), 2 &#x3D; (Diners Club), 4 &#x3D; (Eurocard / Mastercard), 8 &#x3D; (Visa), 16 &#x3D; (Hunde erlaubt), 32 &#x3D; (Geeignet für Busse), 64 &#x3D; (Garten), 128 &#x3D; (Garagen), 256 &#x3D; (Bierbar), 512 &#x3D; (Kinderspielplatz), 1024 &#x3D; (Spielzimmer), 2048 &#x3D; (Spielplatz), 4096 &#x3D; (Parkplätze), 8192 &#x3D; (Raucherräume), 16348 &#x3D; (Terrasse), 32768 &#x3D; (Behindertengerecht), 65536 &#x3D; (Biergarten), 131072 &#x3D; (Aussichtsterrasse), 262144 &#x3D; (Wintergarten), 524288 &#x3D; (Gault Millau Südtirol), 1048576 &#x3D; (Guida Espresso), 2097152 &#x3D; (Gambero Rosso), 4194304 &#x3D; (Feinschmecker), 8388608 &#x3D; (Aral Schlemmer Atlas), 16777216 &#x3D; (Varta Führer), 33554432 &#x3D; (Bertelsmann), 67108864 &#x3D; (Preis für Südtiroler Weinkultur), 134217728 &#x3D; (Michelin), 268435456 &#x3D; (Roter Hahn), 536870912 &#x3D; (Tafelspitz))
     * @param {string} [cuisinecodefilter] Cuisine Code Filter (BITMASK  values: 1 &#x3D; (Vegetarische Küche), 2 &#x3D; (Glutenfreie Küche), 4 &#x3D; (Laktosefreie Kost), 8 &#x3D; (Warme Küche), 16 &#x3D; (Südtiroler Spezialitäten), 32 &#x3D; (Gourmet Küche), 64 &#x3D; (Italienische Küche), 128 &#x3D; (Internationale Küche), 256 &#x3D; (Pizza), 512 &#x3D; (Fischspezialitäten), 1024 &#x3D; (Asiatische Küche), 2048 &#x3D; (Wildspezialitäten), 4096 &#x3D; (Produkte eigener Erzeugung), 8192 &#x3D; (Diätküche), 16348 &#x3D; (Grillspezialitäten), 32768 &#x3D; (Ladinische Küche), 65536 &#x3D; (Kleine Karte), 131072 &#x3D; (Fischwochen), 262144 &#x3D; (Spargelwochen), 524288 &#x3D; (Lammwochen), 1048576 &#x3D; (Wildwochen), 2097152 &#x3D; (Vorspeisewochen), 4194304 &#x3D; (Nudelwochen), 8388608 &#x3D; (Kräuterwochen), 16777216 &#x3D; (Kindermenüs), 33554432 &#x3D; (Mittagsmenüs))
     * @param {string} [odhtagfilter] ODH Taglist Filter (refers to Array SmgTags) (String, Separator &#x27;,&#x27; more Tags possible, available Tags reference to &#x27;api/ODHTag?validforentity&#x3D;gastronomy&#x27;), (default:&#x27;null&#x27;)
     * @param {boolean} [active] Active Gastronomies Filter (possible Values: &#x27;true&#x27; only Active Gastronomies, &#x27;false&#x27; only Disabled Gastronomies
     * @param {boolean} [odhactive] ODH Active (Published) Gastronomies Filter (Refers to field SmgActive) Gastronomies Filter (possible Values: &#x27;true&#x27; only published Gastronomies, &#x27;false&#x27; only not published Gastronomies, (default:&#x27;null&#x27;)
     * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)
     * @param {string} [fields] Select fields to display, by Default Title and Id are selected if fields filter is null More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    gastronomyGetGastronomyListReduced: function gastronomyGetGastronomyListReduced(language, locfilter, dishcodefilter, ceremonycodefilter, categorycodefilter, facilitycodefilter, cuisinecodefilter, odhtagfilter, active, odhactive, latitude, longitude, radius, fields, options) {
      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee14() {
        var localVarAxiosArgs;
        return regeneratorRuntime.wrap(function _callee14$(_context14) {
          while (1) {
            switch (_context14.prev = _context14.next) {
              case 0:
                _context14.next = 2;
                return gastronomy_api_GastronomyApiAxiosParamCreator(configuration).gastronomyGetGastronomyListReduced(language, locfilter, dishcodefilter, ceremonycodefilter, categorycodefilter, facilitycodefilter, cuisinecodefilter, odhtagfilter, active, odhactive, latitude, longitude, radius, fields, options);

              case 2:
                localVarAxiosArgs = _context14.sent;
                return _context14.abrupt("return", function () {
                  var axios = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : axios_default.a;
                  var basePath = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : BASE_PATH;

                  var axiosRequestArgs = _objectSpread2(_objectSpread2({}, localVarAxiosArgs.options), {}, {
                    url: basePath + localVarAxiosArgs.url
                  });

                  return axios.request(axiosRequestArgs);
                });

              case 4:
              case "end":
                return _context14.stop();
            }
          }
        }, _callee14);
      }))();
    },

    /**
     *
     * @summary GET Gastronomy Single
     * @param {string} id ID of the Gastronomy
     * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)
     * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    gastronomyGetGastronomySingle: function gastronomyGetGastronomySingle(id, fields, language, options) {
      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee15() {
        var localVarAxiosArgs;
        return regeneratorRuntime.wrap(function _callee15$(_context15) {
          while (1) {
            switch (_context15.prev = _context15.next) {
              case 0:
                _context15.next = 2;
                return gastronomy_api_GastronomyApiAxiosParamCreator(configuration).gastronomyGetGastronomySingle(id, fields, language, options);

              case 2:
                localVarAxiosArgs = _context15.sent;
                return _context15.abrupt("return", function () {
                  var axios = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : axios_default.a;
                  var basePath = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : BASE_PATH;

                  var axiosRequestArgs = _objectSpread2(_objectSpread2({}, localVarAxiosArgs.options), {}, {
                    url: basePath + localVarAxiosArgs.url
                  });

                  return axios.request(axiosRequestArgs);
                });

              case 4:
              case "end":
                return _context15.stop();
            }
          }
        }, _callee15);
      }))();
    },

    /**
     *
     * @summary GET Gastronomy Localized Single
     * @param {string} id ID of the Gastronomy
     * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    gastronomyGetGastronomySingleLocalized: function gastronomyGetGastronomySingleLocalized(id, language, options) {
      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee16() {
        var localVarAxiosArgs;
        return regeneratorRuntime.wrap(function _callee16$(_context16) {
          while (1) {
            switch (_context16.prev = _context16.next) {
              case 0:
                _context16.next = 2;
                return gastronomy_api_GastronomyApiAxiosParamCreator(configuration).gastronomyGetGastronomySingleLocalized(id, language, options);

              case 2:
                localVarAxiosArgs = _context16.sent;
                return _context16.abrupt("return", function () {
                  var axios = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : axios_default.a;
                  var basePath = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : BASE_PATH;

                  var axiosRequestArgs = _objectSpread2(_objectSpread2({}, localVarAxiosArgs.options), {}, {
                    url: basePath + localVarAxiosArgs.url
                  });

                  return axios.request(axiosRequestArgs);
                });

              case 4:
              case "end":
                return _context16.stop();
            }
          }
        }, _callee16);
      }))();
    }
  };
};
/**
 * GastronomyApi - factory interface
 * @export
 */

var GastronomyApiFactory = function GastronomyApiFactory(configuration, basePath, axios) {
  return {
    /**
     *
     * @summary GET Gastronomy Changed List by Date
     * @param {number} [pagenumber] Pagenumber, (default:1)
     * @param {number} [pagesize] Elements per Page, (default:10)
     * @param {string} [seed] Seed &#x27;1 - 10&#x27; for Random Sorting, &#x27;0&#x27; generates a Random Seed, &#x27;null&#x27; disables Random Sorting, (default:null)
     * @param {string} [updatefrom] Date from Format (yyyy-MM-dd) (all Gastronomy with LastChange &amp;gt;&#x3D; datefrom are passed), (default: DateTime.Now - 1 Day)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    gastronomyGetAllGastronomyChanged: function gastronomyGetAllGastronomyChanged(pagenumber, pagesize, seed, updatefrom, options) {
      return gastronomy_api_GastronomyApiFp(configuration).gastronomyGetAllGastronomyChanged(pagenumber, pagesize, seed, updatefrom, options).then(function (request) {
        return request(axios, basePath);
      });
    },

    /**
     *
     * @summary GET Gastronomy Types List
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    gastronomyGetAllGastronomyTypesList: function gastronomyGetAllGastronomyTypesList(options) {
      return gastronomy_api_GastronomyApiFp(configuration).gastronomyGetAllGastronomyTypesList(options).then(function (request) {
        return request(axios, basePath);
      });
    },

    /**
     *
     * @summary GET Gastronomy Types Single
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    gastronomyGetApiGastronomyTypesById: function gastronomyGetApiGastronomyTypesById(id, options) {
      return gastronomy_api_GastronomyApiFp(configuration).gastronomyGetApiGastronomyTypesById(id, options).then(function (request) {
        return request(axios, basePath);
      });
    },

    /**
     *
     * @summary GET Gastronomy List
     * @param {number} [pagenumber] Pagenumber, (default:1)
     * @param {number} [pagesize] Elements per Page, (default:10)
     * @param {string} [idlist] IDFilter (Separator &#x27;,&#x27; List of Activity IDs), (default:&#x27;null&#x27;)
     * @param {string} [locfilter] Locfilter (Separator &#x27;,&#x27; possible values: reg + REGIONID &#x3D; (Filter by Region), reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMVEREINID &#x3D; (Filter by Tourismverein), mun + MUNICIPALITYID &#x3D; (Filter by Municipality), fra + FRACTIONID &#x3D; (Filter by Fraction)), (default:&#x27;null&#x27;)
     * @param {string} [dishcodefilter] Dish Code Filter (BITMASK values: 1 &#x3D; (Speisen), 2 &#x3D; (Vorspeise), 4 &#x3D; (Hauptspeise), 8 &#x3D; (Nachspeise), 16 &#x3D; (Tagesgericht), 32 &#x3D; (Menü), 64 &#x3D; (Degustationsmenü), 128 &#x3D; (Kindermenüs), 256 &#x3D; (Mittagsmenüs)
     * @param {string} [ceremonycodefilter] Ceremony Code Filter (BITMASK  values: 1 &#x3D; (Familienfeiern), 2 &#x3D; (Hochzeiten), 4 &#x3D; (Geburtstagsfeiern), 8 &#x3D; (Firmenessen), 16 &#x3D; (Weihnachtsessen), 32 &#x3D; (Sylvestermenü), 64 &#x3D; (Seminare / Tagungen), 128 &#x3D; (Versammlungen)
     * @param {string} [categorycodefilter] Category Code Filter (BITMASK  values: 1 &#x3D; (Restaurant), 2 &#x3D; (Bar / Café / Bistro), 4 &#x3D; (Pub / Disco), 8 &#x3D; (Apres Ski), 16 &#x3D; (Jausenstation), 32 &#x3D; (Pizzeria), 64 &#x3D; (Bäuerlicher Schankbetrieb), 128 &#x3D; (Buschenschank), 256 &#x3D; (Hofschank), 512 &#x3D; (Törggele Lokale), 1024 &#x3D; (Schnellimbiss), 2048 &#x3D; (Mensa), 4096 &#x3D; (Vinothek /Weinhaus / Taverne), 8192 &#x3D; (Eisdiele), 16348 &#x3D; (Gasthaus), 32768 &#x3D; (Gasthof), 65536 &#x3D; (Braugarten), 131072 &#x3D; (Schutzhütte), 262144 &#x3D; (Alm), 524288 &#x3D; (Skihütte)
     * @param {string} [facilitycodefilter] Facility Code Filter (BITMASK  values: 1 &#x3D; (American Express), 2 &#x3D; (Diners Club), 4 &#x3D; (Eurocard / Mastercard), 8 &#x3D; (Visa), 16 &#x3D; (Hunde erlaubt), 32 &#x3D; (Geeignet für Busse), 64 &#x3D; (Garten), 128 &#x3D; (Garagen), 256 &#x3D; (Bierbar), 512 &#x3D; (Kinderspielplatz), 1024 &#x3D; (Spielzimmer), 2048 &#x3D; (Spielplatz), 4096 &#x3D; (Parkplätze), 8192 &#x3D; (Raucherräume), 16348 &#x3D; (Terrasse), 32768 &#x3D; (Behindertengerecht), 65536 &#x3D; (Biergarten), 131072 &#x3D; (Aussichtsterrasse), 262144 &#x3D; (Wintergarten), 524288 &#x3D; (Gault Millau Südtirol), 1048576 &#x3D; (Guida Espresso), 2097152 &#x3D; (Gambero Rosso), 4194304 &#x3D; (Feinschmecker), 8388608 &#x3D; (Aral Schlemmer Atlas), 16777216 &#x3D; (Varta Führer), 33554432 &#x3D; (Bertelsmann), 67108864 &#x3D; (Preis für Südtiroler Weinkultur), 134217728 &#x3D; (Michelin), 268435456 &#x3D; (Roter Hahn), 536870912 &#x3D; (Tafelspitz))
     * @param {string} [cuisinecodefilter] Cuisine Code Filter (BITMASK  values: 1 &#x3D; (Vegetarische Küche), 2 &#x3D; (Glutenfreie Küche), 4 &#x3D; (Laktosefreie Kost), 8 &#x3D; (Warme Küche), 16 &#x3D; (Südtiroler Spezialitäten), 32 &#x3D; (Gourmet Küche), 64 &#x3D; (Italienische Küche), 128 &#x3D; (Internationale Küche), 256 &#x3D; (Pizza), 512 &#x3D; (Fischspezialitäten), 1024 &#x3D; (Asiatische Küche), 2048 &#x3D; (Wildspezialitäten), 4096 &#x3D; (Produkte eigener Erzeugung), 8192 &#x3D; (Diätküche), 16348 &#x3D; (Grillspezialitäten), 32768 &#x3D; (Ladinische Küche), 65536 &#x3D; (Kleine Karte), 131072 &#x3D; (Fischwochen), 262144 &#x3D; (Spargelwochen), 524288 &#x3D; (Lammwochen), 1048576 &#x3D; (Wildwochen), 2097152 &#x3D; (Vorspeisewochen), 4194304 &#x3D; (Nudelwochen), 8388608 &#x3D; (Kräuterwochen), 16777216 &#x3D; (Kindermenüs), 33554432 &#x3D; (Mittagsmenüs))
     * @param {string} [odhtagfilter] ODH Taglist Filter (refers to Array SmgTags) (String, Separator &#x27;,&#x27; more Tags possible, available Tags reference to &#x27;api/ODHTag?validforentity&#x3D;gastronomy&#x27;), (default:&#x27;null&#x27;)
     * @param {boolean} [active] Active Gastronomies Filter (possible Values: &#x27;true&#x27; only Active Gastronomies, &#x27;false&#x27; only Disabled Gastronomies
     * @param {boolean} [odhactive] ODH Active (Published) Gastronomies Filter (Refers to field SmgActive) Gastronomies Filter (possible Values: &#x27;true&#x27; only published Gastronomies, &#x27;false&#x27; only not published Gastronomies, (default:&#x27;null&#x27;)
     * @param {string} [seed] Seed &#x27;1 - 10&#x27; for Random Sorting, &#x27;0&#x27; generates a Random Seed, &#x27;null&#x27; disables Random Sorting, (default:null)
     * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)
     * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)
     * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)
     * @param {string} [updatefrom] Date from Format (yyyy-MM-dd) (all GBActivityPoi with LastChange &amp;gt;&#x3D; datefrom are passed), (default: null)
     * @param {string} [searchfilter] String to search for, Title in all languages are searched, (default: null)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    gastronomyGetGastronomyList: function gastronomyGetGastronomyList(pagenumber, pagesize, idlist, locfilter, dishcodefilter, ceremonycodefilter, categorycodefilter, facilitycodefilter, cuisinecodefilter, odhtagfilter, active, odhactive, seed, latitude, longitude, radius, fields, language, updatefrom, searchfilter, options) {
      return gastronomy_api_GastronomyApiFp(configuration).gastronomyGetGastronomyList(pagenumber, pagesize, idlist, locfilter, dishcodefilter, ceremonycodefilter, categorycodefilter, facilitycodefilter, cuisinecodefilter, odhtagfilter, active, odhactive, seed, latitude, longitude, radius, fields, language, updatefrom, searchfilter, options).then(function (request) {
        return request(axios, basePath);
      });
    },

    /**
     *
     * @summary GET Gastronomy Localized List
     * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)
     * @param {number} [pagenumber] Pagenumber, (default:1)
     * @param {number} [pagesize] Elements per Page, (default:10)
     * @param {string} [idlist] IDFilter (Separator &#x27;,&#x27; List of Activity IDs), (default:&#x27;null&#x27;)
     * @param {string} [locfilter] Locfilter (Separator &#x27;,&#x27; possible values: reg + REGIONID &#x3D; (Filter by Region), reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMVEREINID &#x3D; (Filter by Tourismverein), mun + MUNICIPALITYID &#x3D; (Filter by Municipality), fra + FRACTIONID &#x3D; (Filter by Fraction)), (default:&#x27;null&#x27;)
     * @param {string} [dishcodefilter] Dish Code Filter (BITMASK values: 1 &#x3D; (Speisen), 2 &#x3D; (Vorspeise), 4 &#x3D; (Hauptspeise), 8 &#x3D; (Nachspeise), 16 &#x3D; (Tagesgericht), 32 &#x3D; (Menü), 64 &#x3D; (Degustationsmenü), 128 &#x3D; (Kindermenüs), 256 &#x3D; (Mittagsmenüs)
     * @param {string} [ceremonycodefilter] Ceremony Code Filter (BITMASK  values: 1 &#x3D; (Familienfeiern), 2 &#x3D; (Hochzeiten), 4 &#x3D; (Geburtstagsfeiern), 8 &#x3D; (Firmenessen), 16 &#x3D; (Weihnachtsessen), 32 &#x3D; (Sylvestermenü), 64 &#x3D; (Seminare / Tagungen), 128 &#x3D; (Versammlungen)
     * @param {string} [categorycodefilter] Category Code Filter (BITMASK  values: 1 &#x3D; (Restaurant), 2 &#x3D; (Bar / Café / Bistro), 4 &#x3D; (Pub / Disco), 8 &#x3D; (Apres Ski), 16 &#x3D; (Jausenstation), 32 &#x3D; (Pizzeria), 64 &#x3D; (Bäuerlicher Schankbetrieb), 128 &#x3D; (Buschenschank), 256 &#x3D; (Hofschank), 512 &#x3D; (Törggele Lokale), 1024 &#x3D; (Schnellimbiss), 2048 &#x3D; (Mensa), 4096 &#x3D; (Vinothek /Weinhaus / Taverne), 8192 &#x3D; (Eisdiele), 16348 &#x3D; (Gasthaus), 32768 &#x3D; (Gasthof), 65536 &#x3D; (Braugarten), 131072 &#x3D; (Schutzhütte), 262144 &#x3D; (Alm), 524288 &#x3D; (Skihütte)
     * @param {string} [facilitycodefilter] Facility Code Filter (BITMASK  values: 1 &#x3D; (American Express), 2 &#x3D; (Diners Club), 4 &#x3D; (Eurocard / Mastercard), 8 &#x3D; (Visa), 16 &#x3D; (Hunde erlaubt), 32 &#x3D; (Geeignet für Busse), 64 &#x3D; (Garten), 128 &#x3D; (Garagen), 256 &#x3D; (Bierbar), 512 &#x3D; (Kinderspielplatz), 1024 &#x3D; (Spielzimmer), 2048 &#x3D; (Spielplatz), 4096 &#x3D; (Parkplätze), 8192 &#x3D; (Raucherräume), 16348 &#x3D; (Terrasse), 32768 &#x3D; (Behindertengerecht), 65536 &#x3D; (Biergarten), 131072 &#x3D; (Aussichtsterrasse), 262144 &#x3D; (Wintergarten), 524288 &#x3D; (Gault Millau Südtirol), 1048576 &#x3D; (Guida Espresso), 2097152 &#x3D; (Gambero Rosso), 4194304 &#x3D; (Feinschmecker), 8388608 &#x3D; (Aral Schlemmer Atlas), 16777216 &#x3D; (Varta Führer), 33554432 &#x3D; (Bertelsmann), 67108864 &#x3D; (Preis für Südtiroler Weinkultur), 134217728 &#x3D; (Michelin), 268435456 &#x3D; (Roter Hahn), 536870912 &#x3D; (Tafelspitz))
     * @param {string} [cuisinecodefilter] Cuisine Code Filter (BITMASK  values: 1 &#x3D; (Vegetarische Küche), 2 &#x3D; (Glutenfreie Küche), 4 &#x3D; (Laktosefreie Kost), 8 &#x3D; (Warme Küche), 16 &#x3D; (Südtiroler Spezialitäten), 32 &#x3D; (Gourmet Küche), 64 &#x3D; (Italienische Küche), 128 &#x3D; (Internationale Küche), 256 &#x3D; (Pizza), 512 &#x3D; (Fischspezialitäten), 1024 &#x3D; (Asiatische Küche), 2048 &#x3D; (Wildspezialitäten), 4096 &#x3D; (Produkte eigener Erzeugung), 8192 &#x3D; (Diätküche), 16348 &#x3D; (Grillspezialitäten), 32768 &#x3D; (Ladinische Küche), 65536 &#x3D; (Kleine Karte), 131072 &#x3D; (Fischwochen), 262144 &#x3D; (Spargelwochen), 524288 &#x3D; (Lammwochen), 1048576 &#x3D; (Wildwochen), 2097152 &#x3D; (Vorspeisewochen), 4194304 &#x3D; (Nudelwochen), 8388608 &#x3D; (Kräuterwochen), 16777216 &#x3D; (Kindermenüs), 33554432 &#x3D; (Mittagsmenüs))
     * @param {string} [odhtagfilter] ODH Taglist Filter (refers to Array SmgTags) (String, Separator &#x27;,&#x27; more Tags possible, available Tags reference to &#x27;api/ODHTag?validforentity&#x3D;gastronomy&#x27;), (default:&#x27;null&#x27;)
     * @param {boolean} [active] Active Gastronomies Filter (possible Values: &#x27;true&#x27; only Active Gastronomies, &#x27;false&#x27; only Disabled Gastronomies
     * @param {boolean} [odhactive] ODH Active (Published) Gastronomies Filter (Refers to field SmgActive) Gastronomies Filter (possible Values: &#x27;true&#x27; only published Gastronomies, &#x27;false&#x27; only not published Gastronomies, (default:&#x27;null&#x27;)
     * @param {string} [seed] Seed &#x27;1 - 10&#x27; for Random Sorting, &#x27;0&#x27; generates a Random Seed, &#x27;null&#x27; disables Random Sorting, (default:null)
     * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    gastronomyGetGastronomyListLocalized: function gastronomyGetGastronomyListLocalized(language, pagenumber, pagesize, idlist, locfilter, dishcodefilter, ceremonycodefilter, categorycodefilter, facilitycodefilter, cuisinecodefilter, odhtagfilter, active, odhactive, seed, latitude, longitude, radius, options) {
      return gastronomy_api_GastronomyApiFp(configuration).gastronomyGetGastronomyListLocalized(language, pagenumber, pagesize, idlist, locfilter, dishcodefilter, ceremonycodefilter, categorycodefilter, facilitycodefilter, cuisinecodefilter, odhtagfilter, active, odhactive, seed, latitude, longitude, radius, options).then(function (request) {
        return request(axios, basePath);
      });
    },

    /**
     *
     * @summary GET Gastronomy Reduced List
     * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)
     * @param {string} [locfilter] Locfilter (Separator &#x27;,&#x27; possible values: reg + REGIONID &#x3D; (Filter by Region), reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMVEREINID &#x3D; (Filter by Tourismverein), mun + MUNICIPALITYID &#x3D; (Filter by Municipality), fra + FRACTIONID &#x3D; (Filter by Fraction)), (default:&#x27;null&#x27;)
     * @param {string} [dishcodefilter] Dish Code Filter (BITMASK values: 1 &#x3D; (Speisen), 2 &#x3D; (Vorspeise), 4 &#x3D; (Hauptspeise), 8 &#x3D; (Nachspeise), 16 &#x3D; (Tagesgericht), 32 &#x3D; (Menü), 64 &#x3D; (Degustationsmenü), 128 &#x3D; (Kindermenüs), 256 &#x3D; (Mittagsmenüs)
     * @param {string} [ceremonycodefilter] Ceremony Code Filter (BITMASK  values: 1 &#x3D; (Familienfeiern), 2 &#x3D; (Hochzeiten), 4 &#x3D; (Geburtstagsfeiern), 8 &#x3D; (Firmenessen), 16 &#x3D; (Weihnachtsessen), 32 &#x3D; (Sylvestermenü), 64 &#x3D; (Seminare / Tagungen), 128 &#x3D; (Versammlungen)
     * @param {string} [categorycodefilter] Category Code Filter (BITMASK  values: 1 &#x3D; (Restaurant), 2 &#x3D; (Bar / Café / Bistro), 4 &#x3D; (Pub / Disco), 8 &#x3D; (Apres Ski), 16 &#x3D; (Jausenstation), 32 &#x3D; (Pizzeria), 64 &#x3D; (Bäuerlicher Schankbetrieb), 128 &#x3D; (Buschenschank), 256 &#x3D; (Hofschank), 512 &#x3D; (Törggele Lokale), 1024 &#x3D; (Schnellimbiss), 2048 &#x3D; (Mensa), 4096 &#x3D; (Vinothek /Weinhaus / Taverne), 8192 &#x3D; (Eisdiele), 16348 &#x3D; (Gasthaus), 32768 &#x3D; (Gasthof), 65536 &#x3D; (Braugarten), 131072 &#x3D; (Schutzhütte), 262144 &#x3D; (Alm), 524288 &#x3D; (Skihütte)
     * @param {string} [facilitycodefilter] Facility Code Filter (BITMASK  values: 1 &#x3D; (American Express), 2 &#x3D; (Diners Club), 4 &#x3D; (Eurocard / Mastercard), 8 &#x3D; (Visa), 16 &#x3D; (Hunde erlaubt), 32 &#x3D; (Geeignet für Busse), 64 &#x3D; (Garten), 128 &#x3D; (Garagen), 256 &#x3D; (Bierbar), 512 &#x3D; (Kinderspielplatz), 1024 &#x3D; (Spielzimmer), 2048 &#x3D; (Spielplatz), 4096 &#x3D; (Parkplätze), 8192 &#x3D; (Raucherräume), 16348 &#x3D; (Terrasse), 32768 &#x3D; (Behindertengerecht), 65536 &#x3D; (Biergarten), 131072 &#x3D; (Aussichtsterrasse), 262144 &#x3D; (Wintergarten), 524288 &#x3D; (Gault Millau Südtirol), 1048576 &#x3D; (Guida Espresso), 2097152 &#x3D; (Gambero Rosso), 4194304 &#x3D; (Feinschmecker), 8388608 &#x3D; (Aral Schlemmer Atlas), 16777216 &#x3D; (Varta Führer), 33554432 &#x3D; (Bertelsmann), 67108864 &#x3D; (Preis für Südtiroler Weinkultur), 134217728 &#x3D; (Michelin), 268435456 &#x3D; (Roter Hahn), 536870912 &#x3D; (Tafelspitz))
     * @param {string} [cuisinecodefilter] Cuisine Code Filter (BITMASK  values: 1 &#x3D; (Vegetarische Küche), 2 &#x3D; (Glutenfreie Küche), 4 &#x3D; (Laktosefreie Kost), 8 &#x3D; (Warme Küche), 16 &#x3D; (Südtiroler Spezialitäten), 32 &#x3D; (Gourmet Küche), 64 &#x3D; (Italienische Küche), 128 &#x3D; (Internationale Küche), 256 &#x3D; (Pizza), 512 &#x3D; (Fischspezialitäten), 1024 &#x3D; (Asiatische Küche), 2048 &#x3D; (Wildspezialitäten), 4096 &#x3D; (Produkte eigener Erzeugung), 8192 &#x3D; (Diätküche), 16348 &#x3D; (Grillspezialitäten), 32768 &#x3D; (Ladinische Küche), 65536 &#x3D; (Kleine Karte), 131072 &#x3D; (Fischwochen), 262144 &#x3D; (Spargelwochen), 524288 &#x3D; (Lammwochen), 1048576 &#x3D; (Wildwochen), 2097152 &#x3D; (Vorspeisewochen), 4194304 &#x3D; (Nudelwochen), 8388608 &#x3D; (Kräuterwochen), 16777216 &#x3D; (Kindermenüs), 33554432 &#x3D; (Mittagsmenüs))
     * @param {string} [odhtagfilter] ODH Taglist Filter (refers to Array SmgTags) (String, Separator &#x27;,&#x27; more Tags possible, available Tags reference to &#x27;api/ODHTag?validforentity&#x3D;gastronomy&#x27;), (default:&#x27;null&#x27;)
     * @param {boolean} [active] Active Gastronomies Filter (possible Values: &#x27;true&#x27; only Active Gastronomies, &#x27;false&#x27; only Disabled Gastronomies
     * @param {boolean} [odhactive] ODH Active (Published) Gastronomies Filter (Refers to field SmgActive) Gastronomies Filter (possible Values: &#x27;true&#x27; only published Gastronomies, &#x27;false&#x27; only not published Gastronomies, (default:&#x27;null&#x27;)
     * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)
     * @param {string} [fields] Select fields to display, by Default Title and Id are selected if fields filter is null More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    gastronomyGetGastronomyListReduced: function gastronomyGetGastronomyListReduced(language, locfilter, dishcodefilter, ceremonycodefilter, categorycodefilter, facilitycodefilter, cuisinecodefilter, odhtagfilter, active, odhactive, latitude, longitude, radius, fields, options) {
      return gastronomy_api_GastronomyApiFp(configuration).gastronomyGetGastronomyListReduced(language, locfilter, dishcodefilter, ceremonycodefilter, categorycodefilter, facilitycodefilter, cuisinecodefilter, odhtagfilter, active, odhactive, latitude, longitude, radius, fields, options).then(function (request) {
        return request(axios, basePath);
      });
    },

    /**
     *
     * @summary GET Gastronomy Single
     * @param {string} id ID of the Gastronomy
     * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)
     * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    gastronomyGetGastronomySingle: function gastronomyGetGastronomySingle(id, fields, language, options) {
      return gastronomy_api_GastronomyApiFp(configuration).gastronomyGetGastronomySingle(id, fields, language, options).then(function (request) {
        return request(axios, basePath);
      });
    },

    /**
     *
     * @summary GET Gastronomy Localized Single
     * @param {string} id ID of the Gastronomy
     * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    gastronomyGetGastronomySingleLocalized: function gastronomyGetGastronomySingleLocalized(id, language, options) {
      return gastronomy_api_GastronomyApiFp(configuration).gastronomyGetGastronomySingleLocalized(id, language, options).then(function (request) {
        return request(axios, basePath);
      });
    }
  };
};
/**
 * GastronomyApi - object-oriented interface
 * @export
 * @class GastronomyApi
 * @extends {BaseAPI}
 */

var gastronomy_api_GastronomyApi = /*#__PURE__*/function (_BaseAPI) {
  _inherits(GastronomyApi, _BaseAPI);

  var _super = _createSuper(GastronomyApi);

  function GastronomyApi() {
    _classCallCheck(this, GastronomyApi);

    return _super.apply(this, arguments);
  }

  _createClass(GastronomyApi, [{
    key: "gastronomyGetAllGastronomyChanged",

    /**
     *
     * @summary GET Gastronomy Changed List by Date
     * @param {number} [pagenumber] Pagenumber, (default:1)
     * @param {number} [pagesize] Elements per Page, (default:10)
     * @param {string} [seed] Seed &#x27;1 - 10&#x27; for Random Sorting, &#x27;0&#x27; generates a Random Seed, &#x27;null&#x27; disables Random Sorting, (default:null)
     * @param {string} [updatefrom] Date from Format (yyyy-MM-dd) (all Gastronomy with LastChange &amp;gt;&#x3D; datefrom are passed), (default: DateTime.Now - 1 Day)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof GastronomyApi
     */
    value: function gastronomyGetAllGastronomyChanged(pagenumber, pagesize, seed, updatefrom, options) {
      var _this = this;

      return gastronomy_api_GastronomyApiFp(this.configuration).gastronomyGetAllGastronomyChanged(pagenumber, pagesize, seed, updatefrom, options).then(function (request) {
        return request(_this.axios, _this.basePath);
      });
    }
    /**
     *
     * @summary GET Gastronomy Types List
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof GastronomyApi
     */

  }, {
    key: "gastronomyGetAllGastronomyTypesList",
    value: function gastronomyGetAllGastronomyTypesList(options) {
      var _this2 = this;

      return gastronomy_api_GastronomyApiFp(this.configuration).gastronomyGetAllGastronomyTypesList(options).then(function (request) {
        return request(_this2.axios, _this2.basePath);
      });
    }
    /**
     *
     * @summary GET Gastronomy Types Single
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof GastronomyApi
     */

  }, {
    key: "gastronomyGetApiGastronomyTypesById",
    value: function gastronomyGetApiGastronomyTypesById(id, options) {
      var _this3 = this;

      return gastronomy_api_GastronomyApiFp(this.configuration).gastronomyGetApiGastronomyTypesById(id, options).then(function (request) {
        return request(_this3.axios, _this3.basePath);
      });
    }
    /**
     *
     * @summary GET Gastronomy List
     * @param {number} [pagenumber] Pagenumber, (default:1)
     * @param {number} [pagesize] Elements per Page, (default:10)
     * @param {string} [idlist] IDFilter (Separator &#x27;,&#x27; List of Activity IDs), (default:&#x27;null&#x27;)
     * @param {string} [locfilter] Locfilter (Separator &#x27;,&#x27; possible values: reg + REGIONID &#x3D; (Filter by Region), reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMVEREINID &#x3D; (Filter by Tourismverein), mun + MUNICIPALITYID &#x3D; (Filter by Municipality), fra + FRACTIONID &#x3D; (Filter by Fraction)), (default:&#x27;null&#x27;)
     * @param {string} [dishcodefilter] Dish Code Filter (BITMASK values: 1 &#x3D; (Speisen), 2 &#x3D; (Vorspeise), 4 &#x3D; (Hauptspeise), 8 &#x3D; (Nachspeise), 16 &#x3D; (Tagesgericht), 32 &#x3D; (Menü), 64 &#x3D; (Degustationsmenü), 128 &#x3D; (Kindermenüs), 256 &#x3D; (Mittagsmenüs)
     * @param {string} [ceremonycodefilter] Ceremony Code Filter (BITMASK  values: 1 &#x3D; (Familienfeiern), 2 &#x3D; (Hochzeiten), 4 &#x3D; (Geburtstagsfeiern), 8 &#x3D; (Firmenessen), 16 &#x3D; (Weihnachtsessen), 32 &#x3D; (Sylvestermenü), 64 &#x3D; (Seminare / Tagungen), 128 &#x3D; (Versammlungen)
     * @param {string} [categorycodefilter] Category Code Filter (BITMASK  values: 1 &#x3D; (Restaurant), 2 &#x3D; (Bar / Café / Bistro), 4 &#x3D; (Pub / Disco), 8 &#x3D; (Apres Ski), 16 &#x3D; (Jausenstation), 32 &#x3D; (Pizzeria), 64 &#x3D; (Bäuerlicher Schankbetrieb), 128 &#x3D; (Buschenschank), 256 &#x3D; (Hofschank), 512 &#x3D; (Törggele Lokale), 1024 &#x3D; (Schnellimbiss), 2048 &#x3D; (Mensa), 4096 &#x3D; (Vinothek /Weinhaus / Taverne), 8192 &#x3D; (Eisdiele), 16348 &#x3D; (Gasthaus), 32768 &#x3D; (Gasthof), 65536 &#x3D; (Braugarten), 131072 &#x3D; (Schutzhütte), 262144 &#x3D; (Alm), 524288 &#x3D; (Skihütte)
     * @param {string} [facilitycodefilter] Facility Code Filter (BITMASK  values: 1 &#x3D; (American Express), 2 &#x3D; (Diners Club), 4 &#x3D; (Eurocard / Mastercard), 8 &#x3D; (Visa), 16 &#x3D; (Hunde erlaubt), 32 &#x3D; (Geeignet für Busse), 64 &#x3D; (Garten), 128 &#x3D; (Garagen), 256 &#x3D; (Bierbar), 512 &#x3D; (Kinderspielplatz), 1024 &#x3D; (Spielzimmer), 2048 &#x3D; (Spielplatz), 4096 &#x3D; (Parkplätze), 8192 &#x3D; (Raucherräume), 16348 &#x3D; (Terrasse), 32768 &#x3D; (Behindertengerecht), 65536 &#x3D; (Biergarten), 131072 &#x3D; (Aussichtsterrasse), 262144 &#x3D; (Wintergarten), 524288 &#x3D; (Gault Millau Südtirol), 1048576 &#x3D; (Guida Espresso), 2097152 &#x3D; (Gambero Rosso), 4194304 &#x3D; (Feinschmecker), 8388608 &#x3D; (Aral Schlemmer Atlas), 16777216 &#x3D; (Varta Führer), 33554432 &#x3D; (Bertelsmann), 67108864 &#x3D; (Preis für Südtiroler Weinkultur), 134217728 &#x3D; (Michelin), 268435456 &#x3D; (Roter Hahn), 536870912 &#x3D; (Tafelspitz))
     * @param {string} [cuisinecodefilter] Cuisine Code Filter (BITMASK  values: 1 &#x3D; (Vegetarische Küche), 2 &#x3D; (Glutenfreie Küche), 4 &#x3D; (Laktosefreie Kost), 8 &#x3D; (Warme Küche), 16 &#x3D; (Südtiroler Spezialitäten), 32 &#x3D; (Gourmet Küche), 64 &#x3D; (Italienische Küche), 128 &#x3D; (Internationale Küche), 256 &#x3D; (Pizza), 512 &#x3D; (Fischspezialitäten), 1024 &#x3D; (Asiatische Küche), 2048 &#x3D; (Wildspezialitäten), 4096 &#x3D; (Produkte eigener Erzeugung), 8192 &#x3D; (Diätküche), 16348 &#x3D; (Grillspezialitäten), 32768 &#x3D; (Ladinische Küche), 65536 &#x3D; (Kleine Karte), 131072 &#x3D; (Fischwochen), 262144 &#x3D; (Spargelwochen), 524288 &#x3D; (Lammwochen), 1048576 &#x3D; (Wildwochen), 2097152 &#x3D; (Vorspeisewochen), 4194304 &#x3D; (Nudelwochen), 8388608 &#x3D; (Kräuterwochen), 16777216 &#x3D; (Kindermenüs), 33554432 &#x3D; (Mittagsmenüs))
     * @param {string} [odhtagfilter] ODH Taglist Filter (refers to Array SmgTags) (String, Separator &#x27;,&#x27; more Tags possible, available Tags reference to &#x27;api/ODHTag?validforentity&#x3D;gastronomy&#x27;), (default:&#x27;null&#x27;)
     * @param {boolean} [active] Active Gastronomies Filter (possible Values: &#x27;true&#x27; only Active Gastronomies, &#x27;false&#x27; only Disabled Gastronomies
     * @param {boolean} [odhactive] ODH Active (Published) Gastronomies Filter (Refers to field SmgActive) Gastronomies Filter (possible Values: &#x27;true&#x27; only published Gastronomies, &#x27;false&#x27; only not published Gastronomies, (default:&#x27;null&#x27;)
     * @param {string} [seed] Seed &#x27;1 - 10&#x27; for Random Sorting, &#x27;0&#x27; generates a Random Seed, &#x27;null&#x27; disables Random Sorting, (default:null)
     * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)
     * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)
     * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)
     * @param {string} [updatefrom] Date from Format (yyyy-MM-dd) (all GBActivityPoi with LastChange &amp;gt;&#x3D; datefrom are passed), (default: null)
     * @param {string} [searchfilter] String to search for, Title in all languages are searched, (default: null)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof GastronomyApi
     */

  }, {
    key: "gastronomyGetGastronomyList",
    value: function gastronomyGetGastronomyList(pagenumber, pagesize, idlist, locfilter, dishcodefilter, ceremonycodefilter, categorycodefilter, facilitycodefilter, cuisinecodefilter, odhtagfilter, active, odhactive, seed, latitude, longitude, radius, fields, language, updatefrom, searchfilter, options) {
      var _this4 = this;

      return gastronomy_api_GastronomyApiFp(this.configuration).gastronomyGetGastronomyList(pagenumber, pagesize, idlist, locfilter, dishcodefilter, ceremonycodefilter, categorycodefilter, facilitycodefilter, cuisinecodefilter, odhtagfilter, active, odhactive, seed, latitude, longitude, radius, fields, language, updatefrom, searchfilter, options).then(function (request) {
        return request(_this4.axios, _this4.basePath);
      });
    }
    /**
     *
     * @summary GET Gastronomy Localized List
     * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)
     * @param {number} [pagenumber] Pagenumber, (default:1)
     * @param {number} [pagesize] Elements per Page, (default:10)
     * @param {string} [idlist] IDFilter (Separator &#x27;,&#x27; List of Activity IDs), (default:&#x27;null&#x27;)
     * @param {string} [locfilter] Locfilter (Separator &#x27;,&#x27; possible values: reg + REGIONID &#x3D; (Filter by Region), reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMVEREINID &#x3D; (Filter by Tourismverein), mun + MUNICIPALITYID &#x3D; (Filter by Municipality), fra + FRACTIONID &#x3D; (Filter by Fraction)), (default:&#x27;null&#x27;)
     * @param {string} [dishcodefilter] Dish Code Filter (BITMASK values: 1 &#x3D; (Speisen), 2 &#x3D; (Vorspeise), 4 &#x3D; (Hauptspeise), 8 &#x3D; (Nachspeise), 16 &#x3D; (Tagesgericht), 32 &#x3D; (Menü), 64 &#x3D; (Degustationsmenü), 128 &#x3D; (Kindermenüs), 256 &#x3D; (Mittagsmenüs)
     * @param {string} [ceremonycodefilter] Ceremony Code Filter (BITMASK  values: 1 &#x3D; (Familienfeiern), 2 &#x3D; (Hochzeiten), 4 &#x3D; (Geburtstagsfeiern), 8 &#x3D; (Firmenessen), 16 &#x3D; (Weihnachtsessen), 32 &#x3D; (Sylvestermenü), 64 &#x3D; (Seminare / Tagungen), 128 &#x3D; (Versammlungen)
     * @param {string} [categorycodefilter] Category Code Filter (BITMASK  values: 1 &#x3D; (Restaurant), 2 &#x3D; (Bar / Café / Bistro), 4 &#x3D; (Pub / Disco), 8 &#x3D; (Apres Ski), 16 &#x3D; (Jausenstation), 32 &#x3D; (Pizzeria), 64 &#x3D; (Bäuerlicher Schankbetrieb), 128 &#x3D; (Buschenschank), 256 &#x3D; (Hofschank), 512 &#x3D; (Törggele Lokale), 1024 &#x3D; (Schnellimbiss), 2048 &#x3D; (Mensa), 4096 &#x3D; (Vinothek /Weinhaus / Taverne), 8192 &#x3D; (Eisdiele), 16348 &#x3D; (Gasthaus), 32768 &#x3D; (Gasthof), 65536 &#x3D; (Braugarten), 131072 &#x3D; (Schutzhütte), 262144 &#x3D; (Alm), 524288 &#x3D; (Skihütte)
     * @param {string} [facilitycodefilter] Facility Code Filter (BITMASK  values: 1 &#x3D; (American Express), 2 &#x3D; (Diners Club), 4 &#x3D; (Eurocard / Mastercard), 8 &#x3D; (Visa), 16 &#x3D; (Hunde erlaubt), 32 &#x3D; (Geeignet für Busse), 64 &#x3D; (Garten), 128 &#x3D; (Garagen), 256 &#x3D; (Bierbar), 512 &#x3D; (Kinderspielplatz), 1024 &#x3D; (Spielzimmer), 2048 &#x3D; (Spielplatz), 4096 &#x3D; (Parkplätze), 8192 &#x3D; (Raucherräume), 16348 &#x3D; (Terrasse), 32768 &#x3D; (Behindertengerecht), 65536 &#x3D; (Biergarten), 131072 &#x3D; (Aussichtsterrasse), 262144 &#x3D; (Wintergarten), 524288 &#x3D; (Gault Millau Südtirol), 1048576 &#x3D; (Guida Espresso), 2097152 &#x3D; (Gambero Rosso), 4194304 &#x3D; (Feinschmecker), 8388608 &#x3D; (Aral Schlemmer Atlas), 16777216 &#x3D; (Varta Führer), 33554432 &#x3D; (Bertelsmann), 67108864 &#x3D; (Preis für Südtiroler Weinkultur), 134217728 &#x3D; (Michelin), 268435456 &#x3D; (Roter Hahn), 536870912 &#x3D; (Tafelspitz))
     * @param {string} [cuisinecodefilter] Cuisine Code Filter (BITMASK  values: 1 &#x3D; (Vegetarische Küche), 2 &#x3D; (Glutenfreie Küche), 4 &#x3D; (Laktosefreie Kost), 8 &#x3D; (Warme Küche), 16 &#x3D; (Südtiroler Spezialitäten), 32 &#x3D; (Gourmet Küche), 64 &#x3D; (Italienische Küche), 128 &#x3D; (Internationale Küche), 256 &#x3D; (Pizza), 512 &#x3D; (Fischspezialitäten), 1024 &#x3D; (Asiatische Küche), 2048 &#x3D; (Wildspezialitäten), 4096 &#x3D; (Produkte eigener Erzeugung), 8192 &#x3D; (Diätküche), 16348 &#x3D; (Grillspezialitäten), 32768 &#x3D; (Ladinische Küche), 65536 &#x3D; (Kleine Karte), 131072 &#x3D; (Fischwochen), 262144 &#x3D; (Spargelwochen), 524288 &#x3D; (Lammwochen), 1048576 &#x3D; (Wildwochen), 2097152 &#x3D; (Vorspeisewochen), 4194304 &#x3D; (Nudelwochen), 8388608 &#x3D; (Kräuterwochen), 16777216 &#x3D; (Kindermenüs), 33554432 &#x3D; (Mittagsmenüs))
     * @param {string} [odhtagfilter] ODH Taglist Filter (refers to Array SmgTags) (String, Separator &#x27;,&#x27; more Tags possible, available Tags reference to &#x27;api/ODHTag?validforentity&#x3D;gastronomy&#x27;), (default:&#x27;null&#x27;)
     * @param {boolean} [active] Active Gastronomies Filter (possible Values: &#x27;true&#x27; only Active Gastronomies, &#x27;false&#x27; only Disabled Gastronomies
     * @param {boolean} [odhactive] ODH Active (Published) Gastronomies Filter (Refers to field SmgActive) Gastronomies Filter (possible Values: &#x27;true&#x27; only published Gastronomies, &#x27;false&#x27; only not published Gastronomies, (default:&#x27;null&#x27;)
     * @param {string} [seed] Seed &#x27;1 - 10&#x27; for Random Sorting, &#x27;0&#x27; generates a Random Seed, &#x27;null&#x27; disables Random Sorting, (default:null)
     * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof GastronomyApi
     */

  }, {
    key: "gastronomyGetGastronomyListLocalized",
    value: function gastronomyGetGastronomyListLocalized(language, pagenumber, pagesize, idlist, locfilter, dishcodefilter, ceremonycodefilter, categorycodefilter, facilitycodefilter, cuisinecodefilter, odhtagfilter, active, odhactive, seed, latitude, longitude, radius, options) {
      var _this5 = this;

      return gastronomy_api_GastronomyApiFp(this.configuration).gastronomyGetGastronomyListLocalized(language, pagenumber, pagesize, idlist, locfilter, dishcodefilter, ceremonycodefilter, categorycodefilter, facilitycodefilter, cuisinecodefilter, odhtagfilter, active, odhactive, seed, latitude, longitude, radius, options).then(function (request) {
        return request(_this5.axios, _this5.basePath);
      });
    }
    /**
     *
     * @summary GET Gastronomy Reduced List
     * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)
     * @param {string} [locfilter] Locfilter (Separator &#x27;,&#x27; possible values: reg + REGIONID &#x3D; (Filter by Region), reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMVEREINID &#x3D; (Filter by Tourismverein), mun + MUNICIPALITYID &#x3D; (Filter by Municipality), fra + FRACTIONID &#x3D; (Filter by Fraction)), (default:&#x27;null&#x27;)
     * @param {string} [dishcodefilter] Dish Code Filter (BITMASK values: 1 &#x3D; (Speisen), 2 &#x3D; (Vorspeise), 4 &#x3D; (Hauptspeise), 8 &#x3D; (Nachspeise), 16 &#x3D; (Tagesgericht), 32 &#x3D; (Menü), 64 &#x3D; (Degustationsmenü), 128 &#x3D; (Kindermenüs), 256 &#x3D; (Mittagsmenüs)
     * @param {string} [ceremonycodefilter] Ceremony Code Filter (BITMASK  values: 1 &#x3D; (Familienfeiern), 2 &#x3D; (Hochzeiten), 4 &#x3D; (Geburtstagsfeiern), 8 &#x3D; (Firmenessen), 16 &#x3D; (Weihnachtsessen), 32 &#x3D; (Sylvestermenü), 64 &#x3D; (Seminare / Tagungen), 128 &#x3D; (Versammlungen)
     * @param {string} [categorycodefilter] Category Code Filter (BITMASK  values: 1 &#x3D; (Restaurant), 2 &#x3D; (Bar / Café / Bistro), 4 &#x3D; (Pub / Disco), 8 &#x3D; (Apres Ski), 16 &#x3D; (Jausenstation), 32 &#x3D; (Pizzeria), 64 &#x3D; (Bäuerlicher Schankbetrieb), 128 &#x3D; (Buschenschank), 256 &#x3D; (Hofschank), 512 &#x3D; (Törggele Lokale), 1024 &#x3D; (Schnellimbiss), 2048 &#x3D; (Mensa), 4096 &#x3D; (Vinothek /Weinhaus / Taverne), 8192 &#x3D; (Eisdiele), 16348 &#x3D; (Gasthaus), 32768 &#x3D; (Gasthof), 65536 &#x3D; (Braugarten), 131072 &#x3D; (Schutzhütte), 262144 &#x3D; (Alm), 524288 &#x3D; (Skihütte)
     * @param {string} [facilitycodefilter] Facility Code Filter (BITMASK  values: 1 &#x3D; (American Express), 2 &#x3D; (Diners Club), 4 &#x3D; (Eurocard / Mastercard), 8 &#x3D; (Visa), 16 &#x3D; (Hunde erlaubt), 32 &#x3D; (Geeignet für Busse), 64 &#x3D; (Garten), 128 &#x3D; (Garagen), 256 &#x3D; (Bierbar), 512 &#x3D; (Kinderspielplatz), 1024 &#x3D; (Spielzimmer), 2048 &#x3D; (Spielplatz), 4096 &#x3D; (Parkplätze), 8192 &#x3D; (Raucherräume), 16348 &#x3D; (Terrasse), 32768 &#x3D; (Behindertengerecht), 65536 &#x3D; (Biergarten), 131072 &#x3D; (Aussichtsterrasse), 262144 &#x3D; (Wintergarten), 524288 &#x3D; (Gault Millau Südtirol), 1048576 &#x3D; (Guida Espresso), 2097152 &#x3D; (Gambero Rosso), 4194304 &#x3D; (Feinschmecker), 8388608 &#x3D; (Aral Schlemmer Atlas), 16777216 &#x3D; (Varta Führer), 33554432 &#x3D; (Bertelsmann), 67108864 &#x3D; (Preis für Südtiroler Weinkultur), 134217728 &#x3D; (Michelin), 268435456 &#x3D; (Roter Hahn), 536870912 &#x3D; (Tafelspitz))
     * @param {string} [cuisinecodefilter] Cuisine Code Filter (BITMASK  values: 1 &#x3D; (Vegetarische Küche), 2 &#x3D; (Glutenfreie Küche), 4 &#x3D; (Laktosefreie Kost), 8 &#x3D; (Warme Küche), 16 &#x3D; (Südtiroler Spezialitäten), 32 &#x3D; (Gourmet Küche), 64 &#x3D; (Italienische Küche), 128 &#x3D; (Internationale Küche), 256 &#x3D; (Pizza), 512 &#x3D; (Fischspezialitäten), 1024 &#x3D; (Asiatische Küche), 2048 &#x3D; (Wildspezialitäten), 4096 &#x3D; (Produkte eigener Erzeugung), 8192 &#x3D; (Diätküche), 16348 &#x3D; (Grillspezialitäten), 32768 &#x3D; (Ladinische Küche), 65536 &#x3D; (Kleine Karte), 131072 &#x3D; (Fischwochen), 262144 &#x3D; (Spargelwochen), 524288 &#x3D; (Lammwochen), 1048576 &#x3D; (Wildwochen), 2097152 &#x3D; (Vorspeisewochen), 4194304 &#x3D; (Nudelwochen), 8388608 &#x3D; (Kräuterwochen), 16777216 &#x3D; (Kindermenüs), 33554432 &#x3D; (Mittagsmenüs))
     * @param {string} [odhtagfilter] ODH Taglist Filter (refers to Array SmgTags) (String, Separator &#x27;,&#x27; more Tags possible, available Tags reference to &#x27;api/ODHTag?validforentity&#x3D;gastronomy&#x27;), (default:&#x27;null&#x27;)
     * @param {boolean} [active] Active Gastronomies Filter (possible Values: &#x27;true&#x27; only Active Gastronomies, &#x27;false&#x27; only Disabled Gastronomies
     * @param {boolean} [odhactive] ODH Active (Published) Gastronomies Filter (Refers to field SmgActive) Gastronomies Filter (possible Values: &#x27;true&#x27; only published Gastronomies, &#x27;false&#x27; only not published Gastronomies, (default:&#x27;null&#x27;)
     * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)
     * @param {string} [fields] Select fields to display, by Default Title and Id are selected if fields filter is null More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof GastronomyApi
     */

  }, {
    key: "gastronomyGetGastronomyListReduced",
    value: function gastronomyGetGastronomyListReduced(language, locfilter, dishcodefilter, ceremonycodefilter, categorycodefilter, facilitycodefilter, cuisinecodefilter, odhtagfilter, active, odhactive, latitude, longitude, radius, fields, options) {
      var _this6 = this;

      return gastronomy_api_GastronomyApiFp(this.configuration).gastronomyGetGastronomyListReduced(language, locfilter, dishcodefilter, ceremonycodefilter, categorycodefilter, facilitycodefilter, cuisinecodefilter, odhtagfilter, active, odhactive, latitude, longitude, radius, fields, options).then(function (request) {
        return request(_this6.axios, _this6.basePath);
      });
    }
    /**
     *
     * @summary GET Gastronomy Single
     * @param {string} id ID of the Gastronomy
     * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)
     * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof GastronomyApi
     */

  }, {
    key: "gastronomyGetGastronomySingle",
    value: function gastronomyGetGastronomySingle(id, fields, language, options) {
      var _this7 = this;

      return gastronomy_api_GastronomyApiFp(this.configuration).gastronomyGetGastronomySingle(id, fields, language, options).then(function (request) {
        return request(_this7.axios, _this7.basePath);
      });
    }
    /**
     *
     * @summary GET Gastronomy Localized Single
     * @param {string} id ID of the Gastronomy
     * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof GastronomyApi
     */

  }, {
    key: "gastronomyGetGastronomySingleLocalized",
    value: function gastronomyGetGastronomySingleLocalized(id, language, options) {
      var _this8 = this;

      return gastronomy_api_GastronomyApiFp(this.configuration).gastronomyGetGastronomySingleLocalized(id, language, options).then(function (request) {
        return request(_this8.axios, _this8.basePath);
      });
    }
  }]);

  return GastronomyApi;
}(base_BaseAPI);
// CONCATENATED MODULE: ./src/api/apis/json-ldapi.ts
















/* tslint:disable */

/* eslint-disable */

/**
 * Open Data Hub Api Tourism
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: V1
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
 // Some imports not used depending on template conditions
// @ts-ignore


/**
 * JsonLDApi - axios parameter creator
 * @export
 */

var json_ldapi_JsonLDApiAxiosParamCreator = function JsonLDApiAxiosParamCreator(configuration) {
  return {
    /**
     *
     * @summary GET Detail Data in JSON LD Format (Schema.org Datatypes as output)
     * @param {string} type Data Type to transform currently available: (&#x27;accommodation&#x27;, &#x27;gastronomy&#x27;, &#x27;event&#x27;, &#x27;recipe&#x27;, &#x27;poi&#x27;, &#x27;region&#x27;, &#x27;tv&#x27;, &#x27;municipality&#x27;, &#x27;district&#x27;, &#x27;skiarea&#x27;) required
     * @param {string} id ID of the data to transform, required
     * @param {string} [language] Output Language, standard EN
     * @param {string} [idtoshow] ID to show on Json LD @id, not provided Id of ODH api call is taken
     * @param {string} [urltoshow] url to show on Json LD @id, not provided idtoshow is taken, idtoshow not provided url is filled with url of the data
     * @param {string} [imageurltoshow] image url to show on Json LD @image, not provided image url of data is taken
     * @param {boolean} [showid] Show the @id property in Json LD default value true
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    jsonLDGetDetailInLD: function () {
      var _jsonLDGetDetailInLD = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(type, id, language, idtoshow, urltoshow, imageurltoshow, showid) {
        var options,
            localVarPath,
            localVarUrlObj,
            baseOptions,
            localVarRequestOptions,
            localVarHeaderParameter,
            localVarQueryParameter,
            localVarAccessTokenValue,
            query,
            key,
            _key,
            headersFromBaseOptions,
            _args = arguments;

        return regeneratorRuntime.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                options = _args.length > 7 && _args[7] !== undefined ? _args[7] : {};

                if (!(type === null || type === undefined)) {
                  _context.next = 3;
                  break;
                }

                throw new base_RequiredError('type', 'Required parameter type was null or undefined when calling jsonLDGetDetailInLD.');

              case 3:
                if (!(id === null || id === undefined)) {
                  _context.next = 5;
                  break;
                }

                throw new base_RequiredError('id', 'Required parameter id was null or undefined when calling jsonLDGetDetailInLD.');

              case 5:
                localVarPath = "/api/JsonLD/DetailInLD"; // use dummy base URL string because the URL constructor only accepts absolute URLs.

                localVarUrlObj = new URL(localVarPath, 'https://example.com');

                if (configuration) {
                  baseOptions = configuration.baseOptions;
                }

                localVarRequestOptions = _objectSpread2(_objectSpread2({
                  method: 'GET'
                }, baseOptions), options);
                localVarHeaderParameter = {};
                localVarQueryParameter = {}; // authentication oauth2 required
                // oauth required

                if (!(configuration && configuration.accessToken)) {
                  _context.next = 23;
                  break;
                }

                if (!(typeof configuration.accessToken === 'function')) {
                  _context.next = 18;
                  break;
                }

                _context.next = 15;
                return configuration.accessToken("oauth2", [""]);

              case 15:
                _context.t0 = _context.sent;
                _context.next = 21;
                break;

              case 18:
                _context.next = 20;
                return configuration.accessToken;

              case 20:
                _context.t0 = _context.sent;

              case 21:
                localVarAccessTokenValue = _context.t0;
                localVarHeaderParameter["Authorization"] = "Bearer " + localVarAccessTokenValue;

              case 23:
                if (type !== undefined) {
                  localVarQueryParameter['type'] = type;
                }

                if (id !== undefined) {
                  localVarQueryParameter['Id'] = id;
                }

                if (language !== undefined) {
                  localVarQueryParameter['language'] = language;
                }

                if (idtoshow !== undefined) {
                  localVarQueryParameter['idtoshow'] = idtoshow;
                }

                if (urltoshow !== undefined) {
                  localVarQueryParameter['urltoshow'] = urltoshow;
                }

                if (imageurltoshow !== undefined) {
                  localVarQueryParameter['imageurltoshow'] = imageurltoshow;
                }

                if (showid !== undefined) {
                  localVarQueryParameter['showid'] = showid;
                }

                query = new URLSearchParams(localVarUrlObj.search);

                for (key in localVarQueryParameter) {
                  query.set(key, localVarQueryParameter[key]);
                }

                for (_key in options.query) {
                  query.set(_key, options.query[_key]);
                }

                localVarUrlObj.search = new URLSearchParams(query).toString();
                headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                localVarRequestOptions.headers = _objectSpread2(_objectSpread2(_objectSpread2({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                return _context.abrupt("return", {
                  url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                  options: localVarRequestOptions
                });

              case 37:
              case "end":
                return _context.stop();
            }
          }
        }, _callee);
      }));

      function jsonLDGetDetailInLD(_x, _x2, _x3, _x4, _x5, _x6, _x7) {
        return _jsonLDGetDetailInLD.apply(this, arguments);
      }

      return jsonLDGetDetailInLD;
    }()
  };
};
/**
 * JsonLDApi - functional programming interface
 * @export
 */

var json_ldapi_JsonLDApiFp = function JsonLDApiFp(configuration) {
  return {
    /**
     *
     * @summary GET Detail Data in JSON LD Format (Schema.org Datatypes as output)
     * @param {string} type Data Type to transform currently available: (&#x27;accommodation&#x27;, &#x27;gastronomy&#x27;, &#x27;event&#x27;, &#x27;recipe&#x27;, &#x27;poi&#x27;, &#x27;region&#x27;, &#x27;tv&#x27;, &#x27;municipality&#x27;, &#x27;district&#x27;, &#x27;skiarea&#x27;) required
     * @param {string} id ID of the data to transform, required
     * @param {string} [language] Output Language, standard EN
     * @param {string} [idtoshow] ID to show on Json LD @id, not provided Id of ODH api call is taken
     * @param {string} [urltoshow] url to show on Json LD @id, not provided idtoshow is taken, idtoshow not provided url is filled with url of the data
     * @param {string} [imageurltoshow] image url to show on Json LD @image, not provided image url of data is taken
     * @param {boolean} [showid] Show the @id property in Json LD default value true
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    jsonLDGetDetailInLD: function jsonLDGetDetailInLD(type, id, language, idtoshow, urltoshow, imageurltoshow, showid, options) {
      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {
        var localVarAxiosArgs;
        return regeneratorRuntime.wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                _context2.next = 2;
                return json_ldapi_JsonLDApiAxiosParamCreator(configuration).jsonLDGetDetailInLD(type, id, language, idtoshow, urltoshow, imageurltoshow, showid, options);

              case 2:
                localVarAxiosArgs = _context2.sent;
                return _context2.abrupt("return", function () {
                  var axios = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : axios_default.a;
                  var basePath = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : BASE_PATH;

                  var axiosRequestArgs = _objectSpread2(_objectSpread2({}, localVarAxiosArgs.options), {}, {
                    url: basePath + localVarAxiosArgs.url
                  });

                  return axios.request(axiosRequestArgs);
                });

              case 4:
              case "end":
                return _context2.stop();
            }
          }
        }, _callee2);
      }))();
    }
  };
};
/**
 * JsonLDApi - factory interface
 * @export
 */

var JsonLDApiFactory = function JsonLDApiFactory(configuration, basePath, axios) {
  return {
    /**
     *
     * @summary GET Detail Data in JSON LD Format (Schema.org Datatypes as output)
     * @param {string} type Data Type to transform currently available: (&#x27;accommodation&#x27;, &#x27;gastronomy&#x27;, &#x27;event&#x27;, &#x27;recipe&#x27;, &#x27;poi&#x27;, &#x27;region&#x27;, &#x27;tv&#x27;, &#x27;municipality&#x27;, &#x27;district&#x27;, &#x27;skiarea&#x27;) required
     * @param {string} id ID of the data to transform, required
     * @param {string} [language] Output Language, standard EN
     * @param {string} [idtoshow] ID to show on Json LD @id, not provided Id of ODH api call is taken
     * @param {string} [urltoshow] url to show on Json LD @id, not provided idtoshow is taken, idtoshow not provided url is filled with url of the data
     * @param {string} [imageurltoshow] image url to show on Json LD @image, not provided image url of data is taken
     * @param {boolean} [showid] Show the @id property in Json LD default value true
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    jsonLDGetDetailInLD: function jsonLDGetDetailInLD(type, id, language, idtoshow, urltoshow, imageurltoshow, showid, options) {
      return json_ldapi_JsonLDApiFp(configuration).jsonLDGetDetailInLD(type, id, language, idtoshow, urltoshow, imageurltoshow, showid, options).then(function (request) {
        return request(axios, basePath);
      });
    }
  };
};
/**
 * JsonLDApi - object-oriented interface
 * @export
 * @class JsonLDApi
 * @extends {BaseAPI}
 */

var json_ldapi_JsonLDApi = /*#__PURE__*/function (_BaseAPI) {
  _inherits(JsonLDApi, _BaseAPI);

  var _super = _createSuper(JsonLDApi);

  function JsonLDApi() {
    _classCallCheck(this, JsonLDApi);

    return _super.apply(this, arguments);
  }

  _createClass(JsonLDApi, [{
    key: "jsonLDGetDetailInLD",

    /**
     *
     * @summary GET Detail Data in JSON LD Format (Schema.org Datatypes as output)
     * @param {string} type Data Type to transform currently available: (&#x27;accommodation&#x27;, &#x27;gastronomy&#x27;, &#x27;event&#x27;, &#x27;recipe&#x27;, &#x27;poi&#x27;, &#x27;region&#x27;, &#x27;tv&#x27;, &#x27;municipality&#x27;, &#x27;district&#x27;, &#x27;skiarea&#x27;) required
     * @param {string} id ID of the data to transform, required
     * @param {string} [language] Output Language, standard EN
     * @param {string} [idtoshow] ID to show on Json LD @id, not provided Id of ODH api call is taken
     * @param {string} [urltoshow] url to show on Json LD @id, not provided idtoshow is taken, idtoshow not provided url is filled with url of the data
     * @param {string} [imageurltoshow] image url to show on Json LD @image, not provided image url of data is taken
     * @param {boolean} [showid] Show the @id property in Json LD default value true
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof JsonLDApi
     */
    value: function jsonLDGetDetailInLD(type, id, language, idtoshow, urltoshow, imageurltoshow, showid, options) {
      var _this = this;

      return json_ldapi_JsonLDApiFp(this.configuration).jsonLDGetDetailInLD(type, id, language, idtoshow, urltoshow, imageurltoshow, showid, options).then(function (request) {
        return request(_this.axios, _this.basePath);
      });
    }
  }]);

  return JsonLDApi;
}(base_BaseAPI);
// CONCATENATED MODULE: ./src/api/apis/location-api.ts
















/* tslint:disable */

/* eslint-disable */

/**
 * Open Data Hub Api Tourism
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: V1
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
 // Some imports not used depending on template conditions
// @ts-ignore


/**
 * LocationApi - axios parameter creator
 * @export
 */

var location_api_LocationApiAxiosParamCreator = function LocationApiAxiosParamCreator(configuration) {
  return {
    /**
     *
     * @summary GET Location List (Use in locfilter)
     * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)
     * @param {string} [type] Type (&#x27;mta&#x27;,&#x27;reg&#x27;,&#x27;tvs&#x27;,&#x27;mun&#x27;,&#x27;fra&#x27;) Separator &#x27;,&#x27; : &#x27;null&#x27; returns all Location Objects (default)
     * @param {boolean} [showall] Show all Data (true &#x3D; all, false &#x3D; show only data market as visible)
     * @param {string} [locfilter] Locfilter (Separator &#x27;,&#x27; possible values: mta + MetaREGIONID &#x3D; (Filter by MetaRegion), reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMVEREINID &#x3D; (Filter by Tourismverein), mun + MUNICIPALITYID &#x3D; (Filter by Municipality), fra + FRACTIONID &#x3D; (Filter by Fraction)), (default:&#x27;null&#x27;)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    locationGetTheLocationList: function () {
      var _locationGetTheLocationList = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(language, type, showall, locfilter) {
        var options,
            localVarPath,
            localVarUrlObj,
            baseOptions,
            localVarRequestOptions,
            localVarHeaderParameter,
            localVarQueryParameter,
            localVarAccessTokenValue,
            query,
            key,
            _key,
            headersFromBaseOptions,
            _args = arguments;

        return regeneratorRuntime.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                options = _args.length > 4 && _args[4] !== undefined ? _args[4] : {};
                localVarPath = "/api/Location"; // use dummy base URL string because the URL constructor only accepts absolute URLs.

                localVarUrlObj = new URL(localVarPath, 'https://example.com');

                if (configuration) {
                  baseOptions = configuration.baseOptions;
                }

                localVarRequestOptions = _objectSpread2(_objectSpread2({
                  method: 'GET'
                }, baseOptions), options);
                localVarHeaderParameter = {};
                localVarQueryParameter = {}; // authentication oauth2 required
                // oauth required

                if (!(configuration && configuration.accessToken)) {
                  _context.next = 19;
                  break;
                }

                if (!(typeof configuration.accessToken === 'function')) {
                  _context.next = 14;
                  break;
                }

                _context.next = 11;
                return configuration.accessToken("oauth2", [""]);

              case 11:
                _context.t0 = _context.sent;
                _context.next = 17;
                break;

              case 14:
                _context.next = 16;
                return configuration.accessToken;

              case 16:
                _context.t0 = _context.sent;

              case 17:
                localVarAccessTokenValue = _context.t0;
                localVarHeaderParameter["Authorization"] = "Bearer " + localVarAccessTokenValue;

              case 19:
                if (language !== undefined) {
                  localVarQueryParameter['language'] = language;
                }

                if (type !== undefined) {
                  localVarQueryParameter['type'] = type;
                }

                if (showall !== undefined) {
                  localVarQueryParameter['showall'] = showall;
                }

                if (locfilter !== undefined) {
                  localVarQueryParameter['locfilter'] = locfilter;
                }

                query = new URLSearchParams(localVarUrlObj.search);

                for (key in localVarQueryParameter) {
                  query.set(key, localVarQueryParameter[key]);
                }

                for (_key in options.query) {
                  query.set(_key, options.query[_key]);
                }

                localVarUrlObj.search = new URLSearchParams(query).toString();
                headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                localVarRequestOptions.headers = _objectSpread2(_objectSpread2(_objectSpread2({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                return _context.abrupt("return", {
                  url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                  options: localVarRequestOptions
                });

              case 30:
              case "end":
                return _context.stop();
            }
          }
        }, _callee);
      }));

      function locationGetTheLocationList(_x, _x2, _x3, _x4) {
        return _locationGetTheLocationList.apply(this, arguments);
      }

      return locationGetTheLocationList;
    }(),

    /**
     *
     * @summary GET Skiarea List (Use in locfilter as \"ska\")
     * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)
     * @param {string} [locfilter] Locfilter (Separator &#x27;,&#x27; possible values: mta + MetaREGIONID &#x3D; (Filter by MetaRegion), reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMVEREINID &#x3D; (Filter by Tourismverein), (default:&#x27;null&#x27;)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    locationGetTheSkiareaList: function () {
      var _locationGetTheSkiareaList = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(language, locfilter) {
        var options,
            localVarPath,
            localVarUrlObj,
            baseOptions,
            localVarRequestOptions,
            localVarHeaderParameter,
            localVarQueryParameter,
            localVarAccessTokenValue,
            query,
            key,
            _key2,
            headersFromBaseOptions,
            _args2 = arguments;

        return regeneratorRuntime.wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                options = _args2.length > 2 && _args2[2] !== undefined ? _args2[2] : {};
                localVarPath = "/api/Location/Skiarea"; // use dummy base URL string because the URL constructor only accepts absolute URLs.

                localVarUrlObj = new URL(localVarPath, 'https://example.com');

                if (configuration) {
                  baseOptions = configuration.baseOptions;
                }

                localVarRequestOptions = _objectSpread2(_objectSpread2({
                  method: 'GET'
                }, baseOptions), options);
                localVarHeaderParameter = {};
                localVarQueryParameter = {}; // authentication oauth2 required
                // oauth required

                if (!(configuration && configuration.accessToken)) {
                  _context2.next = 19;
                  break;
                }

                if (!(typeof configuration.accessToken === 'function')) {
                  _context2.next = 14;
                  break;
                }

                _context2.next = 11;
                return configuration.accessToken("oauth2", [""]);

              case 11:
                _context2.t0 = _context2.sent;
                _context2.next = 17;
                break;

              case 14:
                _context2.next = 16;
                return configuration.accessToken;

              case 16:
                _context2.t0 = _context2.sent;

              case 17:
                localVarAccessTokenValue = _context2.t0;
                localVarHeaderParameter["Authorization"] = "Bearer " + localVarAccessTokenValue;

              case 19:
                if (language !== undefined) {
                  localVarQueryParameter['language'] = language;
                }

                if (locfilter !== undefined) {
                  localVarQueryParameter['locfilter'] = locfilter;
                }

                query = new URLSearchParams(localVarUrlObj.search);

                for (key in localVarQueryParameter) {
                  query.set(key, localVarQueryParameter[key]);
                }

                for (_key2 in options.query) {
                  query.set(_key2, options.query[_key2]);
                }

                localVarUrlObj.search = new URLSearchParams(query).toString();
                headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                localVarRequestOptions.headers = _objectSpread2(_objectSpread2(_objectSpread2({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                return _context2.abrupt("return", {
                  url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                  options: localVarRequestOptions
                });

              case 28:
              case "end":
                return _context2.stop();
            }
          }
        }, _callee2);
      }));

      function locationGetTheSkiareaList(_x5, _x6) {
        return _locationGetTheSkiareaList.apply(this, arguments);
      }

      return locationGetTheSkiareaList;
    }()
  };
};
/**
 * LocationApi - functional programming interface
 * @export
 */

var location_api_LocationApiFp = function LocationApiFp(configuration) {
  return {
    /**
     *
     * @summary GET Location List (Use in locfilter)
     * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)
     * @param {string} [type] Type (&#x27;mta&#x27;,&#x27;reg&#x27;,&#x27;tvs&#x27;,&#x27;mun&#x27;,&#x27;fra&#x27;) Separator &#x27;,&#x27; : &#x27;null&#x27; returns all Location Objects (default)
     * @param {boolean} [showall] Show all Data (true &#x3D; all, false &#x3D; show only data market as visible)
     * @param {string} [locfilter] Locfilter (Separator &#x27;,&#x27; possible values: mta + MetaREGIONID &#x3D; (Filter by MetaRegion), reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMVEREINID &#x3D; (Filter by Tourismverein), mun + MUNICIPALITYID &#x3D; (Filter by Municipality), fra + FRACTIONID &#x3D; (Filter by Fraction)), (default:&#x27;null&#x27;)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    locationGetTheLocationList: function locationGetTheLocationList(language, type, showall, locfilter, options) {
      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {
        var localVarAxiosArgs;
        return regeneratorRuntime.wrap(function _callee3$(_context3) {
          while (1) {
            switch (_context3.prev = _context3.next) {
              case 0:
                _context3.next = 2;
                return location_api_LocationApiAxiosParamCreator(configuration).locationGetTheLocationList(language, type, showall, locfilter, options);

              case 2:
                localVarAxiosArgs = _context3.sent;
                return _context3.abrupt("return", function () {
                  var axios = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : axios_default.a;
                  var basePath = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : BASE_PATH;

                  var axiosRequestArgs = _objectSpread2(_objectSpread2({}, localVarAxiosArgs.options), {}, {
                    url: basePath + localVarAxiosArgs.url
                  });

                  return axios.request(axiosRequestArgs);
                });

              case 4:
              case "end":
                return _context3.stop();
            }
          }
        }, _callee3);
      }))();
    },

    /**
     *
     * @summary GET Skiarea List (Use in locfilter as \"ska\")
     * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)
     * @param {string} [locfilter] Locfilter (Separator &#x27;,&#x27; possible values: mta + MetaREGIONID &#x3D; (Filter by MetaRegion), reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMVEREINID &#x3D; (Filter by Tourismverein), (default:&#x27;null&#x27;)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    locationGetTheSkiareaList: function locationGetTheSkiareaList(language, locfilter, options) {
      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4() {
        var localVarAxiosArgs;
        return regeneratorRuntime.wrap(function _callee4$(_context4) {
          while (1) {
            switch (_context4.prev = _context4.next) {
              case 0:
                _context4.next = 2;
                return location_api_LocationApiAxiosParamCreator(configuration).locationGetTheSkiareaList(language, locfilter, options);

              case 2:
                localVarAxiosArgs = _context4.sent;
                return _context4.abrupt("return", function () {
                  var axios = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : axios_default.a;
                  var basePath = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : BASE_PATH;

                  var axiosRequestArgs = _objectSpread2(_objectSpread2({}, localVarAxiosArgs.options), {}, {
                    url: basePath + localVarAxiosArgs.url
                  });

                  return axios.request(axiosRequestArgs);
                });

              case 4:
              case "end":
                return _context4.stop();
            }
          }
        }, _callee4);
      }))();
    }
  };
};
/**
 * LocationApi - factory interface
 * @export
 */

var LocationApiFactory = function LocationApiFactory(configuration, basePath, axios) {
  return {
    /**
     *
     * @summary GET Location List (Use in locfilter)
     * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)
     * @param {string} [type] Type (&#x27;mta&#x27;,&#x27;reg&#x27;,&#x27;tvs&#x27;,&#x27;mun&#x27;,&#x27;fra&#x27;) Separator &#x27;,&#x27; : &#x27;null&#x27; returns all Location Objects (default)
     * @param {boolean} [showall] Show all Data (true &#x3D; all, false &#x3D; show only data market as visible)
     * @param {string} [locfilter] Locfilter (Separator &#x27;,&#x27; possible values: mta + MetaREGIONID &#x3D; (Filter by MetaRegion), reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMVEREINID &#x3D; (Filter by Tourismverein), mun + MUNICIPALITYID &#x3D; (Filter by Municipality), fra + FRACTIONID &#x3D; (Filter by Fraction)), (default:&#x27;null&#x27;)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    locationGetTheLocationList: function locationGetTheLocationList(language, type, showall, locfilter, options) {
      return location_api_LocationApiFp(configuration).locationGetTheLocationList(language, type, showall, locfilter, options).then(function (request) {
        return request(axios, basePath);
      });
    },

    /**
     *
     * @summary GET Skiarea List (Use in locfilter as \"ska\")
     * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)
     * @param {string} [locfilter] Locfilter (Separator &#x27;,&#x27; possible values: mta + MetaREGIONID &#x3D; (Filter by MetaRegion), reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMVEREINID &#x3D; (Filter by Tourismverein), (default:&#x27;null&#x27;)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    locationGetTheSkiareaList: function locationGetTheSkiareaList(language, locfilter, options) {
      return location_api_LocationApiFp(configuration).locationGetTheSkiareaList(language, locfilter, options).then(function (request) {
        return request(axios, basePath);
      });
    }
  };
};
/**
 * LocationApi - object-oriented interface
 * @export
 * @class LocationApi
 * @extends {BaseAPI}
 */

var location_api_LocationApi = /*#__PURE__*/function (_BaseAPI) {
  _inherits(LocationApi, _BaseAPI);

  var _super = _createSuper(LocationApi);

  function LocationApi() {
    _classCallCheck(this, LocationApi);

    return _super.apply(this, arguments);
  }

  _createClass(LocationApi, [{
    key: "locationGetTheLocationList",

    /**
     *
     * @summary GET Location List (Use in locfilter)
     * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)
     * @param {string} [type] Type (&#x27;mta&#x27;,&#x27;reg&#x27;,&#x27;tvs&#x27;,&#x27;mun&#x27;,&#x27;fra&#x27;) Separator &#x27;,&#x27; : &#x27;null&#x27; returns all Location Objects (default)
     * @param {boolean} [showall] Show all Data (true &#x3D; all, false &#x3D; show only data market as visible)
     * @param {string} [locfilter] Locfilter (Separator &#x27;,&#x27; possible values: mta + MetaREGIONID &#x3D; (Filter by MetaRegion), reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMVEREINID &#x3D; (Filter by Tourismverein), mun + MUNICIPALITYID &#x3D; (Filter by Municipality), fra + FRACTIONID &#x3D; (Filter by Fraction)), (default:&#x27;null&#x27;)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof LocationApi
     */
    value: function locationGetTheLocationList(language, type, showall, locfilter, options) {
      var _this = this;

      return location_api_LocationApiFp(this.configuration).locationGetTheLocationList(language, type, showall, locfilter, options).then(function (request) {
        return request(_this.axios, _this.basePath);
      });
    }
    /**
     *
     * @summary GET Skiarea List (Use in locfilter as \"ska\")
     * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)
     * @param {string} [locfilter] Locfilter (Separator &#x27;,&#x27; possible values: mta + MetaREGIONID &#x3D; (Filter by MetaRegion), reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMVEREINID &#x3D; (Filter by Tourismverein), (default:&#x27;null&#x27;)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof LocationApi
     */

  }, {
    key: "locationGetTheSkiareaList",
    value: function locationGetTheSkiareaList(language, locfilter, options) {
      var _this2 = this;

      return location_api_LocationApiFp(this.configuration).locationGetTheSkiareaList(language, locfilter, options).then(function (request) {
        return request(_this2.axios, _this2.basePath);
      });
    }
  }]);

  return LocationApi;
}(base_BaseAPI);
// CONCATENATED MODULE: ./src/api/apis/login-api.ts
















/* tslint:disable */

/* eslint-disable */

/**
 * Open Data Hub Api Tourism
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: V1
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
 // Some imports not used depending on template conditions
// @ts-ignore


/**
 * LoginApi - axios parameter creator
 * @export
 */

var login_api_LoginApiAxiosParamCreator = function LoginApiAxiosParamCreator(configuration) {
  return {
    /**
     *
     * @summary Login
     * @param {string} grantType
     * @param {string} username
     * @param {string} password
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    tokenPost: function () {
      var _tokenPost = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(grantType, username, password) {
        var options,
            localVarPath,
            localVarUrlObj,
            baseOptions,
            localVarRequestOptions,
            localVarHeaderParameter,
            localVarQueryParameter,
            localVarFormParams,
            query,
            key,
            _key,
            headersFromBaseOptions,
            _args = arguments;

        return regeneratorRuntime.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                options = _args.length > 3 && _args[3] !== undefined ? _args[3] : {};

                if (!(grantType === null || grantType === undefined)) {
                  _context.next = 3;
                  break;
                }

                throw new base_RequiredError('grantType', 'Required parameter grantType was null or undefined when calling tokenPost.');

              case 3:
                if (!(username === null || username === undefined)) {
                  _context.next = 5;
                  break;
                }

                throw new base_RequiredError('username', 'Required parameter username was null or undefined when calling tokenPost.');

              case 5:
                if (!(password === null || password === undefined)) {
                  _context.next = 7;
                  break;
                }

                throw new base_RequiredError('password', 'Required parameter password was null or undefined when calling tokenPost.');

              case 7:
                localVarPath = "/token"; // use dummy base URL string because the URL constructor only accepts absolute URLs.

                localVarUrlObj = new URL(localVarPath, 'https://example.com');

                if (configuration) {
                  baseOptions = configuration.baseOptions;
                }

                localVarRequestOptions = _objectSpread2(_objectSpread2({
                  method: 'POST'
                }, baseOptions), options);
                localVarHeaderParameter = {};
                localVarQueryParameter = {};
                localVarFormParams = new URLSearchParams();

                if (grantType !== undefined) {
                  localVarFormParams.set('grant_type', grantType);
                }

                if (username !== undefined) {
                  localVarFormParams.set('username', username);
                }

                if (password !== undefined) {
                  localVarFormParams.set('password', password);
                }

                localVarHeaderParameter['Content-Type'] = 'application/x-www-form-urlencoded';
                query = new URLSearchParams(localVarUrlObj.search);

                for (key in localVarQueryParameter) {
                  query.set(key, localVarQueryParameter[key]);
                }

                for (_key in options.query) {
                  query.set(_key, options.query[_key]);
                }

                localVarUrlObj.search = new URLSearchParams(query).toString();
                headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                localVarRequestOptions.headers = _objectSpread2(_objectSpread2(_objectSpread2({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                localVarRequestOptions.data = localVarFormParams.toString();
                return _context.abrupt("return", {
                  url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                  options: localVarRequestOptions
                });

              case 26:
              case "end":
                return _context.stop();
            }
          }
        }, _callee);
      }));

      function tokenPost(_x, _x2, _x3) {
        return _tokenPost.apply(this, arguments);
      }

      return tokenPost;
    }()
  };
};
/**
 * LoginApi - functional programming interface
 * @export
 */

var login_api_LoginApiFp = function LoginApiFp(configuration) {
  return {
    /**
     *
     * @summary Login
     * @param {string} grantType
     * @param {string} username
     * @param {string} password
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    tokenPost: function tokenPost(grantType, username, password, options) {
      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {
        var localVarAxiosArgs;
        return regeneratorRuntime.wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                _context2.next = 2;
                return login_api_LoginApiAxiosParamCreator(configuration).tokenPost(grantType, username, password, options);

              case 2:
                localVarAxiosArgs = _context2.sent;
                return _context2.abrupt("return", function () {
                  var axios = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : axios_default.a;
                  var basePath = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : BASE_PATH;

                  var axiosRequestArgs = _objectSpread2(_objectSpread2({}, localVarAxiosArgs.options), {}, {
                    url: basePath + localVarAxiosArgs.url
                  });

                  return axios.request(axiosRequestArgs);
                });

              case 4:
              case "end":
                return _context2.stop();
            }
          }
        }, _callee2);
      }))();
    }
  };
};
/**
 * LoginApi - factory interface
 * @export
 */

var LoginApiFactory = function LoginApiFactory(configuration, basePath, axios) {
  return {
    /**
     *
     * @summary Login
     * @param {string} grantType
     * @param {string} username
     * @param {string} password
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    tokenPost: function tokenPost(grantType, username, password, options) {
      return login_api_LoginApiFp(configuration).tokenPost(grantType, username, password, options).then(function (request) {
        return request(axios, basePath);
      });
    }
  };
};
/**
 * LoginApi - object-oriented interface
 * @export
 * @class LoginApi
 * @extends {BaseAPI}
 */

var login_api_LoginApi = /*#__PURE__*/function (_BaseAPI) {
  _inherits(LoginApi, _BaseAPI);

  var _super = _createSuper(LoginApi);

  function LoginApi() {
    _classCallCheck(this, LoginApi);

    return _super.apply(this, arguments);
  }

  _createClass(LoginApi, [{
    key: "tokenPost",

    /**
     *
     * @summary Login
     * @param {string} grantType
     * @param {string} username
     * @param {string} password
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof LoginApi
     */
    value: function tokenPost(grantType, username, password, options) {
      var _this = this;

      return login_api_LoginApiFp(this.configuration).tokenPost(grantType, username, password, options).then(function (request) {
        return request(_this.axios, _this.basePath);
      });
    }
  }]);

  return LoginApi;
}(base_BaseAPI);
// CONCATENATED MODULE: ./src/api/apis/odhactivity-poi-api.ts

















/* tslint:disable */

/* eslint-disable */

/**
 * Open Data Hub Api Tourism
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: V1
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
 // Some imports not used depending on template conditions
// @ts-ignore


/**
 * ODHActivityPoiApi - axios parameter creator
 * @export
 */

var odhactivity_poi_api_ODHActivityPoiApiAxiosParamCreator = function ODHActivityPoiApiAxiosParamCreator(configuration) {
  return {
    /**
     *
     * @summary GET ODHActivityPoi Changed List by Date
     * @param {number} [pagenumber] Pagenumber, (default:1)
     * @param {number} [pagesize] Elements per Page, (default:10)
     * @param {string} [seed] Seed &#x27;1 - 10&#x27; for Random Sorting, &#x27;0&#x27; generates a Random Seed, &#x27;null&#x27; disables Random Sorting, (default:null)
     * @param {string} [updatefrom] Date from Format (yyyy-MM-dd) (all ODHActivityPoi with LastChange &amp;gt;&#x3D; datefrom are passed), (default: DateTime.Now - 1 Day)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    oDHActivityPoiGetAllODHActivityPoiChanged: function () {
      var _oDHActivityPoiGetAllODHActivityPoiChanged = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(pagenumber, pagesize, seed, updatefrom) {
        var options,
            localVarPath,
            localVarUrlObj,
            baseOptions,
            localVarRequestOptions,
            localVarHeaderParameter,
            localVarQueryParameter,
            localVarAccessTokenValue,
            query,
            key,
            _key,
            headersFromBaseOptions,
            _args = arguments;

        return regeneratorRuntime.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                options = _args.length > 4 && _args[4] !== undefined ? _args[4] : {};
                localVarPath = "/api/ODHActivityPoiChanged"; // use dummy base URL string because the URL constructor only accepts absolute URLs.

                localVarUrlObj = new URL(localVarPath, 'https://example.com');

                if (configuration) {
                  baseOptions = configuration.baseOptions;
                }

                localVarRequestOptions = _objectSpread2(_objectSpread2({
                  method: 'GET'
                }, baseOptions), options);
                localVarHeaderParameter = {};
                localVarQueryParameter = {}; // authentication oauth2 required
                // oauth required

                if (!(configuration && configuration.accessToken)) {
                  _context.next = 19;
                  break;
                }

                if (!(typeof configuration.accessToken === 'function')) {
                  _context.next = 14;
                  break;
                }

                _context.next = 11;
                return configuration.accessToken("oauth2", [""]);

              case 11:
                _context.t0 = _context.sent;
                _context.next = 17;
                break;

              case 14:
                _context.next = 16;
                return configuration.accessToken;

              case 16:
                _context.t0 = _context.sent;

              case 17:
                localVarAccessTokenValue = _context.t0;
                localVarHeaderParameter["Authorization"] = "Bearer " + localVarAccessTokenValue;

              case 19:
                if (pagenumber !== undefined) {
                  localVarQueryParameter['pagenumber'] = pagenumber;
                }

                if (pagesize !== undefined) {
                  localVarQueryParameter['pagesize'] = pagesize;
                }

                if (seed !== undefined) {
                  localVarQueryParameter['seed'] = seed;
                }

                if (updatefrom !== undefined) {
                  localVarQueryParameter['updatefrom'] = updatefrom;
                }

                query = new URLSearchParams(localVarUrlObj.search);

                for (key in localVarQueryParameter) {
                  query.set(key, localVarQueryParameter[key]);
                }

                for (_key in options.query) {
                  query.set(_key, options.query[_key]);
                }

                localVarUrlObj.search = new URLSearchParams(query).toString();
                headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                localVarRequestOptions.headers = _objectSpread2(_objectSpread2(_objectSpread2({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                return _context.abrupt("return", {
                  url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                  options: localVarRequestOptions
                });

              case 30:
              case "end":
                return _context.stop();
            }
          }
        }, _callee);
      }));

      function oDHActivityPoiGetAllODHActivityPoiChanged(_x, _x2, _x3, _x4) {
        return _oDHActivityPoiGetAllODHActivityPoiChanged.apply(this, arguments);
      }

      return oDHActivityPoiGetAllODHActivityPoiChanged;
    }(),

    /**
     *
     * @summary GET ODHActivityPoi Types List
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    oDHActivityPoiGetAllODHActivityPoiTypesList: function () {
      var _oDHActivityPoiGetAllODHActivityPoiTypesList = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {
        var options,
            localVarPath,
            localVarUrlObj,
            baseOptions,
            localVarRequestOptions,
            localVarHeaderParameter,
            localVarQueryParameter,
            localVarAccessTokenValue,
            query,
            key,
            _key2,
            headersFromBaseOptions,
            _args2 = arguments;

        return regeneratorRuntime.wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                options = _args2.length > 0 && _args2[0] !== undefined ? _args2[0] : {};
                localVarPath = "/api/ODHActivityPoiTypes"; // use dummy base URL string because the URL constructor only accepts absolute URLs.

                localVarUrlObj = new URL(localVarPath, 'https://example.com');

                if (configuration) {
                  baseOptions = configuration.baseOptions;
                }

                localVarRequestOptions = _objectSpread2(_objectSpread2({
                  method: 'GET'
                }, baseOptions), options);
                localVarHeaderParameter = {};
                localVarQueryParameter = {}; // authentication oauth2 required
                // oauth required

                if (!(configuration && configuration.accessToken)) {
                  _context2.next = 19;
                  break;
                }

                if (!(typeof configuration.accessToken === 'function')) {
                  _context2.next = 14;
                  break;
                }

                _context2.next = 11;
                return configuration.accessToken("oauth2", [""]);

              case 11:
                _context2.t0 = _context2.sent;
                _context2.next = 17;
                break;

              case 14:
                _context2.next = 16;
                return configuration.accessToken;

              case 16:
                _context2.t0 = _context2.sent;

              case 17:
                localVarAccessTokenValue = _context2.t0;
                localVarHeaderParameter["Authorization"] = "Bearer " + localVarAccessTokenValue;

              case 19:
                query = new URLSearchParams(localVarUrlObj.search);

                for (key in localVarQueryParameter) {
                  query.set(key, localVarQueryParameter[key]);
                }

                for (_key2 in options.query) {
                  query.set(_key2, options.query[_key2]);
                }

                localVarUrlObj.search = new URLSearchParams(query).toString();
                headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                localVarRequestOptions.headers = _objectSpread2(_objectSpread2(_objectSpread2({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                return _context2.abrupt("return", {
                  url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                  options: localVarRequestOptions
                });

              case 26:
              case "end":
                return _context2.stop();
            }
          }
        }, _callee2);
      }));

      function oDHActivityPoiGetAllODHActivityPoiTypesList() {
        return _oDHActivityPoiGetAllODHActivityPoiTypesList.apply(this, arguments);
      }

      return oDHActivityPoiGetAllODHActivityPoiTypesList;
    }(),

    /**
     *
     * @summary GET ODHActivityPoi Types Single
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    oDHActivityPoiGetAllODHActivityPoiTypesSingle: function () {
      var _oDHActivityPoiGetAllODHActivityPoiTypesSingle = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(id) {
        var options,
            localVarPath,
            localVarUrlObj,
            baseOptions,
            localVarRequestOptions,
            localVarHeaderParameter,
            localVarQueryParameter,
            localVarAccessTokenValue,
            query,
            key,
            _key3,
            headersFromBaseOptions,
            _args3 = arguments;

        return regeneratorRuntime.wrap(function _callee3$(_context3) {
          while (1) {
            switch (_context3.prev = _context3.next) {
              case 0:
                options = _args3.length > 1 && _args3[1] !== undefined ? _args3[1] : {};

                if (!(id === null || id === undefined)) {
                  _context3.next = 3;
                  break;
                }

                throw new base_RequiredError('id', 'Required parameter id was null or undefined when calling oDHActivityPoiGetAllODHActivityPoiTypesSingle.');

              case 3:
                localVarPath = "/api/ODHActivityPoiTypes/{id}".replace("{".concat("id", "}"), encodeURIComponent(String(id))); // use dummy base URL string because the URL constructor only accepts absolute URLs.

                localVarUrlObj = new URL(localVarPath, 'https://example.com');

                if (configuration) {
                  baseOptions = configuration.baseOptions;
                }

                localVarRequestOptions = _objectSpread2(_objectSpread2({
                  method: 'GET'
                }, baseOptions), options);
                localVarHeaderParameter = {};
                localVarQueryParameter = {}; // authentication oauth2 required
                // oauth required

                if (!(configuration && configuration.accessToken)) {
                  _context3.next = 21;
                  break;
                }

                if (!(typeof configuration.accessToken === 'function')) {
                  _context3.next = 16;
                  break;
                }

                _context3.next = 13;
                return configuration.accessToken("oauth2", [""]);

              case 13:
                _context3.t0 = _context3.sent;
                _context3.next = 19;
                break;

              case 16:
                _context3.next = 18;
                return configuration.accessToken;

              case 18:
                _context3.t0 = _context3.sent;

              case 19:
                localVarAccessTokenValue = _context3.t0;
                localVarHeaderParameter["Authorization"] = "Bearer " + localVarAccessTokenValue;

              case 21:
                query = new URLSearchParams(localVarUrlObj.search);

                for (key in localVarQueryParameter) {
                  query.set(key, localVarQueryParameter[key]);
                }

                for (_key3 in options.query) {
                  query.set(_key3, options.query[_key3]);
                }

                localVarUrlObj.search = new URLSearchParams(query).toString();
                headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                localVarRequestOptions.headers = _objectSpread2(_objectSpread2(_objectSpread2({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                return _context3.abrupt("return", {
                  url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                  options: localVarRequestOptions
                });

              case 28:
              case "end":
                return _context3.stop();
            }
          }
        }, _callee3);
      }));

      function oDHActivityPoiGetAllODHActivityPoiTypesSingle(_x5) {
        return _oDHActivityPoiGetAllODHActivityPoiTypesSingle.apply(this, arguments);
      }

      return oDHActivityPoiGetAllODHActivityPoiTypesSingle;
    }(),

    /**
     *
     * @summary GET ODHActivityPoi List
     * @param {number} [pagenumber] Pagenumber, (default:1)
     * @param {number} [pagesize] Elements per Page, (default:10)
     * @param {string} [type] Type of the ODHActivityPoi (&#x27;null&#x27; &#x3D; Filter disabled, possible values: BITMASK: 1 &#x3D; Wellness, 2 &#x3D; Winter, 4 &#x3D; Summer, 8 &#x3D; Culture, 16 &#x3D; Other, 32 &#x3D; Gastronomy, 64 &#x3D; Mobility, 128 &#x3D; Shops and Services), (default: 255 &#x3D;&#x3D; ALL), REFERENCE TO: GET /api/ODHActivityPoiTypes
     * @param {string} [subtype] Subtype of the ODHActivityPoi (&#x27;null&#x27; &#x3D; Filter disabled, BITMASK Filter, available SubTypes depends on the selected Maintype reference to ODHActivityPoiTypes)
     * @param {string} [poitype] Additional Type of the ODHActivityPoi (&#x27;null&#x27; &#x3D; Filter disabled, BITMASK Filter, available SubTypes depends on the selected Maintype, SubType reference to ODHActivityPoiTypes)
     * @param {string} [idlist] IDFilter (Separator &#x27;,&#x27; List of ODHActivityPoi IDs), (default:&#x27;null&#x27;)
     * @param {string} [locfilter] Locfilter (Separator &#x27;,&#x27; possible values: reg + REGIONID &#x3D; (Filter by Region), reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMASSOCIATIONID &#x3D; (Filter by Tourismassociation), mun + MUNICIPALITYID &#x3D; (Filter by Municipality), fra + FRACTIONID &#x3D; (Filter by Fraction), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)
     * @param {string} [langfilter] ODHActivityPoi Langfilter (returns only SmgPois available in the selected Language, Separator &#x27;,&#x27; possible values: &#x27;de,it,en,nl,sc,pl,fr,ru&#x27;, &#x27;null&#x27;: Filter disabled)
     * @param {string} [areafilter] AreaFilter (Alternate Locfilter, can be combined with locfilter) (Separator &#x27;,&#x27; possible values: reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMASSOCIATIONID &#x3D; (Filter by Tourismassociation), skr + SKIREGIONID &#x3D; (Filter by Skiregion), ska + SKIAREAID &#x3D; (Filter by Skiarea), are + AREAID &#x3D; (Filter by LTS Area), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)
     * @param {boolean} [highlight] Hightlight Filter (possible values: &#x27;false&#x27; &#x3D; only ODHActivityPoi with Highlight false, &#x27;true&#x27; &#x3D; only ODHActivityPoi with Highlight true), (default:&#x27;null&#x27;)
     * @param {string} [source] Source Filter (possible Values: &#x27;null&#x27; Displays all ODHActivityPoi, &#x27;None&#x27;, &#x27;ActivityData&#x27;, &#x27;PoiData&#x27;, &#x27;GastronomicData&#x27;, &#x27;MuseumData&#x27;, &#x27;Magnolia&#x27;, &#x27;Content&#x27;, &#x27;SuedtirolWein&#x27;, &#x27;ArchApp&#x27; (default:&#x27;null&#x27;)
     * @param {string} [odhtagfilter] ODH Taglist Filter (refers to Array SmgTags) (String, Separator &#x27;,&#x27; more Tags possible, available Tags reference to &#x27;api/ODHTag?validforentity&#x3D;smgpoi&#x27;), (default:&#x27;null&#x27;)
     * @param {boolean} [odhactive] ODH Active (Published) ODHActivityPoi Filter (Refers to field SmgActive) (possible Values: &#x27;true&#x27; only published ODHActivityPoi, &#x27;false&#x27; only not published ODHActivityPoi, (default:&#x27;null&#x27;)
     * @param {boolean} [active] Active ODHActivityPoi Filter (possible Values: &#x27;true&#x27; only active ODHActivityPoi, &#x27;false&#x27; only not active ODHActivityPoi, (default:&#x27;null&#x27;)
     * @param {string} [seed] Seed &#x27;1 - 10&#x27; for Random Sorting, &#x27;0&#x27; generates a Random Seed, not provided disables Random Sorting, (default:&#x27;null&#x27;)
     * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)
     * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)
     * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)
     * @param {string} [updatefrom] Date from Format (yyyy-MM-dd) (all GBActivityPoi with LastChange &amp;gt;&#x3D; datefrom are passed), (default: null)
     * @param {string} [searchfilter] String to search for, Title in all languages are searched, (default: null)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    oDHActivityPoiGetODHActivityPoiList: function () {
      var _oDHActivityPoiGetODHActivityPoiList = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(pagenumber, pagesize, type, subtype, poitype, idlist, locfilter, langfilter, areafilter, highlight, source, odhtagfilter, odhactive, active, seed, latitude, longitude, radius, fields, language, updatefrom, searchfilter) {
        var options,
            localVarPath,
            localVarUrlObj,
            baseOptions,
            localVarRequestOptions,
            localVarHeaderParameter,
            localVarQueryParameter,
            localVarAccessTokenValue,
            query,
            key,
            _key4,
            headersFromBaseOptions,
            _args4 = arguments;

        return regeneratorRuntime.wrap(function _callee4$(_context4) {
          while (1) {
            switch (_context4.prev = _context4.next) {
              case 0:
                options = _args4.length > 22 && _args4[22] !== undefined ? _args4[22] : {};
                localVarPath = "/api/ODHActivityPoi"; // use dummy base URL string because the URL constructor only accepts absolute URLs.

                localVarUrlObj = new URL(localVarPath, 'https://example.com');

                if (configuration) {
                  baseOptions = configuration.baseOptions;
                }

                localVarRequestOptions = _objectSpread2(_objectSpread2({
                  method: 'GET'
                }, baseOptions), options);
                localVarHeaderParameter = {};
                localVarQueryParameter = {}; // authentication oauth2 required
                // oauth required

                if (!(configuration && configuration.accessToken)) {
                  _context4.next = 19;
                  break;
                }

                if (!(typeof configuration.accessToken === 'function')) {
                  _context4.next = 14;
                  break;
                }

                _context4.next = 11;
                return configuration.accessToken("oauth2", [""]);

              case 11:
                _context4.t0 = _context4.sent;
                _context4.next = 17;
                break;

              case 14:
                _context4.next = 16;
                return configuration.accessToken;

              case 16:
                _context4.t0 = _context4.sent;

              case 17:
                localVarAccessTokenValue = _context4.t0;
                localVarHeaderParameter["Authorization"] = "Bearer " + localVarAccessTokenValue;

              case 19:
                if (pagenumber !== undefined) {
                  localVarQueryParameter['pagenumber'] = pagenumber;
                }

                if (pagesize !== undefined) {
                  localVarQueryParameter['pagesize'] = pagesize;
                }

                if (type !== undefined) {
                  localVarQueryParameter['type'] = type;
                }

                if (subtype !== undefined) {
                  localVarQueryParameter['subtype'] = subtype;
                }

                if (poitype !== undefined) {
                  localVarQueryParameter['poitype'] = poitype;
                }

                if (idlist !== undefined) {
                  localVarQueryParameter['idlist'] = idlist;
                }

                if (locfilter !== undefined) {
                  localVarQueryParameter['locfilter'] = locfilter;
                }

                if (langfilter !== undefined) {
                  localVarQueryParameter['langfilter'] = langfilter;
                }

                if (areafilter !== undefined) {
                  localVarQueryParameter['areafilter'] = areafilter;
                }

                if (highlight !== undefined) {
                  localVarQueryParameter['highlight'] = highlight;
                }

                if (source !== undefined) {
                  localVarQueryParameter['source'] = source;
                }

                if (odhtagfilter !== undefined) {
                  localVarQueryParameter['odhtagfilter'] = odhtagfilter;
                }

                if (odhactive !== undefined) {
                  localVarQueryParameter['odhactive'] = odhactive;
                }

                if (active !== undefined) {
                  localVarQueryParameter['active'] = active;
                }

                if (seed !== undefined) {
                  localVarQueryParameter['seed'] = seed;
                }

                if (latitude !== undefined) {
                  localVarQueryParameter['latitude'] = latitude;
                }

                if (longitude !== undefined) {
                  localVarQueryParameter['longitude'] = longitude;
                }

                if (radius !== undefined) {
                  localVarQueryParameter['radius'] = radius;
                }

                if (fields !== undefined) {
                  localVarQueryParameter['fields'] = fields;
                }

                if (language !== undefined) {
                  localVarQueryParameter['language'] = language;
                }

                if (updatefrom !== undefined) {
                  localVarQueryParameter['updatefrom'] = updatefrom;
                }

                if (searchfilter !== undefined) {
                  localVarQueryParameter['searchfilter'] = searchfilter;
                }

                query = new URLSearchParams(localVarUrlObj.search);

                for (key in localVarQueryParameter) {
                  query.set(key, localVarQueryParameter[key]);
                }

                for (_key4 in options.query) {
                  query.set(_key4, options.query[_key4]);
                }

                localVarUrlObj.search = new URLSearchParams(query).toString();
                headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                localVarRequestOptions.headers = _objectSpread2(_objectSpread2(_objectSpread2({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                return _context4.abrupt("return", {
                  url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                  options: localVarRequestOptions
                });

              case 48:
              case "end":
                return _context4.stop();
            }
          }
        }, _callee4);
      }));

      function oDHActivityPoiGetODHActivityPoiList(_x6, _x7, _x8, _x9, _x10, _x11, _x12, _x13, _x14, _x15, _x16, _x17, _x18, _x19, _x20, _x21, _x22, _x23, _x24, _x25, _x26, _x27) {
        return _oDHActivityPoiGetODHActivityPoiList.apply(this, arguments);
      }

      return oDHActivityPoiGetODHActivityPoiList;
    }(),

    /**
     *
     * @summary GET ODHActivityPoi List Localized
     * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)
     * @param {number} [pagenumber] Pagenumber, (default:1)
     * @param {number} [pagesize] Elements per Page, (default:10)
     * @param {string} [type] Type of the ODHActivityPoi (&#x27;null&#x27; &#x3D; Filter disabled, possible values: BITMASK: 1 &#x3D; Wellness, 2 &#x3D; Winter, 4 &#x3D; Summer, 8 &#x3D; Culture, 16 &#x3D; Other, 32 &#x3D; Gastronomy, 64 &#x3D; Mobility, 128 &#x3D; Shops and Services), (default: 255 &#x3D;&#x3D; ALL), REFERENCE TO: GET /api/ODHActivityPoiTypes
     * @param {string} [subtype] Subtype of the ODHActivityPoi (&#x27;null&#x27; &#x3D; Filter disabled, BITMASK Filter, available SubTypes depends on the selected Maintype reference to ODHActivityPoiTypes)
     * @param {string} [poitype] Additional Type of the ODHActivityPoi (&#x27;null&#x27; &#x3D; Filter disabled, BITMASK Filter, available SubTypes depends on the selected Maintype, SubType reference to ODHActivityPoiTypes)
     * @param {string} [idlist] IDFilter (Separator &#x27;,&#x27; List of ODHActivityPoi IDs), (default:&#x27;null&#x27;)
     * @param {string} [locfilter] Locfilter (Separator &#x27;,&#x27; possible values: reg + REGIONID &#x3D; (Filter by Region), reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMASSOCIATIONID &#x3D; (Filter by Tourismassociation), mun + MUNICIPALITYID &#x3D; (Filter by Municipality), fra + FRACTIONID &#x3D; (Filter by Fraction), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)
     * @param {string} [langfilter] ODHActivityPoi Langfilter (returns only SmgPois available in the selected Language, Separator &#x27;,&#x27; possible values: &#x27;de,it,en,nl,sc,pl,fr,ru&#x27;, &#x27;null&#x27;: Filter disabled)
     * @param {string} [areafilter] AreaFilter (Alternate Locfilter, can be combined with locfilter) (Separator &#x27;,&#x27; possible values: reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMASSOCIATIONID &#x3D; (Filter by Tourismassociation), skr + SKIREGIONID &#x3D; (Filter by Skiregion), ska + SKIAREAID &#x3D; (Filter by Skiarea), are + AREAID &#x3D; (Filter by LTS Area), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)
     * @param {boolean} [highlight] Hightlight Filter (possible values: &#x27;false&#x27; &#x3D; only ODHActivityPoi with Highlight false, &#x27;true&#x27; &#x3D; only ODHActivityPoi with Highlight true), (default:&#x27;null&#x27;)
     * @param {string} [source] Source Filter (possible Values: &#x27;null&#x27; Displays all ODHActivityPoi, &#x27;None&#x27;, &#x27;ActivityData&#x27;, &#x27;PoiData&#x27;, &#x27;GastronomicData&#x27;, &#x27;MuseumData&#x27;, &#x27;Magnolia&#x27;, &#x27;Content&#x27;, &#x27;SuedtirolWein&#x27;, &#x27;Archapp&#x27; (default:&#x27;null&#x27;)
     * @param {string} [odhtagfilter] ODH Taglist Filter (refers to Array SmgTags) (String, Separator &#x27;,&#x27; more Tags possible, available Tags reference to &#x27;api/ODHTag?validforentity&#x3D;smgpoi&#x27;), (default:&#x27;null&#x27;)
     * @param {boolean} [odhactive] ODH Active (Published) ODHActivityPoi Filter (Refers to field SmgActive) (possible Values: &#x27;true&#x27; only published ODHActivityPoi, &#x27;false&#x27; only not published ODHActivityPoi, (default:&#x27;null&#x27;)
     * @param {boolean} [active] Active ODHActivityPoi Filter (possible Values: &#x27;true&#x27; only active ODHActivityPoi, &#x27;false&#x27; only not active ODHActivityPoi, (default:&#x27;null&#x27;)
     * @param {string} [seed] Seed &#x27;1 - 10&#x27; for Random Sorting, &#x27;0&#x27; generates a Random Seed, not provided disables Random Sorting, (default:&#x27;null&#x27;)
     * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    oDHActivityPoiGetODHActivityPoiListLocalized: function () {
      var _oDHActivityPoiGetODHActivityPoiListLocalized = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(language, pagenumber, pagesize, type, subtype, poitype, idlist, locfilter, langfilter, areafilter, highlight, source, odhtagfilter, odhactive, active, seed, latitude, longitude, radius) {
        var options,
            localVarPath,
            localVarUrlObj,
            baseOptions,
            localVarRequestOptions,
            localVarHeaderParameter,
            localVarQueryParameter,
            localVarAccessTokenValue,
            query,
            key,
            _key5,
            headersFromBaseOptions,
            _args5 = arguments;

        return regeneratorRuntime.wrap(function _callee5$(_context5) {
          while (1) {
            switch (_context5.prev = _context5.next) {
              case 0:
                options = _args5.length > 19 && _args5[19] !== undefined ? _args5[19] : {};
                localVarPath = "/api/ODHActivityPoiLocalized"; // use dummy base URL string because the URL constructor only accepts absolute URLs.

                localVarUrlObj = new URL(localVarPath, 'https://example.com');

                if (configuration) {
                  baseOptions = configuration.baseOptions;
                }

                localVarRequestOptions = _objectSpread2(_objectSpread2({
                  method: 'GET'
                }, baseOptions), options);
                localVarHeaderParameter = {};
                localVarQueryParameter = {}; // authentication oauth2 required
                // oauth required

                if (!(configuration && configuration.accessToken)) {
                  _context5.next = 19;
                  break;
                }

                if (!(typeof configuration.accessToken === 'function')) {
                  _context5.next = 14;
                  break;
                }

                _context5.next = 11;
                return configuration.accessToken("oauth2", [""]);

              case 11:
                _context5.t0 = _context5.sent;
                _context5.next = 17;
                break;

              case 14:
                _context5.next = 16;
                return configuration.accessToken;

              case 16:
                _context5.t0 = _context5.sent;

              case 17:
                localVarAccessTokenValue = _context5.t0;
                localVarHeaderParameter["Authorization"] = "Bearer " + localVarAccessTokenValue;

              case 19:
                if (language !== undefined) {
                  localVarQueryParameter['language'] = language;
                }

                if (pagenumber !== undefined) {
                  localVarQueryParameter['pagenumber'] = pagenumber;
                }

                if (pagesize !== undefined) {
                  localVarQueryParameter['pagesize'] = pagesize;
                }

                if (type !== undefined) {
                  localVarQueryParameter['type'] = type;
                }

                if (subtype !== undefined) {
                  localVarQueryParameter['subtype'] = subtype;
                }

                if (poitype !== undefined) {
                  localVarQueryParameter['poitype'] = poitype;
                }

                if (idlist !== undefined) {
                  localVarQueryParameter['idlist'] = idlist;
                }

                if (locfilter !== undefined) {
                  localVarQueryParameter['locfilter'] = locfilter;
                }

                if (langfilter !== undefined) {
                  localVarQueryParameter['langfilter'] = langfilter;
                }

                if (areafilter !== undefined) {
                  localVarQueryParameter['areafilter'] = areafilter;
                }

                if (highlight !== undefined) {
                  localVarQueryParameter['highlight'] = highlight;
                }

                if (source !== undefined) {
                  localVarQueryParameter['source'] = source;
                }

                if (odhtagfilter !== undefined) {
                  localVarQueryParameter['odhtagfilter'] = odhtagfilter;
                }

                if (odhactive !== undefined) {
                  localVarQueryParameter['odhactive'] = odhactive;
                }

                if (active !== undefined) {
                  localVarQueryParameter['active'] = active;
                }

                if (seed !== undefined) {
                  localVarQueryParameter['seed'] = seed;
                }

                if (latitude !== undefined) {
                  localVarQueryParameter['latitude'] = latitude;
                }

                if (longitude !== undefined) {
                  localVarQueryParameter['longitude'] = longitude;
                }

                if (radius !== undefined) {
                  localVarQueryParameter['radius'] = radius;
                }

                query = new URLSearchParams(localVarUrlObj.search);

                for (key in localVarQueryParameter) {
                  query.set(key, localVarQueryParameter[key]);
                }

                for (_key5 in options.query) {
                  query.set(_key5, options.query[_key5]);
                }

                localVarUrlObj.search = new URLSearchParams(query).toString();
                headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                localVarRequestOptions.headers = _objectSpread2(_objectSpread2(_objectSpread2({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                return _context5.abrupt("return", {
                  url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                  options: localVarRequestOptions
                });

              case 45:
              case "end":
                return _context5.stop();
            }
          }
        }, _callee5);
      }));

      function oDHActivityPoiGetODHActivityPoiListLocalized(_x28, _x29, _x30, _x31, _x32, _x33, _x34, _x35, _x36, _x37, _x38, _x39, _x40, _x41, _x42, _x43, _x44, _x45, _x46) {
        return _oDHActivityPoiGetODHActivityPoiListLocalized.apply(this, arguments);
      }

      return oDHActivityPoiGetODHActivityPoiListLocalized;
    }(),

    /**
     *
     * @summary GET ODHActivityPoi List Reduced
     * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)
     * @param {string} [type] Type of the ODHActivityPoi (&#x27;null&#x27; &#x3D; Filter disabled, possible values: BITMASK: 1 &#x3D; Wellness, 2 &#x3D; Winter, 4 &#x3D; Summer, 8 &#x3D; Culture, 16 &#x3D; Other, 64 &#x3D; Mobility, 128 &#x3D; Shops and Services), (default: 255 &#x3D;&#x3D; ALL), REFERENCE TO: GET /api/ODHActivityPoiTypes
     * @param {string} [subtype] Subtype of the ODHActivityPoi (&#x27;null&#x27; &#x3D; Filter disabled, BITMASK Filter, available SubTypes depends on the selected Maintype reference to ODHActivityPoiTypes)
     * @param {string} [poitype] Additional Type of the ODHActivityPoi (&#x27;null&#x27; &#x3D; Filter disabled, BITMASK Filter, available SubTypes depends on the selected Maintype, SubType reference to ODHActivityPoiTypes)
     * @param {string} [locfilter] Locfilter (Separator &#x27;,&#x27; possible values: reg + REGIONID &#x3D; (Filter by Region), reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMASSOCIATIONID &#x3D; (Filter by Tourismassociation), mun + MUNICIPALITYID &#x3D; (Filter by Municipality), fra + FRACTIONID &#x3D; (Filter by Fraction), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)
     * @param {string} [areafilter] AreaFilter (Alternate Locfilter, can be combined with locfilter) (Separator &#x27;,&#x27; possible values: reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMASSOCIATIONID &#x3D; (Filter by Tourismassociation), skr + SKIREGIONID &#x3D; (Filter by Skiregion), ska + SKIAREAID &#x3D; (Filter by Skiarea), are + AREAID &#x3D; (Filter by LTS Area), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)
     * @param {boolean} [highlight] Hightlight Filter (possible values: &#x27;false&#x27; &#x3D; only ODHActivityPoi with Highlight false, &#x27;true&#x27; &#x3D; only ODHActivityPoi with Highlight true), (default:&#x27;null&#x27;)
     * @param {string} [source] Source Filter (possible Values: &#x27;null&#x27; Displays all ODHActivityPoi, &#x27;None&#x27;, &#x27;ActivityData&#x27;, &#x27;PoiData&#x27;, &#x27;GastronomicData&#x27;, &#x27;MuseumData&#x27;, &#x27;Magnolia&#x27;, &#x27;Content&#x27;, &#x27;SuedtirolWein&#x27;, &#x27;Archapp&#x27; (default:&#x27;null&#x27;)
     * @param {string} [odhtagfilter] ODH Taglist Filter (refers to Array SmgTags) (String, Separator &#x27;,&#x27; more Tags possible, available Tags reference to &#x27;api/ODHTag?validforentity&#x3D;smgpoi&#x27;), (default:&#x27;null&#x27;)
     * @param {boolean} [odhactive] ODH Active (Published) ODHActivityPoi Filter (Refers to field SmgActive) (possible Values: &#x27;true&#x27; only published ODHActivityPoi, &#x27;false&#x27; only not published ODHActivityPoi, (default:&#x27;null&#x27;)
     * @param {boolean} [active] Active ODHActivityPoi Filter (possible Values: &#x27;true&#x27; only active ODHActivityPoi, &#x27;false&#x27; only not active ODHActivityPoi, (default:&#x27;null&#x27;)
     * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)
     * @param {string} [fields] Select fields to display, by Default Title and Id are selected if fields filter is null More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)
     * @param {boolean} [suedtirolmobil]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    oDHActivityPoiGetODHActivityPoiListReduced: function () {
      var _oDHActivityPoiGetODHActivityPoiListReduced = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6(language, type, subtype, poitype, locfilter, areafilter, highlight, source, odhtagfilter, odhactive, active, latitude, longitude, radius, fields, suedtirolmobil) {
        var options,
            localVarPath,
            localVarUrlObj,
            baseOptions,
            localVarRequestOptions,
            localVarHeaderParameter,
            localVarQueryParameter,
            localVarAccessTokenValue,
            query,
            key,
            _key6,
            headersFromBaseOptions,
            _args6 = arguments;

        return regeneratorRuntime.wrap(function _callee6$(_context6) {
          while (1) {
            switch (_context6.prev = _context6.next) {
              case 0:
                options = _args6.length > 16 && _args6[16] !== undefined ? _args6[16] : {};
                localVarPath = "/api/ODHActivityPoiReduced"; // use dummy base URL string because the URL constructor only accepts absolute URLs.

                localVarUrlObj = new URL(localVarPath, 'https://example.com');

                if (configuration) {
                  baseOptions = configuration.baseOptions;
                }

                localVarRequestOptions = _objectSpread2(_objectSpread2({
                  method: 'GET'
                }, baseOptions), options);
                localVarHeaderParameter = {};
                localVarQueryParameter = {}; // authentication oauth2 required
                // oauth required

                if (!(configuration && configuration.accessToken)) {
                  _context6.next = 19;
                  break;
                }

                if (!(typeof configuration.accessToken === 'function')) {
                  _context6.next = 14;
                  break;
                }

                _context6.next = 11;
                return configuration.accessToken("oauth2", [""]);

              case 11:
                _context6.t0 = _context6.sent;
                _context6.next = 17;
                break;

              case 14:
                _context6.next = 16;
                return configuration.accessToken;

              case 16:
                _context6.t0 = _context6.sent;

              case 17:
                localVarAccessTokenValue = _context6.t0;
                localVarHeaderParameter["Authorization"] = "Bearer " + localVarAccessTokenValue;

              case 19:
                if (language !== undefined) {
                  localVarQueryParameter['language'] = language;
                }

                if (type !== undefined) {
                  localVarQueryParameter['type'] = type;
                }

                if (subtype !== undefined) {
                  localVarQueryParameter['subtype'] = subtype;
                }

                if (poitype !== undefined) {
                  localVarQueryParameter['poitype'] = poitype;
                }

                if (locfilter !== undefined) {
                  localVarQueryParameter['locfilter'] = locfilter;
                }

                if (areafilter !== undefined) {
                  localVarQueryParameter['areafilter'] = areafilter;
                }

                if (highlight !== undefined) {
                  localVarQueryParameter['highlight'] = highlight;
                }

                if (source !== undefined) {
                  localVarQueryParameter['source'] = source;
                }

                if (odhtagfilter !== undefined) {
                  localVarQueryParameter['odhtagfilter'] = odhtagfilter;
                }

                if (odhactive !== undefined) {
                  localVarQueryParameter['odhactive'] = odhactive;
                }

                if (active !== undefined) {
                  localVarQueryParameter['active'] = active;
                }

                if (latitude !== undefined) {
                  localVarQueryParameter['latitude'] = latitude;
                }

                if (longitude !== undefined) {
                  localVarQueryParameter['longitude'] = longitude;
                }

                if (radius !== undefined) {
                  localVarQueryParameter['radius'] = radius;
                }

                if (fields !== undefined) {
                  localVarQueryParameter['fields'] = fields;
                }

                if (suedtirolmobil !== undefined) {
                  localVarQueryParameter['suedtirolmobil'] = suedtirolmobil;
                }

                query = new URLSearchParams(localVarUrlObj.search);

                for (key in localVarQueryParameter) {
                  query.set(key, localVarQueryParameter[key]);
                }

                for (_key6 in options.query) {
                  query.set(_key6, options.query[_key6]);
                }

                localVarUrlObj.search = new URLSearchParams(query).toString();
                headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                localVarRequestOptions.headers = _objectSpread2(_objectSpread2(_objectSpread2({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                return _context6.abrupt("return", {
                  url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                  options: localVarRequestOptions
                });

              case 42:
              case "end":
                return _context6.stop();
            }
          }
        }, _callee6);
      }));

      function oDHActivityPoiGetODHActivityPoiListReduced(_x47, _x48, _x49, _x50, _x51, _x52, _x53, _x54, _x55, _x56, _x57, _x58, _x59, _x60, _x61, _x62) {
        return _oDHActivityPoiGetODHActivityPoiListReduced.apply(this, arguments);
      }

      return oDHActivityPoiGetODHActivityPoiListReduced;
    }(),

    /**
     *
     * @summary GET ODHActivityPoi Single
     * @param {string} id ID of the Poi
     * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)
     * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    oDHActivityPoiGetODHActivityPoiSingle: function () {
      var _oDHActivityPoiGetODHActivityPoiSingle = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee7(id, fields, language) {
        var options,
            localVarPath,
            localVarUrlObj,
            baseOptions,
            localVarRequestOptions,
            localVarHeaderParameter,
            localVarQueryParameter,
            localVarAccessTokenValue,
            query,
            key,
            _key7,
            headersFromBaseOptions,
            _args7 = arguments;

        return regeneratorRuntime.wrap(function _callee7$(_context7) {
          while (1) {
            switch (_context7.prev = _context7.next) {
              case 0:
                options = _args7.length > 3 && _args7[3] !== undefined ? _args7[3] : {};

                if (!(id === null || id === undefined)) {
                  _context7.next = 3;
                  break;
                }

                throw new base_RequiredError('id', 'Required parameter id was null or undefined when calling oDHActivityPoiGetODHActivityPoiSingle.');

              case 3:
                localVarPath = "/api/ODHActivityPoi/{id}".replace("{".concat("id", "}"), encodeURIComponent(String(id))); // use dummy base URL string because the URL constructor only accepts absolute URLs.

                localVarUrlObj = new URL(localVarPath, 'https://example.com');

                if (configuration) {
                  baseOptions = configuration.baseOptions;
                }

                localVarRequestOptions = _objectSpread2(_objectSpread2({
                  method: 'GET'
                }, baseOptions), options);
                localVarHeaderParameter = {};
                localVarQueryParameter = {}; // authentication oauth2 required
                // oauth required

                if (!(configuration && configuration.accessToken)) {
                  _context7.next = 21;
                  break;
                }

                if (!(typeof configuration.accessToken === 'function')) {
                  _context7.next = 16;
                  break;
                }

                _context7.next = 13;
                return configuration.accessToken("oauth2", [""]);

              case 13:
                _context7.t0 = _context7.sent;
                _context7.next = 19;
                break;

              case 16:
                _context7.next = 18;
                return configuration.accessToken;

              case 18:
                _context7.t0 = _context7.sent;

              case 19:
                localVarAccessTokenValue = _context7.t0;
                localVarHeaderParameter["Authorization"] = "Bearer " + localVarAccessTokenValue;

              case 21:
                if (fields !== undefined) {
                  localVarQueryParameter['fields'] = fields;
                }

                if (language !== undefined) {
                  localVarQueryParameter['language'] = language;
                }

                query = new URLSearchParams(localVarUrlObj.search);

                for (key in localVarQueryParameter) {
                  query.set(key, localVarQueryParameter[key]);
                }

                for (_key7 in options.query) {
                  query.set(_key7, options.query[_key7]);
                }

                localVarUrlObj.search = new URLSearchParams(query).toString();
                headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                localVarRequestOptions.headers = _objectSpread2(_objectSpread2(_objectSpread2({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                return _context7.abrupt("return", {
                  url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                  options: localVarRequestOptions
                });

              case 30:
              case "end":
                return _context7.stop();
            }
          }
        }, _callee7);
      }));

      function oDHActivityPoiGetODHActivityPoiSingle(_x63, _x64, _x65) {
        return _oDHActivityPoiGetODHActivityPoiSingle.apply(this, arguments);
      }

      return oDHActivityPoiGetODHActivityPoiSingle;
    }(),

    /**
     *
     * @summary GET ODHActivityPoi Single Reduced
     * @param {string} id ID of the Poi
     * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    oDHActivityPoiGetODHActivityPoiSingleLocalized: function () {
      var _oDHActivityPoiGetODHActivityPoiSingleLocalized = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee8(id, language) {
        var options,
            localVarPath,
            localVarUrlObj,
            baseOptions,
            localVarRequestOptions,
            localVarHeaderParameter,
            localVarQueryParameter,
            localVarAccessTokenValue,
            query,
            key,
            _key8,
            headersFromBaseOptions,
            _args8 = arguments;

        return regeneratorRuntime.wrap(function _callee8$(_context8) {
          while (1) {
            switch (_context8.prev = _context8.next) {
              case 0:
                options = _args8.length > 2 && _args8[2] !== undefined ? _args8[2] : {};

                if (!(id === null || id === undefined)) {
                  _context8.next = 3;
                  break;
                }

                throw new base_RequiredError('id', 'Required parameter id was null or undefined when calling oDHActivityPoiGetODHActivityPoiSingleLocalized.');

              case 3:
                localVarPath = "/api/ODHActivityPoiLocalized/{id}".replace("{".concat("id", "}"), encodeURIComponent(String(id))); // use dummy base URL string because the URL constructor only accepts absolute URLs.

                localVarUrlObj = new URL(localVarPath, 'https://example.com');

                if (configuration) {
                  baseOptions = configuration.baseOptions;
                }

                localVarRequestOptions = _objectSpread2(_objectSpread2({
                  method: 'GET'
                }, baseOptions), options);
                localVarHeaderParameter = {};
                localVarQueryParameter = {}; // authentication oauth2 required
                // oauth required

                if (!(configuration && configuration.accessToken)) {
                  _context8.next = 21;
                  break;
                }

                if (!(typeof configuration.accessToken === 'function')) {
                  _context8.next = 16;
                  break;
                }

                _context8.next = 13;
                return configuration.accessToken("oauth2", [""]);

              case 13:
                _context8.t0 = _context8.sent;
                _context8.next = 19;
                break;

              case 16:
                _context8.next = 18;
                return configuration.accessToken;

              case 18:
                _context8.t0 = _context8.sent;

              case 19:
                localVarAccessTokenValue = _context8.t0;
                localVarHeaderParameter["Authorization"] = "Bearer " + localVarAccessTokenValue;

              case 21:
                if (language !== undefined) {
                  localVarQueryParameter['language'] = language;
                }

                query = new URLSearchParams(localVarUrlObj.search);

                for (key in localVarQueryParameter) {
                  query.set(key, localVarQueryParameter[key]);
                }

                for (_key8 in options.query) {
                  query.set(_key8, options.query[_key8]);
                }

                localVarUrlObj.search = new URLSearchParams(query).toString();
                headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                localVarRequestOptions.headers = _objectSpread2(_objectSpread2(_objectSpread2({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                return _context8.abrupt("return", {
                  url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                  options: localVarRequestOptions
                });

              case 29:
              case "end":
                return _context8.stop();
            }
          }
        }, _callee8);
      }));

      function oDHActivityPoiGetODHActivityPoiSingleLocalized(_x66, _x67) {
        return _oDHActivityPoiGetODHActivityPoiSingleLocalized.apply(this, arguments);
      }

      return oDHActivityPoiGetODHActivityPoiSingleLocalized;
    }()
  };
};
/**
 * ODHActivityPoiApi - functional programming interface
 * @export
 */

var odhactivity_poi_api_ODHActivityPoiApiFp = function ODHActivityPoiApiFp(configuration) {
  return {
    /**
     *
     * @summary GET ODHActivityPoi Changed List by Date
     * @param {number} [pagenumber] Pagenumber, (default:1)
     * @param {number} [pagesize] Elements per Page, (default:10)
     * @param {string} [seed] Seed &#x27;1 - 10&#x27; for Random Sorting, &#x27;0&#x27; generates a Random Seed, &#x27;null&#x27; disables Random Sorting, (default:null)
     * @param {string} [updatefrom] Date from Format (yyyy-MM-dd) (all ODHActivityPoi with LastChange &amp;gt;&#x3D; datefrom are passed), (default: DateTime.Now - 1 Day)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    oDHActivityPoiGetAllODHActivityPoiChanged: function oDHActivityPoiGetAllODHActivityPoiChanged(pagenumber, pagesize, seed, updatefrom, options) {
      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee9() {
        var localVarAxiosArgs;
        return regeneratorRuntime.wrap(function _callee9$(_context9) {
          while (1) {
            switch (_context9.prev = _context9.next) {
              case 0:
                _context9.next = 2;
                return odhactivity_poi_api_ODHActivityPoiApiAxiosParamCreator(configuration).oDHActivityPoiGetAllODHActivityPoiChanged(pagenumber, pagesize, seed, updatefrom, options);

              case 2:
                localVarAxiosArgs = _context9.sent;
                return _context9.abrupt("return", function () {
                  var axios = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : axios_default.a;
                  var basePath = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : BASE_PATH;

                  var axiosRequestArgs = _objectSpread2(_objectSpread2({}, localVarAxiosArgs.options), {}, {
                    url: basePath + localVarAxiosArgs.url
                  });

                  return axios.request(axiosRequestArgs);
                });

              case 4:
              case "end":
                return _context9.stop();
            }
          }
        }, _callee9);
      }))();
    },

    /**
     *
     * @summary GET ODHActivityPoi Types List
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    oDHActivityPoiGetAllODHActivityPoiTypesList: function oDHActivityPoiGetAllODHActivityPoiTypesList(options) {
      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee10() {
        var localVarAxiosArgs;
        return regeneratorRuntime.wrap(function _callee10$(_context10) {
          while (1) {
            switch (_context10.prev = _context10.next) {
              case 0:
                _context10.next = 2;
                return odhactivity_poi_api_ODHActivityPoiApiAxiosParamCreator(configuration).oDHActivityPoiGetAllODHActivityPoiTypesList(options);

              case 2:
                localVarAxiosArgs = _context10.sent;
                return _context10.abrupt("return", function () {
                  var axios = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : axios_default.a;
                  var basePath = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : BASE_PATH;

                  var axiosRequestArgs = _objectSpread2(_objectSpread2({}, localVarAxiosArgs.options), {}, {
                    url: basePath + localVarAxiosArgs.url
                  });

                  return axios.request(axiosRequestArgs);
                });

              case 4:
              case "end":
                return _context10.stop();
            }
          }
        }, _callee10);
      }))();
    },

    /**
     *
     * @summary GET ODHActivityPoi Types Single
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    oDHActivityPoiGetAllODHActivityPoiTypesSingle: function oDHActivityPoiGetAllODHActivityPoiTypesSingle(id, options) {
      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee11() {
        var localVarAxiosArgs;
        return regeneratorRuntime.wrap(function _callee11$(_context11) {
          while (1) {
            switch (_context11.prev = _context11.next) {
              case 0:
                _context11.next = 2;
                return odhactivity_poi_api_ODHActivityPoiApiAxiosParamCreator(configuration).oDHActivityPoiGetAllODHActivityPoiTypesSingle(id, options);

              case 2:
                localVarAxiosArgs = _context11.sent;
                return _context11.abrupt("return", function () {
                  var axios = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : axios_default.a;
                  var basePath = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : BASE_PATH;

                  var axiosRequestArgs = _objectSpread2(_objectSpread2({}, localVarAxiosArgs.options), {}, {
                    url: basePath + localVarAxiosArgs.url
                  });

                  return axios.request(axiosRequestArgs);
                });

              case 4:
              case "end":
                return _context11.stop();
            }
          }
        }, _callee11);
      }))();
    },

    /**
     *
     * @summary GET ODHActivityPoi List
     * @param {number} [pagenumber] Pagenumber, (default:1)
     * @param {number} [pagesize] Elements per Page, (default:10)
     * @param {string} [type] Type of the ODHActivityPoi (&#x27;null&#x27; &#x3D; Filter disabled, possible values: BITMASK: 1 &#x3D; Wellness, 2 &#x3D; Winter, 4 &#x3D; Summer, 8 &#x3D; Culture, 16 &#x3D; Other, 32 &#x3D; Gastronomy, 64 &#x3D; Mobility, 128 &#x3D; Shops and Services), (default: 255 &#x3D;&#x3D; ALL), REFERENCE TO: GET /api/ODHActivityPoiTypes
     * @param {string} [subtype] Subtype of the ODHActivityPoi (&#x27;null&#x27; &#x3D; Filter disabled, BITMASK Filter, available SubTypes depends on the selected Maintype reference to ODHActivityPoiTypes)
     * @param {string} [poitype] Additional Type of the ODHActivityPoi (&#x27;null&#x27; &#x3D; Filter disabled, BITMASK Filter, available SubTypes depends on the selected Maintype, SubType reference to ODHActivityPoiTypes)
     * @param {string} [idlist] IDFilter (Separator &#x27;,&#x27; List of ODHActivityPoi IDs), (default:&#x27;null&#x27;)
     * @param {string} [locfilter] Locfilter (Separator &#x27;,&#x27; possible values: reg + REGIONID &#x3D; (Filter by Region), reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMASSOCIATIONID &#x3D; (Filter by Tourismassociation), mun + MUNICIPALITYID &#x3D; (Filter by Municipality), fra + FRACTIONID &#x3D; (Filter by Fraction), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)
     * @param {string} [langfilter] ODHActivityPoi Langfilter (returns only SmgPois available in the selected Language, Separator &#x27;,&#x27; possible values: &#x27;de,it,en,nl,sc,pl,fr,ru&#x27;, &#x27;null&#x27;: Filter disabled)
     * @param {string} [areafilter] AreaFilter (Alternate Locfilter, can be combined with locfilter) (Separator &#x27;,&#x27; possible values: reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMASSOCIATIONID &#x3D; (Filter by Tourismassociation), skr + SKIREGIONID &#x3D; (Filter by Skiregion), ska + SKIAREAID &#x3D; (Filter by Skiarea), are + AREAID &#x3D; (Filter by LTS Area), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)
     * @param {boolean} [highlight] Hightlight Filter (possible values: &#x27;false&#x27; &#x3D; only ODHActivityPoi with Highlight false, &#x27;true&#x27; &#x3D; only ODHActivityPoi with Highlight true), (default:&#x27;null&#x27;)
     * @param {string} [source] Source Filter (possible Values: &#x27;null&#x27; Displays all ODHActivityPoi, &#x27;None&#x27;, &#x27;ActivityData&#x27;, &#x27;PoiData&#x27;, &#x27;GastronomicData&#x27;, &#x27;MuseumData&#x27;, &#x27;Magnolia&#x27;, &#x27;Content&#x27;, &#x27;SuedtirolWein&#x27;, &#x27;ArchApp&#x27; (default:&#x27;null&#x27;)
     * @param {string} [odhtagfilter] ODH Taglist Filter (refers to Array SmgTags) (String, Separator &#x27;,&#x27; more Tags possible, available Tags reference to &#x27;api/ODHTag?validforentity&#x3D;smgpoi&#x27;), (default:&#x27;null&#x27;)
     * @param {boolean} [odhactive] ODH Active (Published) ODHActivityPoi Filter (Refers to field SmgActive) (possible Values: &#x27;true&#x27; only published ODHActivityPoi, &#x27;false&#x27; only not published ODHActivityPoi, (default:&#x27;null&#x27;)
     * @param {boolean} [active] Active ODHActivityPoi Filter (possible Values: &#x27;true&#x27; only active ODHActivityPoi, &#x27;false&#x27; only not active ODHActivityPoi, (default:&#x27;null&#x27;)
     * @param {string} [seed] Seed &#x27;1 - 10&#x27; for Random Sorting, &#x27;0&#x27; generates a Random Seed, not provided disables Random Sorting, (default:&#x27;null&#x27;)
     * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)
     * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)
     * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)
     * @param {string} [updatefrom] Date from Format (yyyy-MM-dd) (all GBActivityPoi with LastChange &amp;gt;&#x3D; datefrom are passed), (default: null)
     * @param {string} [searchfilter] String to search for, Title in all languages are searched, (default: null)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    oDHActivityPoiGetODHActivityPoiList: function oDHActivityPoiGetODHActivityPoiList(pagenumber, pagesize, type, subtype, poitype, idlist, locfilter, langfilter, areafilter, highlight, source, odhtagfilter, odhactive, active, seed, latitude, longitude, radius, fields, language, updatefrom, searchfilter, options) {
      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee12() {
        var localVarAxiosArgs;
        return regeneratorRuntime.wrap(function _callee12$(_context12) {
          while (1) {
            switch (_context12.prev = _context12.next) {
              case 0:
                _context12.next = 2;
                return odhactivity_poi_api_ODHActivityPoiApiAxiosParamCreator(configuration).oDHActivityPoiGetODHActivityPoiList(pagenumber, pagesize, type, subtype, poitype, idlist, locfilter, langfilter, areafilter, highlight, source, odhtagfilter, odhactive, active, seed, latitude, longitude, radius, fields, language, updatefrom, searchfilter, options);

              case 2:
                localVarAxiosArgs = _context12.sent;
                return _context12.abrupt("return", function () {
                  var axios = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : axios_default.a;
                  var basePath = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : BASE_PATH;

                  var axiosRequestArgs = _objectSpread2(_objectSpread2({}, localVarAxiosArgs.options), {}, {
                    url: basePath + localVarAxiosArgs.url
                  });

                  return axios.request(axiosRequestArgs);
                });

              case 4:
              case "end":
                return _context12.stop();
            }
          }
        }, _callee12);
      }))();
    },

    /**
     *
     * @summary GET ODHActivityPoi List Localized
     * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)
     * @param {number} [pagenumber] Pagenumber, (default:1)
     * @param {number} [pagesize] Elements per Page, (default:10)
     * @param {string} [type] Type of the ODHActivityPoi (&#x27;null&#x27; &#x3D; Filter disabled, possible values: BITMASK: 1 &#x3D; Wellness, 2 &#x3D; Winter, 4 &#x3D; Summer, 8 &#x3D; Culture, 16 &#x3D; Other, 32 &#x3D; Gastronomy, 64 &#x3D; Mobility, 128 &#x3D; Shops and Services), (default: 255 &#x3D;&#x3D; ALL), REFERENCE TO: GET /api/ODHActivityPoiTypes
     * @param {string} [subtype] Subtype of the ODHActivityPoi (&#x27;null&#x27; &#x3D; Filter disabled, BITMASK Filter, available SubTypes depends on the selected Maintype reference to ODHActivityPoiTypes)
     * @param {string} [poitype] Additional Type of the ODHActivityPoi (&#x27;null&#x27; &#x3D; Filter disabled, BITMASK Filter, available SubTypes depends on the selected Maintype, SubType reference to ODHActivityPoiTypes)
     * @param {string} [idlist] IDFilter (Separator &#x27;,&#x27; List of ODHActivityPoi IDs), (default:&#x27;null&#x27;)
     * @param {string} [locfilter] Locfilter (Separator &#x27;,&#x27; possible values: reg + REGIONID &#x3D; (Filter by Region), reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMASSOCIATIONID &#x3D; (Filter by Tourismassociation), mun + MUNICIPALITYID &#x3D; (Filter by Municipality), fra + FRACTIONID &#x3D; (Filter by Fraction), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)
     * @param {string} [langfilter] ODHActivityPoi Langfilter (returns only SmgPois available in the selected Language, Separator &#x27;,&#x27; possible values: &#x27;de,it,en,nl,sc,pl,fr,ru&#x27;, &#x27;null&#x27;: Filter disabled)
     * @param {string} [areafilter] AreaFilter (Alternate Locfilter, can be combined with locfilter) (Separator &#x27;,&#x27; possible values: reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMASSOCIATIONID &#x3D; (Filter by Tourismassociation), skr + SKIREGIONID &#x3D; (Filter by Skiregion), ska + SKIAREAID &#x3D; (Filter by Skiarea), are + AREAID &#x3D; (Filter by LTS Area), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)
     * @param {boolean} [highlight] Hightlight Filter (possible values: &#x27;false&#x27; &#x3D; only ODHActivityPoi with Highlight false, &#x27;true&#x27; &#x3D; only ODHActivityPoi with Highlight true), (default:&#x27;null&#x27;)
     * @param {string} [source] Source Filter (possible Values: &#x27;null&#x27; Displays all ODHActivityPoi, &#x27;None&#x27;, &#x27;ActivityData&#x27;, &#x27;PoiData&#x27;, &#x27;GastronomicData&#x27;, &#x27;MuseumData&#x27;, &#x27;Magnolia&#x27;, &#x27;Content&#x27;, &#x27;SuedtirolWein&#x27;, &#x27;Archapp&#x27; (default:&#x27;null&#x27;)
     * @param {string} [odhtagfilter] ODH Taglist Filter (refers to Array SmgTags) (String, Separator &#x27;,&#x27; more Tags possible, available Tags reference to &#x27;api/ODHTag?validforentity&#x3D;smgpoi&#x27;), (default:&#x27;null&#x27;)
     * @param {boolean} [odhactive] ODH Active (Published) ODHActivityPoi Filter (Refers to field SmgActive) (possible Values: &#x27;true&#x27; only published ODHActivityPoi, &#x27;false&#x27; only not published ODHActivityPoi, (default:&#x27;null&#x27;)
     * @param {boolean} [active] Active ODHActivityPoi Filter (possible Values: &#x27;true&#x27; only active ODHActivityPoi, &#x27;false&#x27; only not active ODHActivityPoi, (default:&#x27;null&#x27;)
     * @param {string} [seed] Seed &#x27;1 - 10&#x27; for Random Sorting, &#x27;0&#x27; generates a Random Seed, not provided disables Random Sorting, (default:&#x27;null&#x27;)
     * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    oDHActivityPoiGetODHActivityPoiListLocalized: function oDHActivityPoiGetODHActivityPoiListLocalized(language, pagenumber, pagesize, type, subtype, poitype, idlist, locfilter, langfilter, areafilter, highlight, source, odhtagfilter, odhactive, active, seed, latitude, longitude, radius, options) {
      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee13() {
        var localVarAxiosArgs;
        return regeneratorRuntime.wrap(function _callee13$(_context13) {
          while (1) {
            switch (_context13.prev = _context13.next) {
              case 0:
                _context13.next = 2;
                return odhactivity_poi_api_ODHActivityPoiApiAxiosParamCreator(configuration).oDHActivityPoiGetODHActivityPoiListLocalized(language, pagenumber, pagesize, type, subtype, poitype, idlist, locfilter, langfilter, areafilter, highlight, source, odhtagfilter, odhactive, active, seed, latitude, longitude, radius, options);

              case 2:
                localVarAxiosArgs = _context13.sent;
                return _context13.abrupt("return", function () {
                  var axios = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : axios_default.a;
                  var basePath = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : BASE_PATH;

                  var axiosRequestArgs = _objectSpread2(_objectSpread2({}, localVarAxiosArgs.options), {}, {
                    url: basePath + localVarAxiosArgs.url
                  });

                  return axios.request(axiosRequestArgs);
                });

              case 4:
              case "end":
                return _context13.stop();
            }
          }
        }, _callee13);
      }))();
    },

    /**
     *
     * @summary GET ODHActivityPoi List Reduced
     * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)
     * @param {string} [type] Type of the ODHActivityPoi (&#x27;null&#x27; &#x3D; Filter disabled, possible values: BITMASK: 1 &#x3D; Wellness, 2 &#x3D; Winter, 4 &#x3D; Summer, 8 &#x3D; Culture, 16 &#x3D; Other, 64 &#x3D; Mobility, 128 &#x3D; Shops and Services), (default: 255 &#x3D;&#x3D; ALL), REFERENCE TO: GET /api/ODHActivityPoiTypes
     * @param {string} [subtype] Subtype of the ODHActivityPoi (&#x27;null&#x27; &#x3D; Filter disabled, BITMASK Filter, available SubTypes depends on the selected Maintype reference to ODHActivityPoiTypes)
     * @param {string} [poitype] Additional Type of the ODHActivityPoi (&#x27;null&#x27; &#x3D; Filter disabled, BITMASK Filter, available SubTypes depends on the selected Maintype, SubType reference to ODHActivityPoiTypes)
     * @param {string} [locfilter] Locfilter (Separator &#x27;,&#x27; possible values: reg + REGIONID &#x3D; (Filter by Region), reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMASSOCIATIONID &#x3D; (Filter by Tourismassociation), mun + MUNICIPALITYID &#x3D; (Filter by Municipality), fra + FRACTIONID &#x3D; (Filter by Fraction), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)
     * @param {string} [areafilter] AreaFilter (Alternate Locfilter, can be combined with locfilter) (Separator &#x27;,&#x27; possible values: reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMASSOCIATIONID &#x3D; (Filter by Tourismassociation), skr + SKIREGIONID &#x3D; (Filter by Skiregion), ska + SKIAREAID &#x3D; (Filter by Skiarea), are + AREAID &#x3D; (Filter by LTS Area), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)
     * @param {boolean} [highlight] Hightlight Filter (possible values: &#x27;false&#x27; &#x3D; only ODHActivityPoi with Highlight false, &#x27;true&#x27; &#x3D; only ODHActivityPoi with Highlight true), (default:&#x27;null&#x27;)
     * @param {string} [source] Source Filter (possible Values: &#x27;null&#x27; Displays all ODHActivityPoi, &#x27;None&#x27;, &#x27;ActivityData&#x27;, &#x27;PoiData&#x27;, &#x27;GastronomicData&#x27;, &#x27;MuseumData&#x27;, &#x27;Magnolia&#x27;, &#x27;Content&#x27;, &#x27;SuedtirolWein&#x27;, &#x27;Archapp&#x27; (default:&#x27;null&#x27;)
     * @param {string} [odhtagfilter] ODH Taglist Filter (refers to Array SmgTags) (String, Separator &#x27;,&#x27; more Tags possible, available Tags reference to &#x27;api/ODHTag?validforentity&#x3D;smgpoi&#x27;), (default:&#x27;null&#x27;)
     * @param {boolean} [odhactive] ODH Active (Published) ODHActivityPoi Filter (Refers to field SmgActive) (possible Values: &#x27;true&#x27; only published ODHActivityPoi, &#x27;false&#x27; only not published ODHActivityPoi, (default:&#x27;null&#x27;)
     * @param {boolean} [active] Active ODHActivityPoi Filter (possible Values: &#x27;true&#x27; only active ODHActivityPoi, &#x27;false&#x27; only not active ODHActivityPoi, (default:&#x27;null&#x27;)
     * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)
     * @param {string} [fields] Select fields to display, by Default Title and Id are selected if fields filter is null More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)
     * @param {boolean} [suedtirolmobil]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    oDHActivityPoiGetODHActivityPoiListReduced: function oDHActivityPoiGetODHActivityPoiListReduced(language, type, subtype, poitype, locfilter, areafilter, highlight, source, odhtagfilter, odhactive, active, latitude, longitude, radius, fields, suedtirolmobil, options) {
      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee14() {
        var localVarAxiosArgs;
        return regeneratorRuntime.wrap(function _callee14$(_context14) {
          while (1) {
            switch (_context14.prev = _context14.next) {
              case 0:
                _context14.next = 2;
                return odhactivity_poi_api_ODHActivityPoiApiAxiosParamCreator(configuration).oDHActivityPoiGetODHActivityPoiListReduced(language, type, subtype, poitype, locfilter, areafilter, highlight, source, odhtagfilter, odhactive, active, latitude, longitude, radius, fields, suedtirolmobil, options);

              case 2:
                localVarAxiosArgs = _context14.sent;
                return _context14.abrupt("return", function () {
                  var axios = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : axios_default.a;
                  var basePath = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : BASE_PATH;

                  var axiosRequestArgs = _objectSpread2(_objectSpread2({}, localVarAxiosArgs.options), {}, {
                    url: basePath + localVarAxiosArgs.url
                  });

                  return axios.request(axiosRequestArgs);
                });

              case 4:
              case "end":
                return _context14.stop();
            }
          }
        }, _callee14);
      }))();
    },

    /**
     *
     * @summary GET ODHActivityPoi Single
     * @param {string} id ID of the Poi
     * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)
     * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    oDHActivityPoiGetODHActivityPoiSingle: function oDHActivityPoiGetODHActivityPoiSingle(id, fields, language, options) {
      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee15() {
        var localVarAxiosArgs;
        return regeneratorRuntime.wrap(function _callee15$(_context15) {
          while (1) {
            switch (_context15.prev = _context15.next) {
              case 0:
                _context15.next = 2;
                return odhactivity_poi_api_ODHActivityPoiApiAxiosParamCreator(configuration).oDHActivityPoiGetODHActivityPoiSingle(id, fields, language, options);

              case 2:
                localVarAxiosArgs = _context15.sent;
                return _context15.abrupt("return", function () {
                  var axios = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : axios_default.a;
                  var basePath = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : BASE_PATH;

                  var axiosRequestArgs = _objectSpread2(_objectSpread2({}, localVarAxiosArgs.options), {}, {
                    url: basePath + localVarAxiosArgs.url
                  });

                  return axios.request(axiosRequestArgs);
                });

              case 4:
              case "end":
                return _context15.stop();
            }
          }
        }, _callee15);
      }))();
    },

    /**
     *
     * @summary GET ODHActivityPoi Single Reduced
     * @param {string} id ID of the Poi
     * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    oDHActivityPoiGetODHActivityPoiSingleLocalized: function oDHActivityPoiGetODHActivityPoiSingleLocalized(id, language, options) {
      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee16() {
        var localVarAxiosArgs;
        return regeneratorRuntime.wrap(function _callee16$(_context16) {
          while (1) {
            switch (_context16.prev = _context16.next) {
              case 0:
                _context16.next = 2;
                return odhactivity_poi_api_ODHActivityPoiApiAxiosParamCreator(configuration).oDHActivityPoiGetODHActivityPoiSingleLocalized(id, language, options);

              case 2:
                localVarAxiosArgs = _context16.sent;
                return _context16.abrupt("return", function () {
                  var axios = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : axios_default.a;
                  var basePath = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : BASE_PATH;

                  var axiosRequestArgs = _objectSpread2(_objectSpread2({}, localVarAxiosArgs.options), {}, {
                    url: basePath + localVarAxiosArgs.url
                  });

                  return axios.request(axiosRequestArgs);
                });

              case 4:
              case "end":
                return _context16.stop();
            }
          }
        }, _callee16);
      }))();
    }
  };
};
/**
 * ODHActivityPoiApi - factory interface
 * @export
 */

var ODHActivityPoiApiFactory = function ODHActivityPoiApiFactory(configuration, basePath, axios) {
  return {
    /**
     *
     * @summary GET ODHActivityPoi Changed List by Date
     * @param {number} [pagenumber] Pagenumber, (default:1)
     * @param {number} [pagesize] Elements per Page, (default:10)
     * @param {string} [seed] Seed &#x27;1 - 10&#x27; for Random Sorting, &#x27;0&#x27; generates a Random Seed, &#x27;null&#x27; disables Random Sorting, (default:null)
     * @param {string} [updatefrom] Date from Format (yyyy-MM-dd) (all ODHActivityPoi with LastChange &amp;gt;&#x3D; datefrom are passed), (default: DateTime.Now - 1 Day)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    oDHActivityPoiGetAllODHActivityPoiChanged: function oDHActivityPoiGetAllODHActivityPoiChanged(pagenumber, pagesize, seed, updatefrom, options) {
      return odhactivity_poi_api_ODHActivityPoiApiFp(configuration).oDHActivityPoiGetAllODHActivityPoiChanged(pagenumber, pagesize, seed, updatefrom, options).then(function (request) {
        return request(axios, basePath);
      });
    },

    /**
     *
     * @summary GET ODHActivityPoi Types List
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    oDHActivityPoiGetAllODHActivityPoiTypesList: function oDHActivityPoiGetAllODHActivityPoiTypesList(options) {
      return odhactivity_poi_api_ODHActivityPoiApiFp(configuration).oDHActivityPoiGetAllODHActivityPoiTypesList(options).then(function (request) {
        return request(axios, basePath);
      });
    },

    /**
     *
     * @summary GET ODHActivityPoi Types Single
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    oDHActivityPoiGetAllODHActivityPoiTypesSingle: function oDHActivityPoiGetAllODHActivityPoiTypesSingle(id, options) {
      return odhactivity_poi_api_ODHActivityPoiApiFp(configuration).oDHActivityPoiGetAllODHActivityPoiTypesSingle(id, options).then(function (request) {
        return request(axios, basePath);
      });
    },

    /**
     *
     * @summary GET ODHActivityPoi List
     * @param {number} [pagenumber] Pagenumber, (default:1)
     * @param {number} [pagesize] Elements per Page, (default:10)
     * @param {string} [type] Type of the ODHActivityPoi (&#x27;null&#x27; &#x3D; Filter disabled, possible values: BITMASK: 1 &#x3D; Wellness, 2 &#x3D; Winter, 4 &#x3D; Summer, 8 &#x3D; Culture, 16 &#x3D; Other, 32 &#x3D; Gastronomy, 64 &#x3D; Mobility, 128 &#x3D; Shops and Services), (default: 255 &#x3D;&#x3D; ALL), REFERENCE TO: GET /api/ODHActivityPoiTypes
     * @param {string} [subtype] Subtype of the ODHActivityPoi (&#x27;null&#x27; &#x3D; Filter disabled, BITMASK Filter, available SubTypes depends on the selected Maintype reference to ODHActivityPoiTypes)
     * @param {string} [poitype] Additional Type of the ODHActivityPoi (&#x27;null&#x27; &#x3D; Filter disabled, BITMASK Filter, available SubTypes depends on the selected Maintype, SubType reference to ODHActivityPoiTypes)
     * @param {string} [idlist] IDFilter (Separator &#x27;,&#x27; List of ODHActivityPoi IDs), (default:&#x27;null&#x27;)
     * @param {string} [locfilter] Locfilter (Separator &#x27;,&#x27; possible values: reg + REGIONID &#x3D; (Filter by Region), reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMASSOCIATIONID &#x3D; (Filter by Tourismassociation), mun + MUNICIPALITYID &#x3D; (Filter by Municipality), fra + FRACTIONID &#x3D; (Filter by Fraction), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)
     * @param {string} [langfilter] ODHActivityPoi Langfilter (returns only SmgPois available in the selected Language, Separator &#x27;,&#x27; possible values: &#x27;de,it,en,nl,sc,pl,fr,ru&#x27;, &#x27;null&#x27;: Filter disabled)
     * @param {string} [areafilter] AreaFilter (Alternate Locfilter, can be combined with locfilter) (Separator &#x27;,&#x27; possible values: reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMASSOCIATIONID &#x3D; (Filter by Tourismassociation), skr + SKIREGIONID &#x3D; (Filter by Skiregion), ska + SKIAREAID &#x3D; (Filter by Skiarea), are + AREAID &#x3D; (Filter by LTS Area), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)
     * @param {boolean} [highlight] Hightlight Filter (possible values: &#x27;false&#x27; &#x3D; only ODHActivityPoi with Highlight false, &#x27;true&#x27; &#x3D; only ODHActivityPoi with Highlight true), (default:&#x27;null&#x27;)
     * @param {string} [source] Source Filter (possible Values: &#x27;null&#x27; Displays all ODHActivityPoi, &#x27;None&#x27;, &#x27;ActivityData&#x27;, &#x27;PoiData&#x27;, &#x27;GastronomicData&#x27;, &#x27;MuseumData&#x27;, &#x27;Magnolia&#x27;, &#x27;Content&#x27;, &#x27;SuedtirolWein&#x27;, &#x27;ArchApp&#x27; (default:&#x27;null&#x27;)
     * @param {string} [odhtagfilter] ODH Taglist Filter (refers to Array SmgTags) (String, Separator &#x27;,&#x27; more Tags possible, available Tags reference to &#x27;api/ODHTag?validforentity&#x3D;smgpoi&#x27;), (default:&#x27;null&#x27;)
     * @param {boolean} [odhactive] ODH Active (Published) ODHActivityPoi Filter (Refers to field SmgActive) (possible Values: &#x27;true&#x27; only published ODHActivityPoi, &#x27;false&#x27; only not published ODHActivityPoi, (default:&#x27;null&#x27;)
     * @param {boolean} [active] Active ODHActivityPoi Filter (possible Values: &#x27;true&#x27; only active ODHActivityPoi, &#x27;false&#x27; only not active ODHActivityPoi, (default:&#x27;null&#x27;)
     * @param {string} [seed] Seed &#x27;1 - 10&#x27; for Random Sorting, &#x27;0&#x27; generates a Random Seed, not provided disables Random Sorting, (default:&#x27;null&#x27;)
     * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)
     * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)
     * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)
     * @param {string} [updatefrom] Date from Format (yyyy-MM-dd) (all GBActivityPoi with LastChange &amp;gt;&#x3D; datefrom are passed), (default: null)
     * @param {string} [searchfilter] String to search for, Title in all languages are searched, (default: null)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    oDHActivityPoiGetODHActivityPoiList: function oDHActivityPoiGetODHActivityPoiList(pagenumber, pagesize, type, subtype, poitype, idlist, locfilter, langfilter, areafilter, highlight, source, odhtagfilter, odhactive, active, seed, latitude, longitude, radius, fields, language, updatefrom, searchfilter, options) {
      return odhactivity_poi_api_ODHActivityPoiApiFp(configuration).oDHActivityPoiGetODHActivityPoiList(pagenumber, pagesize, type, subtype, poitype, idlist, locfilter, langfilter, areafilter, highlight, source, odhtagfilter, odhactive, active, seed, latitude, longitude, radius, fields, language, updatefrom, searchfilter, options).then(function (request) {
        return request(axios, basePath);
      });
    },

    /**
     *
     * @summary GET ODHActivityPoi List Localized
     * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)
     * @param {number} [pagenumber] Pagenumber, (default:1)
     * @param {number} [pagesize] Elements per Page, (default:10)
     * @param {string} [type] Type of the ODHActivityPoi (&#x27;null&#x27; &#x3D; Filter disabled, possible values: BITMASK: 1 &#x3D; Wellness, 2 &#x3D; Winter, 4 &#x3D; Summer, 8 &#x3D; Culture, 16 &#x3D; Other, 32 &#x3D; Gastronomy, 64 &#x3D; Mobility, 128 &#x3D; Shops and Services), (default: 255 &#x3D;&#x3D; ALL), REFERENCE TO: GET /api/ODHActivityPoiTypes
     * @param {string} [subtype] Subtype of the ODHActivityPoi (&#x27;null&#x27; &#x3D; Filter disabled, BITMASK Filter, available SubTypes depends on the selected Maintype reference to ODHActivityPoiTypes)
     * @param {string} [poitype] Additional Type of the ODHActivityPoi (&#x27;null&#x27; &#x3D; Filter disabled, BITMASK Filter, available SubTypes depends on the selected Maintype, SubType reference to ODHActivityPoiTypes)
     * @param {string} [idlist] IDFilter (Separator &#x27;,&#x27; List of ODHActivityPoi IDs), (default:&#x27;null&#x27;)
     * @param {string} [locfilter] Locfilter (Separator &#x27;,&#x27; possible values: reg + REGIONID &#x3D; (Filter by Region), reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMASSOCIATIONID &#x3D; (Filter by Tourismassociation), mun + MUNICIPALITYID &#x3D; (Filter by Municipality), fra + FRACTIONID &#x3D; (Filter by Fraction), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)
     * @param {string} [langfilter] ODHActivityPoi Langfilter (returns only SmgPois available in the selected Language, Separator &#x27;,&#x27; possible values: &#x27;de,it,en,nl,sc,pl,fr,ru&#x27;, &#x27;null&#x27;: Filter disabled)
     * @param {string} [areafilter] AreaFilter (Alternate Locfilter, can be combined with locfilter) (Separator &#x27;,&#x27; possible values: reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMASSOCIATIONID &#x3D; (Filter by Tourismassociation), skr + SKIREGIONID &#x3D; (Filter by Skiregion), ska + SKIAREAID &#x3D; (Filter by Skiarea), are + AREAID &#x3D; (Filter by LTS Area), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)
     * @param {boolean} [highlight] Hightlight Filter (possible values: &#x27;false&#x27; &#x3D; only ODHActivityPoi with Highlight false, &#x27;true&#x27; &#x3D; only ODHActivityPoi with Highlight true), (default:&#x27;null&#x27;)
     * @param {string} [source] Source Filter (possible Values: &#x27;null&#x27; Displays all ODHActivityPoi, &#x27;None&#x27;, &#x27;ActivityData&#x27;, &#x27;PoiData&#x27;, &#x27;GastronomicData&#x27;, &#x27;MuseumData&#x27;, &#x27;Magnolia&#x27;, &#x27;Content&#x27;, &#x27;SuedtirolWein&#x27;, &#x27;Archapp&#x27; (default:&#x27;null&#x27;)
     * @param {string} [odhtagfilter] ODH Taglist Filter (refers to Array SmgTags) (String, Separator &#x27;,&#x27; more Tags possible, available Tags reference to &#x27;api/ODHTag?validforentity&#x3D;smgpoi&#x27;), (default:&#x27;null&#x27;)
     * @param {boolean} [odhactive] ODH Active (Published) ODHActivityPoi Filter (Refers to field SmgActive) (possible Values: &#x27;true&#x27; only published ODHActivityPoi, &#x27;false&#x27; only not published ODHActivityPoi, (default:&#x27;null&#x27;)
     * @param {boolean} [active] Active ODHActivityPoi Filter (possible Values: &#x27;true&#x27; only active ODHActivityPoi, &#x27;false&#x27; only not active ODHActivityPoi, (default:&#x27;null&#x27;)
     * @param {string} [seed] Seed &#x27;1 - 10&#x27; for Random Sorting, &#x27;0&#x27; generates a Random Seed, not provided disables Random Sorting, (default:&#x27;null&#x27;)
     * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    oDHActivityPoiGetODHActivityPoiListLocalized: function oDHActivityPoiGetODHActivityPoiListLocalized(language, pagenumber, pagesize, type, subtype, poitype, idlist, locfilter, langfilter, areafilter, highlight, source, odhtagfilter, odhactive, active, seed, latitude, longitude, radius, options) {
      return odhactivity_poi_api_ODHActivityPoiApiFp(configuration).oDHActivityPoiGetODHActivityPoiListLocalized(language, pagenumber, pagesize, type, subtype, poitype, idlist, locfilter, langfilter, areafilter, highlight, source, odhtagfilter, odhactive, active, seed, latitude, longitude, radius, options).then(function (request) {
        return request(axios, basePath);
      });
    },

    /**
     *
     * @summary GET ODHActivityPoi List Reduced
     * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)
     * @param {string} [type] Type of the ODHActivityPoi (&#x27;null&#x27; &#x3D; Filter disabled, possible values: BITMASK: 1 &#x3D; Wellness, 2 &#x3D; Winter, 4 &#x3D; Summer, 8 &#x3D; Culture, 16 &#x3D; Other, 64 &#x3D; Mobility, 128 &#x3D; Shops and Services), (default: 255 &#x3D;&#x3D; ALL), REFERENCE TO: GET /api/ODHActivityPoiTypes
     * @param {string} [subtype] Subtype of the ODHActivityPoi (&#x27;null&#x27; &#x3D; Filter disabled, BITMASK Filter, available SubTypes depends on the selected Maintype reference to ODHActivityPoiTypes)
     * @param {string} [poitype] Additional Type of the ODHActivityPoi (&#x27;null&#x27; &#x3D; Filter disabled, BITMASK Filter, available SubTypes depends on the selected Maintype, SubType reference to ODHActivityPoiTypes)
     * @param {string} [locfilter] Locfilter (Separator &#x27;,&#x27; possible values: reg + REGIONID &#x3D; (Filter by Region), reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMASSOCIATIONID &#x3D; (Filter by Tourismassociation), mun + MUNICIPALITYID &#x3D; (Filter by Municipality), fra + FRACTIONID &#x3D; (Filter by Fraction), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)
     * @param {string} [areafilter] AreaFilter (Alternate Locfilter, can be combined with locfilter) (Separator &#x27;,&#x27; possible values: reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMASSOCIATIONID &#x3D; (Filter by Tourismassociation), skr + SKIREGIONID &#x3D; (Filter by Skiregion), ska + SKIAREAID &#x3D; (Filter by Skiarea), are + AREAID &#x3D; (Filter by LTS Area), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)
     * @param {boolean} [highlight] Hightlight Filter (possible values: &#x27;false&#x27; &#x3D; only ODHActivityPoi with Highlight false, &#x27;true&#x27; &#x3D; only ODHActivityPoi with Highlight true), (default:&#x27;null&#x27;)
     * @param {string} [source] Source Filter (possible Values: &#x27;null&#x27; Displays all ODHActivityPoi, &#x27;None&#x27;, &#x27;ActivityData&#x27;, &#x27;PoiData&#x27;, &#x27;GastronomicData&#x27;, &#x27;MuseumData&#x27;, &#x27;Magnolia&#x27;, &#x27;Content&#x27;, &#x27;SuedtirolWein&#x27;, &#x27;Archapp&#x27; (default:&#x27;null&#x27;)
     * @param {string} [odhtagfilter] ODH Taglist Filter (refers to Array SmgTags) (String, Separator &#x27;,&#x27; more Tags possible, available Tags reference to &#x27;api/ODHTag?validforentity&#x3D;smgpoi&#x27;), (default:&#x27;null&#x27;)
     * @param {boolean} [odhactive] ODH Active (Published) ODHActivityPoi Filter (Refers to field SmgActive) (possible Values: &#x27;true&#x27; only published ODHActivityPoi, &#x27;false&#x27; only not published ODHActivityPoi, (default:&#x27;null&#x27;)
     * @param {boolean} [active] Active ODHActivityPoi Filter (possible Values: &#x27;true&#x27; only active ODHActivityPoi, &#x27;false&#x27; only not active ODHActivityPoi, (default:&#x27;null&#x27;)
     * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)
     * @param {string} [fields] Select fields to display, by Default Title and Id are selected if fields filter is null More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)
     * @param {boolean} [suedtirolmobil]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    oDHActivityPoiGetODHActivityPoiListReduced: function oDHActivityPoiGetODHActivityPoiListReduced(language, type, subtype, poitype, locfilter, areafilter, highlight, source, odhtagfilter, odhactive, active, latitude, longitude, radius, fields, suedtirolmobil, options) {
      return odhactivity_poi_api_ODHActivityPoiApiFp(configuration).oDHActivityPoiGetODHActivityPoiListReduced(language, type, subtype, poitype, locfilter, areafilter, highlight, source, odhtagfilter, odhactive, active, latitude, longitude, radius, fields, suedtirolmobil, options).then(function (request) {
        return request(axios, basePath);
      });
    },

    /**
     *
     * @summary GET ODHActivityPoi Single
     * @param {string} id ID of the Poi
     * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)
     * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    oDHActivityPoiGetODHActivityPoiSingle: function oDHActivityPoiGetODHActivityPoiSingle(id, fields, language, options) {
      return odhactivity_poi_api_ODHActivityPoiApiFp(configuration).oDHActivityPoiGetODHActivityPoiSingle(id, fields, language, options).then(function (request) {
        return request(axios, basePath);
      });
    },

    /**
     *
     * @summary GET ODHActivityPoi Single Reduced
     * @param {string} id ID of the Poi
     * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    oDHActivityPoiGetODHActivityPoiSingleLocalized: function oDHActivityPoiGetODHActivityPoiSingleLocalized(id, language, options) {
      return odhactivity_poi_api_ODHActivityPoiApiFp(configuration).oDHActivityPoiGetODHActivityPoiSingleLocalized(id, language, options).then(function (request) {
        return request(axios, basePath);
      });
    }
  };
};
/**
 * ODHActivityPoiApi - object-oriented interface
 * @export
 * @class ODHActivityPoiApi
 * @extends {BaseAPI}
 */

var odhactivity_poi_api_ODHActivityPoiApi = /*#__PURE__*/function (_BaseAPI) {
  _inherits(ODHActivityPoiApi, _BaseAPI);

  var _super = _createSuper(ODHActivityPoiApi);

  function ODHActivityPoiApi() {
    _classCallCheck(this, ODHActivityPoiApi);

    return _super.apply(this, arguments);
  }

  _createClass(ODHActivityPoiApi, [{
    key: "oDHActivityPoiGetAllODHActivityPoiChanged",

    /**
     *
     * @summary GET ODHActivityPoi Changed List by Date
     * @param {number} [pagenumber] Pagenumber, (default:1)
     * @param {number} [pagesize] Elements per Page, (default:10)
     * @param {string} [seed] Seed &#x27;1 - 10&#x27; for Random Sorting, &#x27;0&#x27; generates a Random Seed, &#x27;null&#x27; disables Random Sorting, (default:null)
     * @param {string} [updatefrom] Date from Format (yyyy-MM-dd) (all ODHActivityPoi with LastChange &amp;gt;&#x3D; datefrom are passed), (default: DateTime.Now - 1 Day)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ODHActivityPoiApi
     */
    value: function oDHActivityPoiGetAllODHActivityPoiChanged(pagenumber, pagesize, seed, updatefrom, options) {
      var _this = this;

      return odhactivity_poi_api_ODHActivityPoiApiFp(this.configuration).oDHActivityPoiGetAllODHActivityPoiChanged(pagenumber, pagesize, seed, updatefrom, options).then(function (request) {
        return request(_this.axios, _this.basePath);
      });
    }
    /**
     *
     * @summary GET ODHActivityPoi Types List
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ODHActivityPoiApi
     */

  }, {
    key: "oDHActivityPoiGetAllODHActivityPoiTypesList",
    value: function oDHActivityPoiGetAllODHActivityPoiTypesList(options) {
      var _this2 = this;

      return odhactivity_poi_api_ODHActivityPoiApiFp(this.configuration).oDHActivityPoiGetAllODHActivityPoiTypesList(options).then(function (request) {
        return request(_this2.axios, _this2.basePath);
      });
    }
    /**
     *
     * @summary GET ODHActivityPoi Types Single
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ODHActivityPoiApi
     */

  }, {
    key: "oDHActivityPoiGetAllODHActivityPoiTypesSingle",
    value: function oDHActivityPoiGetAllODHActivityPoiTypesSingle(id, options) {
      var _this3 = this;

      return odhactivity_poi_api_ODHActivityPoiApiFp(this.configuration).oDHActivityPoiGetAllODHActivityPoiTypesSingle(id, options).then(function (request) {
        return request(_this3.axios, _this3.basePath);
      });
    }
    /**
     *
     * @summary GET ODHActivityPoi List
     * @param {number} [pagenumber] Pagenumber, (default:1)
     * @param {number} [pagesize] Elements per Page, (default:10)
     * @param {string} [type] Type of the ODHActivityPoi (&#x27;null&#x27; &#x3D; Filter disabled, possible values: BITMASK: 1 &#x3D; Wellness, 2 &#x3D; Winter, 4 &#x3D; Summer, 8 &#x3D; Culture, 16 &#x3D; Other, 32 &#x3D; Gastronomy, 64 &#x3D; Mobility, 128 &#x3D; Shops and Services), (default: 255 &#x3D;&#x3D; ALL), REFERENCE TO: GET /api/ODHActivityPoiTypes
     * @param {string} [subtype] Subtype of the ODHActivityPoi (&#x27;null&#x27; &#x3D; Filter disabled, BITMASK Filter, available SubTypes depends on the selected Maintype reference to ODHActivityPoiTypes)
     * @param {string} [poitype] Additional Type of the ODHActivityPoi (&#x27;null&#x27; &#x3D; Filter disabled, BITMASK Filter, available SubTypes depends on the selected Maintype, SubType reference to ODHActivityPoiTypes)
     * @param {string} [idlist] IDFilter (Separator &#x27;,&#x27; List of ODHActivityPoi IDs), (default:&#x27;null&#x27;)
     * @param {string} [locfilter] Locfilter (Separator &#x27;,&#x27; possible values: reg + REGIONID &#x3D; (Filter by Region), reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMASSOCIATIONID &#x3D; (Filter by Tourismassociation), mun + MUNICIPALITYID &#x3D; (Filter by Municipality), fra + FRACTIONID &#x3D; (Filter by Fraction), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)
     * @param {string} [langfilter] ODHActivityPoi Langfilter (returns only SmgPois available in the selected Language, Separator &#x27;,&#x27; possible values: &#x27;de,it,en,nl,sc,pl,fr,ru&#x27;, &#x27;null&#x27;: Filter disabled)
     * @param {string} [areafilter] AreaFilter (Alternate Locfilter, can be combined with locfilter) (Separator &#x27;,&#x27; possible values: reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMASSOCIATIONID &#x3D; (Filter by Tourismassociation), skr + SKIREGIONID &#x3D; (Filter by Skiregion), ska + SKIAREAID &#x3D; (Filter by Skiarea), are + AREAID &#x3D; (Filter by LTS Area), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)
     * @param {boolean} [highlight] Hightlight Filter (possible values: &#x27;false&#x27; &#x3D; only ODHActivityPoi with Highlight false, &#x27;true&#x27; &#x3D; only ODHActivityPoi with Highlight true), (default:&#x27;null&#x27;)
     * @param {string} [source] Source Filter (possible Values: &#x27;null&#x27; Displays all ODHActivityPoi, &#x27;None&#x27;, &#x27;ActivityData&#x27;, &#x27;PoiData&#x27;, &#x27;GastronomicData&#x27;, &#x27;MuseumData&#x27;, &#x27;Magnolia&#x27;, &#x27;Content&#x27;, &#x27;SuedtirolWein&#x27;, &#x27;ArchApp&#x27; (default:&#x27;null&#x27;)
     * @param {string} [odhtagfilter] ODH Taglist Filter (refers to Array SmgTags) (String, Separator &#x27;,&#x27; more Tags possible, available Tags reference to &#x27;api/ODHTag?validforentity&#x3D;smgpoi&#x27;), (default:&#x27;null&#x27;)
     * @param {boolean} [odhactive] ODH Active (Published) ODHActivityPoi Filter (Refers to field SmgActive) (possible Values: &#x27;true&#x27; only published ODHActivityPoi, &#x27;false&#x27; only not published ODHActivityPoi, (default:&#x27;null&#x27;)
     * @param {boolean} [active] Active ODHActivityPoi Filter (possible Values: &#x27;true&#x27; only active ODHActivityPoi, &#x27;false&#x27; only not active ODHActivityPoi, (default:&#x27;null&#x27;)
     * @param {string} [seed] Seed &#x27;1 - 10&#x27; for Random Sorting, &#x27;0&#x27; generates a Random Seed, not provided disables Random Sorting, (default:&#x27;null&#x27;)
     * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)
     * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)
     * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)
     * @param {string} [updatefrom] Date from Format (yyyy-MM-dd) (all GBActivityPoi with LastChange &amp;gt;&#x3D; datefrom are passed), (default: null)
     * @param {string} [searchfilter] String to search for, Title in all languages are searched, (default: null)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ODHActivityPoiApi
     */

  }, {
    key: "oDHActivityPoiGetODHActivityPoiList",
    value: function oDHActivityPoiGetODHActivityPoiList(pagenumber, pagesize, type, subtype, poitype, idlist, locfilter, langfilter, areafilter, highlight, source, odhtagfilter, odhactive, active, seed, latitude, longitude, radius, fields, language, updatefrom, searchfilter, options) {
      var _this4 = this;

      return odhactivity_poi_api_ODHActivityPoiApiFp(this.configuration).oDHActivityPoiGetODHActivityPoiList(pagenumber, pagesize, type, subtype, poitype, idlist, locfilter, langfilter, areafilter, highlight, source, odhtagfilter, odhactive, active, seed, latitude, longitude, radius, fields, language, updatefrom, searchfilter, options).then(function (request) {
        return request(_this4.axios, _this4.basePath);
      });
    }
    /**
     *
     * @summary GET ODHActivityPoi List Localized
     * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)
     * @param {number} [pagenumber] Pagenumber, (default:1)
     * @param {number} [pagesize] Elements per Page, (default:10)
     * @param {string} [type] Type of the ODHActivityPoi (&#x27;null&#x27; &#x3D; Filter disabled, possible values: BITMASK: 1 &#x3D; Wellness, 2 &#x3D; Winter, 4 &#x3D; Summer, 8 &#x3D; Culture, 16 &#x3D; Other, 32 &#x3D; Gastronomy, 64 &#x3D; Mobility, 128 &#x3D; Shops and Services), (default: 255 &#x3D;&#x3D; ALL), REFERENCE TO: GET /api/ODHActivityPoiTypes
     * @param {string} [subtype] Subtype of the ODHActivityPoi (&#x27;null&#x27; &#x3D; Filter disabled, BITMASK Filter, available SubTypes depends on the selected Maintype reference to ODHActivityPoiTypes)
     * @param {string} [poitype] Additional Type of the ODHActivityPoi (&#x27;null&#x27; &#x3D; Filter disabled, BITMASK Filter, available SubTypes depends on the selected Maintype, SubType reference to ODHActivityPoiTypes)
     * @param {string} [idlist] IDFilter (Separator &#x27;,&#x27; List of ODHActivityPoi IDs), (default:&#x27;null&#x27;)
     * @param {string} [locfilter] Locfilter (Separator &#x27;,&#x27; possible values: reg + REGIONID &#x3D; (Filter by Region), reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMASSOCIATIONID &#x3D; (Filter by Tourismassociation), mun + MUNICIPALITYID &#x3D; (Filter by Municipality), fra + FRACTIONID &#x3D; (Filter by Fraction), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)
     * @param {string} [langfilter] ODHActivityPoi Langfilter (returns only SmgPois available in the selected Language, Separator &#x27;,&#x27; possible values: &#x27;de,it,en,nl,sc,pl,fr,ru&#x27;, &#x27;null&#x27;: Filter disabled)
     * @param {string} [areafilter] AreaFilter (Alternate Locfilter, can be combined with locfilter) (Separator &#x27;,&#x27; possible values: reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMASSOCIATIONID &#x3D; (Filter by Tourismassociation), skr + SKIREGIONID &#x3D; (Filter by Skiregion), ska + SKIAREAID &#x3D; (Filter by Skiarea), are + AREAID &#x3D; (Filter by LTS Area), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)
     * @param {boolean} [highlight] Hightlight Filter (possible values: &#x27;false&#x27; &#x3D; only ODHActivityPoi with Highlight false, &#x27;true&#x27; &#x3D; only ODHActivityPoi with Highlight true), (default:&#x27;null&#x27;)
     * @param {string} [source] Source Filter (possible Values: &#x27;null&#x27; Displays all ODHActivityPoi, &#x27;None&#x27;, &#x27;ActivityData&#x27;, &#x27;PoiData&#x27;, &#x27;GastronomicData&#x27;, &#x27;MuseumData&#x27;, &#x27;Magnolia&#x27;, &#x27;Content&#x27;, &#x27;SuedtirolWein&#x27;, &#x27;Archapp&#x27; (default:&#x27;null&#x27;)
     * @param {string} [odhtagfilter] ODH Taglist Filter (refers to Array SmgTags) (String, Separator &#x27;,&#x27; more Tags possible, available Tags reference to &#x27;api/ODHTag?validforentity&#x3D;smgpoi&#x27;), (default:&#x27;null&#x27;)
     * @param {boolean} [odhactive] ODH Active (Published) ODHActivityPoi Filter (Refers to field SmgActive) (possible Values: &#x27;true&#x27; only published ODHActivityPoi, &#x27;false&#x27; only not published ODHActivityPoi, (default:&#x27;null&#x27;)
     * @param {boolean} [active] Active ODHActivityPoi Filter (possible Values: &#x27;true&#x27; only active ODHActivityPoi, &#x27;false&#x27; only not active ODHActivityPoi, (default:&#x27;null&#x27;)
     * @param {string} [seed] Seed &#x27;1 - 10&#x27; for Random Sorting, &#x27;0&#x27; generates a Random Seed, not provided disables Random Sorting, (default:&#x27;null&#x27;)
     * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ODHActivityPoiApi
     */

  }, {
    key: "oDHActivityPoiGetODHActivityPoiListLocalized",
    value: function oDHActivityPoiGetODHActivityPoiListLocalized(language, pagenumber, pagesize, type, subtype, poitype, idlist, locfilter, langfilter, areafilter, highlight, source, odhtagfilter, odhactive, active, seed, latitude, longitude, radius, options) {
      var _this5 = this;

      return odhactivity_poi_api_ODHActivityPoiApiFp(this.configuration).oDHActivityPoiGetODHActivityPoiListLocalized(language, pagenumber, pagesize, type, subtype, poitype, idlist, locfilter, langfilter, areafilter, highlight, source, odhtagfilter, odhactive, active, seed, latitude, longitude, radius, options).then(function (request) {
        return request(_this5.axios, _this5.basePath);
      });
    }
    /**
     *
     * @summary GET ODHActivityPoi List Reduced
     * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)
     * @param {string} [type] Type of the ODHActivityPoi (&#x27;null&#x27; &#x3D; Filter disabled, possible values: BITMASK: 1 &#x3D; Wellness, 2 &#x3D; Winter, 4 &#x3D; Summer, 8 &#x3D; Culture, 16 &#x3D; Other, 64 &#x3D; Mobility, 128 &#x3D; Shops and Services), (default: 255 &#x3D;&#x3D; ALL), REFERENCE TO: GET /api/ODHActivityPoiTypes
     * @param {string} [subtype] Subtype of the ODHActivityPoi (&#x27;null&#x27; &#x3D; Filter disabled, BITMASK Filter, available SubTypes depends on the selected Maintype reference to ODHActivityPoiTypes)
     * @param {string} [poitype] Additional Type of the ODHActivityPoi (&#x27;null&#x27; &#x3D; Filter disabled, BITMASK Filter, available SubTypes depends on the selected Maintype, SubType reference to ODHActivityPoiTypes)
     * @param {string} [locfilter] Locfilter (Separator &#x27;,&#x27; possible values: reg + REGIONID &#x3D; (Filter by Region), reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMASSOCIATIONID &#x3D; (Filter by Tourismassociation), mun + MUNICIPALITYID &#x3D; (Filter by Municipality), fra + FRACTIONID &#x3D; (Filter by Fraction), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)
     * @param {string} [areafilter] AreaFilter (Alternate Locfilter, can be combined with locfilter) (Separator &#x27;,&#x27; possible values: reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMASSOCIATIONID &#x3D; (Filter by Tourismassociation), skr + SKIREGIONID &#x3D; (Filter by Skiregion), ska + SKIAREAID &#x3D; (Filter by Skiarea), are + AREAID &#x3D; (Filter by LTS Area), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)
     * @param {boolean} [highlight] Hightlight Filter (possible values: &#x27;false&#x27; &#x3D; only ODHActivityPoi with Highlight false, &#x27;true&#x27; &#x3D; only ODHActivityPoi with Highlight true), (default:&#x27;null&#x27;)
     * @param {string} [source] Source Filter (possible Values: &#x27;null&#x27; Displays all ODHActivityPoi, &#x27;None&#x27;, &#x27;ActivityData&#x27;, &#x27;PoiData&#x27;, &#x27;GastronomicData&#x27;, &#x27;MuseumData&#x27;, &#x27;Magnolia&#x27;, &#x27;Content&#x27;, &#x27;SuedtirolWein&#x27;, &#x27;Archapp&#x27; (default:&#x27;null&#x27;)
     * @param {string} [odhtagfilter] ODH Taglist Filter (refers to Array SmgTags) (String, Separator &#x27;,&#x27; more Tags possible, available Tags reference to &#x27;api/ODHTag?validforentity&#x3D;smgpoi&#x27;), (default:&#x27;null&#x27;)
     * @param {boolean} [odhactive] ODH Active (Published) ODHActivityPoi Filter (Refers to field SmgActive) (possible Values: &#x27;true&#x27; only published ODHActivityPoi, &#x27;false&#x27; only not published ODHActivityPoi, (default:&#x27;null&#x27;)
     * @param {boolean} [active] Active ODHActivityPoi Filter (possible Values: &#x27;true&#x27; only active ODHActivityPoi, &#x27;false&#x27; only not active ODHActivityPoi, (default:&#x27;null&#x27;)
     * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)
     * @param {string} [fields] Select fields to display, by Default Title and Id are selected if fields filter is null More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)
     * @param {boolean} [suedtirolmobil]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ODHActivityPoiApi
     */

  }, {
    key: "oDHActivityPoiGetODHActivityPoiListReduced",
    value: function oDHActivityPoiGetODHActivityPoiListReduced(language, type, subtype, poitype, locfilter, areafilter, highlight, source, odhtagfilter, odhactive, active, latitude, longitude, radius, fields, suedtirolmobil, options) {
      var _this6 = this;

      return odhactivity_poi_api_ODHActivityPoiApiFp(this.configuration).oDHActivityPoiGetODHActivityPoiListReduced(language, type, subtype, poitype, locfilter, areafilter, highlight, source, odhtagfilter, odhactive, active, latitude, longitude, radius, fields, suedtirolmobil, options).then(function (request) {
        return request(_this6.axios, _this6.basePath);
      });
    }
    /**
     *
     * @summary GET ODHActivityPoi Single
     * @param {string} id ID of the Poi
     * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)
     * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ODHActivityPoiApi
     */

  }, {
    key: "oDHActivityPoiGetODHActivityPoiSingle",
    value: function oDHActivityPoiGetODHActivityPoiSingle(id, fields, language, options) {
      var _this7 = this;

      return odhactivity_poi_api_ODHActivityPoiApiFp(this.configuration).oDHActivityPoiGetODHActivityPoiSingle(id, fields, language, options).then(function (request) {
        return request(_this7.axios, _this7.basePath);
      });
    }
    /**
     *
     * @summary GET ODHActivityPoi Single Reduced
     * @param {string} id ID of the Poi
     * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ODHActivityPoiApi
     */

  }, {
    key: "oDHActivityPoiGetODHActivityPoiSingleLocalized",
    value: function oDHActivityPoiGetODHActivityPoiSingleLocalized(id, language, options) {
      var _this8 = this;

      return odhactivity_poi_api_ODHActivityPoiApiFp(this.configuration).oDHActivityPoiGetODHActivityPoiSingleLocalized(id, language, options).then(function (request) {
        return request(_this8.axios, _this8.basePath);
      });
    }
  }]);

  return ODHActivityPoiApi;
}(base_BaseAPI);
// CONCATENATED MODULE: ./src/api/apis/odhtag-api.ts

















/* tslint:disable */

/* eslint-disable */

/**
 * Open Data Hub Api Tourism
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: V1
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
 // Some imports not used depending on template conditions
// @ts-ignore


/**
 * ODHTagApi - axios parameter creator
 * @export
 */

var odhtag_api_ODHTagApiAxiosParamCreator = function ODHTagApiAxiosParamCreator(configuration) {
  return {
    /**
     *
     * @summary GET ODHTag Single
     * @param {string} id Id of ODHtag
     * @param {string} [language] Localization Language
     * @param {string} [localizationlanguage]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    oDHTagGetODHTagSingle: function () {
      var _oDHTagGetODHTagSingle = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(id, language, localizationlanguage) {
        var options,
            localVarPath,
            localVarUrlObj,
            baseOptions,
            localVarRequestOptions,
            localVarHeaderParameter,
            localVarQueryParameter,
            localVarAccessTokenValue,
            query,
            key,
            _key,
            headersFromBaseOptions,
            _args = arguments;

        return regeneratorRuntime.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                options = _args.length > 3 && _args[3] !== undefined ? _args[3] : {};

                if (!(id === null || id === undefined)) {
                  _context.next = 3;
                  break;
                }

                throw new base_RequiredError('id', 'Required parameter id was null or undefined when calling oDHTagGetODHTagSingle.');

              case 3:
                localVarPath = "/api/ODHTag/{id}".replace("{".concat("id", "}"), encodeURIComponent(String(id))); // use dummy base URL string because the URL constructor only accepts absolute URLs.

                localVarUrlObj = new URL(localVarPath, 'https://example.com');

                if (configuration) {
                  baseOptions = configuration.baseOptions;
                }

                localVarRequestOptions = _objectSpread2(_objectSpread2({
                  method: 'GET'
                }, baseOptions), options);
                localVarHeaderParameter = {};
                localVarQueryParameter = {}; // authentication oauth2 required
                // oauth required

                if (!(configuration && configuration.accessToken)) {
                  _context.next = 21;
                  break;
                }

                if (!(typeof configuration.accessToken === 'function')) {
                  _context.next = 16;
                  break;
                }

                _context.next = 13;
                return configuration.accessToken("oauth2", [""]);

              case 13:
                _context.t0 = _context.sent;
                _context.next = 19;
                break;

              case 16:
                _context.next = 18;
                return configuration.accessToken;

              case 18:
                _context.t0 = _context.sent;

              case 19:
                localVarAccessTokenValue = _context.t0;
                localVarHeaderParameter["Authorization"] = "Bearer " + localVarAccessTokenValue;

              case 21:
                if (language !== undefined) {
                  localVarQueryParameter['language'] = language;
                }

                if (localizationlanguage !== undefined) {
                  localVarQueryParameter['localizationlanguage'] = localizationlanguage;
                }

                query = new URLSearchParams(localVarUrlObj.search);

                for (key in localVarQueryParameter) {
                  query.set(key, localVarQueryParameter[key]);
                }

                for (_key in options.query) {
                  query.set(_key, options.query[_key]);
                }

                localVarUrlObj.search = new URLSearchParams(query).toString();
                headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                localVarRequestOptions.headers = _objectSpread2(_objectSpread2(_objectSpread2({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                return _context.abrupt("return", {
                  url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                  options: localVarRequestOptions
                });

              case 30:
              case "end":
                return _context.stop();
            }
          }
        }, _callee);
      }));

      function oDHTagGetODHTagSingle(_x, _x2, _x3) {
        return _oDHTagGetODHTagSingle.apply(this, arguments);
      }

      return oDHTagGetODHTagSingle;
    }(),

    /**
     *
     * @summary GET ODHTag List
     * @param {string} [language] Localization Language
     * @param {string} [validforentity] Filter on Tags valid on Entitys (accommodation, activity, poi, odhactivitypoi/smgpoi, package, gastronomy, event, article, common .. etc..)
     * @param {string} [localizationlanguage]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    oDHTagGetODHTags: function () {
      var _oDHTagGetODHTags = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(language, validforentity, localizationlanguage) {
        var options,
            localVarPath,
            localVarUrlObj,
            baseOptions,
            localVarRequestOptions,
            localVarHeaderParameter,
            localVarQueryParameter,
            localVarAccessTokenValue,
            query,
            key,
            _key2,
            headersFromBaseOptions,
            _args2 = arguments;

        return regeneratorRuntime.wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                options = _args2.length > 3 && _args2[3] !== undefined ? _args2[3] : {};
                localVarPath = "/api/ODHTag"; // use dummy base URL string because the URL constructor only accepts absolute URLs.

                localVarUrlObj = new URL(localVarPath, 'https://example.com');

                if (configuration) {
                  baseOptions = configuration.baseOptions;
                }

                localVarRequestOptions = _objectSpread2(_objectSpread2({
                  method: 'GET'
                }, baseOptions), options);
                localVarHeaderParameter = {};
                localVarQueryParameter = {}; // authentication oauth2 required
                // oauth required

                if (!(configuration && configuration.accessToken)) {
                  _context2.next = 19;
                  break;
                }

                if (!(typeof configuration.accessToken === 'function')) {
                  _context2.next = 14;
                  break;
                }

                _context2.next = 11;
                return configuration.accessToken("oauth2", [""]);

              case 11:
                _context2.t0 = _context2.sent;
                _context2.next = 17;
                break;

              case 14:
                _context2.next = 16;
                return configuration.accessToken;

              case 16:
                _context2.t0 = _context2.sent;

              case 17:
                localVarAccessTokenValue = _context2.t0;
                localVarHeaderParameter["Authorization"] = "Bearer " + localVarAccessTokenValue;

              case 19:
                if (language !== undefined) {
                  localVarQueryParameter['language'] = language;
                }

                if (validforentity !== undefined) {
                  localVarQueryParameter['validforentity'] = validforentity;
                }

                if (localizationlanguage !== undefined) {
                  localVarQueryParameter['localizationlanguage'] = localizationlanguage;
                }

                query = new URLSearchParams(localVarUrlObj.search);

                for (key in localVarQueryParameter) {
                  query.set(key, localVarQueryParameter[key]);
                }

                for (_key2 in options.query) {
                  query.set(_key2, options.query[_key2]);
                }

                localVarUrlObj.search = new URLSearchParams(query).toString();
                headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                localVarRequestOptions.headers = _objectSpread2(_objectSpread2(_objectSpread2({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                return _context2.abrupt("return", {
                  url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                  options: localVarRequestOptions
                });

              case 29:
              case "end":
                return _context2.stop();
            }
          }
        }, _callee2);
      }));

      function oDHTagGetODHTags(_x4, _x5, _x6) {
        return _oDHTagGetODHTags.apply(this, arguments);
      }

      return oDHTagGetODHTags;
    }(),

    /**
     *
     * @summary GET ODHTag List REDUCED
     * @param {string} language Localization Language
     * @param {string} [validforentity] Filter on Tags valid on Entitys (accommodation, activity, poi, odhactivitypoi, package, gastronomy, event, article, common .. etc..)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    oDHTagGetODHTagsReduced: function () {
      var _oDHTagGetODHTagsReduced = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(language, validforentity) {
        var options,
            localVarPath,
            localVarUrlObj,
            baseOptions,
            localVarRequestOptions,
            localVarHeaderParameter,
            localVarQueryParameter,
            localVarAccessTokenValue,
            query,
            key,
            _key3,
            headersFromBaseOptions,
            _args3 = arguments;

        return regeneratorRuntime.wrap(function _callee3$(_context3) {
          while (1) {
            switch (_context3.prev = _context3.next) {
              case 0:
                options = _args3.length > 2 && _args3[2] !== undefined ? _args3[2] : {};

                if (!(language === null || language === undefined)) {
                  _context3.next = 3;
                  break;
                }

                throw new base_RequiredError('language', 'Required parameter language was null or undefined when calling oDHTagGetODHTagsReduced.');

              case 3:
                localVarPath = "/api/ODHTagReduced"; // use dummy base URL string because the URL constructor only accepts absolute URLs.

                localVarUrlObj = new URL(localVarPath, 'https://example.com');

                if (configuration) {
                  baseOptions = configuration.baseOptions;
                }

                localVarRequestOptions = _objectSpread2(_objectSpread2({
                  method: 'GET'
                }, baseOptions), options);
                localVarHeaderParameter = {};
                localVarQueryParameter = {}; // authentication oauth2 required
                // oauth required

                if (!(configuration && configuration.accessToken)) {
                  _context3.next = 21;
                  break;
                }

                if (!(typeof configuration.accessToken === 'function')) {
                  _context3.next = 16;
                  break;
                }

                _context3.next = 13;
                return configuration.accessToken("oauth2", [""]);

              case 13:
                _context3.t0 = _context3.sent;
                _context3.next = 19;
                break;

              case 16:
                _context3.next = 18;
                return configuration.accessToken;

              case 18:
                _context3.t0 = _context3.sent;

              case 19:
                localVarAccessTokenValue = _context3.t0;
                localVarHeaderParameter["Authorization"] = "Bearer " + localVarAccessTokenValue;

              case 21:
                if (language !== undefined) {
                  localVarQueryParameter['language'] = language;
                }

                if (validforentity !== undefined) {
                  localVarQueryParameter['validforentity'] = validforentity;
                }

                query = new URLSearchParams(localVarUrlObj.search);

                for (key in localVarQueryParameter) {
                  query.set(key, localVarQueryParameter[key]);
                }

                for (_key3 in options.query) {
                  query.set(_key3, options.query[_key3]);
                }

                localVarUrlObj.search = new URLSearchParams(query).toString();
                headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                localVarRequestOptions.headers = _objectSpread2(_objectSpread2(_objectSpread2({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                return _context3.abrupt("return", {
                  url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                  options: localVarRequestOptions
                });

              case 30:
              case "end":
                return _context3.stop();
            }
          }
        }, _callee3);
      }));

      function oDHTagGetODHTagsReduced(_x7, _x8) {
        return _oDHTagGetODHTagsReduced.apply(this, arguments);
      }

      return oDHTagGetODHTagsReduced;
    }()
  };
};
/**
 * ODHTagApi - functional programming interface
 * @export
 */

var odhtag_api_ODHTagApiFp = function ODHTagApiFp(configuration) {
  return {
    /**
     *
     * @summary GET ODHTag Single
     * @param {string} id Id of ODHtag
     * @param {string} [language] Localization Language
     * @param {string} [localizationlanguage]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    oDHTagGetODHTagSingle: function oDHTagGetODHTagSingle(id, language, localizationlanguage, options) {
      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4() {
        var localVarAxiosArgs;
        return regeneratorRuntime.wrap(function _callee4$(_context4) {
          while (1) {
            switch (_context4.prev = _context4.next) {
              case 0:
                _context4.next = 2;
                return odhtag_api_ODHTagApiAxiosParamCreator(configuration).oDHTagGetODHTagSingle(id, language, localizationlanguage, options);

              case 2:
                localVarAxiosArgs = _context4.sent;
                return _context4.abrupt("return", function () {
                  var axios = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : axios_default.a;
                  var basePath = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : BASE_PATH;

                  var axiosRequestArgs = _objectSpread2(_objectSpread2({}, localVarAxiosArgs.options), {}, {
                    url: basePath + localVarAxiosArgs.url
                  });

                  return axios.request(axiosRequestArgs);
                });

              case 4:
              case "end":
                return _context4.stop();
            }
          }
        }, _callee4);
      }))();
    },

    /**
     *
     * @summary GET ODHTag List
     * @param {string} [language] Localization Language
     * @param {string} [validforentity] Filter on Tags valid on Entitys (accommodation, activity, poi, odhactivitypoi/smgpoi, package, gastronomy, event, article, common .. etc..)
     * @param {string} [localizationlanguage]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    oDHTagGetODHTags: function oDHTagGetODHTags(language, validforentity, localizationlanguage, options) {
      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5() {
        var localVarAxiosArgs;
        return regeneratorRuntime.wrap(function _callee5$(_context5) {
          while (1) {
            switch (_context5.prev = _context5.next) {
              case 0:
                _context5.next = 2;
                return odhtag_api_ODHTagApiAxiosParamCreator(configuration).oDHTagGetODHTags(language, validforentity, localizationlanguage, options);

              case 2:
                localVarAxiosArgs = _context5.sent;
                return _context5.abrupt("return", function () {
                  var axios = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : axios_default.a;
                  var basePath = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : BASE_PATH;

                  var axiosRequestArgs = _objectSpread2(_objectSpread2({}, localVarAxiosArgs.options), {}, {
                    url: basePath + localVarAxiosArgs.url
                  });

                  return axios.request(axiosRequestArgs);
                });

              case 4:
              case "end":
                return _context5.stop();
            }
          }
        }, _callee5);
      }))();
    },

    /**
     *
     * @summary GET ODHTag List REDUCED
     * @param {string} language Localization Language
     * @param {string} [validforentity] Filter on Tags valid on Entitys (accommodation, activity, poi, odhactivitypoi, package, gastronomy, event, article, common .. etc..)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    oDHTagGetODHTagsReduced: function oDHTagGetODHTagsReduced(language, validforentity, options) {
      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6() {
        var localVarAxiosArgs;
        return regeneratorRuntime.wrap(function _callee6$(_context6) {
          while (1) {
            switch (_context6.prev = _context6.next) {
              case 0:
                _context6.next = 2;
                return odhtag_api_ODHTagApiAxiosParamCreator(configuration).oDHTagGetODHTagsReduced(language, validforentity, options);

              case 2:
                localVarAxiosArgs = _context6.sent;
                return _context6.abrupt("return", function () {
                  var axios = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : axios_default.a;
                  var basePath = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : BASE_PATH;

                  var axiosRequestArgs = _objectSpread2(_objectSpread2({}, localVarAxiosArgs.options), {}, {
                    url: basePath + localVarAxiosArgs.url
                  });

                  return axios.request(axiosRequestArgs);
                });

              case 4:
              case "end":
                return _context6.stop();
            }
          }
        }, _callee6);
      }))();
    }
  };
};
/**
 * ODHTagApi - factory interface
 * @export
 */

var ODHTagApiFactory = function ODHTagApiFactory(configuration, basePath, axios) {
  return {
    /**
     *
     * @summary GET ODHTag Single
     * @param {string} id Id of ODHtag
     * @param {string} [language] Localization Language
     * @param {string} [localizationlanguage]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    oDHTagGetODHTagSingle: function oDHTagGetODHTagSingle(id, language, localizationlanguage, options) {
      return odhtag_api_ODHTagApiFp(configuration).oDHTagGetODHTagSingle(id, language, localizationlanguage, options).then(function (request) {
        return request(axios, basePath);
      });
    },

    /**
     *
     * @summary GET ODHTag List
     * @param {string} [language] Localization Language
     * @param {string} [validforentity] Filter on Tags valid on Entitys (accommodation, activity, poi, odhactivitypoi/smgpoi, package, gastronomy, event, article, common .. etc..)
     * @param {string} [localizationlanguage]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    oDHTagGetODHTags: function oDHTagGetODHTags(language, validforentity, localizationlanguage, options) {
      return odhtag_api_ODHTagApiFp(configuration).oDHTagGetODHTags(language, validforentity, localizationlanguage, options).then(function (request) {
        return request(axios, basePath);
      });
    },

    /**
     *
     * @summary GET ODHTag List REDUCED
     * @param {string} language Localization Language
     * @param {string} [validforentity] Filter on Tags valid on Entitys (accommodation, activity, poi, odhactivitypoi, package, gastronomy, event, article, common .. etc..)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    oDHTagGetODHTagsReduced: function oDHTagGetODHTagsReduced(language, validforentity, options) {
      return odhtag_api_ODHTagApiFp(configuration).oDHTagGetODHTagsReduced(language, validforentity, options).then(function (request) {
        return request(axios, basePath);
      });
    }
  };
};
/**
 * ODHTagApi - object-oriented interface
 * @export
 * @class ODHTagApi
 * @extends {BaseAPI}
 */

var odhtag_api_ODHTagApi = /*#__PURE__*/function (_BaseAPI) {
  _inherits(ODHTagApi, _BaseAPI);

  var _super = _createSuper(ODHTagApi);

  function ODHTagApi() {
    _classCallCheck(this, ODHTagApi);

    return _super.apply(this, arguments);
  }

  _createClass(ODHTagApi, [{
    key: "oDHTagGetODHTagSingle",

    /**
     *
     * @summary GET ODHTag Single
     * @param {string} id Id of ODHtag
     * @param {string} [language] Localization Language
     * @param {string} [localizationlanguage]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ODHTagApi
     */
    value: function oDHTagGetODHTagSingle(id, language, localizationlanguage, options) {
      var _this = this;

      return odhtag_api_ODHTagApiFp(this.configuration).oDHTagGetODHTagSingle(id, language, localizationlanguage, options).then(function (request) {
        return request(_this.axios, _this.basePath);
      });
    }
    /**
     *
     * @summary GET ODHTag List
     * @param {string} [language] Localization Language
     * @param {string} [validforentity] Filter on Tags valid on Entitys (accommodation, activity, poi, odhactivitypoi/smgpoi, package, gastronomy, event, article, common .. etc..)
     * @param {string} [localizationlanguage]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ODHTagApi
     */

  }, {
    key: "oDHTagGetODHTags",
    value: function oDHTagGetODHTags(language, validforentity, localizationlanguage, options) {
      var _this2 = this;

      return odhtag_api_ODHTagApiFp(this.configuration).oDHTagGetODHTags(language, validforentity, localizationlanguage, options).then(function (request) {
        return request(_this2.axios, _this2.basePath);
      });
    }
    /**
     *
     * @summary GET ODHTag List REDUCED
     * @param {string} language Localization Language
     * @param {string} [validforentity] Filter on Tags valid on Entitys (accommodation, activity, poi, odhactivitypoi, package, gastronomy, event, article, common .. etc..)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ODHTagApi
     */

  }, {
    key: "oDHTagGetODHTagsReduced",
    value: function oDHTagGetODHTagsReduced(language, validforentity, options) {
      var _this3 = this;

      return odhtag_api_ODHTagApiFp(this.configuration).oDHTagGetODHTagsReduced(language, validforentity, options).then(function (request) {
        return request(_this3.axios, _this3.basePath);
      });
    }
  }]);

  return ODHTagApi;
}(base_BaseAPI);
// CONCATENATED MODULE: ./src/api/apis/poi-api.ts

















/* tslint:disable */

/* eslint-disable */

/**
 * Open Data Hub Api Tourism
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: V1
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
 // Some imports not used depending on template conditions
// @ts-ignore


/**
 * PoiApi - axios parameter creator
 * @export
 */

var poi_api_PoiApiAxiosParamCreator = function PoiApiAxiosParamCreator(configuration) {
  return {
    /**
     *
     * @summary GET Poi Types List
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    poiGetAllPoiTypesList: function () {
      var _poiGetAllPoiTypesList = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {
        var options,
            localVarPath,
            localVarUrlObj,
            baseOptions,
            localVarRequestOptions,
            localVarHeaderParameter,
            localVarQueryParameter,
            localVarAccessTokenValue,
            query,
            key,
            _key,
            headersFromBaseOptions,
            _args = arguments;

        return regeneratorRuntime.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                options = _args.length > 0 && _args[0] !== undefined ? _args[0] : {};
                localVarPath = "/api/PoiTypes"; // use dummy base URL string because the URL constructor only accepts absolute URLs.

                localVarUrlObj = new URL(localVarPath, 'https://example.com');

                if (configuration) {
                  baseOptions = configuration.baseOptions;
                }

                localVarRequestOptions = _objectSpread2(_objectSpread2({
                  method: 'GET'
                }, baseOptions), options);
                localVarHeaderParameter = {};
                localVarQueryParameter = {}; // authentication oauth2 required
                // oauth required

                if (!(configuration && configuration.accessToken)) {
                  _context.next = 19;
                  break;
                }

                if (!(typeof configuration.accessToken === 'function')) {
                  _context.next = 14;
                  break;
                }

                _context.next = 11;
                return configuration.accessToken("oauth2", [""]);

              case 11:
                _context.t0 = _context.sent;
                _context.next = 17;
                break;

              case 14:
                _context.next = 16;
                return configuration.accessToken;

              case 16:
                _context.t0 = _context.sent;

              case 17:
                localVarAccessTokenValue = _context.t0;
                localVarHeaderParameter["Authorization"] = "Bearer " + localVarAccessTokenValue;

              case 19:
                query = new URLSearchParams(localVarUrlObj.search);

                for (key in localVarQueryParameter) {
                  query.set(key, localVarQueryParameter[key]);
                }

                for (_key in options.query) {
                  query.set(_key, options.query[_key]);
                }

                localVarUrlObj.search = new URLSearchParams(query).toString();
                headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                localVarRequestOptions.headers = _objectSpread2(_objectSpread2(_objectSpread2({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                return _context.abrupt("return", {
                  url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                  options: localVarRequestOptions
                });

              case 26:
              case "end":
                return _context.stop();
            }
          }
        }, _callee);
      }));

      function poiGetAllPoiTypesList() {
        return _poiGetAllPoiTypesList.apply(this, arguments);
      }

      return poiGetAllPoiTypesList;
    }(),

    /**
     *
     * @summary GET Poi Type Single
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    poiGetAllPoiTypesSingle: function () {
      var _poiGetAllPoiTypesSingle = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(id) {
        var options,
            localVarPath,
            localVarUrlObj,
            baseOptions,
            localVarRequestOptions,
            localVarHeaderParameter,
            localVarQueryParameter,
            localVarAccessTokenValue,
            query,
            key,
            _key2,
            headersFromBaseOptions,
            _args2 = arguments;

        return regeneratorRuntime.wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                options = _args2.length > 1 && _args2[1] !== undefined ? _args2[1] : {};

                if (!(id === null || id === undefined)) {
                  _context2.next = 3;
                  break;
                }

                throw new base_RequiredError('id', 'Required parameter id was null or undefined when calling poiGetAllPoiTypesSingle.');

              case 3:
                localVarPath = "/api/PoiTypes/{id}".replace("{".concat("id", "}"), encodeURIComponent(String(id))); // use dummy base URL string because the URL constructor only accepts absolute URLs.

                localVarUrlObj = new URL(localVarPath, 'https://example.com');

                if (configuration) {
                  baseOptions = configuration.baseOptions;
                }

                localVarRequestOptions = _objectSpread2(_objectSpread2({
                  method: 'GET'
                }, baseOptions), options);
                localVarHeaderParameter = {};
                localVarQueryParameter = {}; // authentication oauth2 required
                // oauth required

                if (!(configuration && configuration.accessToken)) {
                  _context2.next = 21;
                  break;
                }

                if (!(typeof configuration.accessToken === 'function')) {
                  _context2.next = 16;
                  break;
                }

                _context2.next = 13;
                return configuration.accessToken("oauth2", [""]);

              case 13:
                _context2.t0 = _context2.sent;
                _context2.next = 19;
                break;

              case 16:
                _context2.next = 18;
                return configuration.accessToken;

              case 18:
                _context2.t0 = _context2.sent;

              case 19:
                localVarAccessTokenValue = _context2.t0;
                localVarHeaderParameter["Authorization"] = "Bearer " + localVarAccessTokenValue;

              case 21:
                query = new URLSearchParams(localVarUrlObj.search);

                for (key in localVarQueryParameter) {
                  query.set(key, localVarQueryParameter[key]);
                }

                for (_key2 in options.query) {
                  query.set(_key2, options.query[_key2]);
                }

                localVarUrlObj.search = new URLSearchParams(query).toString();
                headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                localVarRequestOptions.headers = _objectSpread2(_objectSpread2(_objectSpread2({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                return _context2.abrupt("return", {
                  url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                  options: localVarRequestOptions
                });

              case 28:
              case "end":
                return _context2.stop();
            }
          }
        }, _callee2);
      }));

      function poiGetAllPoiTypesSingle(_x) {
        return _poiGetAllPoiTypesSingle.apply(this, arguments);
      }

      return poiGetAllPoiTypesSingle;
    }(),

    /**
     *
     * @summary GET Poi Changed List by Date
     * @param {number} [pagenumber] Pagenumber, (default:1)
     * @param {number} [pagesize] Elements per Page, (default:10)
     * @param {string} [seed] Seed &#x27;1 - 10&#x27; for Random Sorting, &#x27;0&#x27; generates a Random Seed, &#x27;null&#x27; disables Random Sorting, (default:null)
     * @param {string} [updatefrom] Date from Format (yyyy-MM-dd) (all GBActivityPoi with LastChange &amp;gt;&#x3D; datefrom are passed), (default: DateTime.Now - 1 Day)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    poiGetAllPoisChanged: function () {
      var _poiGetAllPoisChanged = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(pagenumber, pagesize, seed, updatefrom) {
        var options,
            localVarPath,
            localVarUrlObj,
            baseOptions,
            localVarRequestOptions,
            localVarHeaderParameter,
            localVarQueryParameter,
            localVarAccessTokenValue,
            query,
            key,
            _key3,
            headersFromBaseOptions,
            _args3 = arguments;

        return regeneratorRuntime.wrap(function _callee3$(_context3) {
          while (1) {
            switch (_context3.prev = _context3.next) {
              case 0:
                options = _args3.length > 4 && _args3[4] !== undefined ? _args3[4] : {};
                localVarPath = "/api/PoiChanged"; // use dummy base URL string because the URL constructor only accepts absolute URLs.

                localVarUrlObj = new URL(localVarPath, 'https://example.com');

                if (configuration) {
                  baseOptions = configuration.baseOptions;
                }

                localVarRequestOptions = _objectSpread2(_objectSpread2({
                  method: 'GET'
                }, baseOptions), options);
                localVarHeaderParameter = {};
                localVarQueryParameter = {}; // authentication oauth2 required
                // oauth required

                if (!(configuration && configuration.accessToken)) {
                  _context3.next = 19;
                  break;
                }

                if (!(typeof configuration.accessToken === 'function')) {
                  _context3.next = 14;
                  break;
                }

                _context3.next = 11;
                return configuration.accessToken("oauth2", [""]);

              case 11:
                _context3.t0 = _context3.sent;
                _context3.next = 17;
                break;

              case 14:
                _context3.next = 16;
                return configuration.accessToken;

              case 16:
                _context3.t0 = _context3.sent;

              case 17:
                localVarAccessTokenValue = _context3.t0;
                localVarHeaderParameter["Authorization"] = "Bearer " + localVarAccessTokenValue;

              case 19:
                if (pagenumber !== undefined) {
                  localVarQueryParameter['pagenumber'] = pagenumber;
                }

                if (pagesize !== undefined) {
                  localVarQueryParameter['pagesize'] = pagesize;
                }

                if (seed !== undefined) {
                  localVarQueryParameter['seed'] = seed;
                }

                if (updatefrom !== undefined) {
                  localVarQueryParameter['updatefrom'] = updatefrom;
                }

                query = new URLSearchParams(localVarUrlObj.search);

                for (key in localVarQueryParameter) {
                  query.set(key, localVarQueryParameter[key]);
                }

                for (_key3 in options.query) {
                  query.set(_key3, options.query[_key3]);
                }

                localVarUrlObj.search = new URLSearchParams(query).toString();
                headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                localVarRequestOptions.headers = _objectSpread2(_objectSpread2(_objectSpread2({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                return _context3.abrupt("return", {
                  url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                  options: localVarRequestOptions
                });

              case 30:
              case "end":
                return _context3.stop();
            }
          }
        }, _callee3);
      }));

      function poiGetAllPoisChanged(_x2, _x3, _x4, _x5) {
        return _poiGetAllPoisChanged.apply(this, arguments);
      }

      return poiGetAllPoisChanged;
    }(),

    /**
     *
     * @summary GET Poi List
     * @param {number} [pagenumber] Pagenumber, (default:1)
     * @param {number} [pagesize] Elements per Page, (default:10)
     * @param {string} [poitype] Type of the Poi (&#x27;null&#x27; &#x3D; Filter disabled, possible values: BITMASK &#x27;Doctors, Pharmacies &#x3D; 1&#x27;,&#x27;Shops &#x3D; 2&#x27;,&#x27;Culture and sights&#x3D; 4&#x27;,&#x27;Nightlife and entertainment &#x3D; 8&#x27;,&#x27;Public institutions &#x3D; 16&#x27;,&#x27;Sports and leisure &#x3D; 32&#x27;,&#x27;Traffic and transport &#x3D; 64&#x27;, &#x27;Service providers&#x27; &#x3D; 128, &#x27;Craft&#x27; &#x3D; 256), (default:&#x27;511&#x27; &#x3D;&#x3D; ALL), REFERENCE TO: GET /api/PoiTypes
     * @param {string} [subtype] Subtype of the Poi (&#x27;null&#x27; &#x3D; Filter disabled, available Subtypes depends on the poitype BITMASK), (default:&#x27;null&#x27;)
     * @param {string} [idlist] IDFilter (Separator &#x27;,&#x27; List of Activity IDs, &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)
     * @param {string} [locfilter] Locfilter (Separator &#x27;,&#x27; possible values: reg + REGIONID &#x3D; (Filter by Region), reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMASSOCIATIONID &#x3D; (Filter by Tourismassociation), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)
     * @param {string} [areafilter] AreaFilter (Alternate Locfilter, can be combined with locfilter) (Separator &#x27;,&#x27; possible values: reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMASSOCIATIONID &#x3D; (Filter by Tourismassociation), skr + SKIREGIONID &#x3D; (Filter by Skiregion), ska + SKIAREAID &#x3D; (Filter by Skiarea), are + AREAID &#x3D; (Filter by LTS Area), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)
     * @param {boolean} [highlight] Highlight Filter (Show only Highlights possible values: &#x27;true&#x27; : show only Highlight Pois, &#x27;null&#x27; Filter disabled), (default:&#x27;null&#x27;)
     * @param {string} [odhtagfilter] ODH Taglist Filter (refers to Array SmgTags) (String, Separator &#x27;,&#x27; more Tags possible, available Tags reference to &#x27;api/ODHTag?validforentity&#x3D;poi&#x27;), (default:&#x27;null&#x27;)
     * @param {boolean} [active] Active Pois Filter (possible Values: &#x27;true&#x27; only Active Pois, &#x27;false&#x27; only Disabled Pois, (default:&#x27;null&#x27;)
     * @param {boolean} [odhactive] ODH Active (Published) Pois Filter (Refers to field SmgActive) Pois Filter (possible Values: &#x27;true&#x27; only published Pois, &#x27;false&#x27; only not published Pois, (default:&#x27;null&#x27;)
     * @param {string} [seed] Seed &#x27;1 - 10&#x27; for Random Sorting, &#x27;0&#x27; generates a Random Seed, &#x27;null&#x27; disables Random Sorting, (default:null)
     * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)
     * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)
     * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)
     * @param {string} [updatefrom] Date from Format (yyyy-MM-dd) (all GBActivityPoi with LastChange &amp;gt;&#x3D; datefrom are passed), (default: null)
     * @param {string} [searchfilter] String to search for, Title in all languages are searched, (default: null)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    poiGetPoiFiltered: function () {
      var _poiGetPoiFiltered = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(pagenumber, pagesize, poitype, subtype, idlist, locfilter, areafilter, highlight, odhtagfilter, active, odhactive, seed, latitude, longitude, radius, fields, language, updatefrom, searchfilter) {
        var options,
            localVarPath,
            localVarUrlObj,
            baseOptions,
            localVarRequestOptions,
            localVarHeaderParameter,
            localVarQueryParameter,
            localVarAccessTokenValue,
            query,
            key,
            _key4,
            headersFromBaseOptions,
            _args4 = arguments;

        return regeneratorRuntime.wrap(function _callee4$(_context4) {
          while (1) {
            switch (_context4.prev = _context4.next) {
              case 0:
                options = _args4.length > 19 && _args4[19] !== undefined ? _args4[19] : {};
                localVarPath = "/api/Poi"; // use dummy base URL string because the URL constructor only accepts absolute URLs.

                localVarUrlObj = new URL(localVarPath, 'https://example.com');

                if (configuration) {
                  baseOptions = configuration.baseOptions;
                }

                localVarRequestOptions = _objectSpread2(_objectSpread2({
                  method: 'GET'
                }, baseOptions), options);
                localVarHeaderParameter = {};
                localVarQueryParameter = {}; // authentication oauth2 required
                // oauth required

                if (!(configuration && configuration.accessToken)) {
                  _context4.next = 19;
                  break;
                }

                if (!(typeof configuration.accessToken === 'function')) {
                  _context4.next = 14;
                  break;
                }

                _context4.next = 11;
                return configuration.accessToken("oauth2", [""]);

              case 11:
                _context4.t0 = _context4.sent;
                _context4.next = 17;
                break;

              case 14:
                _context4.next = 16;
                return configuration.accessToken;

              case 16:
                _context4.t0 = _context4.sent;

              case 17:
                localVarAccessTokenValue = _context4.t0;
                localVarHeaderParameter["Authorization"] = "Bearer " + localVarAccessTokenValue;

              case 19:
                if (pagenumber !== undefined) {
                  localVarQueryParameter['pagenumber'] = pagenumber;
                }

                if (pagesize !== undefined) {
                  localVarQueryParameter['pagesize'] = pagesize;
                }

                if (poitype !== undefined) {
                  localVarQueryParameter['poitype'] = poitype;
                }

                if (subtype !== undefined) {
                  localVarQueryParameter['subtype'] = subtype;
                }

                if (idlist !== undefined) {
                  localVarQueryParameter['idlist'] = idlist;
                }

                if (locfilter !== undefined) {
                  localVarQueryParameter['locfilter'] = locfilter;
                }

                if (areafilter !== undefined) {
                  localVarQueryParameter['areafilter'] = areafilter;
                }

                if (highlight !== undefined) {
                  localVarQueryParameter['highlight'] = highlight;
                }

                if (odhtagfilter !== undefined) {
                  localVarQueryParameter['odhtagfilter'] = odhtagfilter;
                }

                if (active !== undefined) {
                  localVarQueryParameter['active'] = active;
                }

                if (odhactive !== undefined) {
                  localVarQueryParameter['odhactive'] = odhactive;
                }

                if (seed !== undefined) {
                  localVarQueryParameter['seed'] = seed;
                }

                if (latitude !== undefined) {
                  localVarQueryParameter['latitude'] = latitude;
                }

                if (longitude !== undefined) {
                  localVarQueryParameter['longitude'] = longitude;
                }

                if (radius !== undefined) {
                  localVarQueryParameter['radius'] = radius;
                }

                if (fields !== undefined) {
                  localVarQueryParameter['fields'] = fields;
                }

                if (language !== undefined) {
                  localVarQueryParameter['language'] = language;
                }

                if (updatefrom !== undefined) {
                  localVarQueryParameter['updatefrom'] = updatefrom;
                }

                if (searchfilter !== undefined) {
                  localVarQueryParameter['searchfilter'] = searchfilter;
                }

                query = new URLSearchParams(localVarUrlObj.search);

                for (key in localVarQueryParameter) {
                  query.set(key, localVarQueryParameter[key]);
                }

                for (_key4 in options.query) {
                  query.set(_key4, options.query[_key4]);
                }

                localVarUrlObj.search = new URLSearchParams(query).toString();
                headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                localVarRequestOptions.headers = _objectSpread2(_objectSpread2(_objectSpread2({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                return _context4.abrupt("return", {
                  url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                  options: localVarRequestOptions
                });

              case 45:
              case "end":
                return _context4.stop();
            }
          }
        }, _callee4);
      }));

      function poiGetPoiFiltered(_x6, _x7, _x8, _x9, _x10, _x11, _x12, _x13, _x14, _x15, _x16, _x17, _x18, _x19, _x20, _x21, _x22, _x23, _x24) {
        return _poiGetPoiFiltered.apply(this, arguments);
      }

      return poiGetPoiFiltered;
    }(),

    /**
     *
     * @summary GET Poi Localized List
     * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)
     * @param {number} [pagenumber] Pagenumber, (default:1)
     * @param {number} [pagesize] Elements per Page, (default:10)
     * @param {string} [poitype] Type of the Poi (&#x27;null&#x27; &#x3D; Filter disabled, possible values: BITMASK &#x27;Doctors, Pharmacies &#x3D; 1&#x27;,&#x27;Shops &#x3D; 2&#x27;,&#x27;Culture and sights&#x3D; 4&#x27;,&#x27;Nightlife and entertainment &#x3D; 8&#x27;,&#x27;Public institutions &#x3D; 16&#x27;,&#x27;Sports and leisure &#x3D; 32&#x27;,&#x27;Traffic and transport &#x3D; 64&#x27;, &#x27;Service providers&#x27; &#x3D; 128, &#x27;Craft&#x27; &#x3D; 256), (default:&#x27;511&#x27; &#x3D;&#x3D; ALL), REFERENCE TO: GET /api/PoiTypes
     * @param {string} [subtype] Subtype of the Poi (&#x27;null&#x27; &#x3D; Filter disabled, available Subtypes depends on the poitype BITMASK), (default:&#x27;null&#x27;)
     * @param {string} [idlist] IDFilter (Separator &#x27;,&#x27; List of Activity IDs, &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)
     * @param {string} [locfilter] Locfilter (Separator &#x27;,&#x27; possible values: reg + REGIONID &#x3D; (Filter by Region), reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMASSOCIATIONID &#x3D; (Filter by Tourismassociation), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)
     * @param {string} [areafilter] AreaFilter (Alternate Locfilter, can be combined with locfilter) (Separator &#x27;,&#x27; possible values: reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMASSOCIATIONID &#x3D; (Filter by Tourismassociation), skr + SKIREGIONID &#x3D; (Filter by Skiregion), ska + SKIAREAID &#x3D; (Filter by Skiarea), are + AREAID &#x3D; (Filter by LTS Area), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)
     * @param {boolean} [highlight] Highlight Filter (Show only Highlights possible values: &#x27;true&#x27; : show only Highlight Pois, &#x27;null&#x27; Filter disabled), (default:&#x27;null&#x27;)
     * @param {string} [odhtagfilter] ODH Taglist Filter (refers to Array SmgTags) (String, Separator &#x27;,&#x27; more Tags possible, available Tags reference to &#x27;api/ODHTag?validforentity&#x3D;poi&#x27;), (default:&#x27;null&#x27;)
     * @param {boolean} [active] Active Pois Filter (possible Values: &#x27;true&#x27; only Active Pois, &#x27;false&#x27; only Disabled Pois, (default:&#x27;null&#x27;)
     * @param {boolean} [odhactive] ODH Active (Published) Pois Filter (Refers to field SmgActive) Pois Filter (possible Values: &#x27;true&#x27; only published Pois, &#x27;false&#x27; only not published Pois, (default:&#x27;null&#x27;)
     * @param {string} [seed] Seed &#x27;1 - 10&#x27; for Random Sorting, &#x27;0&#x27; generates a Random Seed, &#x27;null&#x27; disables Random Sorting, (default:null)
     * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    poiGetPoiLocalized: function () {
      var _poiGetPoiLocalized = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(language, pagenumber, pagesize, poitype, subtype, idlist, locfilter, areafilter, highlight, odhtagfilter, active, odhactive, seed, latitude, longitude, radius) {
        var options,
            localVarPath,
            localVarUrlObj,
            baseOptions,
            localVarRequestOptions,
            localVarHeaderParameter,
            localVarQueryParameter,
            localVarAccessTokenValue,
            query,
            key,
            _key5,
            headersFromBaseOptions,
            _args5 = arguments;

        return regeneratorRuntime.wrap(function _callee5$(_context5) {
          while (1) {
            switch (_context5.prev = _context5.next) {
              case 0:
                options = _args5.length > 16 && _args5[16] !== undefined ? _args5[16] : {};
                localVarPath = "/api/PoiLocalized"; // use dummy base URL string because the URL constructor only accepts absolute URLs.

                localVarUrlObj = new URL(localVarPath, 'https://example.com');

                if (configuration) {
                  baseOptions = configuration.baseOptions;
                }

                localVarRequestOptions = _objectSpread2(_objectSpread2({
                  method: 'GET'
                }, baseOptions), options);
                localVarHeaderParameter = {};
                localVarQueryParameter = {}; // authentication oauth2 required
                // oauth required

                if (!(configuration && configuration.accessToken)) {
                  _context5.next = 19;
                  break;
                }

                if (!(typeof configuration.accessToken === 'function')) {
                  _context5.next = 14;
                  break;
                }

                _context5.next = 11;
                return configuration.accessToken("oauth2", [""]);

              case 11:
                _context5.t0 = _context5.sent;
                _context5.next = 17;
                break;

              case 14:
                _context5.next = 16;
                return configuration.accessToken;

              case 16:
                _context5.t0 = _context5.sent;

              case 17:
                localVarAccessTokenValue = _context5.t0;
                localVarHeaderParameter["Authorization"] = "Bearer " + localVarAccessTokenValue;

              case 19:
                if (language !== undefined) {
                  localVarQueryParameter['language'] = language;
                }

                if (pagenumber !== undefined) {
                  localVarQueryParameter['pagenumber'] = pagenumber;
                }

                if (pagesize !== undefined) {
                  localVarQueryParameter['pagesize'] = pagesize;
                }

                if (poitype !== undefined) {
                  localVarQueryParameter['poitype'] = poitype;
                }

                if (subtype !== undefined) {
                  localVarQueryParameter['subtype'] = subtype;
                }

                if (idlist !== undefined) {
                  localVarQueryParameter['idlist'] = idlist;
                }

                if (locfilter !== undefined) {
                  localVarQueryParameter['locfilter'] = locfilter;
                }

                if (areafilter !== undefined) {
                  localVarQueryParameter['areafilter'] = areafilter;
                }

                if (highlight !== undefined) {
                  localVarQueryParameter['highlight'] = highlight;
                }

                if (odhtagfilter !== undefined) {
                  localVarQueryParameter['odhtagfilter'] = odhtagfilter;
                }

                if (active !== undefined) {
                  localVarQueryParameter['active'] = active;
                }

                if (odhactive !== undefined) {
                  localVarQueryParameter['odhactive'] = odhactive;
                }

                if (seed !== undefined) {
                  localVarQueryParameter['seed'] = seed;
                }

                if (latitude !== undefined) {
                  localVarQueryParameter['latitude'] = latitude;
                }

                if (longitude !== undefined) {
                  localVarQueryParameter['longitude'] = longitude;
                }

                if (radius !== undefined) {
                  localVarQueryParameter['radius'] = radius;
                }

                query = new URLSearchParams(localVarUrlObj.search);

                for (key in localVarQueryParameter) {
                  query.set(key, localVarQueryParameter[key]);
                }

                for (_key5 in options.query) {
                  query.set(_key5, options.query[_key5]);
                }

                localVarUrlObj.search = new URLSearchParams(query).toString();
                headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                localVarRequestOptions.headers = _objectSpread2(_objectSpread2(_objectSpread2({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                return _context5.abrupt("return", {
                  url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                  options: localVarRequestOptions
                });

              case 42:
              case "end":
                return _context5.stop();
            }
          }
        }, _callee5);
      }));

      function poiGetPoiLocalized(_x25, _x26, _x27, _x28, _x29, _x30, _x31, _x32, _x33, _x34, _x35, _x36, _x37, _x38, _x39, _x40) {
        return _poiGetPoiLocalized.apply(this, arguments);
      }

      return poiGetPoiLocalized;
    }(),

    /**
     *
     * @summary GET Poi List Reduced
     * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)
     * @param {string} [poitype] Type of the Poi (&#x27;null&#x27; &#x3D; Filter disabled, possible values: BITMASK &#x27;Doctors, Pharmacies &#x3D; 1&#x27;,&#x27;Shops &#x3D; 2&#x27;,&#x27;Culture and sights&#x3D; 4&#x27;,&#x27;Nightlife and entertainment &#x3D; 8&#x27;,&#x27;Public institutions &#x3D; 16&#x27;,&#x27;Sports and leisure &#x3D; 32&#x27;,&#x27;Traffic and transport &#x3D; 64&#x27;, &#x27;Service providers&#x27; &#x3D; 128, &#x27;Craft&#x27; &#x3D; 256), (default:&#x27;511&#x27; &#x3D;&#x3D; ALL), REFERENCE TO: GET /api/PoiTypes
     * @param {string} [subtype] Subtype of the Activity (BITMASK Filter &#x3D; available SubTypes depends on the selected poiType), (default:&#x27;null&#x27;)
     * @param {string} [locfilter] Locfilter (Separator &#x27;,&#x27; possible values: reg + REGIONID &#x3D; (Filter by Region), reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMASSOCIATIONID &#x3D; (Filter by Tourismassociation), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)
     * @param {string} [areafilter] AreaFilter (Alternate Locfilter, can be combined with locfilter) (Separator &#x27;,&#x27; possible values: reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMASSOCIATIONID &#x3D; (Filter by Tourismassociation), skr + SKIREGIONID &#x3D; (Filter by Skiregion), ska + SKIAREAID &#x3D; (Filter by Skiarea), are + AREAID &#x3D; (Filter by LTS Area), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)
     * @param {boolean} [highlight] Hightlight Filter (possible values: &#x27;false&#x27; &#x3D; only Pois with Highlight false, &#x27;true&#x27; &#x3D; only Pois with Highlight true), (default:&#x27;null&#x27;)
     * @param {string} [odhtagfilter] ODH Taglist Filter (refers to Array SmgTags) (String, Separator &#x27;,&#x27; more Tags possible, available Tags reference to &#x27;api/ODHTag?validforentity&#x3D;poi&#x27;), (default:&#x27;null&#x27;)
     * @param {boolean} [active] Active Pois Filter (possible Values: &#x27;true&#x27; only Active Pois, &#x27;false&#x27; only Disabled Pois
     * @param {boolean} [odhactive] ODH Active (Published) Pois Filter (Refers to field SmgActive) Pois Filter (possible Values: &#x27;true&#x27; only published Pois, &#x27;false&#x27; only not published Pois, (default:&#x27;null&#x27;)
     * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)
     * @param {string} [fields] Select fields to display, by Default Title and Id are selected if fields filter is null More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)
     * @param {boolean} [suedtirolmobil]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    poiGetPoiReduced: function () {
      var _poiGetPoiReduced = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6(language, poitype, subtype, locfilter, areafilter, highlight, odhtagfilter, active, odhactive, latitude, longitude, radius, fields, suedtirolmobil) {
        var options,
            localVarPath,
            localVarUrlObj,
            baseOptions,
            localVarRequestOptions,
            localVarHeaderParameter,
            localVarQueryParameter,
            localVarAccessTokenValue,
            query,
            key,
            _key6,
            headersFromBaseOptions,
            _args6 = arguments;

        return regeneratorRuntime.wrap(function _callee6$(_context6) {
          while (1) {
            switch (_context6.prev = _context6.next) {
              case 0:
                options = _args6.length > 14 && _args6[14] !== undefined ? _args6[14] : {};
                localVarPath = "/api/PoiReduced"; // use dummy base URL string because the URL constructor only accepts absolute URLs.

                localVarUrlObj = new URL(localVarPath, 'https://example.com');

                if (configuration) {
                  baseOptions = configuration.baseOptions;
                }

                localVarRequestOptions = _objectSpread2(_objectSpread2({
                  method: 'GET'
                }, baseOptions), options);
                localVarHeaderParameter = {};
                localVarQueryParameter = {}; // authentication oauth2 required
                // oauth required

                if (!(configuration && configuration.accessToken)) {
                  _context6.next = 19;
                  break;
                }

                if (!(typeof configuration.accessToken === 'function')) {
                  _context6.next = 14;
                  break;
                }

                _context6.next = 11;
                return configuration.accessToken("oauth2", [""]);

              case 11:
                _context6.t0 = _context6.sent;
                _context6.next = 17;
                break;

              case 14:
                _context6.next = 16;
                return configuration.accessToken;

              case 16:
                _context6.t0 = _context6.sent;

              case 17:
                localVarAccessTokenValue = _context6.t0;
                localVarHeaderParameter["Authorization"] = "Bearer " + localVarAccessTokenValue;

              case 19:
                if (language !== undefined) {
                  localVarQueryParameter['language'] = language;
                }

                if (poitype !== undefined) {
                  localVarQueryParameter['poitype'] = poitype;
                }

                if (subtype !== undefined) {
                  localVarQueryParameter['subtype'] = subtype;
                }

                if (locfilter !== undefined) {
                  localVarQueryParameter['locfilter'] = locfilter;
                }

                if (areafilter !== undefined) {
                  localVarQueryParameter['areafilter'] = areafilter;
                }

                if (highlight !== undefined) {
                  localVarQueryParameter['highlight'] = highlight;
                }

                if (odhtagfilter !== undefined) {
                  localVarQueryParameter['odhtagfilter'] = odhtagfilter;
                }

                if (active !== undefined) {
                  localVarQueryParameter['active'] = active;
                }

                if (odhactive !== undefined) {
                  localVarQueryParameter['odhactive'] = odhactive;
                }

                if (latitude !== undefined) {
                  localVarQueryParameter['latitude'] = latitude;
                }

                if (longitude !== undefined) {
                  localVarQueryParameter['longitude'] = longitude;
                }

                if (radius !== undefined) {
                  localVarQueryParameter['radius'] = radius;
                }

                if (fields !== undefined) {
                  localVarQueryParameter['fields'] = fields;
                }

                if (suedtirolmobil !== undefined) {
                  localVarQueryParameter['suedtirolmobil'] = suedtirolmobil;
                }

                query = new URLSearchParams(localVarUrlObj.search);

                for (key in localVarQueryParameter) {
                  query.set(key, localVarQueryParameter[key]);
                }

                for (_key6 in options.query) {
                  query.set(_key6, options.query[_key6]);
                }

                localVarUrlObj.search = new URLSearchParams(query).toString();
                headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                localVarRequestOptions.headers = _objectSpread2(_objectSpread2(_objectSpread2({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                return _context6.abrupt("return", {
                  url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                  options: localVarRequestOptions
                });

              case 40:
              case "end":
                return _context6.stop();
            }
          }
        }, _callee6);
      }));

      function poiGetPoiReduced(_x41, _x42, _x43, _x44, _x45, _x46, _x47, _x48, _x49, _x50, _x51, _x52, _x53, _x54) {
        return _poiGetPoiReduced.apply(this, arguments);
      }

      return poiGetPoiReduced;
    }(),

    /**
     *
     * @summary GET Poi Single
     * @param {string} id ID of the Poi
     * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)
     * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    poiGetPoiSingle: function () {
      var _poiGetPoiSingle = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee7(id, fields, language) {
        var options,
            localVarPath,
            localVarUrlObj,
            baseOptions,
            localVarRequestOptions,
            localVarHeaderParameter,
            localVarQueryParameter,
            localVarAccessTokenValue,
            query,
            key,
            _key7,
            headersFromBaseOptions,
            _args7 = arguments;

        return regeneratorRuntime.wrap(function _callee7$(_context7) {
          while (1) {
            switch (_context7.prev = _context7.next) {
              case 0:
                options = _args7.length > 3 && _args7[3] !== undefined ? _args7[3] : {};

                if (!(id === null || id === undefined)) {
                  _context7.next = 3;
                  break;
                }

                throw new base_RequiredError('id', 'Required parameter id was null or undefined when calling poiGetPoiSingle.');

              case 3:
                localVarPath = "/api/Poi/{id}".replace("{".concat("id", "}"), encodeURIComponent(String(id))); // use dummy base URL string because the URL constructor only accepts absolute URLs.

                localVarUrlObj = new URL(localVarPath, 'https://example.com');

                if (configuration) {
                  baseOptions = configuration.baseOptions;
                }

                localVarRequestOptions = _objectSpread2(_objectSpread2({
                  method: 'GET'
                }, baseOptions), options);
                localVarHeaderParameter = {};
                localVarQueryParameter = {}; // authentication oauth2 required
                // oauth required

                if (!(configuration && configuration.accessToken)) {
                  _context7.next = 21;
                  break;
                }

                if (!(typeof configuration.accessToken === 'function')) {
                  _context7.next = 16;
                  break;
                }

                _context7.next = 13;
                return configuration.accessToken("oauth2", [""]);

              case 13:
                _context7.t0 = _context7.sent;
                _context7.next = 19;
                break;

              case 16:
                _context7.next = 18;
                return configuration.accessToken;

              case 18:
                _context7.t0 = _context7.sent;

              case 19:
                localVarAccessTokenValue = _context7.t0;
                localVarHeaderParameter["Authorization"] = "Bearer " + localVarAccessTokenValue;

              case 21:
                if (fields !== undefined) {
                  localVarQueryParameter['fields'] = fields;
                }

                if (language !== undefined) {
                  localVarQueryParameter['language'] = language;
                }

                query = new URLSearchParams(localVarUrlObj.search);

                for (key in localVarQueryParameter) {
                  query.set(key, localVarQueryParameter[key]);
                }

                for (_key7 in options.query) {
                  query.set(_key7, options.query[_key7]);
                }

                localVarUrlObj.search = new URLSearchParams(query).toString();
                headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                localVarRequestOptions.headers = _objectSpread2(_objectSpread2(_objectSpread2({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                return _context7.abrupt("return", {
                  url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                  options: localVarRequestOptions
                });

              case 30:
              case "end":
                return _context7.stop();
            }
          }
        }, _callee7);
      }));

      function poiGetPoiSingle(_x55, _x56, _x57) {
        return _poiGetPoiSingle.apply(this, arguments);
      }

      return poiGetPoiSingle;
    }(),

    /**
     *
     * @summary GET Poi Localized Single
     * @param {string} id ID of the Poi
     * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    poiGetPoiSingleLocalized: function () {
      var _poiGetPoiSingleLocalized = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee8(id, language) {
        var options,
            localVarPath,
            localVarUrlObj,
            baseOptions,
            localVarRequestOptions,
            localVarHeaderParameter,
            localVarQueryParameter,
            localVarAccessTokenValue,
            query,
            key,
            _key8,
            headersFromBaseOptions,
            _args8 = arguments;

        return regeneratorRuntime.wrap(function _callee8$(_context8) {
          while (1) {
            switch (_context8.prev = _context8.next) {
              case 0:
                options = _args8.length > 2 && _args8[2] !== undefined ? _args8[2] : {};

                if (!(id === null || id === undefined)) {
                  _context8.next = 3;
                  break;
                }

                throw new base_RequiredError('id', 'Required parameter id was null or undefined when calling poiGetPoiSingleLocalized.');

              case 3:
                localVarPath = "/api/PoiLocalized/{id}".replace("{".concat("id", "}"), encodeURIComponent(String(id))); // use dummy base URL string because the URL constructor only accepts absolute URLs.

                localVarUrlObj = new URL(localVarPath, 'https://example.com');

                if (configuration) {
                  baseOptions = configuration.baseOptions;
                }

                localVarRequestOptions = _objectSpread2(_objectSpread2({
                  method: 'GET'
                }, baseOptions), options);
                localVarHeaderParameter = {};
                localVarQueryParameter = {}; // authentication oauth2 required
                // oauth required

                if (!(configuration && configuration.accessToken)) {
                  _context8.next = 21;
                  break;
                }

                if (!(typeof configuration.accessToken === 'function')) {
                  _context8.next = 16;
                  break;
                }

                _context8.next = 13;
                return configuration.accessToken("oauth2", [""]);

              case 13:
                _context8.t0 = _context8.sent;
                _context8.next = 19;
                break;

              case 16:
                _context8.next = 18;
                return configuration.accessToken;

              case 18:
                _context8.t0 = _context8.sent;

              case 19:
                localVarAccessTokenValue = _context8.t0;
                localVarHeaderParameter["Authorization"] = "Bearer " + localVarAccessTokenValue;

              case 21:
                if (language !== undefined) {
                  localVarQueryParameter['language'] = language;
                }

                query = new URLSearchParams(localVarUrlObj.search);

                for (key in localVarQueryParameter) {
                  query.set(key, localVarQueryParameter[key]);
                }

                for (_key8 in options.query) {
                  query.set(_key8, options.query[_key8]);
                }

                localVarUrlObj.search = new URLSearchParams(query).toString();
                headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                localVarRequestOptions.headers = _objectSpread2(_objectSpread2(_objectSpread2({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                return _context8.abrupt("return", {
                  url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                  options: localVarRequestOptions
                });

              case 29:
              case "end":
                return _context8.stop();
            }
          }
        }, _callee8);
      }));

      function poiGetPoiSingleLocalized(_x58, _x59) {
        return _poiGetPoiSingleLocalized.apply(this, arguments);
      }

      return poiGetPoiSingleLocalized;
    }()
  };
};
/**
 * PoiApi - functional programming interface
 * @export
 */

var poi_api_PoiApiFp = function PoiApiFp(configuration) {
  return {
    /**
     *
     * @summary GET Poi Types List
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    poiGetAllPoiTypesList: function poiGetAllPoiTypesList(options) {
      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee9() {
        var localVarAxiosArgs;
        return regeneratorRuntime.wrap(function _callee9$(_context9) {
          while (1) {
            switch (_context9.prev = _context9.next) {
              case 0:
                _context9.next = 2;
                return poi_api_PoiApiAxiosParamCreator(configuration).poiGetAllPoiTypesList(options);

              case 2:
                localVarAxiosArgs = _context9.sent;
                return _context9.abrupt("return", function () {
                  var axios = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : axios_default.a;
                  var basePath = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : BASE_PATH;

                  var axiosRequestArgs = _objectSpread2(_objectSpread2({}, localVarAxiosArgs.options), {}, {
                    url: basePath + localVarAxiosArgs.url
                  });

                  return axios.request(axiosRequestArgs);
                });

              case 4:
              case "end":
                return _context9.stop();
            }
          }
        }, _callee9);
      }))();
    },

    /**
     *
     * @summary GET Poi Type Single
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    poiGetAllPoiTypesSingle: function poiGetAllPoiTypesSingle(id, options) {
      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee10() {
        var localVarAxiosArgs;
        return regeneratorRuntime.wrap(function _callee10$(_context10) {
          while (1) {
            switch (_context10.prev = _context10.next) {
              case 0:
                _context10.next = 2;
                return poi_api_PoiApiAxiosParamCreator(configuration).poiGetAllPoiTypesSingle(id, options);

              case 2:
                localVarAxiosArgs = _context10.sent;
                return _context10.abrupt("return", function () {
                  var axios = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : axios_default.a;
                  var basePath = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : BASE_PATH;

                  var axiosRequestArgs = _objectSpread2(_objectSpread2({}, localVarAxiosArgs.options), {}, {
                    url: basePath + localVarAxiosArgs.url
                  });

                  return axios.request(axiosRequestArgs);
                });

              case 4:
              case "end":
                return _context10.stop();
            }
          }
        }, _callee10);
      }))();
    },

    /**
     *
     * @summary GET Poi Changed List by Date
     * @param {number} [pagenumber] Pagenumber, (default:1)
     * @param {number} [pagesize] Elements per Page, (default:10)
     * @param {string} [seed] Seed &#x27;1 - 10&#x27; for Random Sorting, &#x27;0&#x27; generates a Random Seed, &#x27;null&#x27; disables Random Sorting, (default:null)
     * @param {string} [updatefrom] Date from Format (yyyy-MM-dd) (all GBActivityPoi with LastChange &amp;gt;&#x3D; datefrom are passed), (default: DateTime.Now - 1 Day)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    poiGetAllPoisChanged: function poiGetAllPoisChanged(pagenumber, pagesize, seed, updatefrom, options) {
      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee11() {
        var localVarAxiosArgs;
        return regeneratorRuntime.wrap(function _callee11$(_context11) {
          while (1) {
            switch (_context11.prev = _context11.next) {
              case 0:
                _context11.next = 2;
                return poi_api_PoiApiAxiosParamCreator(configuration).poiGetAllPoisChanged(pagenumber, pagesize, seed, updatefrom, options);

              case 2:
                localVarAxiosArgs = _context11.sent;
                return _context11.abrupt("return", function () {
                  var axios = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : axios_default.a;
                  var basePath = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : BASE_PATH;

                  var axiosRequestArgs = _objectSpread2(_objectSpread2({}, localVarAxiosArgs.options), {}, {
                    url: basePath + localVarAxiosArgs.url
                  });

                  return axios.request(axiosRequestArgs);
                });

              case 4:
              case "end":
                return _context11.stop();
            }
          }
        }, _callee11);
      }))();
    },

    /**
     *
     * @summary GET Poi List
     * @param {number} [pagenumber] Pagenumber, (default:1)
     * @param {number} [pagesize] Elements per Page, (default:10)
     * @param {string} [poitype] Type of the Poi (&#x27;null&#x27; &#x3D; Filter disabled, possible values: BITMASK &#x27;Doctors, Pharmacies &#x3D; 1&#x27;,&#x27;Shops &#x3D; 2&#x27;,&#x27;Culture and sights&#x3D; 4&#x27;,&#x27;Nightlife and entertainment &#x3D; 8&#x27;,&#x27;Public institutions &#x3D; 16&#x27;,&#x27;Sports and leisure &#x3D; 32&#x27;,&#x27;Traffic and transport &#x3D; 64&#x27;, &#x27;Service providers&#x27; &#x3D; 128, &#x27;Craft&#x27; &#x3D; 256), (default:&#x27;511&#x27; &#x3D;&#x3D; ALL), REFERENCE TO: GET /api/PoiTypes
     * @param {string} [subtype] Subtype of the Poi (&#x27;null&#x27; &#x3D; Filter disabled, available Subtypes depends on the poitype BITMASK), (default:&#x27;null&#x27;)
     * @param {string} [idlist] IDFilter (Separator &#x27;,&#x27; List of Activity IDs, &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)
     * @param {string} [locfilter] Locfilter (Separator &#x27;,&#x27; possible values: reg + REGIONID &#x3D; (Filter by Region), reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMASSOCIATIONID &#x3D; (Filter by Tourismassociation), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)
     * @param {string} [areafilter] AreaFilter (Alternate Locfilter, can be combined with locfilter) (Separator &#x27;,&#x27; possible values: reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMASSOCIATIONID &#x3D; (Filter by Tourismassociation), skr + SKIREGIONID &#x3D; (Filter by Skiregion), ska + SKIAREAID &#x3D; (Filter by Skiarea), are + AREAID &#x3D; (Filter by LTS Area), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)
     * @param {boolean} [highlight] Highlight Filter (Show only Highlights possible values: &#x27;true&#x27; : show only Highlight Pois, &#x27;null&#x27; Filter disabled), (default:&#x27;null&#x27;)
     * @param {string} [odhtagfilter] ODH Taglist Filter (refers to Array SmgTags) (String, Separator &#x27;,&#x27; more Tags possible, available Tags reference to &#x27;api/ODHTag?validforentity&#x3D;poi&#x27;), (default:&#x27;null&#x27;)
     * @param {boolean} [active] Active Pois Filter (possible Values: &#x27;true&#x27; only Active Pois, &#x27;false&#x27; only Disabled Pois, (default:&#x27;null&#x27;)
     * @param {boolean} [odhactive] ODH Active (Published) Pois Filter (Refers to field SmgActive) Pois Filter (possible Values: &#x27;true&#x27; only published Pois, &#x27;false&#x27; only not published Pois, (default:&#x27;null&#x27;)
     * @param {string} [seed] Seed &#x27;1 - 10&#x27; for Random Sorting, &#x27;0&#x27; generates a Random Seed, &#x27;null&#x27; disables Random Sorting, (default:null)
     * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)
     * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)
     * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)
     * @param {string} [updatefrom] Date from Format (yyyy-MM-dd) (all GBActivityPoi with LastChange &amp;gt;&#x3D; datefrom are passed), (default: null)
     * @param {string} [searchfilter] String to search for, Title in all languages are searched, (default: null)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    poiGetPoiFiltered: function poiGetPoiFiltered(pagenumber, pagesize, poitype, subtype, idlist, locfilter, areafilter, highlight, odhtagfilter, active, odhactive, seed, latitude, longitude, radius, fields, language, updatefrom, searchfilter, options) {
      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee12() {
        var localVarAxiosArgs;
        return regeneratorRuntime.wrap(function _callee12$(_context12) {
          while (1) {
            switch (_context12.prev = _context12.next) {
              case 0:
                _context12.next = 2;
                return poi_api_PoiApiAxiosParamCreator(configuration).poiGetPoiFiltered(pagenumber, pagesize, poitype, subtype, idlist, locfilter, areafilter, highlight, odhtagfilter, active, odhactive, seed, latitude, longitude, radius, fields, language, updatefrom, searchfilter, options);

              case 2:
                localVarAxiosArgs = _context12.sent;
                return _context12.abrupt("return", function () {
                  var axios = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : axios_default.a;
                  var basePath = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : BASE_PATH;

                  var axiosRequestArgs = _objectSpread2(_objectSpread2({}, localVarAxiosArgs.options), {}, {
                    url: basePath + localVarAxiosArgs.url
                  });

                  return axios.request(axiosRequestArgs);
                });

              case 4:
              case "end":
                return _context12.stop();
            }
          }
        }, _callee12);
      }))();
    },

    /**
     *
     * @summary GET Poi Localized List
     * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)
     * @param {number} [pagenumber] Pagenumber, (default:1)
     * @param {number} [pagesize] Elements per Page, (default:10)
     * @param {string} [poitype] Type of the Poi (&#x27;null&#x27; &#x3D; Filter disabled, possible values: BITMASK &#x27;Doctors, Pharmacies &#x3D; 1&#x27;,&#x27;Shops &#x3D; 2&#x27;,&#x27;Culture and sights&#x3D; 4&#x27;,&#x27;Nightlife and entertainment &#x3D; 8&#x27;,&#x27;Public institutions &#x3D; 16&#x27;,&#x27;Sports and leisure &#x3D; 32&#x27;,&#x27;Traffic and transport &#x3D; 64&#x27;, &#x27;Service providers&#x27; &#x3D; 128, &#x27;Craft&#x27; &#x3D; 256), (default:&#x27;511&#x27; &#x3D;&#x3D; ALL), REFERENCE TO: GET /api/PoiTypes
     * @param {string} [subtype] Subtype of the Poi (&#x27;null&#x27; &#x3D; Filter disabled, available Subtypes depends on the poitype BITMASK), (default:&#x27;null&#x27;)
     * @param {string} [idlist] IDFilter (Separator &#x27;,&#x27; List of Activity IDs, &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)
     * @param {string} [locfilter] Locfilter (Separator &#x27;,&#x27; possible values: reg + REGIONID &#x3D; (Filter by Region), reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMASSOCIATIONID &#x3D; (Filter by Tourismassociation), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)
     * @param {string} [areafilter] AreaFilter (Alternate Locfilter, can be combined with locfilter) (Separator &#x27;,&#x27; possible values: reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMASSOCIATIONID &#x3D; (Filter by Tourismassociation), skr + SKIREGIONID &#x3D; (Filter by Skiregion), ska + SKIAREAID &#x3D; (Filter by Skiarea), are + AREAID &#x3D; (Filter by LTS Area), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)
     * @param {boolean} [highlight] Highlight Filter (Show only Highlights possible values: &#x27;true&#x27; : show only Highlight Pois, &#x27;null&#x27; Filter disabled), (default:&#x27;null&#x27;)
     * @param {string} [odhtagfilter] ODH Taglist Filter (refers to Array SmgTags) (String, Separator &#x27;,&#x27; more Tags possible, available Tags reference to &#x27;api/ODHTag?validforentity&#x3D;poi&#x27;), (default:&#x27;null&#x27;)
     * @param {boolean} [active] Active Pois Filter (possible Values: &#x27;true&#x27; only Active Pois, &#x27;false&#x27; only Disabled Pois, (default:&#x27;null&#x27;)
     * @param {boolean} [odhactive] ODH Active (Published) Pois Filter (Refers to field SmgActive) Pois Filter (possible Values: &#x27;true&#x27; only published Pois, &#x27;false&#x27; only not published Pois, (default:&#x27;null&#x27;)
     * @param {string} [seed] Seed &#x27;1 - 10&#x27; for Random Sorting, &#x27;0&#x27; generates a Random Seed, &#x27;null&#x27; disables Random Sorting, (default:null)
     * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    poiGetPoiLocalized: function poiGetPoiLocalized(language, pagenumber, pagesize, poitype, subtype, idlist, locfilter, areafilter, highlight, odhtagfilter, active, odhactive, seed, latitude, longitude, radius, options) {
      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee13() {
        var localVarAxiosArgs;
        return regeneratorRuntime.wrap(function _callee13$(_context13) {
          while (1) {
            switch (_context13.prev = _context13.next) {
              case 0:
                _context13.next = 2;
                return poi_api_PoiApiAxiosParamCreator(configuration).poiGetPoiLocalized(language, pagenumber, pagesize, poitype, subtype, idlist, locfilter, areafilter, highlight, odhtagfilter, active, odhactive, seed, latitude, longitude, radius, options);

              case 2:
                localVarAxiosArgs = _context13.sent;
                return _context13.abrupt("return", function () {
                  var axios = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : axios_default.a;
                  var basePath = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : BASE_PATH;

                  var axiosRequestArgs = _objectSpread2(_objectSpread2({}, localVarAxiosArgs.options), {}, {
                    url: basePath + localVarAxiosArgs.url
                  });

                  return axios.request(axiosRequestArgs);
                });

              case 4:
              case "end":
                return _context13.stop();
            }
          }
        }, _callee13);
      }))();
    },

    /**
     *
     * @summary GET Poi List Reduced
     * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)
     * @param {string} [poitype] Type of the Poi (&#x27;null&#x27; &#x3D; Filter disabled, possible values: BITMASK &#x27;Doctors, Pharmacies &#x3D; 1&#x27;,&#x27;Shops &#x3D; 2&#x27;,&#x27;Culture and sights&#x3D; 4&#x27;,&#x27;Nightlife and entertainment &#x3D; 8&#x27;,&#x27;Public institutions &#x3D; 16&#x27;,&#x27;Sports and leisure &#x3D; 32&#x27;,&#x27;Traffic and transport &#x3D; 64&#x27;, &#x27;Service providers&#x27; &#x3D; 128, &#x27;Craft&#x27; &#x3D; 256), (default:&#x27;511&#x27; &#x3D;&#x3D; ALL), REFERENCE TO: GET /api/PoiTypes
     * @param {string} [subtype] Subtype of the Activity (BITMASK Filter &#x3D; available SubTypes depends on the selected poiType), (default:&#x27;null&#x27;)
     * @param {string} [locfilter] Locfilter (Separator &#x27;,&#x27; possible values: reg + REGIONID &#x3D; (Filter by Region), reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMASSOCIATIONID &#x3D; (Filter by Tourismassociation), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)
     * @param {string} [areafilter] AreaFilter (Alternate Locfilter, can be combined with locfilter) (Separator &#x27;,&#x27; possible values: reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMASSOCIATIONID &#x3D; (Filter by Tourismassociation), skr + SKIREGIONID &#x3D; (Filter by Skiregion), ska + SKIAREAID &#x3D; (Filter by Skiarea), are + AREAID &#x3D; (Filter by LTS Area), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)
     * @param {boolean} [highlight] Hightlight Filter (possible values: &#x27;false&#x27; &#x3D; only Pois with Highlight false, &#x27;true&#x27; &#x3D; only Pois with Highlight true), (default:&#x27;null&#x27;)
     * @param {string} [odhtagfilter] ODH Taglist Filter (refers to Array SmgTags) (String, Separator &#x27;,&#x27; more Tags possible, available Tags reference to &#x27;api/ODHTag?validforentity&#x3D;poi&#x27;), (default:&#x27;null&#x27;)
     * @param {boolean} [active] Active Pois Filter (possible Values: &#x27;true&#x27; only Active Pois, &#x27;false&#x27; only Disabled Pois
     * @param {boolean} [odhactive] ODH Active (Published) Pois Filter (Refers to field SmgActive) Pois Filter (possible Values: &#x27;true&#x27; only published Pois, &#x27;false&#x27; only not published Pois, (default:&#x27;null&#x27;)
     * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)
     * @param {string} [fields] Select fields to display, by Default Title and Id are selected if fields filter is null More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)
     * @param {boolean} [suedtirolmobil]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    poiGetPoiReduced: function poiGetPoiReduced(language, poitype, subtype, locfilter, areafilter, highlight, odhtagfilter, active, odhactive, latitude, longitude, radius, fields, suedtirolmobil, options) {
      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee14() {
        var localVarAxiosArgs;
        return regeneratorRuntime.wrap(function _callee14$(_context14) {
          while (1) {
            switch (_context14.prev = _context14.next) {
              case 0:
                _context14.next = 2;
                return poi_api_PoiApiAxiosParamCreator(configuration).poiGetPoiReduced(language, poitype, subtype, locfilter, areafilter, highlight, odhtagfilter, active, odhactive, latitude, longitude, radius, fields, suedtirolmobil, options);

              case 2:
                localVarAxiosArgs = _context14.sent;
                return _context14.abrupt("return", function () {
                  var axios = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : axios_default.a;
                  var basePath = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : BASE_PATH;

                  var axiosRequestArgs = _objectSpread2(_objectSpread2({}, localVarAxiosArgs.options), {}, {
                    url: basePath + localVarAxiosArgs.url
                  });

                  return axios.request(axiosRequestArgs);
                });

              case 4:
              case "end":
                return _context14.stop();
            }
          }
        }, _callee14);
      }))();
    },

    /**
     *
     * @summary GET Poi Single
     * @param {string} id ID of the Poi
     * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)
     * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    poiGetPoiSingle: function poiGetPoiSingle(id, fields, language, options) {
      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee15() {
        var localVarAxiosArgs;
        return regeneratorRuntime.wrap(function _callee15$(_context15) {
          while (1) {
            switch (_context15.prev = _context15.next) {
              case 0:
                _context15.next = 2;
                return poi_api_PoiApiAxiosParamCreator(configuration).poiGetPoiSingle(id, fields, language, options);

              case 2:
                localVarAxiosArgs = _context15.sent;
                return _context15.abrupt("return", function () {
                  var axios = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : axios_default.a;
                  var basePath = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : BASE_PATH;

                  var axiosRequestArgs = _objectSpread2(_objectSpread2({}, localVarAxiosArgs.options), {}, {
                    url: basePath + localVarAxiosArgs.url
                  });

                  return axios.request(axiosRequestArgs);
                });

              case 4:
              case "end":
                return _context15.stop();
            }
          }
        }, _callee15);
      }))();
    },

    /**
     *
     * @summary GET Poi Localized Single
     * @param {string} id ID of the Poi
     * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    poiGetPoiSingleLocalized: function poiGetPoiSingleLocalized(id, language, options) {
      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee16() {
        var localVarAxiosArgs;
        return regeneratorRuntime.wrap(function _callee16$(_context16) {
          while (1) {
            switch (_context16.prev = _context16.next) {
              case 0:
                _context16.next = 2;
                return poi_api_PoiApiAxiosParamCreator(configuration).poiGetPoiSingleLocalized(id, language, options);

              case 2:
                localVarAxiosArgs = _context16.sent;
                return _context16.abrupt("return", function () {
                  var axios = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : axios_default.a;
                  var basePath = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : BASE_PATH;

                  var axiosRequestArgs = _objectSpread2(_objectSpread2({}, localVarAxiosArgs.options), {}, {
                    url: basePath + localVarAxiosArgs.url
                  });

                  return axios.request(axiosRequestArgs);
                });

              case 4:
              case "end":
                return _context16.stop();
            }
          }
        }, _callee16);
      }))();
    }
  };
};
/**
 * PoiApi - factory interface
 * @export
 */

var PoiApiFactory = function PoiApiFactory(configuration, basePath, axios) {
  return {
    /**
     *
     * @summary GET Poi Types List
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    poiGetAllPoiTypesList: function poiGetAllPoiTypesList(options) {
      return poi_api_PoiApiFp(configuration).poiGetAllPoiTypesList(options).then(function (request) {
        return request(axios, basePath);
      });
    },

    /**
     *
     * @summary GET Poi Type Single
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    poiGetAllPoiTypesSingle: function poiGetAllPoiTypesSingle(id, options) {
      return poi_api_PoiApiFp(configuration).poiGetAllPoiTypesSingle(id, options).then(function (request) {
        return request(axios, basePath);
      });
    },

    /**
     *
     * @summary GET Poi Changed List by Date
     * @param {number} [pagenumber] Pagenumber, (default:1)
     * @param {number} [pagesize] Elements per Page, (default:10)
     * @param {string} [seed] Seed &#x27;1 - 10&#x27; for Random Sorting, &#x27;0&#x27; generates a Random Seed, &#x27;null&#x27; disables Random Sorting, (default:null)
     * @param {string} [updatefrom] Date from Format (yyyy-MM-dd) (all GBActivityPoi with LastChange &amp;gt;&#x3D; datefrom are passed), (default: DateTime.Now - 1 Day)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    poiGetAllPoisChanged: function poiGetAllPoisChanged(pagenumber, pagesize, seed, updatefrom, options) {
      return poi_api_PoiApiFp(configuration).poiGetAllPoisChanged(pagenumber, pagesize, seed, updatefrom, options).then(function (request) {
        return request(axios, basePath);
      });
    },

    /**
     *
     * @summary GET Poi List
     * @param {number} [pagenumber] Pagenumber, (default:1)
     * @param {number} [pagesize] Elements per Page, (default:10)
     * @param {string} [poitype] Type of the Poi (&#x27;null&#x27; &#x3D; Filter disabled, possible values: BITMASK &#x27;Doctors, Pharmacies &#x3D; 1&#x27;,&#x27;Shops &#x3D; 2&#x27;,&#x27;Culture and sights&#x3D; 4&#x27;,&#x27;Nightlife and entertainment &#x3D; 8&#x27;,&#x27;Public institutions &#x3D; 16&#x27;,&#x27;Sports and leisure &#x3D; 32&#x27;,&#x27;Traffic and transport &#x3D; 64&#x27;, &#x27;Service providers&#x27; &#x3D; 128, &#x27;Craft&#x27; &#x3D; 256), (default:&#x27;511&#x27; &#x3D;&#x3D; ALL), REFERENCE TO: GET /api/PoiTypes
     * @param {string} [subtype] Subtype of the Poi (&#x27;null&#x27; &#x3D; Filter disabled, available Subtypes depends on the poitype BITMASK), (default:&#x27;null&#x27;)
     * @param {string} [idlist] IDFilter (Separator &#x27;,&#x27; List of Activity IDs, &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)
     * @param {string} [locfilter] Locfilter (Separator &#x27;,&#x27; possible values: reg + REGIONID &#x3D; (Filter by Region), reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMASSOCIATIONID &#x3D; (Filter by Tourismassociation), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)
     * @param {string} [areafilter] AreaFilter (Alternate Locfilter, can be combined with locfilter) (Separator &#x27;,&#x27; possible values: reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMASSOCIATIONID &#x3D; (Filter by Tourismassociation), skr + SKIREGIONID &#x3D; (Filter by Skiregion), ska + SKIAREAID &#x3D; (Filter by Skiarea), are + AREAID &#x3D; (Filter by LTS Area), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)
     * @param {boolean} [highlight] Highlight Filter (Show only Highlights possible values: &#x27;true&#x27; : show only Highlight Pois, &#x27;null&#x27; Filter disabled), (default:&#x27;null&#x27;)
     * @param {string} [odhtagfilter] ODH Taglist Filter (refers to Array SmgTags) (String, Separator &#x27;,&#x27; more Tags possible, available Tags reference to &#x27;api/ODHTag?validforentity&#x3D;poi&#x27;), (default:&#x27;null&#x27;)
     * @param {boolean} [active] Active Pois Filter (possible Values: &#x27;true&#x27; only Active Pois, &#x27;false&#x27; only Disabled Pois, (default:&#x27;null&#x27;)
     * @param {boolean} [odhactive] ODH Active (Published) Pois Filter (Refers to field SmgActive) Pois Filter (possible Values: &#x27;true&#x27; only published Pois, &#x27;false&#x27; only not published Pois, (default:&#x27;null&#x27;)
     * @param {string} [seed] Seed &#x27;1 - 10&#x27; for Random Sorting, &#x27;0&#x27; generates a Random Seed, &#x27;null&#x27; disables Random Sorting, (default:null)
     * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)
     * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)
     * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)
     * @param {string} [updatefrom] Date from Format (yyyy-MM-dd) (all GBActivityPoi with LastChange &amp;gt;&#x3D; datefrom are passed), (default: null)
     * @param {string} [searchfilter] String to search for, Title in all languages are searched, (default: null)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    poiGetPoiFiltered: function poiGetPoiFiltered(pagenumber, pagesize, poitype, subtype, idlist, locfilter, areafilter, highlight, odhtagfilter, active, odhactive, seed, latitude, longitude, radius, fields, language, updatefrom, searchfilter, options) {
      return poi_api_PoiApiFp(configuration).poiGetPoiFiltered(pagenumber, pagesize, poitype, subtype, idlist, locfilter, areafilter, highlight, odhtagfilter, active, odhactive, seed, latitude, longitude, radius, fields, language, updatefrom, searchfilter, options).then(function (request) {
        return request(axios, basePath);
      });
    },

    /**
     *
     * @summary GET Poi Localized List
     * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)
     * @param {number} [pagenumber] Pagenumber, (default:1)
     * @param {number} [pagesize] Elements per Page, (default:10)
     * @param {string} [poitype] Type of the Poi (&#x27;null&#x27; &#x3D; Filter disabled, possible values: BITMASK &#x27;Doctors, Pharmacies &#x3D; 1&#x27;,&#x27;Shops &#x3D; 2&#x27;,&#x27;Culture and sights&#x3D; 4&#x27;,&#x27;Nightlife and entertainment &#x3D; 8&#x27;,&#x27;Public institutions &#x3D; 16&#x27;,&#x27;Sports and leisure &#x3D; 32&#x27;,&#x27;Traffic and transport &#x3D; 64&#x27;, &#x27;Service providers&#x27; &#x3D; 128, &#x27;Craft&#x27; &#x3D; 256), (default:&#x27;511&#x27; &#x3D;&#x3D; ALL), REFERENCE TO: GET /api/PoiTypes
     * @param {string} [subtype] Subtype of the Poi (&#x27;null&#x27; &#x3D; Filter disabled, available Subtypes depends on the poitype BITMASK), (default:&#x27;null&#x27;)
     * @param {string} [idlist] IDFilter (Separator &#x27;,&#x27; List of Activity IDs, &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)
     * @param {string} [locfilter] Locfilter (Separator &#x27;,&#x27; possible values: reg + REGIONID &#x3D; (Filter by Region), reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMASSOCIATIONID &#x3D; (Filter by Tourismassociation), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)
     * @param {string} [areafilter] AreaFilter (Alternate Locfilter, can be combined with locfilter) (Separator &#x27;,&#x27; possible values: reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMASSOCIATIONID &#x3D; (Filter by Tourismassociation), skr + SKIREGIONID &#x3D; (Filter by Skiregion), ska + SKIAREAID &#x3D; (Filter by Skiarea), are + AREAID &#x3D; (Filter by LTS Area), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)
     * @param {boolean} [highlight] Highlight Filter (Show only Highlights possible values: &#x27;true&#x27; : show only Highlight Pois, &#x27;null&#x27; Filter disabled), (default:&#x27;null&#x27;)
     * @param {string} [odhtagfilter] ODH Taglist Filter (refers to Array SmgTags) (String, Separator &#x27;,&#x27; more Tags possible, available Tags reference to &#x27;api/ODHTag?validforentity&#x3D;poi&#x27;), (default:&#x27;null&#x27;)
     * @param {boolean} [active] Active Pois Filter (possible Values: &#x27;true&#x27; only Active Pois, &#x27;false&#x27; only Disabled Pois, (default:&#x27;null&#x27;)
     * @param {boolean} [odhactive] ODH Active (Published) Pois Filter (Refers to field SmgActive) Pois Filter (possible Values: &#x27;true&#x27; only published Pois, &#x27;false&#x27; only not published Pois, (default:&#x27;null&#x27;)
     * @param {string} [seed] Seed &#x27;1 - 10&#x27; for Random Sorting, &#x27;0&#x27; generates a Random Seed, &#x27;null&#x27; disables Random Sorting, (default:null)
     * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    poiGetPoiLocalized: function poiGetPoiLocalized(language, pagenumber, pagesize, poitype, subtype, idlist, locfilter, areafilter, highlight, odhtagfilter, active, odhactive, seed, latitude, longitude, radius, options) {
      return poi_api_PoiApiFp(configuration).poiGetPoiLocalized(language, pagenumber, pagesize, poitype, subtype, idlist, locfilter, areafilter, highlight, odhtagfilter, active, odhactive, seed, latitude, longitude, radius, options).then(function (request) {
        return request(axios, basePath);
      });
    },

    /**
     *
     * @summary GET Poi List Reduced
     * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)
     * @param {string} [poitype] Type of the Poi (&#x27;null&#x27; &#x3D; Filter disabled, possible values: BITMASK &#x27;Doctors, Pharmacies &#x3D; 1&#x27;,&#x27;Shops &#x3D; 2&#x27;,&#x27;Culture and sights&#x3D; 4&#x27;,&#x27;Nightlife and entertainment &#x3D; 8&#x27;,&#x27;Public institutions &#x3D; 16&#x27;,&#x27;Sports and leisure &#x3D; 32&#x27;,&#x27;Traffic and transport &#x3D; 64&#x27;, &#x27;Service providers&#x27; &#x3D; 128, &#x27;Craft&#x27; &#x3D; 256), (default:&#x27;511&#x27; &#x3D;&#x3D; ALL), REFERENCE TO: GET /api/PoiTypes
     * @param {string} [subtype] Subtype of the Activity (BITMASK Filter &#x3D; available SubTypes depends on the selected poiType), (default:&#x27;null&#x27;)
     * @param {string} [locfilter] Locfilter (Separator &#x27;,&#x27; possible values: reg + REGIONID &#x3D; (Filter by Region), reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMASSOCIATIONID &#x3D; (Filter by Tourismassociation), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)
     * @param {string} [areafilter] AreaFilter (Alternate Locfilter, can be combined with locfilter) (Separator &#x27;,&#x27; possible values: reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMASSOCIATIONID &#x3D; (Filter by Tourismassociation), skr + SKIREGIONID &#x3D; (Filter by Skiregion), ska + SKIAREAID &#x3D; (Filter by Skiarea), are + AREAID &#x3D; (Filter by LTS Area), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)
     * @param {boolean} [highlight] Hightlight Filter (possible values: &#x27;false&#x27; &#x3D; only Pois with Highlight false, &#x27;true&#x27; &#x3D; only Pois with Highlight true), (default:&#x27;null&#x27;)
     * @param {string} [odhtagfilter] ODH Taglist Filter (refers to Array SmgTags) (String, Separator &#x27;,&#x27; more Tags possible, available Tags reference to &#x27;api/ODHTag?validforentity&#x3D;poi&#x27;), (default:&#x27;null&#x27;)
     * @param {boolean} [active] Active Pois Filter (possible Values: &#x27;true&#x27; only Active Pois, &#x27;false&#x27; only Disabled Pois
     * @param {boolean} [odhactive] ODH Active (Published) Pois Filter (Refers to field SmgActive) Pois Filter (possible Values: &#x27;true&#x27; only published Pois, &#x27;false&#x27; only not published Pois, (default:&#x27;null&#x27;)
     * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)
     * @param {string} [fields] Select fields to display, by Default Title and Id are selected if fields filter is null More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)
     * @param {boolean} [suedtirolmobil]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    poiGetPoiReduced: function poiGetPoiReduced(language, poitype, subtype, locfilter, areafilter, highlight, odhtagfilter, active, odhactive, latitude, longitude, radius, fields, suedtirolmobil, options) {
      return poi_api_PoiApiFp(configuration).poiGetPoiReduced(language, poitype, subtype, locfilter, areafilter, highlight, odhtagfilter, active, odhactive, latitude, longitude, radius, fields, suedtirolmobil, options).then(function (request) {
        return request(axios, basePath);
      });
    },

    /**
     *
     * @summary GET Poi Single
     * @param {string} id ID of the Poi
     * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)
     * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    poiGetPoiSingle: function poiGetPoiSingle(id, fields, language, options) {
      return poi_api_PoiApiFp(configuration).poiGetPoiSingle(id, fields, language, options).then(function (request) {
        return request(axios, basePath);
      });
    },

    /**
     *
     * @summary GET Poi Localized Single
     * @param {string} id ID of the Poi
     * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    poiGetPoiSingleLocalized: function poiGetPoiSingleLocalized(id, language, options) {
      return poi_api_PoiApiFp(configuration).poiGetPoiSingleLocalized(id, language, options).then(function (request) {
        return request(axios, basePath);
      });
    }
  };
};
/**
 * PoiApi - object-oriented interface
 * @export
 * @class PoiApi
 * @extends {BaseAPI}
 */

var poi_api_PoiApi = /*#__PURE__*/function (_BaseAPI) {
  _inherits(PoiApi, _BaseAPI);

  var _super = _createSuper(PoiApi);

  function PoiApi() {
    _classCallCheck(this, PoiApi);

    return _super.apply(this, arguments);
  }

  _createClass(PoiApi, [{
    key: "poiGetAllPoiTypesList",

    /**
     *
     * @summary GET Poi Types List
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof PoiApi
     */
    value: function poiGetAllPoiTypesList(options) {
      var _this = this;

      return poi_api_PoiApiFp(this.configuration).poiGetAllPoiTypesList(options).then(function (request) {
        return request(_this.axios, _this.basePath);
      });
    }
    /**
     *
     * @summary GET Poi Type Single
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof PoiApi
     */

  }, {
    key: "poiGetAllPoiTypesSingle",
    value: function poiGetAllPoiTypesSingle(id, options) {
      var _this2 = this;

      return poi_api_PoiApiFp(this.configuration).poiGetAllPoiTypesSingle(id, options).then(function (request) {
        return request(_this2.axios, _this2.basePath);
      });
    }
    /**
     *
     * @summary GET Poi Changed List by Date
     * @param {number} [pagenumber] Pagenumber, (default:1)
     * @param {number} [pagesize] Elements per Page, (default:10)
     * @param {string} [seed] Seed &#x27;1 - 10&#x27; for Random Sorting, &#x27;0&#x27; generates a Random Seed, &#x27;null&#x27; disables Random Sorting, (default:null)
     * @param {string} [updatefrom] Date from Format (yyyy-MM-dd) (all GBActivityPoi with LastChange &amp;gt;&#x3D; datefrom are passed), (default: DateTime.Now - 1 Day)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof PoiApi
     */

  }, {
    key: "poiGetAllPoisChanged",
    value: function poiGetAllPoisChanged(pagenumber, pagesize, seed, updatefrom, options) {
      var _this3 = this;

      return poi_api_PoiApiFp(this.configuration).poiGetAllPoisChanged(pagenumber, pagesize, seed, updatefrom, options).then(function (request) {
        return request(_this3.axios, _this3.basePath);
      });
    }
    /**
     *
     * @summary GET Poi List
     * @param {number} [pagenumber] Pagenumber, (default:1)
     * @param {number} [pagesize] Elements per Page, (default:10)
     * @param {string} [poitype] Type of the Poi (&#x27;null&#x27; &#x3D; Filter disabled, possible values: BITMASK &#x27;Doctors, Pharmacies &#x3D; 1&#x27;,&#x27;Shops &#x3D; 2&#x27;,&#x27;Culture and sights&#x3D; 4&#x27;,&#x27;Nightlife and entertainment &#x3D; 8&#x27;,&#x27;Public institutions &#x3D; 16&#x27;,&#x27;Sports and leisure &#x3D; 32&#x27;,&#x27;Traffic and transport &#x3D; 64&#x27;, &#x27;Service providers&#x27; &#x3D; 128, &#x27;Craft&#x27; &#x3D; 256), (default:&#x27;511&#x27; &#x3D;&#x3D; ALL), REFERENCE TO: GET /api/PoiTypes
     * @param {string} [subtype] Subtype of the Poi (&#x27;null&#x27; &#x3D; Filter disabled, available Subtypes depends on the poitype BITMASK), (default:&#x27;null&#x27;)
     * @param {string} [idlist] IDFilter (Separator &#x27;,&#x27; List of Activity IDs, &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)
     * @param {string} [locfilter] Locfilter (Separator &#x27;,&#x27; possible values: reg + REGIONID &#x3D; (Filter by Region), reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMASSOCIATIONID &#x3D; (Filter by Tourismassociation), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)
     * @param {string} [areafilter] AreaFilter (Alternate Locfilter, can be combined with locfilter) (Separator &#x27;,&#x27; possible values: reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMASSOCIATIONID &#x3D; (Filter by Tourismassociation), skr + SKIREGIONID &#x3D; (Filter by Skiregion), ska + SKIAREAID &#x3D; (Filter by Skiarea), are + AREAID &#x3D; (Filter by LTS Area), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)
     * @param {boolean} [highlight] Highlight Filter (Show only Highlights possible values: &#x27;true&#x27; : show only Highlight Pois, &#x27;null&#x27; Filter disabled), (default:&#x27;null&#x27;)
     * @param {string} [odhtagfilter] ODH Taglist Filter (refers to Array SmgTags) (String, Separator &#x27;,&#x27; more Tags possible, available Tags reference to &#x27;api/ODHTag?validforentity&#x3D;poi&#x27;), (default:&#x27;null&#x27;)
     * @param {boolean} [active] Active Pois Filter (possible Values: &#x27;true&#x27; only Active Pois, &#x27;false&#x27; only Disabled Pois, (default:&#x27;null&#x27;)
     * @param {boolean} [odhactive] ODH Active (Published) Pois Filter (Refers to field SmgActive) Pois Filter (possible Values: &#x27;true&#x27; only published Pois, &#x27;false&#x27; only not published Pois, (default:&#x27;null&#x27;)
     * @param {string} [seed] Seed &#x27;1 - 10&#x27; for Random Sorting, &#x27;0&#x27; generates a Random Seed, &#x27;null&#x27; disables Random Sorting, (default:null)
     * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)
     * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)
     * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)
     * @param {string} [updatefrom] Date from Format (yyyy-MM-dd) (all GBActivityPoi with LastChange &amp;gt;&#x3D; datefrom are passed), (default: null)
     * @param {string} [searchfilter] String to search for, Title in all languages are searched, (default: null)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof PoiApi
     */

  }, {
    key: "poiGetPoiFiltered",
    value: function poiGetPoiFiltered(pagenumber, pagesize, poitype, subtype, idlist, locfilter, areafilter, highlight, odhtagfilter, active, odhactive, seed, latitude, longitude, radius, fields, language, updatefrom, searchfilter, options) {
      var _this4 = this;

      return poi_api_PoiApiFp(this.configuration).poiGetPoiFiltered(pagenumber, pagesize, poitype, subtype, idlist, locfilter, areafilter, highlight, odhtagfilter, active, odhactive, seed, latitude, longitude, radius, fields, language, updatefrom, searchfilter, options).then(function (request) {
        return request(_this4.axios, _this4.basePath);
      });
    }
    /**
     *
     * @summary GET Poi Localized List
     * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)
     * @param {number} [pagenumber] Pagenumber, (default:1)
     * @param {number} [pagesize] Elements per Page, (default:10)
     * @param {string} [poitype] Type of the Poi (&#x27;null&#x27; &#x3D; Filter disabled, possible values: BITMASK &#x27;Doctors, Pharmacies &#x3D; 1&#x27;,&#x27;Shops &#x3D; 2&#x27;,&#x27;Culture and sights&#x3D; 4&#x27;,&#x27;Nightlife and entertainment &#x3D; 8&#x27;,&#x27;Public institutions &#x3D; 16&#x27;,&#x27;Sports and leisure &#x3D; 32&#x27;,&#x27;Traffic and transport &#x3D; 64&#x27;, &#x27;Service providers&#x27; &#x3D; 128, &#x27;Craft&#x27; &#x3D; 256), (default:&#x27;511&#x27; &#x3D;&#x3D; ALL), REFERENCE TO: GET /api/PoiTypes
     * @param {string} [subtype] Subtype of the Poi (&#x27;null&#x27; &#x3D; Filter disabled, available Subtypes depends on the poitype BITMASK), (default:&#x27;null&#x27;)
     * @param {string} [idlist] IDFilter (Separator &#x27;,&#x27; List of Activity IDs, &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)
     * @param {string} [locfilter] Locfilter (Separator &#x27;,&#x27; possible values: reg + REGIONID &#x3D; (Filter by Region), reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMASSOCIATIONID &#x3D; (Filter by Tourismassociation), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)
     * @param {string} [areafilter] AreaFilter (Alternate Locfilter, can be combined with locfilter) (Separator &#x27;,&#x27; possible values: reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMASSOCIATIONID &#x3D; (Filter by Tourismassociation), skr + SKIREGIONID &#x3D; (Filter by Skiregion), ska + SKIAREAID &#x3D; (Filter by Skiarea), are + AREAID &#x3D; (Filter by LTS Area), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)
     * @param {boolean} [highlight] Highlight Filter (Show only Highlights possible values: &#x27;true&#x27; : show only Highlight Pois, &#x27;null&#x27; Filter disabled), (default:&#x27;null&#x27;)
     * @param {string} [odhtagfilter] ODH Taglist Filter (refers to Array SmgTags) (String, Separator &#x27;,&#x27; more Tags possible, available Tags reference to &#x27;api/ODHTag?validforentity&#x3D;poi&#x27;), (default:&#x27;null&#x27;)
     * @param {boolean} [active] Active Pois Filter (possible Values: &#x27;true&#x27; only Active Pois, &#x27;false&#x27; only Disabled Pois, (default:&#x27;null&#x27;)
     * @param {boolean} [odhactive] ODH Active (Published) Pois Filter (Refers to field SmgActive) Pois Filter (possible Values: &#x27;true&#x27; only published Pois, &#x27;false&#x27; only not published Pois, (default:&#x27;null&#x27;)
     * @param {string} [seed] Seed &#x27;1 - 10&#x27; for Random Sorting, &#x27;0&#x27; generates a Random Seed, &#x27;null&#x27; disables Random Sorting, (default:null)
     * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof PoiApi
     */

  }, {
    key: "poiGetPoiLocalized",
    value: function poiGetPoiLocalized(language, pagenumber, pagesize, poitype, subtype, idlist, locfilter, areafilter, highlight, odhtagfilter, active, odhactive, seed, latitude, longitude, radius, options) {
      var _this5 = this;

      return poi_api_PoiApiFp(this.configuration).poiGetPoiLocalized(language, pagenumber, pagesize, poitype, subtype, idlist, locfilter, areafilter, highlight, odhtagfilter, active, odhactive, seed, latitude, longitude, radius, options).then(function (request) {
        return request(_this5.axios, _this5.basePath);
      });
    }
    /**
     *
     * @summary GET Poi List Reduced
     * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)
     * @param {string} [poitype] Type of the Poi (&#x27;null&#x27; &#x3D; Filter disabled, possible values: BITMASK &#x27;Doctors, Pharmacies &#x3D; 1&#x27;,&#x27;Shops &#x3D; 2&#x27;,&#x27;Culture and sights&#x3D; 4&#x27;,&#x27;Nightlife and entertainment &#x3D; 8&#x27;,&#x27;Public institutions &#x3D; 16&#x27;,&#x27;Sports and leisure &#x3D; 32&#x27;,&#x27;Traffic and transport &#x3D; 64&#x27;, &#x27;Service providers&#x27; &#x3D; 128, &#x27;Craft&#x27; &#x3D; 256), (default:&#x27;511&#x27; &#x3D;&#x3D; ALL), REFERENCE TO: GET /api/PoiTypes
     * @param {string} [subtype] Subtype of the Activity (BITMASK Filter &#x3D; available SubTypes depends on the selected poiType), (default:&#x27;null&#x27;)
     * @param {string} [locfilter] Locfilter (Separator &#x27;,&#x27; possible values: reg + REGIONID &#x3D; (Filter by Region), reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMASSOCIATIONID &#x3D; (Filter by Tourismassociation), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)
     * @param {string} [areafilter] AreaFilter (Alternate Locfilter, can be combined with locfilter) (Separator &#x27;,&#x27; possible values: reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMASSOCIATIONID &#x3D; (Filter by Tourismassociation), skr + SKIREGIONID &#x3D; (Filter by Skiregion), ska + SKIAREAID &#x3D; (Filter by Skiarea), are + AREAID &#x3D; (Filter by LTS Area), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)
     * @param {boolean} [highlight] Hightlight Filter (possible values: &#x27;false&#x27; &#x3D; only Pois with Highlight false, &#x27;true&#x27; &#x3D; only Pois with Highlight true), (default:&#x27;null&#x27;)
     * @param {string} [odhtagfilter] ODH Taglist Filter (refers to Array SmgTags) (String, Separator &#x27;,&#x27; more Tags possible, available Tags reference to &#x27;api/ODHTag?validforentity&#x3D;poi&#x27;), (default:&#x27;null&#x27;)
     * @param {boolean} [active] Active Pois Filter (possible Values: &#x27;true&#x27; only Active Pois, &#x27;false&#x27; only Disabled Pois
     * @param {boolean} [odhactive] ODH Active (Published) Pois Filter (Refers to field SmgActive) Pois Filter (possible Values: &#x27;true&#x27; only published Pois, &#x27;false&#x27; only not published Pois, (default:&#x27;null&#x27;)
     * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)
     * @param {string} [fields] Select fields to display, by Default Title and Id are selected if fields filter is null More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)
     * @param {boolean} [suedtirolmobil]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof PoiApi
     */

  }, {
    key: "poiGetPoiReduced",
    value: function poiGetPoiReduced(language, poitype, subtype, locfilter, areafilter, highlight, odhtagfilter, active, odhactive, latitude, longitude, radius, fields, suedtirolmobil, options) {
      var _this6 = this;

      return poi_api_PoiApiFp(this.configuration).poiGetPoiReduced(language, poitype, subtype, locfilter, areafilter, highlight, odhtagfilter, active, odhactive, latitude, longitude, radius, fields, suedtirolmobil, options).then(function (request) {
        return request(_this6.axios, _this6.basePath);
      });
    }
    /**
     *
     * @summary GET Poi Single
     * @param {string} id ID of the Poi
     * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)
     * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof PoiApi
     */

  }, {
    key: "poiGetPoiSingle",
    value: function poiGetPoiSingle(id, fields, language, options) {
      var _this7 = this;

      return poi_api_PoiApiFp(this.configuration).poiGetPoiSingle(id, fields, language, options).then(function (request) {
        return request(_this7.axios, _this7.basePath);
      });
    }
    /**
     *
     * @summary GET Poi Localized Single
     * @param {string} id ID of the Poi
     * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof PoiApi
     */

  }, {
    key: "poiGetPoiSingleLocalized",
    value: function poiGetPoiSingleLocalized(id, language, options) {
      var _this8 = this;

      return poi_api_PoiApiFp(this.configuration).poiGetPoiSingleLocalized(id, language, options).then(function (request) {
        return request(_this8.axios, _this8.basePath);
      });
    }
  }]);

  return PoiApi;
}(base_BaseAPI);
// CONCATENATED MODULE: ./src/api/apis/venue-api.ts

















/* tslint:disable */

/* eslint-disable */

/**
 * Open Data Hub Api Tourism
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: V1
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
 // Some imports not used depending on template conditions
// @ts-ignore


/**
 * VenueApi - axios parameter creator
 * @export
 */

var venue_api_VenueApiAxiosParamCreator = function VenueApiAxiosParamCreator(configuration) {
  return {
    /**
     *
     * @summary GET Venue Reduced List
     * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)
     * @param {string} [source] Source Filter(String, ), (default:&#x27;null&#x27;)
     * @param {string} [capacityfilter] Capacity Range Filter (Separator &#x27;,&#x27; example Value: 50,100 All Venues with rooms from 50 to 100 people), (default:&#x27;null&#x27;)
     * @param {string} [roomcountfilter] Room Count Range Filter (Separator &#x27;,&#x27; example Value: 2,5 All Venues with 2 to 5 rooms), (default:&#x27;null&#x27;)
     * @param {string} [categoryfilter] Venue Category Filter (BITMASK) (Separator &#x27;,&#x27; List of Venuetype Bitmasks, refer to api/VenueTypes type:category), (default:&#x27;null&#x27;)
     * @param {string} [featurefilter] Venue Features Filter (BITMASK) (Separator &#x27;,&#x27; List of Venuetype Bitmasks, refer to api/VenueTypes type:feature), (default:&#x27;null&#x27;)
     * @param {string} [setuptypefilter] Venue SetupType Filter (BITMASK) (Separator &#x27;,&#x27; List of Venuetype Bitmasks, refer to api/VenueTypes type:seatType), (default:&#x27;null&#x27;)
     * @param {string} [locfilter] Locfilter (Separator &#x27;,&#x27; possible values: mta + METAREGIONID &#x3D; (Filter by Metaregion), reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMVEREINID &#x3D; (Filter by Tourismverein), mun + MUNICIPALITYID &#x3D; (Filter by Municipality), fra + FRACTIONID &#x3D; (Filter by Fraction)), (default:&#x27;null&#x27; &#x3D; disabled)
     * @param {boolean} [active] Active Webcam Filter (possible Values: &#x27;true&#x27; only Active Gastronomies, &#x27;false&#x27; only Disabled Gastronomies
     * @param {boolean} [odhactive] ODH Active (refers to field SmgActive) (Published) Webcam Filter (possible Values: &#x27;true&#x27; only published Webcam, &#x27;false&#x27; only not published Webcam, (default:&#x27;null&#x27;)
     * @param {string} [odhtagfilter] ODH Taglist Filter (refers to Array SmgTags)(String, Separator &#x27;,&#x27; more Tags possible, available Tags reference to &#x27;api/SmgTag/ByMainEntity/SmgPoi&#x27;), (default:&#x27;null&#x27;)
     * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [radius] Radius to Search in KM. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)
     * @param {string} [updatefrom] Date from Format (yyyy-MM-dd) (all Gastronomy with LastChange &amp;gt;&#x3D; datefrom are passed), (default: null &#x3D; disabled)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    venueGeVenueListReduced: function () {
      var _venueGeVenueListReduced = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(language, source, capacityfilter, roomcountfilter, categoryfilter, featurefilter, setuptypefilter, locfilter, active, odhactive, odhtagfilter, latitude, longitude, radius, updatefrom) {
        var options,
            localVarPath,
            localVarUrlObj,
            baseOptions,
            localVarRequestOptions,
            localVarHeaderParameter,
            localVarQueryParameter,
            localVarAccessTokenValue,
            query,
            key,
            _key,
            headersFromBaseOptions,
            _args = arguments;

        return regeneratorRuntime.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                options = _args.length > 15 && _args[15] !== undefined ? _args[15] : {};
                localVarPath = "/api/VenueReduced"; // use dummy base URL string because the URL constructor only accepts absolute URLs.

                localVarUrlObj = new URL(localVarPath, 'https://example.com');

                if (configuration) {
                  baseOptions = configuration.baseOptions;
                }

                localVarRequestOptions = _objectSpread2(_objectSpread2({
                  method: 'GET'
                }, baseOptions), options);
                localVarHeaderParameter = {};
                localVarQueryParameter = {}; // authentication oauth2 required
                // oauth required

                if (!(configuration && configuration.accessToken)) {
                  _context.next = 19;
                  break;
                }

                if (!(typeof configuration.accessToken === 'function')) {
                  _context.next = 14;
                  break;
                }

                _context.next = 11;
                return configuration.accessToken("oauth2", [""]);

              case 11:
                _context.t0 = _context.sent;
                _context.next = 17;
                break;

              case 14:
                _context.next = 16;
                return configuration.accessToken;

              case 16:
                _context.t0 = _context.sent;

              case 17:
                localVarAccessTokenValue = _context.t0;
                localVarHeaderParameter["Authorization"] = "Bearer " + localVarAccessTokenValue;

              case 19:
                if (language !== undefined) {
                  localVarQueryParameter['language'] = language;
                }

                if (source !== undefined) {
                  localVarQueryParameter['source'] = source;
                }

                if (capacityfilter !== undefined) {
                  localVarQueryParameter['capacityfilter'] = capacityfilter;
                }

                if (roomcountfilter !== undefined) {
                  localVarQueryParameter['roomcountfilter'] = roomcountfilter;
                }

                if (categoryfilter !== undefined) {
                  localVarQueryParameter['categoryfilter'] = categoryfilter;
                }

                if (featurefilter !== undefined) {
                  localVarQueryParameter['featurefilter'] = featurefilter;
                }

                if (setuptypefilter !== undefined) {
                  localVarQueryParameter['setuptypefilter'] = setuptypefilter;
                }

                if (locfilter !== undefined) {
                  localVarQueryParameter['locfilter'] = locfilter;
                }

                if (active !== undefined) {
                  localVarQueryParameter['active'] = active;
                }

                if (odhactive !== undefined) {
                  localVarQueryParameter['odhactive'] = odhactive;
                }

                if (odhtagfilter !== undefined) {
                  localVarQueryParameter['odhtagfilter'] = odhtagfilter;
                }

                if (latitude !== undefined) {
                  localVarQueryParameter['latitude'] = latitude;
                }

                if (longitude !== undefined) {
                  localVarQueryParameter['longitude'] = longitude;
                }

                if (radius !== undefined) {
                  localVarQueryParameter['radius'] = radius;
                }

                if (updatefrom !== undefined) {
                  localVarQueryParameter['updatefrom'] = updatefrom;
                }

                query = new URLSearchParams(localVarUrlObj.search);

                for (key in localVarQueryParameter) {
                  query.set(key, localVarQueryParameter[key]);
                }

                for (_key in options.query) {
                  query.set(_key, options.query[_key]);
                }

                localVarUrlObj.search = new URLSearchParams(query).toString();
                headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                localVarRequestOptions.headers = _objectSpread2(_objectSpread2(_objectSpread2({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                return _context.abrupt("return", {
                  url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                  options: localVarRequestOptions
                });

              case 41:
              case "end":
                return _context.stop();
            }
          }
        }, _callee);
      }));

      function venueGeVenueListReduced(_x, _x2, _x3, _x4, _x5, _x6, _x7, _x8, _x9, _x10, _x11, _x12, _x13, _x14, _x15) {
        return _venueGeVenueListReduced.apply(this, arguments);
      }

      return venueGeVenueListReduced;
    }(),

    /**
     *
     * @summary GET Venue List
     * @param {number} [pagenumber] Pagenumber, (default:1)
     * @param {number} [pagesize] Elements per Page (max 1024), (default:10)
     * @param {string} [source] Source Filter(String, ), (default:&#x27;null&#x27;)
     * @param {string} [capacityfilter] Capacity Range Filter (Separator &#x27;,&#x27; example Value: 50,100 All Venues with rooms from 50 to 100 people), (default:&#x27;null&#x27;)
     * @param {string} [roomcountfilter] Room Count Range Filter (Separator &#x27;,&#x27; example Value: 2,5 All Venues with 2 to 5 rooms), (default:&#x27;null&#x27;)
     * @param {string} [idlist] IDFilter (Separator &#x27;,&#x27; List of Venue IDs), (default:&#x27;null&#x27;)
     * @param {string} [categoryfilter] Venue Category Filter (BITMASK) (Separator &#x27;,&#x27; List of Venuetype Bitmasks, refer to api/VenueTypes type:category), (default:&#x27;null&#x27;)
     * @param {string} [featurefilter] Venue Features Filter (BITMASK) (Separator &#x27;,&#x27; List of Venuetype Bitmasks, refer to api/VenueTypes type:feature), (default:&#x27;null&#x27;)
     * @param {string} [setuptypefilter] Venue SetupType Filter (BITMASK) (Separator &#x27;,&#x27; List of Venuetype Bitmasks, refer to api/VenueTypes type:seatType), (default:&#x27;null&#x27;)
     * @param {string} [locfilter] Locfilter (Separator &#x27;,&#x27; possible values: mta + METAREGIONID &#x3D; (Filter by Metaregion), reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMVEREINID &#x3D; (Filter by Tourismverein), mun + MUNICIPALITYID &#x3D; (Filter by Municipality), fra + FRACTIONID &#x3D; (Filter by Fraction)), (default:&#x27;null&#x27; &#x3D; disabled)
     * @param {boolean} [active] Active Venue Filter (possible Values: &#x27;true&#x27; only Active Gastronomies, &#x27;false&#x27; only Disabled Venues
     * @param {boolean} [odhactive] ODH Active (Published) Venue Filter (possible Values: &#x27;true&#x27; only published Venue, &#x27;false&#x27; only not published Venue, (default:&#x27;null&#x27;)
     * @param {string} [odhtagfilter] ODH Taglist Filter (refers to Array SmgTags)(String, Separator &#x27;,&#x27; more Tags possible, available Tags reference to &#x27;api/SmgTag/ByMainEntity/SmgPoi&#x27;), (default:&#x27;null&#x27;)
     * @param {string} [seed] Seed &#x27;1 - 10&#x27; for Random Sorting, &#x27;0&#x27; generates a Random Seed, not provided disables Random Sorting, (default:&#x27;null&#x27;)
     * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [radius] Radius to Search in KM. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)
     * @param {string} [updatefrom] Date from Format (yyyy-MM-dd) (all Gastronomy with LastChange &amp;gt;&#x3D; datefrom are passed), (default: null &#x3D; disabled)
     * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)
     * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)
     * @param {string} [searchfilter] String to search for, Title in all languages are searched, (default: null)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    venueGet: function () {
      var _venueGet = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(pagenumber, pagesize, source, capacityfilter, roomcountfilter, idlist, categoryfilter, featurefilter, setuptypefilter, locfilter, active, odhactive, odhtagfilter, seed, latitude, longitude, radius, updatefrom, fields, language, searchfilter) {
        var options,
            localVarPath,
            localVarUrlObj,
            baseOptions,
            localVarRequestOptions,
            localVarHeaderParameter,
            localVarQueryParameter,
            localVarAccessTokenValue,
            query,
            key,
            _key2,
            headersFromBaseOptions,
            _args2 = arguments;

        return regeneratorRuntime.wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                options = _args2.length > 21 && _args2[21] !== undefined ? _args2[21] : {};
                localVarPath = "/api/Venue"; // use dummy base URL string because the URL constructor only accepts absolute URLs.

                localVarUrlObj = new URL(localVarPath, 'https://example.com');

                if (configuration) {
                  baseOptions = configuration.baseOptions;
                }

                localVarRequestOptions = _objectSpread2(_objectSpread2({
                  method: 'GET'
                }, baseOptions), options);
                localVarHeaderParameter = {};
                localVarQueryParameter = {}; // authentication oauth2 required
                // oauth required

                if (!(configuration && configuration.accessToken)) {
                  _context2.next = 19;
                  break;
                }

                if (!(typeof configuration.accessToken === 'function')) {
                  _context2.next = 14;
                  break;
                }

                _context2.next = 11;
                return configuration.accessToken("oauth2", [""]);

              case 11:
                _context2.t0 = _context2.sent;
                _context2.next = 17;
                break;

              case 14:
                _context2.next = 16;
                return configuration.accessToken;

              case 16:
                _context2.t0 = _context2.sent;

              case 17:
                localVarAccessTokenValue = _context2.t0;
                localVarHeaderParameter["Authorization"] = "Bearer " + localVarAccessTokenValue;

              case 19:
                if (pagenumber !== undefined) {
                  localVarQueryParameter['pagenumber'] = pagenumber;
                }

                if (pagesize !== undefined) {
                  localVarQueryParameter['pagesize'] = pagesize;
                }

                if (source !== undefined) {
                  localVarQueryParameter['source'] = source;
                }

                if (capacityfilter !== undefined) {
                  localVarQueryParameter['capacityfilter'] = capacityfilter;
                }

                if (roomcountfilter !== undefined) {
                  localVarQueryParameter['roomcountfilter'] = roomcountfilter;
                }

                if (idlist !== undefined) {
                  localVarQueryParameter['idlist'] = idlist;
                }

                if (categoryfilter !== undefined) {
                  localVarQueryParameter['categoryfilter'] = categoryfilter;
                }

                if (featurefilter !== undefined) {
                  localVarQueryParameter['featurefilter'] = featurefilter;
                }

                if (setuptypefilter !== undefined) {
                  localVarQueryParameter['setuptypefilter'] = setuptypefilter;
                }

                if (locfilter !== undefined) {
                  localVarQueryParameter['locfilter'] = locfilter;
                }

                if (active !== undefined) {
                  localVarQueryParameter['active'] = active;
                }

                if (odhactive !== undefined) {
                  localVarQueryParameter['odhactive'] = odhactive;
                }

                if (odhtagfilter !== undefined) {
                  localVarQueryParameter['odhtagfilter'] = odhtagfilter;
                }

                if (seed !== undefined) {
                  localVarQueryParameter['seed'] = seed;
                }

                if (latitude !== undefined) {
                  localVarQueryParameter['latitude'] = latitude;
                }

                if (longitude !== undefined) {
                  localVarQueryParameter['longitude'] = longitude;
                }

                if (radius !== undefined) {
                  localVarQueryParameter['radius'] = radius;
                }

                if (updatefrom !== undefined) {
                  localVarQueryParameter['updatefrom'] = updatefrom;
                }

                if (fields !== undefined) {
                  localVarQueryParameter['fields'] = fields;
                }

                if (language !== undefined) {
                  localVarQueryParameter['language'] = language;
                }

                if (searchfilter !== undefined) {
                  localVarQueryParameter['searchfilter'] = searchfilter;
                }

                query = new URLSearchParams(localVarUrlObj.search);

                for (key in localVarQueryParameter) {
                  query.set(key, localVarQueryParameter[key]);
                }

                for (_key2 in options.query) {
                  query.set(_key2, options.query[_key2]);
                }

                localVarUrlObj.search = new URLSearchParams(query).toString();
                headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                localVarRequestOptions.headers = _objectSpread2(_objectSpread2(_objectSpread2({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                return _context2.abrupt("return", {
                  url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                  options: localVarRequestOptions
                });

              case 47:
              case "end":
                return _context2.stop();
            }
          }
        }, _callee2);
      }));

      function venueGet(_x16, _x17, _x18, _x19, _x20, _x21, _x22, _x23, _x24, _x25, _x26, _x27, _x28, _x29, _x30, _x31, _x32, _x33, _x34, _x35, _x36) {
        return _venueGet.apply(this, arguments);
      }

      return venueGet;
    }(),

    /**
     *
     * @summary GET Venue Types List
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    venueGetAllVenueTypesList: function () {
      var _venueGetAllVenueTypesList = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {
        var options,
            localVarPath,
            localVarUrlObj,
            baseOptions,
            localVarRequestOptions,
            localVarHeaderParameter,
            localVarQueryParameter,
            localVarAccessTokenValue,
            query,
            key,
            _key3,
            headersFromBaseOptions,
            _args3 = arguments;

        return regeneratorRuntime.wrap(function _callee3$(_context3) {
          while (1) {
            switch (_context3.prev = _context3.next) {
              case 0:
                options = _args3.length > 0 && _args3[0] !== undefined ? _args3[0] : {};
                localVarPath = "/api/VenueTypes"; // use dummy base URL string because the URL constructor only accepts absolute URLs.

                localVarUrlObj = new URL(localVarPath, 'https://example.com');

                if (configuration) {
                  baseOptions = configuration.baseOptions;
                }

                localVarRequestOptions = _objectSpread2(_objectSpread2({
                  method: 'GET'
                }, baseOptions), options);
                localVarHeaderParameter = {};
                localVarQueryParameter = {}; // authentication oauth2 required
                // oauth required

                if (!(configuration && configuration.accessToken)) {
                  _context3.next = 19;
                  break;
                }

                if (!(typeof configuration.accessToken === 'function')) {
                  _context3.next = 14;
                  break;
                }

                _context3.next = 11;
                return configuration.accessToken("oauth2", [""]);

              case 11:
                _context3.t0 = _context3.sent;
                _context3.next = 17;
                break;

              case 14:
                _context3.next = 16;
                return configuration.accessToken;

              case 16:
                _context3.t0 = _context3.sent;

              case 17:
                localVarAccessTokenValue = _context3.t0;
                localVarHeaderParameter["Authorization"] = "Bearer " + localVarAccessTokenValue;

              case 19:
                query = new URLSearchParams(localVarUrlObj.search);

                for (key in localVarQueryParameter) {
                  query.set(key, localVarQueryParameter[key]);
                }

                for (_key3 in options.query) {
                  query.set(_key3, options.query[_key3]);
                }

                localVarUrlObj.search = new URLSearchParams(query).toString();
                headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                localVarRequestOptions.headers = _objectSpread2(_objectSpread2(_objectSpread2({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                return _context3.abrupt("return", {
                  url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                  options: localVarRequestOptions
                });

              case 26:
              case "end":
                return _context3.stop();
            }
          }
        }, _callee3);
      }));

      function venueGetAllVenueTypesList() {
        return _venueGetAllVenueTypesList.apply(this, arguments);
      }

      return venueGetAllVenueTypesList;
    }(),

    /**
     *
     * @summary GET Venue Type Single
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    venueGetAllVenueTypesSingle: function () {
      var _venueGetAllVenueTypesSingle = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(id) {
        var options,
            localVarPath,
            localVarUrlObj,
            baseOptions,
            localVarRequestOptions,
            localVarHeaderParameter,
            localVarQueryParameter,
            localVarAccessTokenValue,
            query,
            key,
            _key4,
            headersFromBaseOptions,
            _args4 = arguments;

        return regeneratorRuntime.wrap(function _callee4$(_context4) {
          while (1) {
            switch (_context4.prev = _context4.next) {
              case 0:
                options = _args4.length > 1 && _args4[1] !== undefined ? _args4[1] : {};

                if (!(id === null || id === undefined)) {
                  _context4.next = 3;
                  break;
                }

                throw new base_RequiredError('id', 'Required parameter id was null or undefined when calling venueGetAllVenueTypesSingle.');

              case 3:
                localVarPath = "/api/VenueTypes/{id}".replace("{".concat("id", "}"), encodeURIComponent(String(id))); // use dummy base URL string because the URL constructor only accepts absolute URLs.

                localVarUrlObj = new URL(localVarPath, 'https://example.com');

                if (configuration) {
                  baseOptions = configuration.baseOptions;
                }

                localVarRequestOptions = _objectSpread2(_objectSpread2({
                  method: 'GET'
                }, baseOptions), options);
                localVarHeaderParameter = {};
                localVarQueryParameter = {}; // authentication oauth2 required
                // oauth required

                if (!(configuration && configuration.accessToken)) {
                  _context4.next = 21;
                  break;
                }

                if (!(typeof configuration.accessToken === 'function')) {
                  _context4.next = 16;
                  break;
                }

                _context4.next = 13;
                return configuration.accessToken("oauth2", [""]);

              case 13:
                _context4.t0 = _context4.sent;
                _context4.next = 19;
                break;

              case 16:
                _context4.next = 18;
                return configuration.accessToken;

              case 18:
                _context4.t0 = _context4.sent;

              case 19:
                localVarAccessTokenValue = _context4.t0;
                localVarHeaderParameter["Authorization"] = "Bearer " + localVarAccessTokenValue;

              case 21:
                query = new URLSearchParams(localVarUrlObj.search);

                for (key in localVarQueryParameter) {
                  query.set(key, localVarQueryParameter[key]);
                }

                for (_key4 in options.query) {
                  query.set(_key4, options.query[_key4]);
                }

                localVarUrlObj.search = new URLSearchParams(query).toString();
                headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                localVarRequestOptions.headers = _objectSpread2(_objectSpread2(_objectSpread2({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                return _context4.abrupt("return", {
                  url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                  options: localVarRequestOptions
                });

              case 28:
              case "end":
                return _context4.stop();
            }
          }
        }, _callee4);
      }));

      function venueGetAllVenueTypesSingle(_x37) {
        return _venueGetAllVenueTypesSingle.apply(this, arguments);
      }

      return venueGetAllVenueTypesSingle;
    }(),

    /**
     *
     * @summary GET Venue Single
     * @param {string} id ID of the Webcam
     * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)
     * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    venueGetApiVenueById: function () {
      var _venueGetApiVenueById = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(id, fields, language) {
        var options,
            localVarPath,
            localVarUrlObj,
            baseOptions,
            localVarRequestOptions,
            localVarHeaderParameter,
            localVarQueryParameter,
            localVarAccessTokenValue,
            query,
            key,
            _key5,
            headersFromBaseOptions,
            _args5 = arguments;

        return regeneratorRuntime.wrap(function _callee5$(_context5) {
          while (1) {
            switch (_context5.prev = _context5.next) {
              case 0:
                options = _args5.length > 3 && _args5[3] !== undefined ? _args5[3] : {};

                if (!(id === null || id === undefined)) {
                  _context5.next = 3;
                  break;
                }

                throw new base_RequiredError('id', 'Required parameter id was null or undefined when calling venueGetApiVenueById.');

              case 3:
                localVarPath = "/api/Venue/{id}".replace("{".concat("id", "}"), encodeURIComponent(String(id))); // use dummy base URL string because the URL constructor only accepts absolute URLs.

                localVarUrlObj = new URL(localVarPath, 'https://example.com');

                if (configuration) {
                  baseOptions = configuration.baseOptions;
                }

                localVarRequestOptions = _objectSpread2(_objectSpread2({
                  method: 'GET'
                }, baseOptions), options);
                localVarHeaderParameter = {};
                localVarQueryParameter = {}; // authentication oauth2 required
                // oauth required

                if (!(configuration && configuration.accessToken)) {
                  _context5.next = 21;
                  break;
                }

                if (!(typeof configuration.accessToken === 'function')) {
                  _context5.next = 16;
                  break;
                }

                _context5.next = 13;
                return configuration.accessToken("oauth2", [""]);

              case 13:
                _context5.t0 = _context5.sent;
                _context5.next = 19;
                break;

              case 16:
                _context5.next = 18;
                return configuration.accessToken;

              case 18:
                _context5.t0 = _context5.sent;

              case 19:
                localVarAccessTokenValue = _context5.t0;
                localVarHeaderParameter["Authorization"] = "Bearer " + localVarAccessTokenValue;

              case 21:
                if (fields !== undefined) {
                  localVarQueryParameter['fields'] = fields;
                }

                if (language !== undefined) {
                  localVarQueryParameter['language'] = language;
                }

                query = new URLSearchParams(localVarUrlObj.search);

                for (key in localVarQueryParameter) {
                  query.set(key, localVarQueryParameter[key]);
                }

                for (_key5 in options.query) {
                  query.set(_key5, options.query[_key5]);
                }

                localVarUrlObj.search = new URLSearchParams(query).toString();
                headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                localVarRequestOptions.headers = _objectSpread2(_objectSpread2(_objectSpread2({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                return _context5.abrupt("return", {
                  url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                  options: localVarRequestOptions
                });

              case 30:
              case "end":
                return _context5.stop();
            }
          }
        }, _callee5);
      }));

      function venueGetApiVenueById(_x38, _x39, _x40) {
        return _venueGetApiVenueById.apply(this, arguments);
      }

      return venueGetApiVenueById;
    }()
  };
};
/**
 * VenueApi - functional programming interface
 * @export
 */

var venue_api_VenueApiFp = function VenueApiFp(configuration) {
  return {
    /**
     *
     * @summary GET Venue Reduced List
     * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)
     * @param {string} [source] Source Filter(String, ), (default:&#x27;null&#x27;)
     * @param {string} [capacityfilter] Capacity Range Filter (Separator &#x27;,&#x27; example Value: 50,100 All Venues with rooms from 50 to 100 people), (default:&#x27;null&#x27;)
     * @param {string} [roomcountfilter] Room Count Range Filter (Separator &#x27;,&#x27; example Value: 2,5 All Venues with 2 to 5 rooms), (default:&#x27;null&#x27;)
     * @param {string} [categoryfilter] Venue Category Filter (BITMASK) (Separator &#x27;,&#x27; List of Venuetype Bitmasks, refer to api/VenueTypes type:category), (default:&#x27;null&#x27;)
     * @param {string} [featurefilter] Venue Features Filter (BITMASK) (Separator &#x27;,&#x27; List of Venuetype Bitmasks, refer to api/VenueTypes type:feature), (default:&#x27;null&#x27;)
     * @param {string} [setuptypefilter] Venue SetupType Filter (BITMASK) (Separator &#x27;,&#x27; List of Venuetype Bitmasks, refer to api/VenueTypes type:seatType), (default:&#x27;null&#x27;)
     * @param {string} [locfilter] Locfilter (Separator &#x27;,&#x27; possible values: mta + METAREGIONID &#x3D; (Filter by Metaregion), reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMVEREINID &#x3D; (Filter by Tourismverein), mun + MUNICIPALITYID &#x3D; (Filter by Municipality), fra + FRACTIONID &#x3D; (Filter by Fraction)), (default:&#x27;null&#x27; &#x3D; disabled)
     * @param {boolean} [active] Active Webcam Filter (possible Values: &#x27;true&#x27; only Active Gastronomies, &#x27;false&#x27; only Disabled Gastronomies
     * @param {boolean} [odhactive] ODH Active (refers to field SmgActive) (Published) Webcam Filter (possible Values: &#x27;true&#x27; only published Webcam, &#x27;false&#x27; only not published Webcam, (default:&#x27;null&#x27;)
     * @param {string} [odhtagfilter] ODH Taglist Filter (refers to Array SmgTags)(String, Separator &#x27;,&#x27; more Tags possible, available Tags reference to &#x27;api/SmgTag/ByMainEntity/SmgPoi&#x27;), (default:&#x27;null&#x27;)
     * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [radius] Radius to Search in KM. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)
     * @param {string} [updatefrom] Date from Format (yyyy-MM-dd) (all Gastronomy with LastChange &amp;gt;&#x3D; datefrom are passed), (default: null &#x3D; disabled)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    venueGeVenueListReduced: function venueGeVenueListReduced(language, source, capacityfilter, roomcountfilter, categoryfilter, featurefilter, setuptypefilter, locfilter, active, odhactive, odhtagfilter, latitude, longitude, radius, updatefrom, options) {
      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6() {
        var localVarAxiosArgs;
        return regeneratorRuntime.wrap(function _callee6$(_context6) {
          while (1) {
            switch (_context6.prev = _context6.next) {
              case 0:
                _context6.next = 2;
                return venue_api_VenueApiAxiosParamCreator(configuration).venueGeVenueListReduced(language, source, capacityfilter, roomcountfilter, categoryfilter, featurefilter, setuptypefilter, locfilter, active, odhactive, odhtagfilter, latitude, longitude, radius, updatefrom, options);

              case 2:
                localVarAxiosArgs = _context6.sent;
                return _context6.abrupt("return", function () {
                  var axios = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : axios_default.a;
                  var basePath = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : BASE_PATH;

                  var axiosRequestArgs = _objectSpread2(_objectSpread2({}, localVarAxiosArgs.options), {}, {
                    url: basePath + localVarAxiosArgs.url
                  });

                  return axios.request(axiosRequestArgs);
                });

              case 4:
              case "end":
                return _context6.stop();
            }
          }
        }, _callee6);
      }))();
    },

    /**
     *
     * @summary GET Venue List
     * @param {number} [pagenumber] Pagenumber, (default:1)
     * @param {number} [pagesize] Elements per Page (max 1024), (default:10)
     * @param {string} [source] Source Filter(String, ), (default:&#x27;null&#x27;)
     * @param {string} [capacityfilter] Capacity Range Filter (Separator &#x27;,&#x27; example Value: 50,100 All Venues with rooms from 50 to 100 people), (default:&#x27;null&#x27;)
     * @param {string} [roomcountfilter] Room Count Range Filter (Separator &#x27;,&#x27; example Value: 2,5 All Venues with 2 to 5 rooms), (default:&#x27;null&#x27;)
     * @param {string} [idlist] IDFilter (Separator &#x27;,&#x27; List of Venue IDs), (default:&#x27;null&#x27;)
     * @param {string} [categoryfilter] Venue Category Filter (BITMASK) (Separator &#x27;,&#x27; List of Venuetype Bitmasks, refer to api/VenueTypes type:category), (default:&#x27;null&#x27;)
     * @param {string} [featurefilter] Venue Features Filter (BITMASK) (Separator &#x27;,&#x27; List of Venuetype Bitmasks, refer to api/VenueTypes type:feature), (default:&#x27;null&#x27;)
     * @param {string} [setuptypefilter] Venue SetupType Filter (BITMASK) (Separator &#x27;,&#x27; List of Venuetype Bitmasks, refer to api/VenueTypes type:seatType), (default:&#x27;null&#x27;)
     * @param {string} [locfilter] Locfilter (Separator &#x27;,&#x27; possible values: mta + METAREGIONID &#x3D; (Filter by Metaregion), reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMVEREINID &#x3D; (Filter by Tourismverein), mun + MUNICIPALITYID &#x3D; (Filter by Municipality), fra + FRACTIONID &#x3D; (Filter by Fraction)), (default:&#x27;null&#x27; &#x3D; disabled)
     * @param {boolean} [active] Active Venue Filter (possible Values: &#x27;true&#x27; only Active Gastronomies, &#x27;false&#x27; only Disabled Venues
     * @param {boolean} [odhactive] ODH Active (Published) Venue Filter (possible Values: &#x27;true&#x27; only published Venue, &#x27;false&#x27; only not published Venue, (default:&#x27;null&#x27;)
     * @param {string} [odhtagfilter] ODH Taglist Filter (refers to Array SmgTags)(String, Separator &#x27;,&#x27; more Tags possible, available Tags reference to &#x27;api/SmgTag/ByMainEntity/SmgPoi&#x27;), (default:&#x27;null&#x27;)
     * @param {string} [seed] Seed &#x27;1 - 10&#x27; for Random Sorting, &#x27;0&#x27; generates a Random Seed, not provided disables Random Sorting, (default:&#x27;null&#x27;)
     * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [radius] Radius to Search in KM. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)
     * @param {string} [updatefrom] Date from Format (yyyy-MM-dd) (all Gastronomy with LastChange &amp;gt;&#x3D; datefrom are passed), (default: null &#x3D; disabled)
     * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)
     * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)
     * @param {string} [searchfilter] String to search for, Title in all languages are searched, (default: null)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    venueGet: function venueGet(pagenumber, pagesize, source, capacityfilter, roomcountfilter, idlist, categoryfilter, featurefilter, setuptypefilter, locfilter, active, odhactive, odhtagfilter, seed, latitude, longitude, radius, updatefrom, fields, language, searchfilter, options) {
      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee7() {
        var localVarAxiosArgs;
        return regeneratorRuntime.wrap(function _callee7$(_context7) {
          while (1) {
            switch (_context7.prev = _context7.next) {
              case 0:
                _context7.next = 2;
                return venue_api_VenueApiAxiosParamCreator(configuration).venueGet(pagenumber, pagesize, source, capacityfilter, roomcountfilter, idlist, categoryfilter, featurefilter, setuptypefilter, locfilter, active, odhactive, odhtagfilter, seed, latitude, longitude, radius, updatefrom, fields, language, searchfilter, options);

              case 2:
                localVarAxiosArgs = _context7.sent;
                return _context7.abrupt("return", function () {
                  var axios = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : axios_default.a;
                  var basePath = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : BASE_PATH;

                  var axiosRequestArgs = _objectSpread2(_objectSpread2({}, localVarAxiosArgs.options), {}, {
                    url: basePath + localVarAxiosArgs.url
                  });

                  return axios.request(axiosRequestArgs);
                });

              case 4:
              case "end":
                return _context7.stop();
            }
          }
        }, _callee7);
      }))();
    },

    /**
     *
     * @summary GET Venue Types List
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    venueGetAllVenueTypesList: function venueGetAllVenueTypesList(options) {
      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee8() {
        var localVarAxiosArgs;
        return regeneratorRuntime.wrap(function _callee8$(_context8) {
          while (1) {
            switch (_context8.prev = _context8.next) {
              case 0:
                _context8.next = 2;
                return venue_api_VenueApiAxiosParamCreator(configuration).venueGetAllVenueTypesList(options);

              case 2:
                localVarAxiosArgs = _context8.sent;
                return _context8.abrupt("return", function () {
                  var axios = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : axios_default.a;
                  var basePath = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : BASE_PATH;

                  var axiosRequestArgs = _objectSpread2(_objectSpread2({}, localVarAxiosArgs.options), {}, {
                    url: basePath + localVarAxiosArgs.url
                  });

                  return axios.request(axiosRequestArgs);
                });

              case 4:
              case "end":
                return _context8.stop();
            }
          }
        }, _callee8);
      }))();
    },

    /**
     *
     * @summary GET Venue Type Single
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    venueGetAllVenueTypesSingle: function venueGetAllVenueTypesSingle(id, options) {
      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee9() {
        var localVarAxiosArgs;
        return regeneratorRuntime.wrap(function _callee9$(_context9) {
          while (1) {
            switch (_context9.prev = _context9.next) {
              case 0:
                _context9.next = 2;
                return venue_api_VenueApiAxiosParamCreator(configuration).venueGetAllVenueTypesSingle(id, options);

              case 2:
                localVarAxiosArgs = _context9.sent;
                return _context9.abrupt("return", function () {
                  var axios = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : axios_default.a;
                  var basePath = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : BASE_PATH;

                  var axiosRequestArgs = _objectSpread2(_objectSpread2({}, localVarAxiosArgs.options), {}, {
                    url: basePath + localVarAxiosArgs.url
                  });

                  return axios.request(axiosRequestArgs);
                });

              case 4:
              case "end":
                return _context9.stop();
            }
          }
        }, _callee9);
      }))();
    },

    /**
     *
     * @summary GET Venue Single
     * @param {string} id ID of the Webcam
     * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)
     * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    venueGetApiVenueById: function venueGetApiVenueById(id, fields, language, options) {
      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee10() {
        var localVarAxiosArgs;
        return regeneratorRuntime.wrap(function _callee10$(_context10) {
          while (1) {
            switch (_context10.prev = _context10.next) {
              case 0:
                _context10.next = 2;
                return venue_api_VenueApiAxiosParamCreator(configuration).venueGetApiVenueById(id, fields, language, options);

              case 2:
                localVarAxiosArgs = _context10.sent;
                return _context10.abrupt("return", function () {
                  var axios = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : axios_default.a;
                  var basePath = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : BASE_PATH;

                  var axiosRequestArgs = _objectSpread2(_objectSpread2({}, localVarAxiosArgs.options), {}, {
                    url: basePath + localVarAxiosArgs.url
                  });

                  return axios.request(axiosRequestArgs);
                });

              case 4:
              case "end":
                return _context10.stop();
            }
          }
        }, _callee10);
      }))();
    }
  };
};
/**
 * VenueApi - factory interface
 * @export
 */

var VenueApiFactory = function VenueApiFactory(configuration, basePath, axios) {
  return {
    /**
     *
     * @summary GET Venue Reduced List
     * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)
     * @param {string} [source] Source Filter(String, ), (default:&#x27;null&#x27;)
     * @param {string} [capacityfilter] Capacity Range Filter (Separator &#x27;,&#x27; example Value: 50,100 All Venues with rooms from 50 to 100 people), (default:&#x27;null&#x27;)
     * @param {string} [roomcountfilter] Room Count Range Filter (Separator &#x27;,&#x27; example Value: 2,5 All Venues with 2 to 5 rooms), (default:&#x27;null&#x27;)
     * @param {string} [categoryfilter] Venue Category Filter (BITMASK) (Separator &#x27;,&#x27; List of Venuetype Bitmasks, refer to api/VenueTypes type:category), (default:&#x27;null&#x27;)
     * @param {string} [featurefilter] Venue Features Filter (BITMASK) (Separator &#x27;,&#x27; List of Venuetype Bitmasks, refer to api/VenueTypes type:feature), (default:&#x27;null&#x27;)
     * @param {string} [setuptypefilter] Venue SetupType Filter (BITMASK) (Separator &#x27;,&#x27; List of Venuetype Bitmasks, refer to api/VenueTypes type:seatType), (default:&#x27;null&#x27;)
     * @param {string} [locfilter] Locfilter (Separator &#x27;,&#x27; possible values: mta + METAREGIONID &#x3D; (Filter by Metaregion), reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMVEREINID &#x3D; (Filter by Tourismverein), mun + MUNICIPALITYID &#x3D; (Filter by Municipality), fra + FRACTIONID &#x3D; (Filter by Fraction)), (default:&#x27;null&#x27; &#x3D; disabled)
     * @param {boolean} [active] Active Webcam Filter (possible Values: &#x27;true&#x27; only Active Gastronomies, &#x27;false&#x27; only Disabled Gastronomies
     * @param {boolean} [odhactive] ODH Active (refers to field SmgActive) (Published) Webcam Filter (possible Values: &#x27;true&#x27; only published Webcam, &#x27;false&#x27; only not published Webcam, (default:&#x27;null&#x27;)
     * @param {string} [odhtagfilter] ODH Taglist Filter (refers to Array SmgTags)(String, Separator &#x27;,&#x27; more Tags possible, available Tags reference to &#x27;api/SmgTag/ByMainEntity/SmgPoi&#x27;), (default:&#x27;null&#x27;)
     * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [radius] Radius to Search in KM. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)
     * @param {string} [updatefrom] Date from Format (yyyy-MM-dd) (all Gastronomy with LastChange &amp;gt;&#x3D; datefrom are passed), (default: null &#x3D; disabled)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    venueGeVenueListReduced: function venueGeVenueListReduced(language, source, capacityfilter, roomcountfilter, categoryfilter, featurefilter, setuptypefilter, locfilter, active, odhactive, odhtagfilter, latitude, longitude, radius, updatefrom, options) {
      return venue_api_VenueApiFp(configuration).venueGeVenueListReduced(language, source, capacityfilter, roomcountfilter, categoryfilter, featurefilter, setuptypefilter, locfilter, active, odhactive, odhtagfilter, latitude, longitude, radius, updatefrom, options).then(function (request) {
        return request(axios, basePath);
      });
    },

    /**
     *
     * @summary GET Venue List
     * @param {number} [pagenumber] Pagenumber, (default:1)
     * @param {number} [pagesize] Elements per Page (max 1024), (default:10)
     * @param {string} [source] Source Filter(String, ), (default:&#x27;null&#x27;)
     * @param {string} [capacityfilter] Capacity Range Filter (Separator &#x27;,&#x27; example Value: 50,100 All Venues with rooms from 50 to 100 people), (default:&#x27;null&#x27;)
     * @param {string} [roomcountfilter] Room Count Range Filter (Separator &#x27;,&#x27; example Value: 2,5 All Venues with 2 to 5 rooms), (default:&#x27;null&#x27;)
     * @param {string} [idlist] IDFilter (Separator &#x27;,&#x27; List of Venue IDs), (default:&#x27;null&#x27;)
     * @param {string} [categoryfilter] Venue Category Filter (BITMASK) (Separator &#x27;,&#x27; List of Venuetype Bitmasks, refer to api/VenueTypes type:category), (default:&#x27;null&#x27;)
     * @param {string} [featurefilter] Venue Features Filter (BITMASK) (Separator &#x27;,&#x27; List of Venuetype Bitmasks, refer to api/VenueTypes type:feature), (default:&#x27;null&#x27;)
     * @param {string} [setuptypefilter] Venue SetupType Filter (BITMASK) (Separator &#x27;,&#x27; List of Venuetype Bitmasks, refer to api/VenueTypes type:seatType), (default:&#x27;null&#x27;)
     * @param {string} [locfilter] Locfilter (Separator &#x27;,&#x27; possible values: mta + METAREGIONID &#x3D; (Filter by Metaregion), reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMVEREINID &#x3D; (Filter by Tourismverein), mun + MUNICIPALITYID &#x3D; (Filter by Municipality), fra + FRACTIONID &#x3D; (Filter by Fraction)), (default:&#x27;null&#x27; &#x3D; disabled)
     * @param {boolean} [active] Active Venue Filter (possible Values: &#x27;true&#x27; only Active Gastronomies, &#x27;false&#x27; only Disabled Venues
     * @param {boolean} [odhactive] ODH Active (Published) Venue Filter (possible Values: &#x27;true&#x27; only published Venue, &#x27;false&#x27; only not published Venue, (default:&#x27;null&#x27;)
     * @param {string} [odhtagfilter] ODH Taglist Filter (refers to Array SmgTags)(String, Separator &#x27;,&#x27; more Tags possible, available Tags reference to &#x27;api/SmgTag/ByMainEntity/SmgPoi&#x27;), (default:&#x27;null&#x27;)
     * @param {string} [seed] Seed &#x27;1 - 10&#x27; for Random Sorting, &#x27;0&#x27; generates a Random Seed, not provided disables Random Sorting, (default:&#x27;null&#x27;)
     * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [radius] Radius to Search in KM. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)
     * @param {string} [updatefrom] Date from Format (yyyy-MM-dd) (all Gastronomy with LastChange &amp;gt;&#x3D; datefrom are passed), (default: null &#x3D; disabled)
     * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)
     * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)
     * @param {string} [searchfilter] String to search for, Title in all languages are searched, (default: null)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    venueGet: function venueGet(pagenumber, pagesize, source, capacityfilter, roomcountfilter, idlist, categoryfilter, featurefilter, setuptypefilter, locfilter, active, odhactive, odhtagfilter, seed, latitude, longitude, radius, updatefrom, fields, language, searchfilter, options) {
      return venue_api_VenueApiFp(configuration).venueGet(pagenumber, pagesize, source, capacityfilter, roomcountfilter, idlist, categoryfilter, featurefilter, setuptypefilter, locfilter, active, odhactive, odhtagfilter, seed, latitude, longitude, radius, updatefrom, fields, language, searchfilter, options).then(function (request) {
        return request(axios, basePath);
      });
    },

    /**
     *
     * @summary GET Venue Types List
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    venueGetAllVenueTypesList: function venueGetAllVenueTypesList(options) {
      return venue_api_VenueApiFp(configuration).venueGetAllVenueTypesList(options).then(function (request) {
        return request(axios, basePath);
      });
    },

    /**
     *
     * @summary GET Venue Type Single
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    venueGetAllVenueTypesSingle: function venueGetAllVenueTypesSingle(id, options) {
      return venue_api_VenueApiFp(configuration).venueGetAllVenueTypesSingle(id, options).then(function (request) {
        return request(axios, basePath);
      });
    },

    /**
     *
     * @summary GET Venue Single
     * @param {string} id ID of the Webcam
     * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)
     * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    venueGetApiVenueById: function venueGetApiVenueById(id, fields, language, options) {
      return venue_api_VenueApiFp(configuration).venueGetApiVenueById(id, fields, language, options).then(function (request) {
        return request(axios, basePath);
      });
    }
  };
};
/**
 * VenueApi - object-oriented interface
 * @export
 * @class VenueApi
 * @extends {BaseAPI}
 */

var venue_api_VenueApi = /*#__PURE__*/function (_BaseAPI) {
  _inherits(VenueApi, _BaseAPI);

  var _super = _createSuper(VenueApi);

  function VenueApi() {
    _classCallCheck(this, VenueApi);

    return _super.apply(this, arguments);
  }

  _createClass(VenueApi, [{
    key: "venueGeVenueListReduced",

    /**
     *
     * @summary GET Venue Reduced List
     * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)
     * @param {string} [source] Source Filter(String, ), (default:&#x27;null&#x27;)
     * @param {string} [capacityfilter] Capacity Range Filter (Separator &#x27;,&#x27; example Value: 50,100 All Venues with rooms from 50 to 100 people), (default:&#x27;null&#x27;)
     * @param {string} [roomcountfilter] Room Count Range Filter (Separator &#x27;,&#x27; example Value: 2,5 All Venues with 2 to 5 rooms), (default:&#x27;null&#x27;)
     * @param {string} [categoryfilter] Venue Category Filter (BITMASK) (Separator &#x27;,&#x27; List of Venuetype Bitmasks, refer to api/VenueTypes type:category), (default:&#x27;null&#x27;)
     * @param {string} [featurefilter] Venue Features Filter (BITMASK) (Separator &#x27;,&#x27; List of Venuetype Bitmasks, refer to api/VenueTypes type:feature), (default:&#x27;null&#x27;)
     * @param {string} [setuptypefilter] Venue SetupType Filter (BITMASK) (Separator &#x27;,&#x27; List of Venuetype Bitmasks, refer to api/VenueTypes type:seatType), (default:&#x27;null&#x27;)
     * @param {string} [locfilter] Locfilter (Separator &#x27;,&#x27; possible values: mta + METAREGIONID &#x3D; (Filter by Metaregion), reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMVEREINID &#x3D; (Filter by Tourismverein), mun + MUNICIPALITYID &#x3D; (Filter by Municipality), fra + FRACTIONID &#x3D; (Filter by Fraction)), (default:&#x27;null&#x27; &#x3D; disabled)
     * @param {boolean} [active] Active Webcam Filter (possible Values: &#x27;true&#x27; only Active Gastronomies, &#x27;false&#x27; only Disabled Gastronomies
     * @param {boolean} [odhactive] ODH Active (refers to field SmgActive) (Published) Webcam Filter (possible Values: &#x27;true&#x27; only published Webcam, &#x27;false&#x27; only not published Webcam, (default:&#x27;null&#x27;)
     * @param {string} [odhtagfilter] ODH Taglist Filter (refers to Array SmgTags)(String, Separator &#x27;,&#x27; more Tags possible, available Tags reference to &#x27;api/SmgTag/ByMainEntity/SmgPoi&#x27;), (default:&#x27;null&#x27;)
     * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [radius] Radius to Search in KM. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)
     * @param {string} [updatefrom] Date from Format (yyyy-MM-dd) (all Gastronomy with LastChange &amp;gt;&#x3D; datefrom are passed), (default: null &#x3D; disabled)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof VenueApi
     */
    value: function venueGeVenueListReduced(language, source, capacityfilter, roomcountfilter, categoryfilter, featurefilter, setuptypefilter, locfilter, active, odhactive, odhtagfilter, latitude, longitude, radius, updatefrom, options) {
      var _this = this;

      return venue_api_VenueApiFp(this.configuration).venueGeVenueListReduced(language, source, capacityfilter, roomcountfilter, categoryfilter, featurefilter, setuptypefilter, locfilter, active, odhactive, odhtagfilter, latitude, longitude, radius, updatefrom, options).then(function (request) {
        return request(_this.axios, _this.basePath);
      });
    }
    /**
     *
     * @summary GET Venue List
     * @param {number} [pagenumber] Pagenumber, (default:1)
     * @param {number} [pagesize] Elements per Page (max 1024), (default:10)
     * @param {string} [source] Source Filter(String, ), (default:&#x27;null&#x27;)
     * @param {string} [capacityfilter] Capacity Range Filter (Separator &#x27;,&#x27; example Value: 50,100 All Venues with rooms from 50 to 100 people), (default:&#x27;null&#x27;)
     * @param {string} [roomcountfilter] Room Count Range Filter (Separator &#x27;,&#x27; example Value: 2,5 All Venues with 2 to 5 rooms), (default:&#x27;null&#x27;)
     * @param {string} [idlist] IDFilter (Separator &#x27;,&#x27; List of Venue IDs), (default:&#x27;null&#x27;)
     * @param {string} [categoryfilter] Venue Category Filter (BITMASK) (Separator &#x27;,&#x27; List of Venuetype Bitmasks, refer to api/VenueTypes type:category), (default:&#x27;null&#x27;)
     * @param {string} [featurefilter] Venue Features Filter (BITMASK) (Separator &#x27;,&#x27; List of Venuetype Bitmasks, refer to api/VenueTypes type:feature), (default:&#x27;null&#x27;)
     * @param {string} [setuptypefilter] Venue SetupType Filter (BITMASK) (Separator &#x27;,&#x27; List of Venuetype Bitmasks, refer to api/VenueTypes type:seatType), (default:&#x27;null&#x27;)
     * @param {string} [locfilter] Locfilter (Separator &#x27;,&#x27; possible values: mta + METAREGIONID &#x3D; (Filter by Metaregion), reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMVEREINID &#x3D; (Filter by Tourismverein), mun + MUNICIPALITYID &#x3D; (Filter by Municipality), fra + FRACTIONID &#x3D; (Filter by Fraction)), (default:&#x27;null&#x27; &#x3D; disabled)
     * @param {boolean} [active] Active Venue Filter (possible Values: &#x27;true&#x27; only Active Gastronomies, &#x27;false&#x27; only Disabled Venues
     * @param {boolean} [odhactive] ODH Active (Published) Venue Filter (possible Values: &#x27;true&#x27; only published Venue, &#x27;false&#x27; only not published Venue, (default:&#x27;null&#x27;)
     * @param {string} [odhtagfilter] ODH Taglist Filter (refers to Array SmgTags)(String, Separator &#x27;,&#x27; more Tags possible, available Tags reference to &#x27;api/SmgTag/ByMainEntity/SmgPoi&#x27;), (default:&#x27;null&#x27;)
     * @param {string} [seed] Seed &#x27;1 - 10&#x27; for Random Sorting, &#x27;0&#x27; generates a Random Seed, not provided disables Random Sorting, (default:&#x27;null&#x27;)
     * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [radius] Radius to Search in KM. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)
     * @param {string} [updatefrom] Date from Format (yyyy-MM-dd) (all Gastronomy with LastChange &amp;gt;&#x3D; datefrom are passed), (default: null &#x3D; disabled)
     * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)
     * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)
     * @param {string} [searchfilter] String to search for, Title in all languages are searched, (default: null)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof VenueApi
     */

  }, {
    key: "venueGet",
    value: function venueGet(pagenumber, pagesize, source, capacityfilter, roomcountfilter, idlist, categoryfilter, featurefilter, setuptypefilter, locfilter, active, odhactive, odhtagfilter, seed, latitude, longitude, radius, updatefrom, fields, language, searchfilter, options) {
      var _this2 = this;

      return venue_api_VenueApiFp(this.configuration).venueGet(pagenumber, pagesize, source, capacityfilter, roomcountfilter, idlist, categoryfilter, featurefilter, setuptypefilter, locfilter, active, odhactive, odhtagfilter, seed, latitude, longitude, radius, updatefrom, fields, language, searchfilter, options).then(function (request) {
        return request(_this2.axios, _this2.basePath);
      });
    }
    /**
     *
     * @summary GET Venue Types List
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof VenueApi
     */

  }, {
    key: "venueGetAllVenueTypesList",
    value: function venueGetAllVenueTypesList(options) {
      var _this3 = this;

      return venue_api_VenueApiFp(this.configuration).venueGetAllVenueTypesList(options).then(function (request) {
        return request(_this3.axios, _this3.basePath);
      });
    }
    /**
     *
     * @summary GET Venue Type Single
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof VenueApi
     */

  }, {
    key: "venueGetAllVenueTypesSingle",
    value: function venueGetAllVenueTypesSingle(id, options) {
      var _this4 = this;

      return venue_api_VenueApiFp(this.configuration).venueGetAllVenueTypesSingle(id, options).then(function (request) {
        return request(_this4.axios, _this4.basePath);
      });
    }
    /**
     *
     * @summary GET Venue Single
     * @param {string} id ID of the Webcam
     * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)
     * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof VenueApi
     */

  }, {
    key: "venueGetApiVenueById",
    value: function venueGetApiVenueById(id, fields, language, options) {
      var _this5 = this;

      return venue_api_VenueApiFp(this.configuration).venueGetApiVenueById(id, fields, language, options).then(function (request) {
        return request(_this5.axios, _this5.basePath);
      });
    }
  }]);

  return VenueApi;
}(base_BaseAPI);
// CONCATENATED MODULE: ./src/api/apis/weather-api.ts

















/* tslint:disable */

/* eslint-disable */

/**
 * Open Data Hub Api Tourism
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: V1
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
 // Some imports not used depending on template conditions
// @ts-ignore


/**
 * WeatherApi - axios parameter creator
 * @export
 */

var weather_api_WeatherApiAxiosParamCreator = function WeatherApiAxiosParamCreator(configuration) {
  return {
    /**
     *
     * @summary GET Snowreport Data LIVE
     * @param {string} [lang] Language available de,it,en, default: en
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    weatherGetApiWeatherSnowReport: function () {
      var _weatherGetApiWeatherSnowReport = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(lang) {
        var options,
            localVarPath,
            localVarUrlObj,
            baseOptions,
            localVarRequestOptions,
            localVarHeaderParameter,
            localVarQueryParameter,
            localVarAccessTokenValue,
            query,
            key,
            _key,
            headersFromBaseOptions,
            _args = arguments;

        return regeneratorRuntime.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                options = _args.length > 1 && _args[1] !== undefined ? _args[1] : {};
                localVarPath = "/api/Weather/SnowReport"; // use dummy base URL string because the URL constructor only accepts absolute URLs.

                localVarUrlObj = new URL(localVarPath, 'https://example.com');

                if (configuration) {
                  baseOptions = configuration.baseOptions;
                }

                localVarRequestOptions = _objectSpread2(_objectSpread2({
                  method: 'GET'
                }, baseOptions), options);
                localVarHeaderParameter = {};
                localVarQueryParameter = {}; // authentication oauth2 required
                // oauth required

                if (!(configuration && configuration.accessToken)) {
                  _context.next = 19;
                  break;
                }

                if (!(typeof configuration.accessToken === 'function')) {
                  _context.next = 14;
                  break;
                }

                _context.next = 11;
                return configuration.accessToken("oauth2", [""]);

              case 11:
                _context.t0 = _context.sent;
                _context.next = 17;
                break;

              case 14:
                _context.next = 16;
                return configuration.accessToken;

              case 16:
                _context.t0 = _context.sent;

              case 17:
                localVarAccessTokenValue = _context.t0;
                localVarHeaderParameter["Authorization"] = "Bearer " + localVarAccessTokenValue;

              case 19:
                if (lang !== undefined) {
                  localVarQueryParameter['lang'] = lang;
                }

                query = new URLSearchParams(localVarUrlObj.search);

                for (key in localVarQueryParameter) {
                  query.set(key, localVarQueryParameter[key]);
                }

                for (_key in options.query) {
                  query.set(_key, options.query[_key]);
                }

                localVarUrlObj.search = new URLSearchParams(query).toString();
                headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                localVarRequestOptions.headers = _objectSpread2(_objectSpread2(_objectSpread2({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                return _context.abrupt("return", {
                  url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                  options: localVarRequestOptions
                });

              case 27:
              case "end":
                return _context.stop();
            }
          }
        }, _callee);
      }));

      function weatherGetApiWeatherSnowReport(_x) {
        return _weatherGetApiWeatherSnowReport.apply(this, arguments);
      }

      return weatherGetApiWeatherSnowReport;
    }(),

    /**
     *
     * @summary GET District Weather LIVE (Opendata)
     * @param {string} locfilter Locfilter (possible values: tvs + TOURISMVEREINID &#x3D; (Filter by Tourismverein), mun + MUNICIPALITYID &#x3D; (Filter by Municipality), fra + FRACTIONID &#x3D; (Filter by Fraction), ALSO POSSIBLE Number 1 to 7 for 7 stations total, &#x27;null&#x27; &#x3D; No Filter)
     * @param {string} [language] Language available de,it,en, default: en
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    weatherGetDistrictWeather: function () {
      var _weatherGetDistrictWeather = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(locfilter, language) {
        var options,
            localVarPath,
            localVarUrlObj,
            baseOptions,
            localVarRequestOptions,
            localVarHeaderParameter,
            localVarQueryParameter,
            localVarAccessTokenValue,
            query,
            key,
            _key2,
            headersFromBaseOptions,
            _args2 = arguments;

        return regeneratorRuntime.wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                options = _args2.length > 2 && _args2[2] !== undefined ? _args2[2] : {};

                if (!(locfilter === null || locfilter === undefined)) {
                  _context2.next = 3;
                  break;
                }

                throw new base_RequiredError('locfilter', 'Required parameter locfilter was null or undefined when calling weatherGetDistrictWeather.');

              case 3:
                localVarPath = "/api/Weather/District"; // use dummy base URL string because the URL constructor only accepts absolute URLs.

                localVarUrlObj = new URL(localVarPath, 'https://example.com');

                if (configuration) {
                  baseOptions = configuration.baseOptions;
                }

                localVarRequestOptions = _objectSpread2(_objectSpread2({
                  method: 'GET'
                }, baseOptions), options);
                localVarHeaderParameter = {};
                localVarQueryParameter = {}; // authentication oauth2 required
                // oauth required

                if (!(configuration && configuration.accessToken)) {
                  _context2.next = 21;
                  break;
                }

                if (!(typeof configuration.accessToken === 'function')) {
                  _context2.next = 16;
                  break;
                }

                _context2.next = 13;
                return configuration.accessToken("oauth2", [""]);

              case 13:
                _context2.t0 = _context2.sent;
                _context2.next = 19;
                break;

              case 16:
                _context2.next = 18;
                return configuration.accessToken;

              case 18:
                _context2.t0 = _context2.sent;

              case 19:
                localVarAccessTokenValue = _context2.t0;
                localVarHeaderParameter["Authorization"] = "Bearer " + localVarAccessTokenValue;

              case 21:
                if (locfilter !== undefined) {
                  localVarQueryParameter['locfilter'] = locfilter;
                }

                if (language !== undefined) {
                  localVarQueryParameter['language'] = language;
                }

                query = new URLSearchParams(localVarUrlObj.search);

                for (key in localVarQueryParameter) {
                  query.set(key, localVarQueryParameter[key]);
                }

                for (_key2 in options.query) {
                  query.set(_key2, options.query[_key2]);
                }

                localVarUrlObj.search = new URLSearchParams(query).toString();
                headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                localVarRequestOptions.headers = _objectSpread2(_objectSpread2(_objectSpread2({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                return _context2.abrupt("return", {
                  url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                  options: localVarRequestOptions
                });

              case 30:
              case "end":
                return _context2.stop();
            }
          }
        }, _callee2);
      }));

      function weatherGetDistrictWeather(_x2, _x3) {
        return _weatherGetDistrictWeather.apply(this, arguments);
      }

      return weatherGetDistrictWeather;
    }(),

    /**
     *
     * @summary GET Measuringpoint SINGLE
     * @param {string} id Measuringpoint ID
     * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)
     * @param {string} [table]
     * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    weatherGetMeasuringPoint: function () {
      var _weatherGetMeasuringPoint = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(id, fields, table, language) {
        var options,
            localVarPath,
            localVarUrlObj,
            baseOptions,
            localVarRequestOptions,
            localVarHeaderParameter,
            localVarQueryParameter,
            localVarAccessTokenValue,
            query,
            key,
            _key3,
            headersFromBaseOptions,
            _args3 = arguments;

        return regeneratorRuntime.wrap(function _callee3$(_context3) {
          while (1) {
            switch (_context3.prev = _context3.next) {
              case 0:
                options = _args3.length > 4 && _args3[4] !== undefined ? _args3[4] : {};

                if (!(id === null || id === undefined)) {
                  _context3.next = 3;
                  break;
                }

                throw new base_RequiredError('id', 'Required parameter id was null or undefined when calling weatherGetMeasuringPoint.');

              case 3:
                localVarPath = "/api/Weather/Measuringpoint/{id}".replace("{".concat("id", "}"), encodeURIComponent(String(id))); // use dummy base URL string because the URL constructor only accepts absolute URLs.

                localVarUrlObj = new URL(localVarPath, 'https://example.com');

                if (configuration) {
                  baseOptions = configuration.baseOptions;
                }

                localVarRequestOptions = _objectSpread2(_objectSpread2({
                  method: 'GET'
                }, baseOptions), options);
                localVarHeaderParameter = {};
                localVarQueryParameter = {}; // authentication oauth2 required
                // oauth required

                if (!(configuration && configuration.accessToken)) {
                  _context3.next = 21;
                  break;
                }

                if (!(typeof configuration.accessToken === 'function')) {
                  _context3.next = 16;
                  break;
                }

                _context3.next = 13;
                return configuration.accessToken("oauth2", [""]);

              case 13:
                _context3.t0 = _context3.sent;
                _context3.next = 19;
                break;

              case 16:
                _context3.next = 18;
                return configuration.accessToken;

              case 18:
                _context3.t0 = _context3.sent;

              case 19:
                localVarAccessTokenValue = _context3.t0;
                localVarHeaderParameter["Authorization"] = "Bearer " + localVarAccessTokenValue;

              case 21:
                if (fields !== undefined) {
                  localVarQueryParameter['fields'] = fields;
                }

                if (table !== undefined) {
                  localVarQueryParameter['table'] = table;
                }

                if (language !== undefined) {
                  localVarQueryParameter['language'] = language;
                }

                query = new URLSearchParams(localVarUrlObj.search);

                for (key in localVarQueryParameter) {
                  query.set(key, localVarQueryParameter[key]);
                }

                for (_key3 in options.query) {
                  query.set(_key3, options.query[_key3]);
                }

                localVarUrlObj.search = new URLSearchParams(query).toString();
                headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                localVarRequestOptions.headers = _objectSpread2(_objectSpread2(_objectSpread2({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                return _context3.abrupt("return", {
                  url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                  options: localVarRequestOptions
                });

              case 31:
              case "end":
                return _context3.stop();
            }
          }
        }, _callee3);
      }));

      function weatherGetMeasuringPoint(_x4, _x5, _x6, _x7) {
        return _weatherGetMeasuringPoint.apply(this, arguments);
      }

      return weatherGetMeasuringPoint;
    }(),

    /**
     *
     * @summary GET Measuringpoint LIST (Opendata)
     * @param {string} [idlist] IDFilter (Separator &#x27;,&#x27; List of ODHActivityPoi IDs), (default:&#x27;null&#x27;)
     * @param {string} [locfilter] Locfilter (Separator &#x27;,&#x27; possible values: reg + REGIONID &#x3D; (Filter by Region), reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMASSOCIATIONID &#x3D; (Filter by Tourismassociation), mun + MUNICIPALITYID &#x3D; (Filter by Municipality), fra + FRACTIONID &#x3D; (Filter by Fraction), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)
     * @param {string} [areafilter] AreaFilter (Alternate Locfilter, can be combined with locfilter) (Separator &#x27;,&#x27; possible values: reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMASSOCIATIONID &#x3D; (Filter by Tourismassociation), skr + SKIREGIONID &#x3D; (Filter by Skiregion), ska + SKIAREAID &#x3D; (Filter by Skiarea), are + AREAID &#x3D; (Filter by LTS Area), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)
     * @param {string} [skiareafilter] Skiarea ID
     * @param {boolean} [odhactive] ODH Active (Published) ODHActivityPoi Filter (Refers to field SmgActive) (possible Values: &#x27;true&#x27; only published ODHActivityPoi, &#x27;false&#x27; only not published ODHActivityPoi, (default:&#x27;null&#x27;)
     * @param {boolean} [active] Active ODHActivityPoi Filter (possible Values: &#x27;true&#x27; only active ODHActivityPoi, &#x27;false&#x27; only not active ODHActivityPoi, (default:&#x27;null&#x27;)
     * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)
     * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)
     * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)
     * @param {string} [updatefrom] Date from Format (yyyy-MM-dd) (all GBActivityPoi with LastChange &amp;gt;&#x3D; datefrom are passed), (default: null)
     * @param {string} [searchfilter] String to search for, Title in all languages are searched, (default: null)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    weatherGetMeasuringPoints: function () {
      var _weatherGetMeasuringPoints = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(idlist, locfilter, areafilter, skiareafilter, odhactive, active, latitude, longitude, radius, fields, language, updatefrom, searchfilter) {
        var options,
            localVarPath,
            localVarUrlObj,
            baseOptions,
            localVarRequestOptions,
            localVarHeaderParameter,
            localVarQueryParameter,
            localVarAccessTokenValue,
            query,
            key,
            _key4,
            headersFromBaseOptions,
            _args4 = arguments;

        return regeneratorRuntime.wrap(function _callee4$(_context4) {
          while (1) {
            switch (_context4.prev = _context4.next) {
              case 0:
                options = _args4.length > 13 && _args4[13] !== undefined ? _args4[13] : {};
                localVarPath = "/api/Weather/Measuringpoint"; // use dummy base URL string because the URL constructor only accepts absolute URLs.

                localVarUrlObj = new URL(localVarPath, 'https://example.com');

                if (configuration) {
                  baseOptions = configuration.baseOptions;
                }

                localVarRequestOptions = _objectSpread2(_objectSpread2({
                  method: 'GET'
                }, baseOptions), options);
                localVarHeaderParameter = {};
                localVarQueryParameter = {}; // authentication oauth2 required
                // oauth required

                if (!(configuration && configuration.accessToken)) {
                  _context4.next = 19;
                  break;
                }

                if (!(typeof configuration.accessToken === 'function')) {
                  _context4.next = 14;
                  break;
                }

                _context4.next = 11;
                return configuration.accessToken("oauth2", [""]);

              case 11:
                _context4.t0 = _context4.sent;
                _context4.next = 17;
                break;

              case 14:
                _context4.next = 16;
                return configuration.accessToken;

              case 16:
                _context4.t0 = _context4.sent;

              case 17:
                localVarAccessTokenValue = _context4.t0;
                localVarHeaderParameter["Authorization"] = "Bearer " + localVarAccessTokenValue;

              case 19:
                if (idlist !== undefined) {
                  localVarQueryParameter['idlist'] = idlist;
                }

                if (locfilter !== undefined) {
                  localVarQueryParameter['locfilter'] = locfilter;
                }

                if (areafilter !== undefined) {
                  localVarQueryParameter['areafilter'] = areafilter;
                }

                if (skiareafilter !== undefined) {
                  localVarQueryParameter['skiareafilter'] = skiareafilter;
                }

                if (odhactive !== undefined) {
                  localVarQueryParameter['odhactive'] = odhactive;
                }

                if (active !== undefined) {
                  localVarQueryParameter['active'] = active;
                }

                if (latitude !== undefined) {
                  localVarQueryParameter['latitude'] = latitude;
                }

                if (longitude !== undefined) {
                  localVarQueryParameter['longitude'] = longitude;
                }

                if (radius !== undefined) {
                  localVarQueryParameter['radius'] = radius;
                }

                if (fields !== undefined) {
                  localVarQueryParameter['fields'] = fields;
                }

                if (language !== undefined) {
                  localVarQueryParameter['language'] = language;
                }

                if (updatefrom !== undefined) {
                  localVarQueryParameter['updatefrom'] = updatefrom;
                }

                if (searchfilter !== undefined) {
                  localVarQueryParameter['searchfilter'] = searchfilter;
                }

                query = new URLSearchParams(localVarUrlObj.search);

                for (key in localVarQueryParameter) {
                  query.set(key, localVarQueryParameter[key]);
                }

                for (_key4 in options.query) {
                  query.set(_key4, options.query[_key4]);
                }

                localVarUrlObj.search = new URLSearchParams(query).toString();
                headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                localVarRequestOptions.headers = _objectSpread2(_objectSpread2(_objectSpread2({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                return _context4.abrupt("return", {
                  url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                  options: localVarRequestOptions
                });

              case 39:
              case "end":
                return _context4.stop();
            }
          }
        }, _callee4);
      }));

      function weatherGetMeasuringPoints(_x8, _x9, _x10, _x11, _x12, _x13, _x14, _x15, _x16, _x17, _x18, _x19, _x20) {
        return _weatherGetMeasuringPoints.apply(this, arguments);
      }

      return weatherGetMeasuringPoints;
    }(),

    /**
     *
     * @summary GET Current Realtime Weather LIVE
     * @param {string} [language] Language available de,it,en, default: en
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    weatherGetRealtimeWeather: function () {
      var _weatherGetRealtimeWeather = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(language) {
        var options,
            localVarPath,
            localVarUrlObj,
            baseOptions,
            localVarRequestOptions,
            localVarHeaderParameter,
            localVarQueryParameter,
            localVarAccessTokenValue,
            query,
            key,
            _key5,
            headersFromBaseOptions,
            _args5 = arguments;

        return regeneratorRuntime.wrap(function _callee5$(_context5) {
          while (1) {
            switch (_context5.prev = _context5.next) {
              case 0:
                options = _args5.length > 1 && _args5[1] !== undefined ? _args5[1] : {};
                localVarPath = "/api/Weather/Realtime"; // use dummy base URL string because the URL constructor only accepts absolute URLs.

                localVarUrlObj = new URL(localVarPath, 'https://example.com');

                if (configuration) {
                  baseOptions = configuration.baseOptions;
                }

                localVarRequestOptions = _objectSpread2(_objectSpread2({
                  method: 'GET'
                }, baseOptions), options);
                localVarHeaderParameter = {};
                localVarQueryParameter = {}; // authentication oauth2 required
                // oauth required

                if (!(configuration && configuration.accessToken)) {
                  _context5.next = 19;
                  break;
                }

                if (!(typeof configuration.accessToken === 'function')) {
                  _context5.next = 14;
                  break;
                }

                _context5.next = 11;
                return configuration.accessToken("oauth2", [""]);

              case 11:
                _context5.t0 = _context5.sent;
                _context5.next = 17;
                break;

              case 14:
                _context5.next = 16;
                return configuration.accessToken;

              case 16:
                _context5.t0 = _context5.sent;

              case 17:
                localVarAccessTokenValue = _context5.t0;
                localVarHeaderParameter["Authorization"] = "Bearer " + localVarAccessTokenValue;

              case 19:
                if (language !== undefined) {
                  localVarQueryParameter['language'] = language;
                }

                query = new URLSearchParams(localVarUrlObj.search);

                for (key in localVarQueryParameter) {
                  query.set(key, localVarQueryParameter[key]);
                }

                for (_key5 in options.query) {
                  query.set(_key5, options.query[_key5]);
                }

                localVarUrlObj.search = new URLSearchParams(query).toString();
                headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                localVarRequestOptions.headers = _objectSpread2(_objectSpread2(_objectSpread2({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                return _context5.abrupt("return", {
                  url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                  options: localVarRequestOptions
                });

              case 27:
              case "end":
                return _context5.stop();
            }
          }
        }, _callee5);
      }));

      function weatherGetRealtimeWeather(_x21) {
        return _weatherGetRealtimeWeather.apply(this, arguments);
      }

      return weatherGetRealtimeWeather;
    }(),

    /**
     *
     * @summary GET Snowreport Data LIVE by Skiarea
     * @param {string} skiareaid Skiarea ID
     * @param {string} [lang] Language available de,it,en, default: en
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    weatherGetSnowReportBase: function () {
      var _weatherGetSnowReportBase = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6(skiareaid, lang) {
        var options,
            localVarPath,
            localVarUrlObj,
            baseOptions,
            localVarRequestOptions,
            localVarHeaderParameter,
            localVarQueryParameter,
            localVarAccessTokenValue,
            query,
            key,
            _key6,
            headersFromBaseOptions,
            _args6 = arguments;

        return regeneratorRuntime.wrap(function _callee6$(_context6) {
          while (1) {
            switch (_context6.prev = _context6.next) {
              case 0:
                options = _args6.length > 2 && _args6[2] !== undefined ? _args6[2] : {};

                if (!(skiareaid === null || skiareaid === undefined)) {
                  _context6.next = 3;
                  break;
                }

                throw new base_RequiredError('skiareaid', 'Required parameter skiareaid was null or undefined when calling weatherGetSnowReportBase.');

              case 3:
                localVarPath = "/api/Weather/SnowReport/{skiareaid}".replace("{".concat("skiareaid", "}"), encodeURIComponent(String(skiareaid))); // use dummy base URL string because the URL constructor only accepts absolute URLs.

                localVarUrlObj = new URL(localVarPath, 'https://example.com');

                if (configuration) {
                  baseOptions = configuration.baseOptions;
                }

                localVarRequestOptions = _objectSpread2(_objectSpread2({
                  method: 'GET'
                }, baseOptions), options);
                localVarHeaderParameter = {};
                localVarQueryParameter = {}; // authentication oauth2 required
                // oauth required

                if (!(configuration && configuration.accessToken)) {
                  _context6.next = 21;
                  break;
                }

                if (!(typeof configuration.accessToken === 'function')) {
                  _context6.next = 16;
                  break;
                }

                _context6.next = 13;
                return configuration.accessToken("oauth2", [""]);

              case 13:
                _context6.t0 = _context6.sent;
                _context6.next = 19;
                break;

              case 16:
                _context6.next = 18;
                return configuration.accessToken;

              case 18:
                _context6.t0 = _context6.sent;

              case 19:
                localVarAccessTokenValue = _context6.t0;
                localVarHeaderParameter["Authorization"] = "Bearer " + localVarAccessTokenValue;

              case 21:
                if (lang !== undefined) {
                  localVarQueryParameter['lang'] = lang;
                }

                query = new URLSearchParams(localVarUrlObj.search);

                for (key in localVarQueryParameter) {
                  query.set(key, localVarQueryParameter[key]);
                }

                for (_key6 in options.query) {
                  query.set(_key6, options.query[_key6]);
                }

                localVarUrlObj.search = new URLSearchParams(query).toString();
                headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                localVarRequestOptions.headers = _objectSpread2(_objectSpread2(_objectSpread2({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                return _context6.abrupt("return", {
                  url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                  options: localVarRequestOptions
                });

              case 29:
              case "end":
                return _context6.stop();
            }
          }
        }, _callee6);
      }));

      function weatherGetSnowReportBase(_x22, _x23) {
        return _weatherGetSnowReportBase.apply(this, arguments);
      }

      return weatherGetSnowReportBase;
    }(),

    /**
     *
     * @summary GET Current Suedtirol Weather LIVE (Opendata)
     * @param {string} [language] Language available de,it,en, default: en
     * @param {string} [locfilter] Locfilter (possible values: reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMVEREINID &#x3D; (Filter by Tourismverein), mun + MUNICIPALITYID &#x3D; (Filter by Municipality), fra + FRACTIONID &#x3D; (Filter by Fraction), &#x27;&#x27; &#x3D; No Filter). IF a Locfilter is set, only Stationdata is provided.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    weatherGetWeather: function () {
      var _weatherGetWeather = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee7(language, locfilter) {
        var options,
            localVarPath,
            localVarUrlObj,
            baseOptions,
            localVarRequestOptions,
            localVarHeaderParameter,
            localVarQueryParameter,
            localVarAccessTokenValue,
            query,
            key,
            _key7,
            headersFromBaseOptions,
            _args7 = arguments;

        return regeneratorRuntime.wrap(function _callee7$(_context7) {
          while (1) {
            switch (_context7.prev = _context7.next) {
              case 0:
                options = _args7.length > 2 && _args7[2] !== undefined ? _args7[2] : {};
                localVarPath = "/api/Weather"; // use dummy base URL string because the URL constructor only accepts absolute URLs.

                localVarUrlObj = new URL(localVarPath, 'https://example.com');

                if (configuration) {
                  baseOptions = configuration.baseOptions;
                }

                localVarRequestOptions = _objectSpread2(_objectSpread2({
                  method: 'GET'
                }, baseOptions), options);
                localVarHeaderParameter = {};
                localVarQueryParameter = {}; // authentication oauth2 required
                // oauth required

                if (!(configuration && configuration.accessToken)) {
                  _context7.next = 19;
                  break;
                }

                if (!(typeof configuration.accessToken === 'function')) {
                  _context7.next = 14;
                  break;
                }

                _context7.next = 11;
                return configuration.accessToken("oauth2", [""]);

              case 11:
                _context7.t0 = _context7.sent;
                _context7.next = 17;
                break;

              case 14:
                _context7.next = 16;
                return configuration.accessToken;

              case 16:
                _context7.t0 = _context7.sent;

              case 17:
                localVarAccessTokenValue = _context7.t0;
                localVarHeaderParameter["Authorization"] = "Bearer " + localVarAccessTokenValue;

              case 19:
                if (language !== undefined) {
                  localVarQueryParameter['language'] = language;
                }

                if (locfilter !== undefined) {
                  localVarQueryParameter['locfilter'] = locfilter;
                }

                query = new URLSearchParams(localVarUrlObj.search);

                for (key in localVarQueryParameter) {
                  query.set(key, localVarQueryParameter[key]);
                }

                for (_key7 in options.query) {
                  query.set(_key7, options.query[_key7]);
                }

                localVarUrlObj.search = new URLSearchParams(query).toString();
                headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                localVarRequestOptions.headers = _objectSpread2(_objectSpread2(_objectSpread2({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                return _context7.abrupt("return", {
                  url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                  options: localVarRequestOptions
                });

              case 28:
              case "end":
                return _context7.stop();
            }
          }
        }, _callee7);
      }));

      function weatherGetWeather(_x24, _x25) {
        return _weatherGetWeather.apply(this, arguments);
      }

      return weatherGetWeather;
    }()
  };
};
/**
 * WeatherApi - functional programming interface
 * @export
 */

var weather_api_WeatherApiFp = function WeatherApiFp(configuration) {
  return {
    /**
     *
     * @summary GET Snowreport Data LIVE
     * @param {string} [lang] Language available de,it,en, default: en
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    weatherGetApiWeatherSnowReport: function weatherGetApiWeatherSnowReport(lang, options) {
      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee8() {
        var localVarAxiosArgs;
        return regeneratorRuntime.wrap(function _callee8$(_context8) {
          while (1) {
            switch (_context8.prev = _context8.next) {
              case 0:
                _context8.next = 2;
                return weather_api_WeatherApiAxiosParamCreator(configuration).weatherGetApiWeatherSnowReport(lang, options);

              case 2:
                localVarAxiosArgs = _context8.sent;
                return _context8.abrupt("return", function () {
                  var axios = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : axios_default.a;
                  var basePath = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : BASE_PATH;

                  var axiosRequestArgs = _objectSpread2(_objectSpread2({}, localVarAxiosArgs.options), {}, {
                    url: basePath + localVarAxiosArgs.url
                  });

                  return axios.request(axiosRequestArgs);
                });

              case 4:
              case "end":
                return _context8.stop();
            }
          }
        }, _callee8);
      }))();
    },

    /**
     *
     * @summary GET District Weather LIVE (Opendata)
     * @param {string} locfilter Locfilter (possible values: tvs + TOURISMVEREINID &#x3D; (Filter by Tourismverein), mun + MUNICIPALITYID &#x3D; (Filter by Municipality), fra + FRACTIONID &#x3D; (Filter by Fraction), ALSO POSSIBLE Number 1 to 7 for 7 stations total, &#x27;null&#x27; &#x3D; No Filter)
     * @param {string} [language] Language available de,it,en, default: en
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    weatherGetDistrictWeather: function weatherGetDistrictWeather(locfilter, language, options) {
      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee9() {
        var localVarAxiosArgs;
        return regeneratorRuntime.wrap(function _callee9$(_context9) {
          while (1) {
            switch (_context9.prev = _context9.next) {
              case 0:
                _context9.next = 2;
                return weather_api_WeatherApiAxiosParamCreator(configuration).weatherGetDistrictWeather(locfilter, language, options);

              case 2:
                localVarAxiosArgs = _context9.sent;
                return _context9.abrupt("return", function () {
                  var axios = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : axios_default.a;
                  var basePath = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : BASE_PATH;

                  var axiosRequestArgs = _objectSpread2(_objectSpread2({}, localVarAxiosArgs.options), {}, {
                    url: basePath + localVarAxiosArgs.url
                  });

                  return axios.request(axiosRequestArgs);
                });

              case 4:
              case "end":
                return _context9.stop();
            }
          }
        }, _callee9);
      }))();
    },

    /**
     *
     * @summary GET Measuringpoint SINGLE
     * @param {string} id Measuringpoint ID
     * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)
     * @param {string} [table]
     * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    weatherGetMeasuringPoint: function weatherGetMeasuringPoint(id, fields, table, language, options) {
      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee10() {
        var localVarAxiosArgs;
        return regeneratorRuntime.wrap(function _callee10$(_context10) {
          while (1) {
            switch (_context10.prev = _context10.next) {
              case 0:
                _context10.next = 2;
                return weather_api_WeatherApiAxiosParamCreator(configuration).weatherGetMeasuringPoint(id, fields, table, language, options);

              case 2:
                localVarAxiosArgs = _context10.sent;
                return _context10.abrupt("return", function () {
                  var axios = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : axios_default.a;
                  var basePath = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : BASE_PATH;

                  var axiosRequestArgs = _objectSpread2(_objectSpread2({}, localVarAxiosArgs.options), {}, {
                    url: basePath + localVarAxiosArgs.url
                  });

                  return axios.request(axiosRequestArgs);
                });

              case 4:
              case "end":
                return _context10.stop();
            }
          }
        }, _callee10);
      }))();
    },

    /**
     *
     * @summary GET Measuringpoint LIST (Opendata)
     * @param {string} [idlist] IDFilter (Separator &#x27;,&#x27; List of ODHActivityPoi IDs), (default:&#x27;null&#x27;)
     * @param {string} [locfilter] Locfilter (Separator &#x27;,&#x27; possible values: reg + REGIONID &#x3D; (Filter by Region), reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMASSOCIATIONID &#x3D; (Filter by Tourismassociation), mun + MUNICIPALITYID &#x3D; (Filter by Municipality), fra + FRACTIONID &#x3D; (Filter by Fraction), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)
     * @param {string} [areafilter] AreaFilter (Alternate Locfilter, can be combined with locfilter) (Separator &#x27;,&#x27; possible values: reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMASSOCIATIONID &#x3D; (Filter by Tourismassociation), skr + SKIREGIONID &#x3D; (Filter by Skiregion), ska + SKIAREAID &#x3D; (Filter by Skiarea), are + AREAID &#x3D; (Filter by LTS Area), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)
     * @param {string} [skiareafilter] Skiarea ID
     * @param {boolean} [odhactive] ODH Active (Published) ODHActivityPoi Filter (Refers to field SmgActive) (possible Values: &#x27;true&#x27; only published ODHActivityPoi, &#x27;false&#x27; only not published ODHActivityPoi, (default:&#x27;null&#x27;)
     * @param {boolean} [active] Active ODHActivityPoi Filter (possible Values: &#x27;true&#x27; only active ODHActivityPoi, &#x27;false&#x27; only not active ODHActivityPoi, (default:&#x27;null&#x27;)
     * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)
     * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)
     * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)
     * @param {string} [updatefrom] Date from Format (yyyy-MM-dd) (all GBActivityPoi with LastChange &amp;gt;&#x3D; datefrom are passed), (default: null)
     * @param {string} [searchfilter] String to search for, Title in all languages are searched, (default: null)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    weatherGetMeasuringPoints: function weatherGetMeasuringPoints(idlist, locfilter, areafilter, skiareafilter, odhactive, active, latitude, longitude, radius, fields, language, updatefrom, searchfilter, options) {
      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee11() {
        var localVarAxiosArgs;
        return regeneratorRuntime.wrap(function _callee11$(_context11) {
          while (1) {
            switch (_context11.prev = _context11.next) {
              case 0:
                _context11.next = 2;
                return weather_api_WeatherApiAxiosParamCreator(configuration).weatherGetMeasuringPoints(idlist, locfilter, areafilter, skiareafilter, odhactive, active, latitude, longitude, radius, fields, language, updatefrom, searchfilter, options);

              case 2:
                localVarAxiosArgs = _context11.sent;
                return _context11.abrupt("return", function () {
                  var axios = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : axios_default.a;
                  var basePath = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : BASE_PATH;

                  var axiosRequestArgs = _objectSpread2(_objectSpread2({}, localVarAxiosArgs.options), {}, {
                    url: basePath + localVarAxiosArgs.url
                  });

                  return axios.request(axiosRequestArgs);
                });

              case 4:
              case "end":
                return _context11.stop();
            }
          }
        }, _callee11);
      }))();
    },

    /**
     *
     * @summary GET Current Realtime Weather LIVE
     * @param {string} [language] Language available de,it,en, default: en
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    weatherGetRealtimeWeather: function weatherGetRealtimeWeather(language, options) {
      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee12() {
        var localVarAxiosArgs;
        return regeneratorRuntime.wrap(function _callee12$(_context12) {
          while (1) {
            switch (_context12.prev = _context12.next) {
              case 0:
                _context12.next = 2;
                return weather_api_WeatherApiAxiosParamCreator(configuration).weatherGetRealtimeWeather(language, options);

              case 2:
                localVarAxiosArgs = _context12.sent;
                return _context12.abrupt("return", function () {
                  var axios = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : axios_default.a;
                  var basePath = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : BASE_PATH;

                  var axiosRequestArgs = _objectSpread2(_objectSpread2({}, localVarAxiosArgs.options), {}, {
                    url: basePath + localVarAxiosArgs.url
                  });

                  return axios.request(axiosRequestArgs);
                });

              case 4:
              case "end":
                return _context12.stop();
            }
          }
        }, _callee12);
      }))();
    },

    /**
     *
     * @summary GET Snowreport Data LIVE by Skiarea
     * @param {string} skiareaid Skiarea ID
     * @param {string} [lang] Language available de,it,en, default: en
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    weatherGetSnowReportBase: function weatherGetSnowReportBase(skiareaid, lang, options) {
      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee13() {
        var localVarAxiosArgs;
        return regeneratorRuntime.wrap(function _callee13$(_context13) {
          while (1) {
            switch (_context13.prev = _context13.next) {
              case 0:
                _context13.next = 2;
                return weather_api_WeatherApiAxiosParamCreator(configuration).weatherGetSnowReportBase(skiareaid, lang, options);

              case 2:
                localVarAxiosArgs = _context13.sent;
                return _context13.abrupt("return", function () {
                  var axios = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : axios_default.a;
                  var basePath = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : BASE_PATH;

                  var axiosRequestArgs = _objectSpread2(_objectSpread2({}, localVarAxiosArgs.options), {}, {
                    url: basePath + localVarAxiosArgs.url
                  });

                  return axios.request(axiosRequestArgs);
                });

              case 4:
              case "end":
                return _context13.stop();
            }
          }
        }, _callee13);
      }))();
    },

    /**
     *
     * @summary GET Current Suedtirol Weather LIVE (Opendata)
     * @param {string} [language] Language available de,it,en, default: en
     * @param {string} [locfilter] Locfilter (possible values: reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMVEREINID &#x3D; (Filter by Tourismverein), mun + MUNICIPALITYID &#x3D; (Filter by Municipality), fra + FRACTIONID &#x3D; (Filter by Fraction), &#x27;&#x27; &#x3D; No Filter). IF a Locfilter is set, only Stationdata is provided.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    weatherGetWeather: function weatherGetWeather(language, locfilter, options) {
      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee14() {
        var localVarAxiosArgs;
        return regeneratorRuntime.wrap(function _callee14$(_context14) {
          while (1) {
            switch (_context14.prev = _context14.next) {
              case 0:
                _context14.next = 2;
                return weather_api_WeatherApiAxiosParamCreator(configuration).weatherGetWeather(language, locfilter, options);

              case 2:
                localVarAxiosArgs = _context14.sent;
                return _context14.abrupt("return", function () {
                  var axios = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : axios_default.a;
                  var basePath = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : BASE_PATH;

                  var axiosRequestArgs = _objectSpread2(_objectSpread2({}, localVarAxiosArgs.options), {}, {
                    url: basePath + localVarAxiosArgs.url
                  });

                  return axios.request(axiosRequestArgs);
                });

              case 4:
              case "end":
                return _context14.stop();
            }
          }
        }, _callee14);
      }))();
    }
  };
};
/**
 * WeatherApi - factory interface
 * @export
 */

var WeatherApiFactory = function WeatherApiFactory(configuration, basePath, axios) {
  return {
    /**
     *
     * @summary GET Snowreport Data LIVE
     * @param {string} [lang] Language available de,it,en, default: en
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    weatherGetApiWeatherSnowReport: function weatherGetApiWeatherSnowReport(lang, options) {
      return weather_api_WeatherApiFp(configuration).weatherGetApiWeatherSnowReport(lang, options).then(function (request) {
        return request(axios, basePath);
      });
    },

    /**
     *
     * @summary GET District Weather LIVE (Opendata)
     * @param {string} locfilter Locfilter (possible values: tvs + TOURISMVEREINID &#x3D; (Filter by Tourismverein), mun + MUNICIPALITYID &#x3D; (Filter by Municipality), fra + FRACTIONID &#x3D; (Filter by Fraction), ALSO POSSIBLE Number 1 to 7 for 7 stations total, &#x27;null&#x27; &#x3D; No Filter)
     * @param {string} [language] Language available de,it,en, default: en
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    weatherGetDistrictWeather: function weatherGetDistrictWeather(locfilter, language, options) {
      return weather_api_WeatherApiFp(configuration).weatherGetDistrictWeather(locfilter, language, options).then(function (request) {
        return request(axios, basePath);
      });
    },

    /**
     *
     * @summary GET Measuringpoint SINGLE
     * @param {string} id Measuringpoint ID
     * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)
     * @param {string} [table]
     * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    weatherGetMeasuringPoint: function weatherGetMeasuringPoint(id, fields, table, language, options) {
      return weather_api_WeatherApiFp(configuration).weatherGetMeasuringPoint(id, fields, table, language, options).then(function (request) {
        return request(axios, basePath);
      });
    },

    /**
     *
     * @summary GET Measuringpoint LIST (Opendata)
     * @param {string} [idlist] IDFilter (Separator &#x27;,&#x27; List of ODHActivityPoi IDs), (default:&#x27;null&#x27;)
     * @param {string} [locfilter] Locfilter (Separator &#x27;,&#x27; possible values: reg + REGIONID &#x3D; (Filter by Region), reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMASSOCIATIONID &#x3D; (Filter by Tourismassociation), mun + MUNICIPALITYID &#x3D; (Filter by Municipality), fra + FRACTIONID &#x3D; (Filter by Fraction), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)
     * @param {string} [areafilter] AreaFilter (Alternate Locfilter, can be combined with locfilter) (Separator &#x27;,&#x27; possible values: reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMASSOCIATIONID &#x3D; (Filter by Tourismassociation), skr + SKIREGIONID &#x3D; (Filter by Skiregion), ska + SKIAREAID &#x3D; (Filter by Skiarea), are + AREAID &#x3D; (Filter by LTS Area), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)
     * @param {string} [skiareafilter] Skiarea ID
     * @param {boolean} [odhactive] ODH Active (Published) ODHActivityPoi Filter (Refers to field SmgActive) (possible Values: &#x27;true&#x27; only published ODHActivityPoi, &#x27;false&#x27; only not published ODHActivityPoi, (default:&#x27;null&#x27;)
     * @param {boolean} [active] Active ODHActivityPoi Filter (possible Values: &#x27;true&#x27; only active ODHActivityPoi, &#x27;false&#x27; only not active ODHActivityPoi, (default:&#x27;null&#x27;)
     * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)
     * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)
     * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)
     * @param {string} [updatefrom] Date from Format (yyyy-MM-dd) (all GBActivityPoi with LastChange &amp;gt;&#x3D; datefrom are passed), (default: null)
     * @param {string} [searchfilter] String to search for, Title in all languages are searched, (default: null)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    weatherGetMeasuringPoints: function weatherGetMeasuringPoints(idlist, locfilter, areafilter, skiareafilter, odhactive, active, latitude, longitude, radius, fields, language, updatefrom, searchfilter, options) {
      return weather_api_WeatherApiFp(configuration).weatherGetMeasuringPoints(idlist, locfilter, areafilter, skiareafilter, odhactive, active, latitude, longitude, radius, fields, language, updatefrom, searchfilter, options).then(function (request) {
        return request(axios, basePath);
      });
    },

    /**
     *
     * @summary GET Current Realtime Weather LIVE
     * @param {string} [language] Language available de,it,en, default: en
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    weatherGetRealtimeWeather: function weatherGetRealtimeWeather(language, options) {
      return weather_api_WeatherApiFp(configuration).weatherGetRealtimeWeather(language, options).then(function (request) {
        return request(axios, basePath);
      });
    },

    /**
     *
     * @summary GET Snowreport Data LIVE by Skiarea
     * @param {string} skiareaid Skiarea ID
     * @param {string} [lang] Language available de,it,en, default: en
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    weatherGetSnowReportBase: function weatherGetSnowReportBase(skiareaid, lang, options) {
      return weather_api_WeatherApiFp(configuration).weatherGetSnowReportBase(skiareaid, lang, options).then(function (request) {
        return request(axios, basePath);
      });
    },

    /**
     *
     * @summary GET Current Suedtirol Weather LIVE (Opendata)
     * @param {string} [language] Language available de,it,en, default: en
     * @param {string} [locfilter] Locfilter (possible values: reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMVEREINID &#x3D; (Filter by Tourismverein), mun + MUNICIPALITYID &#x3D; (Filter by Municipality), fra + FRACTIONID &#x3D; (Filter by Fraction), &#x27;&#x27; &#x3D; No Filter). IF a Locfilter is set, only Stationdata is provided.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    weatherGetWeather: function weatherGetWeather(language, locfilter, options) {
      return weather_api_WeatherApiFp(configuration).weatherGetWeather(language, locfilter, options).then(function (request) {
        return request(axios, basePath);
      });
    }
  };
};
/**
 * WeatherApi - object-oriented interface
 * @export
 * @class WeatherApi
 * @extends {BaseAPI}
 */

var weather_api_WeatherApi = /*#__PURE__*/function (_BaseAPI) {
  _inherits(WeatherApi, _BaseAPI);

  var _super = _createSuper(WeatherApi);

  function WeatherApi() {
    _classCallCheck(this, WeatherApi);

    return _super.apply(this, arguments);
  }

  _createClass(WeatherApi, [{
    key: "weatherGetApiWeatherSnowReport",

    /**
     *
     * @summary GET Snowreport Data LIVE
     * @param {string} [lang] Language available de,it,en, default: en
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof WeatherApi
     */
    value: function weatherGetApiWeatherSnowReport(lang, options) {
      var _this = this;

      return weather_api_WeatherApiFp(this.configuration).weatherGetApiWeatherSnowReport(lang, options).then(function (request) {
        return request(_this.axios, _this.basePath);
      });
    }
    /**
     *
     * @summary GET District Weather LIVE (Opendata)
     * @param {string} locfilter Locfilter (possible values: tvs + TOURISMVEREINID &#x3D; (Filter by Tourismverein), mun + MUNICIPALITYID &#x3D; (Filter by Municipality), fra + FRACTIONID &#x3D; (Filter by Fraction), ALSO POSSIBLE Number 1 to 7 for 7 stations total, &#x27;null&#x27; &#x3D; No Filter)
     * @param {string} [language] Language available de,it,en, default: en
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof WeatherApi
     */

  }, {
    key: "weatherGetDistrictWeather",
    value: function weatherGetDistrictWeather(locfilter, language, options) {
      var _this2 = this;

      return weather_api_WeatherApiFp(this.configuration).weatherGetDistrictWeather(locfilter, language, options).then(function (request) {
        return request(_this2.axios, _this2.basePath);
      });
    }
    /**
     *
     * @summary GET Measuringpoint SINGLE
     * @param {string} id Measuringpoint ID
     * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)
     * @param {string} [table]
     * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof WeatherApi
     */

  }, {
    key: "weatherGetMeasuringPoint",
    value: function weatherGetMeasuringPoint(id, fields, table, language, options) {
      var _this3 = this;

      return weather_api_WeatherApiFp(this.configuration).weatherGetMeasuringPoint(id, fields, table, language, options).then(function (request) {
        return request(_this3.axios, _this3.basePath);
      });
    }
    /**
     *
     * @summary GET Measuringpoint LIST (Opendata)
     * @param {string} [idlist] IDFilter (Separator &#x27;,&#x27; List of ODHActivityPoi IDs), (default:&#x27;null&#x27;)
     * @param {string} [locfilter] Locfilter (Separator &#x27;,&#x27; possible values: reg + REGIONID &#x3D; (Filter by Region), reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMASSOCIATIONID &#x3D; (Filter by Tourismassociation), mun + MUNICIPALITYID &#x3D; (Filter by Municipality), fra + FRACTIONID &#x3D; (Filter by Fraction), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)
     * @param {string} [areafilter] AreaFilter (Alternate Locfilter, can be combined with locfilter) (Separator &#x27;,&#x27; possible values: reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMASSOCIATIONID &#x3D; (Filter by Tourismassociation), skr + SKIREGIONID &#x3D; (Filter by Skiregion), ska + SKIAREAID &#x3D; (Filter by Skiarea), are + AREAID &#x3D; (Filter by LTS Area), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)
     * @param {string} [skiareafilter] Skiarea ID
     * @param {boolean} [odhactive] ODH Active (Published) ODHActivityPoi Filter (Refers to field SmgActive) (possible Values: &#x27;true&#x27; only published ODHActivityPoi, &#x27;false&#x27; only not published ODHActivityPoi, (default:&#x27;null&#x27;)
     * @param {boolean} [active] Active ODHActivityPoi Filter (possible Values: &#x27;true&#x27; only active ODHActivityPoi, &#x27;false&#x27; only not active ODHActivityPoi, (default:&#x27;null&#x27;)
     * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [radius] Radius to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)
     * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)
     * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)
     * @param {string} [updatefrom] Date from Format (yyyy-MM-dd) (all GBActivityPoi with LastChange &amp;gt;&#x3D; datefrom are passed), (default: null)
     * @param {string} [searchfilter] String to search for, Title in all languages are searched, (default: null)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof WeatherApi
     */

  }, {
    key: "weatherGetMeasuringPoints",
    value: function weatherGetMeasuringPoints(idlist, locfilter, areafilter, skiareafilter, odhactive, active, latitude, longitude, radius, fields, language, updatefrom, searchfilter, options) {
      var _this4 = this;

      return weather_api_WeatherApiFp(this.configuration).weatherGetMeasuringPoints(idlist, locfilter, areafilter, skiareafilter, odhactive, active, latitude, longitude, radius, fields, language, updatefrom, searchfilter, options).then(function (request) {
        return request(_this4.axios, _this4.basePath);
      });
    }
    /**
     *
     * @summary GET Current Realtime Weather LIVE
     * @param {string} [language] Language available de,it,en, default: en
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof WeatherApi
     */

  }, {
    key: "weatherGetRealtimeWeather",
    value: function weatherGetRealtimeWeather(language, options) {
      var _this5 = this;

      return weather_api_WeatherApiFp(this.configuration).weatherGetRealtimeWeather(language, options).then(function (request) {
        return request(_this5.axios, _this5.basePath);
      });
    }
    /**
     *
     * @summary GET Snowreport Data LIVE by Skiarea
     * @param {string} skiareaid Skiarea ID
     * @param {string} [lang] Language available de,it,en, default: en
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof WeatherApi
     */

  }, {
    key: "weatherGetSnowReportBase",
    value: function weatherGetSnowReportBase(skiareaid, lang, options) {
      var _this6 = this;

      return weather_api_WeatherApiFp(this.configuration).weatherGetSnowReportBase(skiareaid, lang, options).then(function (request) {
        return request(_this6.axios, _this6.basePath);
      });
    }
    /**
     *
     * @summary GET Current Suedtirol Weather LIVE (Opendata)
     * @param {string} [language] Language available de,it,en, default: en
     * @param {string} [locfilter] Locfilter (possible values: reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMVEREINID &#x3D; (Filter by Tourismverein), mun + MUNICIPALITYID &#x3D; (Filter by Municipality), fra + FRACTIONID &#x3D; (Filter by Fraction), &#x27;&#x27; &#x3D; No Filter). IF a Locfilter is set, only Stationdata is provided.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof WeatherApi
     */

  }, {
    key: "weatherGetWeather",
    value: function weatherGetWeather(language, locfilter, options) {
      var _this7 = this;

      return weather_api_WeatherApiFp(this.configuration).weatherGetWeather(language, locfilter, options).then(function (request) {
        return request(_this7.axios, _this7.basePath);
      });
    }
  }]);

  return WeatherApi;
}(base_BaseAPI);
// CONCATENATED MODULE: ./src/api/apis/webcam-info-api.ts

















/* tslint:disable */

/* eslint-disable */

/**
 * Open Data Hub Api Tourism
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: V1
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
 // Some imports not used depending on template conditions
// @ts-ignore


/**
 * WebcamInfoApi - axios parameter creator
 * @export
 */

var webcam_info_api_WebcamInfoApiAxiosParamCreator = function WebcamInfoApiAxiosParamCreator(configuration) {
  return {
    /**
     *
     * @summary GET Webcam List
     * @param {number} [pagenumber] Pagenumber, (default:1)
     * @param {number} [pagesize] Elements per Page (max 1024), (default:10)
     * @param {string} [source] Source Filter(String, ), (default:&#x27;null&#x27;)
     * @param {string} [idlist] IDFilter (Separator &#x27;,&#x27; List of Gastronomy IDs), (default:&#x27;null&#x27;)
     * @param {boolean} [active] Active Webcam Filter (possible Values: &#x27;true&#x27; only Active Gastronomies, &#x27;false&#x27; only Disabled Gastronomies
     * @param {boolean} [odhactive] ODH Active (refers to field SmgActive) (Published) Webcam Filter (possible Values: &#x27;true&#x27; only published Webcam, &#x27;false&#x27; only not published Webcam, (default:&#x27;null&#x27;)
     * @param {string} [seed] Seed &#x27;1 - 10&#x27; for Random Sorting, &#x27;0&#x27; generates a Random Seed, not provided disables Random Sorting, (default:&#x27;null&#x27;)
     * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [radius] Radius to Search in KM. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)
     * @param {string} [updatefrom] Date from Format (yyyy-MM-dd) (all Gastronomy with LastChange &amp;gt;&#x3D; datefrom are passed), (default: null &#x3D; disabled)
     * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)
     * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    webcamInfoGet: function () {
      var _webcamInfoGet = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(pagenumber, pagesize, source, idlist, active, odhactive, seed, latitude, longitude, radius, updatefrom, fields, language) {
        var options,
            localVarPath,
            localVarUrlObj,
            baseOptions,
            localVarRequestOptions,
            localVarHeaderParameter,
            localVarQueryParameter,
            localVarAccessTokenValue,
            query,
            key,
            _key,
            headersFromBaseOptions,
            _args = arguments;

        return regeneratorRuntime.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                options = _args.length > 13 && _args[13] !== undefined ? _args[13] : {};
                localVarPath = "/api/WebcamInfo"; // use dummy base URL string because the URL constructor only accepts absolute URLs.

                localVarUrlObj = new URL(localVarPath, 'https://example.com');

                if (configuration) {
                  baseOptions = configuration.baseOptions;
                }

                localVarRequestOptions = _objectSpread2(_objectSpread2({
                  method: 'GET'
                }, baseOptions), options);
                localVarHeaderParameter = {};
                localVarQueryParameter = {}; // authentication oauth2 required
                // oauth required

                if (!(configuration && configuration.accessToken)) {
                  _context.next = 19;
                  break;
                }

                if (!(typeof configuration.accessToken === 'function')) {
                  _context.next = 14;
                  break;
                }

                _context.next = 11;
                return configuration.accessToken("oauth2", [""]);

              case 11:
                _context.t0 = _context.sent;
                _context.next = 17;
                break;

              case 14:
                _context.next = 16;
                return configuration.accessToken;

              case 16:
                _context.t0 = _context.sent;

              case 17:
                localVarAccessTokenValue = _context.t0;
                localVarHeaderParameter["Authorization"] = "Bearer " + localVarAccessTokenValue;

              case 19:
                if (pagenumber !== undefined) {
                  localVarQueryParameter['pagenumber'] = pagenumber;
                }

                if (pagesize !== undefined) {
                  localVarQueryParameter['pagesize'] = pagesize;
                }

                if (source !== undefined) {
                  localVarQueryParameter['source'] = source;
                }

                if (idlist !== undefined) {
                  localVarQueryParameter['idlist'] = idlist;
                }

                if (active !== undefined) {
                  localVarQueryParameter['active'] = active;
                }

                if (odhactive !== undefined) {
                  localVarQueryParameter['odhactive'] = odhactive;
                }

                if (seed !== undefined) {
                  localVarQueryParameter['seed'] = seed;
                }

                if (latitude !== undefined) {
                  localVarQueryParameter['latitude'] = latitude;
                }

                if (longitude !== undefined) {
                  localVarQueryParameter['longitude'] = longitude;
                }

                if (radius !== undefined) {
                  localVarQueryParameter['radius'] = radius;
                }

                if (updatefrom !== undefined) {
                  localVarQueryParameter['updatefrom'] = updatefrom;
                }

                if (fields !== undefined) {
                  localVarQueryParameter['fields'] = fields;
                }

                if (language !== undefined) {
                  localVarQueryParameter['language'] = language;
                }

                query = new URLSearchParams(localVarUrlObj.search);

                for (key in localVarQueryParameter) {
                  query.set(key, localVarQueryParameter[key]);
                }

                for (_key in options.query) {
                  query.set(_key, options.query[_key]);
                }

                localVarUrlObj.search = new URLSearchParams(query).toString();
                headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                localVarRequestOptions.headers = _objectSpread2(_objectSpread2(_objectSpread2({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                return _context.abrupt("return", {
                  url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                  options: localVarRequestOptions
                });

              case 39:
              case "end":
                return _context.stop();
            }
          }
        }, _callee);
      }));

      function webcamInfoGet(_x, _x2, _x3, _x4, _x5, _x6, _x7, _x8, _x9, _x10, _x11, _x12, _x13) {
        return _webcamInfoGet.apply(this, arguments);
      }

      return webcamInfoGet;
    }(),

    /**
     *
     * @summary GET Webcam Single
     * @param {string} id ID of the Webcam
     * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)
     * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    webcamInfoGetApiWebcamInfoById: function () {
      var _webcamInfoGetApiWebcamInfoById = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(id, fields, language) {
        var options,
            localVarPath,
            localVarUrlObj,
            baseOptions,
            localVarRequestOptions,
            localVarHeaderParameter,
            localVarQueryParameter,
            localVarAccessTokenValue,
            query,
            key,
            _key2,
            headersFromBaseOptions,
            _args2 = arguments;

        return regeneratorRuntime.wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                options = _args2.length > 3 && _args2[3] !== undefined ? _args2[3] : {};

                if (!(id === null || id === undefined)) {
                  _context2.next = 3;
                  break;
                }

                throw new base_RequiredError('id', 'Required parameter id was null or undefined when calling webcamInfoGetApiWebcamInfoById.');

              case 3:
                localVarPath = "/api/WebcamInfo/{id}".replace("{".concat("id", "}"), encodeURIComponent(String(id))); // use dummy base URL string because the URL constructor only accepts absolute URLs.

                localVarUrlObj = new URL(localVarPath, 'https://example.com');

                if (configuration) {
                  baseOptions = configuration.baseOptions;
                }

                localVarRequestOptions = _objectSpread2(_objectSpread2({
                  method: 'GET'
                }, baseOptions), options);
                localVarHeaderParameter = {};
                localVarQueryParameter = {}; // authentication oauth2 required
                // oauth required

                if (!(configuration && configuration.accessToken)) {
                  _context2.next = 21;
                  break;
                }

                if (!(typeof configuration.accessToken === 'function')) {
                  _context2.next = 16;
                  break;
                }

                _context2.next = 13;
                return configuration.accessToken("oauth2", [""]);

              case 13:
                _context2.t0 = _context2.sent;
                _context2.next = 19;
                break;

              case 16:
                _context2.next = 18;
                return configuration.accessToken;

              case 18:
                _context2.t0 = _context2.sent;

              case 19:
                localVarAccessTokenValue = _context2.t0;
                localVarHeaderParameter["Authorization"] = "Bearer " + localVarAccessTokenValue;

              case 21:
                if (fields !== undefined) {
                  localVarQueryParameter['fields'] = fields;
                }

                if (language !== undefined) {
                  localVarQueryParameter['language'] = language;
                }

                query = new URLSearchParams(localVarUrlObj.search);

                for (key in localVarQueryParameter) {
                  query.set(key, localVarQueryParameter[key]);
                }

                for (_key2 in options.query) {
                  query.set(_key2, options.query[_key2]);
                }

                localVarUrlObj.search = new URLSearchParams(query).toString();
                headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                localVarRequestOptions.headers = _objectSpread2(_objectSpread2(_objectSpread2({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                return _context2.abrupt("return", {
                  url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                  options: localVarRequestOptions
                });

              case 30:
              case "end":
                return _context2.stop();
            }
          }
        }, _callee2);
      }));

      function webcamInfoGetApiWebcamInfoById(_x14, _x15, _x16) {
        return _webcamInfoGetApiWebcamInfoById.apply(this, arguments);
      }

      return webcamInfoGetApiWebcamInfoById;
    }(),

    /**
     *
     * @summary GET Webcam Reduced List
     * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)
     * @param {string} [source] Source Filter(String, ), (default:&#x27;null&#x27;)
     * @param {boolean} [active] Active Webcam Filter (possible Values: &#x27;true&#x27; only Active Gastronomies, &#x27;false&#x27; only Disabled Gastronomies
     * @param {boolean} [odhactive] ODH Active (refers to field SmgActive) (Published) Webcam Filter (possible Values: &#x27;true&#x27; only published Webcam, &#x27;false&#x27; only not published Webcam, (default:&#x27;null&#x27;)
     * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [radius] Radius to Search in KM. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)
     * @param {string} [fields] Select fields to display, by Default Title and Id are selected if fields filter is null More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)
     * @param {string} [updatefrom] Date from Format (yyyy-MM-dd) (all GBActivityPoi with LastChange &amp;gt;&#x3D; datefrom are passed), (default: DateTime.Now - 1 Day)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    webcamInfoGetWebcamListReduced: function () {
      var _webcamInfoGetWebcamListReduced = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(language, source, active, odhactive, latitude, longitude, radius, fields, updatefrom) {
        var options,
            localVarPath,
            localVarUrlObj,
            baseOptions,
            localVarRequestOptions,
            localVarHeaderParameter,
            localVarQueryParameter,
            localVarAccessTokenValue,
            query,
            key,
            _key3,
            headersFromBaseOptions,
            _args3 = arguments;

        return regeneratorRuntime.wrap(function _callee3$(_context3) {
          while (1) {
            switch (_context3.prev = _context3.next) {
              case 0:
                options = _args3.length > 9 && _args3[9] !== undefined ? _args3[9] : {};
                localVarPath = "/api/WebcamInfoReduced"; // use dummy base URL string because the URL constructor only accepts absolute URLs.

                localVarUrlObj = new URL(localVarPath, 'https://example.com');

                if (configuration) {
                  baseOptions = configuration.baseOptions;
                }

                localVarRequestOptions = _objectSpread2(_objectSpread2({
                  method: 'GET'
                }, baseOptions), options);
                localVarHeaderParameter = {};
                localVarQueryParameter = {}; // authentication oauth2 required
                // oauth required

                if (!(configuration && configuration.accessToken)) {
                  _context3.next = 19;
                  break;
                }

                if (!(typeof configuration.accessToken === 'function')) {
                  _context3.next = 14;
                  break;
                }

                _context3.next = 11;
                return configuration.accessToken("oauth2", [""]);

              case 11:
                _context3.t0 = _context3.sent;
                _context3.next = 17;
                break;

              case 14:
                _context3.next = 16;
                return configuration.accessToken;

              case 16:
                _context3.t0 = _context3.sent;

              case 17:
                localVarAccessTokenValue = _context3.t0;
                localVarHeaderParameter["Authorization"] = "Bearer " + localVarAccessTokenValue;

              case 19:
                if (language !== undefined) {
                  localVarQueryParameter['language'] = language;
                }

                if (source !== undefined) {
                  localVarQueryParameter['source'] = source;
                }

                if (active !== undefined) {
                  localVarQueryParameter['active'] = active;
                }

                if (odhactive !== undefined) {
                  localVarQueryParameter['odhactive'] = odhactive;
                }

                if (latitude !== undefined) {
                  localVarQueryParameter['latitude'] = latitude;
                }

                if (longitude !== undefined) {
                  localVarQueryParameter['longitude'] = longitude;
                }

                if (radius !== undefined) {
                  localVarQueryParameter['radius'] = radius;
                }

                if (fields !== undefined) {
                  localVarQueryParameter['fields'] = fields;
                }

                if (updatefrom !== undefined) {
                  localVarQueryParameter['updatefrom'] = updatefrom;
                }

                query = new URLSearchParams(localVarUrlObj.search);

                for (key in localVarQueryParameter) {
                  query.set(key, localVarQueryParameter[key]);
                }

                for (_key3 in options.query) {
                  query.set(_key3, options.query[_key3]);
                }

                localVarUrlObj.search = new URLSearchParams(query).toString();
                headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                localVarRequestOptions.headers = _objectSpread2(_objectSpread2(_objectSpread2({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                return _context3.abrupt("return", {
                  url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                  options: localVarRequestOptions
                });

              case 35:
              case "end":
                return _context3.stop();
            }
          }
        }, _callee3);
      }));

      function webcamInfoGetWebcamListReduced(_x17, _x18, _x19, _x20, _x21, _x22, _x23, _x24, _x25) {
        return _webcamInfoGetWebcamListReduced.apply(this, arguments);
      }

      return webcamInfoGetWebcamListReduced;
    }()
  };
};
/**
 * WebcamInfoApi - functional programming interface
 * @export
 */

var webcam_info_api_WebcamInfoApiFp = function WebcamInfoApiFp(configuration) {
  return {
    /**
     *
     * @summary GET Webcam List
     * @param {number} [pagenumber] Pagenumber, (default:1)
     * @param {number} [pagesize] Elements per Page (max 1024), (default:10)
     * @param {string} [source] Source Filter(String, ), (default:&#x27;null&#x27;)
     * @param {string} [idlist] IDFilter (Separator &#x27;,&#x27; List of Gastronomy IDs), (default:&#x27;null&#x27;)
     * @param {boolean} [active] Active Webcam Filter (possible Values: &#x27;true&#x27; only Active Gastronomies, &#x27;false&#x27; only Disabled Gastronomies
     * @param {boolean} [odhactive] ODH Active (refers to field SmgActive) (Published) Webcam Filter (possible Values: &#x27;true&#x27; only published Webcam, &#x27;false&#x27; only not published Webcam, (default:&#x27;null&#x27;)
     * @param {string} [seed] Seed &#x27;1 - 10&#x27; for Random Sorting, &#x27;0&#x27; generates a Random Seed, not provided disables Random Sorting, (default:&#x27;null&#x27;)
     * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [radius] Radius to Search in KM. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)
     * @param {string} [updatefrom] Date from Format (yyyy-MM-dd) (all Gastronomy with LastChange &amp;gt;&#x3D; datefrom are passed), (default: null &#x3D; disabled)
     * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)
     * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    webcamInfoGet: function webcamInfoGet(pagenumber, pagesize, source, idlist, active, odhactive, seed, latitude, longitude, radius, updatefrom, fields, language, options) {
      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4() {
        var localVarAxiosArgs;
        return regeneratorRuntime.wrap(function _callee4$(_context4) {
          while (1) {
            switch (_context4.prev = _context4.next) {
              case 0:
                _context4.next = 2;
                return webcam_info_api_WebcamInfoApiAxiosParamCreator(configuration).webcamInfoGet(pagenumber, pagesize, source, idlist, active, odhactive, seed, latitude, longitude, radius, updatefrom, fields, language, options);

              case 2:
                localVarAxiosArgs = _context4.sent;
                return _context4.abrupt("return", function () {
                  var axios = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : axios_default.a;
                  var basePath = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : BASE_PATH;

                  var axiosRequestArgs = _objectSpread2(_objectSpread2({}, localVarAxiosArgs.options), {}, {
                    url: basePath + localVarAxiosArgs.url
                  });

                  return axios.request(axiosRequestArgs);
                });

              case 4:
              case "end":
                return _context4.stop();
            }
          }
        }, _callee4);
      }))();
    },

    /**
     *
     * @summary GET Webcam Single
     * @param {string} id ID of the Webcam
     * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)
     * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    webcamInfoGetApiWebcamInfoById: function webcamInfoGetApiWebcamInfoById(id, fields, language, options) {
      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5() {
        var localVarAxiosArgs;
        return regeneratorRuntime.wrap(function _callee5$(_context5) {
          while (1) {
            switch (_context5.prev = _context5.next) {
              case 0:
                _context5.next = 2;
                return webcam_info_api_WebcamInfoApiAxiosParamCreator(configuration).webcamInfoGetApiWebcamInfoById(id, fields, language, options);

              case 2:
                localVarAxiosArgs = _context5.sent;
                return _context5.abrupt("return", function () {
                  var axios = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : axios_default.a;
                  var basePath = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : BASE_PATH;

                  var axiosRequestArgs = _objectSpread2(_objectSpread2({}, localVarAxiosArgs.options), {}, {
                    url: basePath + localVarAxiosArgs.url
                  });

                  return axios.request(axiosRequestArgs);
                });

              case 4:
              case "end":
                return _context5.stop();
            }
          }
        }, _callee5);
      }))();
    },

    /**
     *
     * @summary GET Webcam Reduced List
     * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)
     * @param {string} [source] Source Filter(String, ), (default:&#x27;null&#x27;)
     * @param {boolean} [active] Active Webcam Filter (possible Values: &#x27;true&#x27; only Active Gastronomies, &#x27;false&#x27; only Disabled Gastronomies
     * @param {boolean} [odhactive] ODH Active (refers to field SmgActive) (Published) Webcam Filter (possible Values: &#x27;true&#x27; only published Webcam, &#x27;false&#x27; only not published Webcam, (default:&#x27;null&#x27;)
     * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [radius] Radius to Search in KM. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)
     * @param {string} [fields] Select fields to display, by Default Title and Id are selected if fields filter is null More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)
     * @param {string} [updatefrom] Date from Format (yyyy-MM-dd) (all GBActivityPoi with LastChange &amp;gt;&#x3D; datefrom are passed), (default: DateTime.Now - 1 Day)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    webcamInfoGetWebcamListReduced: function webcamInfoGetWebcamListReduced(language, source, active, odhactive, latitude, longitude, radius, fields, updatefrom, options) {
      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6() {
        var localVarAxiosArgs;
        return regeneratorRuntime.wrap(function _callee6$(_context6) {
          while (1) {
            switch (_context6.prev = _context6.next) {
              case 0:
                _context6.next = 2;
                return webcam_info_api_WebcamInfoApiAxiosParamCreator(configuration).webcamInfoGetWebcamListReduced(language, source, active, odhactive, latitude, longitude, radius, fields, updatefrom, options);

              case 2:
                localVarAxiosArgs = _context6.sent;
                return _context6.abrupt("return", function () {
                  var axios = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : axios_default.a;
                  var basePath = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : BASE_PATH;

                  var axiosRequestArgs = _objectSpread2(_objectSpread2({}, localVarAxiosArgs.options), {}, {
                    url: basePath + localVarAxiosArgs.url
                  });

                  return axios.request(axiosRequestArgs);
                });

              case 4:
              case "end":
                return _context6.stop();
            }
          }
        }, _callee6);
      }))();
    }
  };
};
/**
 * WebcamInfoApi - factory interface
 * @export
 */

var WebcamInfoApiFactory = function WebcamInfoApiFactory(configuration, basePath, axios) {
  return {
    /**
     *
     * @summary GET Webcam List
     * @param {number} [pagenumber] Pagenumber, (default:1)
     * @param {number} [pagesize] Elements per Page (max 1024), (default:10)
     * @param {string} [source] Source Filter(String, ), (default:&#x27;null&#x27;)
     * @param {string} [idlist] IDFilter (Separator &#x27;,&#x27; List of Gastronomy IDs), (default:&#x27;null&#x27;)
     * @param {boolean} [active] Active Webcam Filter (possible Values: &#x27;true&#x27; only Active Gastronomies, &#x27;false&#x27; only Disabled Gastronomies
     * @param {boolean} [odhactive] ODH Active (refers to field SmgActive) (Published) Webcam Filter (possible Values: &#x27;true&#x27; only published Webcam, &#x27;false&#x27; only not published Webcam, (default:&#x27;null&#x27;)
     * @param {string} [seed] Seed &#x27;1 - 10&#x27; for Random Sorting, &#x27;0&#x27; generates a Random Seed, not provided disables Random Sorting, (default:&#x27;null&#x27;)
     * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [radius] Radius to Search in KM. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)
     * @param {string} [updatefrom] Date from Format (yyyy-MM-dd) (all Gastronomy with LastChange &amp;gt;&#x3D; datefrom are passed), (default: null &#x3D; disabled)
     * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)
     * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    webcamInfoGet: function webcamInfoGet(pagenumber, pagesize, source, idlist, active, odhactive, seed, latitude, longitude, radius, updatefrom, fields, language, options) {
      return webcam_info_api_WebcamInfoApiFp(configuration).webcamInfoGet(pagenumber, pagesize, source, idlist, active, odhactive, seed, latitude, longitude, radius, updatefrom, fields, language, options).then(function (request) {
        return request(axios, basePath);
      });
    },

    /**
     *
     * @summary GET Webcam Single
     * @param {string} id ID of the Webcam
     * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)
     * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    webcamInfoGetApiWebcamInfoById: function webcamInfoGetApiWebcamInfoById(id, fields, language, options) {
      return webcam_info_api_WebcamInfoApiFp(configuration).webcamInfoGetApiWebcamInfoById(id, fields, language, options).then(function (request) {
        return request(axios, basePath);
      });
    },

    /**
     *
     * @summary GET Webcam Reduced List
     * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)
     * @param {string} [source] Source Filter(String, ), (default:&#x27;null&#x27;)
     * @param {boolean} [active] Active Webcam Filter (possible Values: &#x27;true&#x27; only Active Gastronomies, &#x27;false&#x27; only Disabled Gastronomies
     * @param {boolean} [odhactive] ODH Active (refers to field SmgActive) (Published) Webcam Filter (possible Values: &#x27;true&#x27; only published Webcam, &#x27;false&#x27; only not published Webcam, (default:&#x27;null&#x27;)
     * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [radius] Radius to Search in KM. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)
     * @param {string} [fields] Select fields to display, by Default Title and Id are selected if fields filter is null More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)
     * @param {string} [updatefrom] Date from Format (yyyy-MM-dd) (all GBActivityPoi with LastChange &amp;gt;&#x3D; datefrom are passed), (default: DateTime.Now - 1 Day)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    webcamInfoGetWebcamListReduced: function webcamInfoGetWebcamListReduced(language, source, active, odhactive, latitude, longitude, radius, fields, updatefrom, options) {
      return webcam_info_api_WebcamInfoApiFp(configuration).webcamInfoGetWebcamListReduced(language, source, active, odhactive, latitude, longitude, radius, fields, updatefrom, options).then(function (request) {
        return request(axios, basePath);
      });
    }
  };
};
/**
 * WebcamInfoApi - object-oriented interface
 * @export
 * @class WebcamInfoApi
 * @extends {BaseAPI}
 */

var webcam_info_api_WebcamInfoApi = /*#__PURE__*/function (_BaseAPI) {
  _inherits(WebcamInfoApi, _BaseAPI);

  var _super = _createSuper(WebcamInfoApi);

  function WebcamInfoApi() {
    _classCallCheck(this, WebcamInfoApi);

    return _super.apply(this, arguments);
  }

  _createClass(WebcamInfoApi, [{
    key: "webcamInfoGet",

    /**
     *
     * @summary GET Webcam List
     * @param {number} [pagenumber] Pagenumber, (default:1)
     * @param {number} [pagesize] Elements per Page (max 1024), (default:10)
     * @param {string} [source] Source Filter(String, ), (default:&#x27;null&#x27;)
     * @param {string} [idlist] IDFilter (Separator &#x27;,&#x27; List of Gastronomy IDs), (default:&#x27;null&#x27;)
     * @param {boolean} [active] Active Webcam Filter (possible Values: &#x27;true&#x27; only Active Gastronomies, &#x27;false&#x27; only Disabled Gastronomies
     * @param {boolean} [odhactive] ODH Active (refers to field SmgActive) (Published) Webcam Filter (possible Values: &#x27;true&#x27; only published Webcam, &#x27;false&#x27; only not published Webcam, (default:&#x27;null&#x27;)
     * @param {string} [seed] Seed &#x27;1 - 10&#x27; for Random Sorting, &#x27;0&#x27; generates a Random Seed, not provided disables Random Sorting, (default:&#x27;null&#x27;)
     * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [radius] Radius to Search in KM. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)
     * @param {string} [updatefrom] Date from Format (yyyy-MM-dd) (all Gastronomy with LastChange &amp;gt;&#x3D; datefrom are passed), (default: null &#x3D; disabled)
     * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)
     * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof WebcamInfoApi
     */
    value: function webcamInfoGet(pagenumber, pagesize, source, idlist, active, odhactive, seed, latitude, longitude, radius, updatefrom, fields, language, options) {
      var _this = this;

      return webcam_info_api_WebcamInfoApiFp(this.configuration).webcamInfoGet(pagenumber, pagesize, source, idlist, active, odhactive, seed, latitude, longitude, radius, updatefrom, fields, language, options).then(function (request) {
        return request(_this.axios, _this.basePath);
      });
    }
    /**
     *
     * @summary GET Webcam Single
     * @param {string} id ID of the Webcam
     * @param {string} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)
     * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof WebcamInfoApi
     */

  }, {
    key: "webcamInfoGetApiWebcamInfoById",
    value: function webcamInfoGetApiWebcamInfoById(id, fields, language, options) {
      var _this2 = this;

      return webcam_info_api_WebcamInfoApiFp(this.configuration).webcamInfoGetApiWebcamInfoById(id, fields, language, options).then(function (request) {
        return request(_this2.axios, _this2.basePath);
      });
    }
    /**
     *
     * @summary GET Webcam Reduced List
     * @param {string} [language] Localization Language, (default:&#x27;en&#x27;)
     * @param {string} [source] Source Filter(String, ), (default:&#x27;null&#x27;)
     * @param {boolean} [active] Active Webcam Filter (possible Values: &#x27;true&#x27; only Active Gastronomies, &#x27;false&#x27; only Disabled Gastronomies
     * @param {boolean} [odhactive] ODH Active (refers to field SmgActive) (Published) Webcam Filter (possible Values: &#x27;true&#x27; only published Webcam, &#x27;false&#x27; only not published Webcam, (default:&#x27;null&#x27;)
     * @param {string} [latitude] GeoFilter Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [longitude] GeoFilter Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;)
     * @param {string} [radius] Radius to Search in KM. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;)
     * @param {string} [fields] Select fields to display, by Default Title and Id are selected if fields filter is null More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname. Select also Dictionary fields, example Detail.de.Title, or Elements of Arrays example ImageGallery[0].ImageUrl. (default:&#x27;null&#x27; all fields are displayed)
     * @param {string} [updatefrom] Date from Format (yyyy-MM-dd) (all GBActivityPoi with LastChange &amp;gt;&#x3D; datefrom are passed), (default: DateTime.Now - 1 Day)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof WebcamInfoApi
     */

  }, {
    key: "webcamInfoGetWebcamListReduced",
    value: function webcamInfoGetWebcamListReduced(language, source, active, odhactive, latitude, longitude, radius, fields, updatefrom, options) {
      var _this3 = this;

      return webcam_info_api_WebcamInfoApiFp(this.configuration).webcamInfoGetWebcamListReduced(language, source, active, odhactive, latitude, longitude, radius, fields, updatefrom, options).then(function (request) {
        return request(_this3.axios, _this3.basePath);
      });
    }
  }]);

  return WebcamInfoApi;
}(base_BaseAPI);
// CONCATENATED MODULE: ./src/api/api.ts
/* tslint:disable */

/* eslint-disable */

/**
 * Open Data Hub Api Tourism
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: V1
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */















// CONCATENATED MODULE: ./src/api/configuration.ts

var configuration_Configuration = function Configuration() {
  var param = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

  _classCallCheck(this, Configuration);

  this.apiKey = param.apiKey;
  this.username = param.username;
  this.password = param.password;
  this.accessToken = param.accessToken;
  this.basePath = param.basePath;
  this.baseOptions = param.baseOptions;
};
// CONCATENATED MODULE: ./src/api/index.ts
/* tslint:disable */

/* eslint-disable */

/**
 * Open Data Hub Api Tourism
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: V1
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js?{"cacheDirectory":"node_modules/.cache/vue-loader","cacheIdentifier":"3d39ec6c-vue-loader-template"}!./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/Paging.vue?vue&type=template&id=356619ac&scoped=true&
var Pagingvue_type_template_id_356619ac_scoped_true_render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return (_vm.totalPages > 1)?_c('div',{staticClass:"paging"},[(_vm.currentPage !== 1)?_c('div',{staticClass:"back",on:{"click":_vm.lastPage}},[_vm._v(" "+_vm._s(_vm.$t('paging.back'))+" ")]):_vm._e(),(_vm.totalPages < 8)?_c('div',_vm._l((_vm.totalPages),function(page){return _c('span',{key:page,staticClass:"item",class:{ 'selected-item': _vm.currentPage === page },on:{"click":function($event){return _vm.goToPage(page)}}},[_vm._v(" "+_vm._s(page)+" ")])}),0):_c('div',[(_vm.currentPage < 4)?_c('div',[_c('span',{staticClass:"item",class:{ 'selected-item': _vm.currentPage === 1 },on:{"click":function($event){return _vm.goToPage(1)}}},[_vm._v("1")]),_c('span',{staticClass:"item",class:{ 'selected-item': _vm.currentPage === 2 },on:{"click":function($event){return _vm.goToPage(2)}}},[_vm._v("2")]),_c('span',{staticClass:"item",class:{ 'selected-item': _vm.currentPage === 3 },on:{"click":function($event){return _vm.goToPage(3)}}},[_vm._v("3")]),_c('span',{staticClass:"item",class:{ 'selected-item': _vm.currentPage === 4 },on:{"click":function($event){return _vm.goToPage(4)}}},[_vm._v("4")]),_c('span',{staticClass:"item"},[_vm._v("...")]),_c('span',{staticClass:"item",on:{"click":function($event){return _vm.goToPage(_vm.totalPages)}}},[_vm._v(_vm._s(_vm.totalPages))])]):(_vm.currentPage < _vm.totalPages - 2)?_c('div',[_c('span',{staticClass:"item",on:{"click":function($event){return _vm.goToPage(1)}}},[_vm._v("1")]),_c('span',{staticClass:"item"},[_vm._v("...")]),_c('span',{staticClass:"item",on:{"click":function($event){return _vm.goToPage(_vm.currentPage - 1)}}},[_vm._v(_vm._s(_vm.currentPage - 1))]),_c('span',{staticClass:"item selected-item"},[_vm._v(_vm._s(_vm.currentPage))]),_c('span',{staticClass:"item",on:{"click":function($event){return _vm.goToPage(_vm.currentPage + 1)}}},[_vm._v(_vm._s(_vm.currentPage + 1))]),_c('span',{staticClass:"item"},[_vm._v("...")]),_c('span',{staticClass:"item",on:{"click":function($event){return _vm.goToPage(_vm.totalPages)}}},[_vm._v(_vm._s(_vm.totalPages))])]):_c('div',[_c('span',{staticClass:"item",on:{"click":function($event){return _vm.goToPage(1)}}},[_vm._v("1")]),_c('span',{staticClass:"item"},[_vm._v("...")]),_c('span',{staticClass:"item",class:{ 'selected-item': _vm.currentPage === _vm.totalPages - 3 },on:{"click":function($event){return _vm.goToPage(_vm.totalPages - 3)}}},[_vm._v(_vm._s(_vm.totalPages - 3))]),_c('span',{staticClass:"item",class:{ 'selected-item': _vm.currentPage === _vm.totalPages - 2 },on:{"click":function($event){return _vm.goToPage(_vm.totalPages - 2)}}},[_vm._v(_vm._s(_vm.totalPages - 2))]),_c('span',{staticClass:"item",class:{ 'selected-item': _vm.currentPage === _vm.totalPages - 1 },on:{"click":function($event){return _vm.goToPage(_vm.totalPages - 1)}}},[_vm._v(_vm._s(_vm.totalPages - 1))]),_c('span',{staticClass:"item",class:{ 'selected-item': _vm.currentPage === _vm.totalPages },on:{"click":function($event){return _vm.goToPage(_vm.totalPages)}}},[_vm._v(_vm._s(_vm.totalPages))])])]),(_vm.currentPage !== _vm.totalPages)?_c('div',{staticClass:"next",on:{"click":_vm.nextPage}},[_vm._v(" "+_vm._s(_vm.$t('paging.next'))+" ")]):_vm._e()]):_vm._e()}
var Pagingvue_type_template_id_356619ac_scoped_true_staticRenderFns = []


// CONCATENATED MODULE: ./src/components/Paging.vue?vue&type=template&id=356619ac&scoped=true&

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js??ref--12-0!./node_modules/thread-loader/dist/cjs.js!./node_modules/babel-loader/lib!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/Paging.vue?vue&type=script&lang=js&

//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
/* harmony default export */ var Pagingvue_type_script_lang_js_ = ({
  name: 'Paging',
  props: {
    currentPage: {
      required: true,
      type: Number
    },
    totalPages: {
      required: true,
      type: Number
    }
  },
  methods: {
    nextPage: function nextPage() {
      this.$emit('next-page');
    },
    lastPage: function lastPage() {
      this.$emit('last-page');
    },
    goToPage: function goToPage(pageNum) {
      this.$emit('go-to-page', pageNum);
    }
  }
});
// CONCATENATED MODULE: ./src/components/Paging.vue?vue&type=script&lang=js&
 /* harmony default export */ var components_Pagingvue_type_script_lang_js_ = (Pagingvue_type_script_lang_js_); 
// CONCATENATED MODULE: ./src/components/Paging.vue



function injectStyles (context) {
  
  var style0 = __webpack_require__("2570")
if (style0.__inject__) style0.__inject__(context)

}

/* normalize component */

var component = normalizeComponent(
  components_Pagingvue_type_script_lang_js_,
  Pagingvue_type_template_id_356619ac_scoped_true_render,
  Pagingvue_type_template_id_356619ac_scoped_true_staticRenderFns,
  false,
  injectStyles,
  "356619ac",
  null
  ,true
)

/* harmony default export */ var Paging = (component.exports);
// EXTERNAL MODULE: ./src/assets/img/list_blue.svg
var list_blue = __webpack_require__("83d3");
var list_blue_default = /*#__PURE__*/__webpack_require__.n(list_blue);

// EXTERNAL MODULE: ./src/assets/img/list.svg
var list = __webpack_require__("764e");
var list_default = /*#__PURE__*/__webpack_require__.n(list);

// EXTERNAL MODULE: ./src/assets/img/grid_blue.svg
var grid_blue = __webpack_require__("e835");
var grid_blue_default = /*#__PURE__*/__webpack_require__.n(grid_blue);

// EXTERNAL MODULE: ./src/assets/img/grid.svg
var grid = __webpack_require__("c69d");
var grid_default = /*#__PURE__*/__webpack_require__.n(grid);

// EXTERNAL MODULE: ./src/assets/img/ic_search.svg
var ic_search = __webpack_require__("31af");
var ic_search_default = /*#__PURE__*/__webpack_require__.n(ic_search);

// EXTERNAL MODULE: ./src/assets/img/arrow_right.svg
var arrow_right = __webpack_require__("ac9e");
var arrow_right_default = /*#__PURE__*/__webpack_require__.n(arrow_right);

// EXTERNAL MODULE: ./src/assets/img/rezept.svg
var rezept = __webpack_require__("53de");
var rezept_default = /*#__PURE__*/__webpack_require__.n(rezept);

// EXTERNAL MODULE: ./src/assets/img/ic_preparationtime.svg
var ic_preparationtime = __webpack_require__("28f1");
var ic_preparationtime_default = /*#__PURE__*/__webpack_require__.n(ic_preparationtime);

// EXTERNAL MODULE: ./src/assets/img/ic_persons.svg
var ic_persons = __webpack_require__("185c");
var ic_persons_default = /*#__PURE__*/__webpack_require__.n(ic_persons);

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js?{"cacheDirectory":"node_modules/.cache/vue-loader","cacheIdentifier":"3d39ec6c-vue-loader-template"}!./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/Spinner.vue?vue&type=template&id=60a53922&scoped=true&
var Spinnervue_type_template_id_60a53922_scoped_true_render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('svg',{staticClass:"spinner"},[_c('circle',{attrs:{"cx":"20","cy":"20","r":"18"}})])}
var Spinnervue_type_template_id_60a53922_scoped_true_staticRenderFns = []


// CONCATENATED MODULE: ./src/components/Spinner.vue?vue&type=template&id=60a53922&scoped=true&

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js??ref--12-0!./node_modules/thread-loader/dist/cjs.js!./node_modules/babel-loader/lib!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/Spinner.vue?vue&type=script&lang=js&
//
//
//
//
//
//
/* harmony default export */ var Spinnervue_type_script_lang_js_ = ({
  name: 'Spinner'
});
// CONCATENATED MODULE: ./src/components/Spinner.vue?vue&type=script&lang=js&
 /* harmony default export */ var components_Spinnervue_type_script_lang_js_ = (Spinnervue_type_script_lang_js_); 
// CONCATENATED MODULE: ./src/components/Spinner.vue



function Spinner_injectStyles (context) {
  
  var style0 = __webpack_require__("3073")
if (style0.__inject__) style0.__inject__(context)

}

/* normalize component */

var Spinner_component = normalizeComponent(
  components_Spinnervue_type_script_lang_js_,
  Spinnervue_type_template_id_60a53922_scoped_true_render,
  Spinnervue_type_template_id_60a53922_scoped_true_staticRenderFns,
  false,
  Spinner_injectStyles,
  "60a53922",
  null
  ,true
)

/* harmony default export */ var Spinner = (Spinner_component.exports);
// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js??ref--12-0!./node_modules/thread-loader/dist/cjs.js!./node_modules/babel-loader/lib!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/ItemsList.vue?vue&type=script&lang=js&




//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//












/* harmony default export */ var ItemsListvue_type_script_lang_js_ = ({
  components: {
    Paging: Paging,
    ListBlueIcon: list_blue_default.a,
    ListIcon: list_default.a,
    GridBlueIcon: grid_blue_default.a,
    GridIcon: grid_default.a,
    SearchIcon: ic_search_default.a,
    ArrowIconRight: arrow_right_default.a,
    RezeptIcon: rezept_default.a,
    PreparationTimeIcon: ic_preparationtime_default.a,
    PersonsIcon: ic_persons_default.a,
    Spinner: Spinner
  },
  props: {
    language: {
      type: String,
      default: 'en'
    },
    contentIdList: {
      type: String,
      default: null
    },
    pageSize: {
      type: Number,
      default: 2
    },
    category: {
      type: String,
      default: null
    },
    currentPage: {
      type: Number,
      default: 1
    },
    defaultPresentation: {
      type: String,
      default: 'list'
    }
  },
  data: function data() {
    return {
      items: [],
      totalPages: 0,
      isLoading: false,
      showList: this.defaultPresentation === 'list',
      searchInput: '',
      timer: null
    };
  },
  watch: {
    defaultPresentation: function defaultPresentation(newValue) {
      if (newValue === 'list') {
        this.showList = true;
      } else {
        this.showList = false;
      }
    }
  },
  created: function created() {
    this.loadRecipeList(this.currentPage);
  },
  computed: {},
  methods: {
    nextPage: function nextPage() {
      this.items = [];
      this.loadRecipeList(this.currentPage + 1);
      this.$emit('change-current-page', this.currentPage + 1);
    },
    lastPage: function lastPage() {
      this.items = [];
      this.loadRecipeList(this.currentPage - 1);
      this.$emit('change-current-page', this.currentPage - 1);
    },
    goToPage: function goToPage(pageNum) {
      this.items = [];
      this.loadRecipeList(pageNum);
      this.$emit('change-current-page', pageNum);
    },
    showDetail: function showDetail(contentId) {
      this.$emit('show-detail', contentId);
    },
    searchRecipeList: function searchRecipeList() {
      clearTimeout(this.timer);
      this.timer = setTimeout(this.loadRecipeList, 300, 1);
    },
    loadRecipeList: function loadRecipeList(pageNum) {
      var _this = this;

      this.isLoading = true;
      var articleApi = new article_api_ArticleApi();
      articleApi.articleGetArticleList(pageNum, this.pageSize, 32, null, this.contentIdList, this.language, null, null, null, true, null, '', this.language, null, this.searchInput, []).then(function (value) {
        var _value$data$Items, _value$data, _value$data2, _value$data3;

        _this.isLoading = false;
        _this.items = (_value$data$Items = value === null || value === void 0 ? void 0 : (_value$data = value.data) === null || _value$data === void 0 ? void 0 : _value$data.Items) !== null && _value$data$Items !== void 0 ? _value$data$Items : [];

        if (_this.items != null) {
          _this.items = _this.items.filter(function (item) {
            var _item$Detail, _item$Detail2, _item$Detail2$_this$l, _item$Detail3, _item$Detail3$_this$l;

            return (item === null || item === void 0 ? void 0 : (_item$Detail = item.Detail) === null || _item$Detail === void 0 ? void 0 : _item$Detail[_this.language]) != null && (item === null || item === void 0 ? void 0 : (_item$Detail2 = item.Detail) === null || _item$Detail2 === void 0 ? void 0 : (_item$Detail2$_this$l = _item$Detail2[_this.language]) === null || _item$Detail2$_this$l === void 0 ? void 0 : _item$Detail2$_this$l.Title) != null && (item === null || item === void 0 ? void 0 : (_item$Detail3 = item.Detail) === null || _item$Detail3 === void 0 ? void 0 : (_item$Detail3$_this$l = _item$Detail3[_this.language]) === null || _item$Detail3$_this$l === void 0 ? void 0 : _item$Detail3$_this$l.Title) !== '';
          });
        }

        _this.$emit('change-current-page', value === null || value === void 0 ? void 0 : (_value$data2 = value.data) === null || _value$data2 === void 0 ? void 0 : _value$data2.CurrentPage);

        _this.totalPages = value === null || value === void 0 ? void 0 : (_value$data3 = value.data) === null || _value$data3 === void 0 ? void 0 : _value$data3.TotalPages;
      });
    },
    getTitle: function getTitle(item, language) {
      var _item$Detail$language, _item$Detail4, _item$Detail4$languag;

      return (_item$Detail$language = item === null || item === void 0 ? void 0 : (_item$Detail4 = item.Detail) === null || _item$Detail4 === void 0 ? void 0 : (_item$Detail4$languag = _item$Detail4[language]) === null || _item$Detail4$languag === void 0 ? void 0 : _item$Detail4$languag.Title) !== null && _item$Detail$language !== void 0 ? _item$Detail$language : '';
    },
    getRecipeShortInfo: function getRecipeShortInfo(item) {
      var _item$Detail$this$lan;

      return (_item$Detail$this$lan = item === null || item === void 0 ? void 0 : item.Detail[this.language].IntroText) !== null && _item$Detail$this$lan !== void 0 ? _item$Detail$this$lan : '';
    },
    setShowList: function setShowList(active) {
      this.showList = active;
    },
    getPersonCount: function getPersonCount(item) {
      var _item$AdditionalArtic, _item$AdditionalArtic2;

      return (item === null || item === void 0 ? void 0 : (_item$AdditionalArtic = item.AdditionalArticleInfos[this.language]) === null || _item$AdditionalArtic === void 0 ? void 0 : (_item$AdditionalArtic2 = _item$AdditionalArtic.Elements) === null || _item$AdditionalArtic2 === void 0 ? void 0 : _item$AdditionalArtic2.personen) || '';
    },
    getPreparationTime: function getPreparationTime(item) {
      var _item$AdditionalArtic3, _item$AdditionalArtic4;

      var time = (item === null || item === void 0 ? void 0 : (_item$AdditionalArtic3 = item.AdditionalArticleInfos[this.language]) === null || _item$AdditionalArtic3 === void 0 ? void 0 : (_item$AdditionalArtic4 = _item$AdditionalArtic3.Elements) === null || _item$AdditionalArtic4 === void 0 ? void 0 : _item$AdditionalArtic4.zeit) || '-';

      if (time !== '-') {
        time = time.toString() + ' h';
      }

      return time;
    }
  }
});
// CONCATENATED MODULE: ./src/components/ItemsList.vue?vue&type=script&lang=js&
 /* harmony default export */ var components_ItemsListvue_type_script_lang_js_ = (ItemsListvue_type_script_lang_js_); 
// CONCATENATED MODULE: ./src/components/ItemsList.vue



function ItemsList_injectStyles (context) {
  
  var style0 = __webpack_require__("e92b")
if (style0.__inject__) style0.__inject__(context)

}

/* normalize component */

var ItemsList_component = normalizeComponent(
  components_ItemsListvue_type_script_lang_js_,
  ItemsListvue_type_template_id_11f9ef97_scoped_true_render,
  ItemsListvue_type_template_id_11f9ef97_scoped_true_staticRenderFns,
  false,
  ItemsList_injectStyles,
  "11f9ef97",
  null
  ,true
)

/* harmony default export */ var ItemsList = (ItemsList_component.exports);
// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js?{"cacheDirectory":"node_modules/.cache/vue-loader","cacheIdentifier":"3d39ec6c-vue-loader-template"}!./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/ItemDetail.vue?vue&type=template&id=e28a940e&scoped=true&
var ItemDetailvue_type_template_id_e28a940e_scoped_true_render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[(_vm.isListAvailable)?_c('div',{staticClass:"back-button",on:{"click":function($event){$event.preventDefault();return _vm.close($event)}}},[_c('div',{staticStyle:{"min-height":"40px","min-width":"40px","max-height":"40px","max-width":"40px"}},[_c('arrow-icon-left',{attrs:{"viewBox":"0 0 24 24","width":"100%","height":"40px"}})],1),_c('span',[_vm._v(_vm._s(_vm.$t('back')))])]):_vm._e(),(_vm.isItemEmpty && !_vm.isLoading)?_c('div',{staticClass:"item-empty"},[_vm._v(" "+_vm._s(_vm.$t('noItemData'))+" ")]):(_vm.item)?_c('div',{staticClass:"item"},[_c('h1',[_vm._v(_vm._s(_vm.itemDetail.Title))]),_c('div',{staticClass:"detail-box"},[_c('div',{staticClass:"recipe-info-group"},[_c('preparation-time-icon'),_c('span',{staticClass:"recipe-info-text"},[_vm._v(_vm._s(_vm.$t('preparationTime'))+": "+_vm._s(_vm.preparationTime))])],1),_c('div',{staticClass:"recipe-info-group"},[_c('persons-icon'),_c('span',{staticClass:"recipe-info-text"},[_vm._v(_vm._s(_vm.$t('persons'))+": "+_vm._s(_vm.personCount)+" ")])],1)]),_c('div',{staticStyle:{"display":"flex","flex-direction":"row","flex-wrap":"wrap"}},[_c('div',{staticClass:"text content-box"},[(_vm.titleImage)?_c('img',{staticClass:"header-image",attrs:{"src":_vm.titleImage}}):_vm._e(),_c('div',{domProps:{"innerHTML":_vm._s(_vm.articleText)}})]),_c('div',{staticClass:"ingredients-container"},[_c('div',{staticClass:"ingredients-box"},[_c('div',{staticClass:"ingredient-title"},[_vm._v(_vm._s(_vm.$t('ingredients')))]),_c('div',{domProps:{"innerHTML":_vm._s(_vm.ingredients)}})])])]),(Object.keys(_vm.itemProps).length)?_c('div',{staticClass:"additional-props-box"},[_c('ul',{staticClass:"props",class:{ single: Object.keys(_vm.itemProps).length === 1 }},_vm._l((_vm.itemProps),function(value,key){return _c('li',{key:key,staticClass:"text"},[_c('span',{staticClass:"prop-key"},[_vm._v(_vm._s(_vm.$t(("props." + key)))+":")]),_vm._v(" "+_vm._s(value === true ? _vm.$t('yes') : value)+" ")])}),0)]):_vm._e(),_c('div',{staticStyle:{"display":"flex","align-items":"center","flex-direction":"column"}},[_c('div',{staticClass:"divider"}),_c('div',{staticClass:"tags"},_vm._l((_vm.tags),function(value,i){return _c('div',{key:i,staticClass:"category"},[_vm._v(" "+_vm._s(value)+" ")])}),0),_c('div',{staticClass:"divider"})]),(_vm.imageGallery)?_c('div',_vm._l((_vm.imageGallery),function(image,i){return _c('img',{key:i,staticClass:"image",attrs:{"src":image,"height":"200","width":"200"},on:{"click":function($event){return _vm.openImageDetail(image)}}})}),0):_vm._e(),_c('small',{staticClass:"text"},[_vm._v(" "+_vm._s(_vm.$t('lastChange'))+": "+_vm._s(_vm._f("dateFormat")(_vm.item.LastChange))+" ")]),_c('small',{staticClass:"text-id"},[_vm._v(" ID: "+_vm._s(this.contentId)+" ")])]):_vm._e(),(_vm.showImage)?_c('image-detail',{attrs:{"imgUrl":_vm.imageUrl,"hasMultipleImgs":_vm.hasMultipleImgs},on:{"close":_vm.closeImageDetail,"next-image":_vm.nextImage,"last-image":_vm.lastImage}}):_vm._e()],1)}
var ItemDetailvue_type_template_id_e28a940e_scoped_true_staticRenderFns = []


// CONCATENATED MODULE: ./src/components/ItemDetail.vue?vue&type=template&id=e28a940e&scoped=true&

// EXTERNAL MODULE: ./node_modules/core-js/modules/es.array.concat.js
var es_array_concat = __webpack_require__("99af");

// EXTERNAL MODULE: ./node_modules/core-js/modules/es.array.find.js
var es_array_find = __webpack_require__("7db0");

// EXTERNAL MODULE: ./node_modules/core-js/modules/es.array.map.js
var es_array_map = __webpack_require__("d81d");

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js?{"cacheDirectory":"node_modules/.cache/vue-loader","cacheIdentifier":"3d39ec6c-vue-loader-template"}!./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/ImageDetail.vue?vue&type=template&id=3ef6f208&scoped=true&
var ImageDetailvue_type_template_id_3ef6f208_scoped_true_render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:"modal"},[_c('span',{staticClass:"close",on:{"click":_vm.closeImage}},[_vm._v("×")]),_c('div',{staticClass:"modal-content",staticStyle:{"display":"flex","align-items":"center","justify-content":"space-between"},style:(_vm.imageStyle)},[(_vm.hasMultipleImgs)?_c('div',{staticClass:"img-button",staticStyle:{"min-height":"40px","min-width":"40px","max-height":"40px","max-width":"40px"},on:{"click":_vm.lastImage}},[_c('arrow-icon-left',{attrs:{"viewBox":"0 0 24 24","width":"100%","height":"100%"}})],1):_vm._e(),(_vm.hasMultipleImgs)?_c('div',{staticClass:"img-button",staticStyle:{"min-height":"40px","min-width":"40px","max-height":"40px","max-width":"40px"},on:{"click":_vm.nextImage}},[_c('arrow-icon-right',{attrs:{"viewBox":"0 0 24 24","width":"100%","height":"100%"}})],1):_vm._e()])])}
var ImageDetailvue_type_template_id_3ef6f208_scoped_true_staticRenderFns = []


// CONCATENATED MODULE: ./src/components/ImageDetail.vue?vue&type=template&id=3ef6f208&scoped=true&

// EXTERNAL MODULE: ./src/assets/img/arrow_left.svg
var arrow_left = __webpack_require__("b8b6");
var arrow_left_default = /*#__PURE__*/__webpack_require__.n(arrow_left);

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js??ref--12-0!./node_modules/thread-loader/dist/cjs.js!./node_modules/babel-loader/lib!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/ImageDetail.vue?vue&type=script&lang=js&
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//


/* harmony default export */ var ImageDetailvue_type_script_lang_js_ = ({
  components: {
    ArrowIconLeft: arrow_left_default.a,
    ArrowIconRight: arrow_right_default.a
  },
  name: 'ImageDetail',
  props: {
    imgUrl: {
      type: String
    },
    hasMultipleImgs: {
      type: Boolean,
      default: true
    }
  },
  computed: {
    imageStyle: function imageStyle() {
      return {
        backgroundImage: 'url(' + this.imgUrl + ') ',
        backgroundSize: 'contain',
        backgroundPosition: 'center',
        minHeight: '100px',
        backgroundRepeat: 'no-repeat'
      };
    }
  },
  methods: {
    closeImage: function closeImage() {
      this.$emit('close');
    },
    nextImage: function nextImage() {
      this.$emit('next-image');
    },
    lastImage: function lastImage() {
      this.$emit('last-image');
    }
  }
});
// CONCATENATED MODULE: ./src/components/ImageDetail.vue?vue&type=script&lang=js&
 /* harmony default export */ var components_ImageDetailvue_type_script_lang_js_ = (ImageDetailvue_type_script_lang_js_); 
// CONCATENATED MODULE: ./src/components/ImageDetail.vue



function ImageDetail_injectStyles (context) {
  
  var style0 = __webpack_require__("e6fd")
if (style0.__inject__) style0.__inject__(context)

}

/* normalize component */

var ImageDetail_component = normalizeComponent(
  components_ImageDetailvue_type_script_lang_js_,
  ImageDetailvue_type_template_id_3ef6f208_scoped_true_render,
  ImageDetailvue_type_template_id_3ef6f208_scoped_true_staticRenderFns,
  false,
  ImageDetail_injectStyles,
  "3ef6f208",
  null
  ,true
)

/* harmony default export */ var ImageDetail = (ImageDetail_component.exports);
// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js??ref--12-0!./node_modules/thread-loader/dist/cjs.js!./node_modules/babel-loader/lib!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/ItemDetail.vue?vue&type=script&lang=js&





//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//





/* harmony default export */ var ItemDetailvue_type_script_lang_js_ = ({
  components: {
    ImageDetail: ImageDetail,
    PreparationTimeIcon: ic_preparationtime_default.a,
    PersonsIcon: ic_persons_default.a,
    ArrowIconLeft: arrow_left_default.a
  },
  props: {
    contentId: {
      type: String,
      required: true
    },
    contentType: {
      type: String,
      required: true
    },
    isListAvailable: {
      type: Boolean,
      default: false
    },
    language: {
      type: String,
      default: 'de'
    }
  },
  data: function data() {
    return {
      item: null,
      odhTags: [],
      showImage: false,
      imageUrl: null,
      selectedImage: null,
      isLoading: false
    };
  },
  computed: {
    titleImage: function titleImage() {
      var _this$item;

      var image = (_this$item = this.item) === null || _this$item === void 0 ? void 0 : _this$item.ImageGallery[0];
      return (image === null || image === void 0 ? void 0 : image.ImageUrl) || null;
    },
    imageGallery: function imageGallery() {
      var _this$item2;

      return ((_this$item2 = this.item) === null || _this$item2 === void 0 ? void 0 : _this$item2.ImageGallery) || [];
    },
    hasMultipleImgs: function hasMultipleImgs() {
      return this.imageGallery.length > 1;
    },
    itemDetail: function itemDetail() {
      var _this$item3, _this$item3$Detail;

      return ((_this$item3 = this.item) === null || _this$item3 === void 0 ? void 0 : (_this$item3$Detail = _this$item3.Detail) === null || _this$item3$Detail === void 0 ? void 0 : _this$item3$Detail[this.language]) || {};
    },
    isItemEmpty: function isItemEmpty() {
      return Object.keys(this.itemDetail).length === 0;
    },
    articleText: function articleText() {
      var _this$item4, _this$item4$Additiona, _this$item4$Additiona2, _this$item4$Additiona3;

      return ((_this$item4 = this.item) === null || _this$item4 === void 0 ? void 0 : (_this$item4$Additiona = _this$item4.AdditionalArticleInfos) === null || _this$item4$Additiona === void 0 ? void 0 : (_this$item4$Additiona2 = _this$item4$Additiona[this.language]) === null || _this$item4$Additiona2 === void 0 ? void 0 : (_this$item4$Additiona3 = _this$item4$Additiona2.Elements) === null || _this$item4$Additiona3 === void 0 ? void 0 : _this$item4$Additiona3.zubereitungstext) || '';
    },
    itemProps: function itemProps() {
      if (!this.item) {
        return {};
      }

      var showProps = ['IsOpen', 'AltitudeSumUp', 'AltitudeSumDown', 'HasFreeEntrance', 'BikeTransport', 'LiftAvailable', 'RunToValley', 'IsWithLight', 'HasRentals', 'IsPrepared', 'FeetClimb'];
      var props = {};

      for (var _i = 0, _showProps = showProps; _i < _showProps.length; _i++) {
        var key = _showProps[_i];

        if (!!this.item[key] && this.item[key] !== '0.0') {
          props[key] = this.item[key];
        }
      }

      return props;
    },
    personCount: function personCount() {
      var _this$item5, _this$item5$Additiona, _this$item5$Additiona2;

      return ((_this$item5 = this.item) === null || _this$item5 === void 0 ? void 0 : (_this$item5$Additiona = _this$item5.AdditionalArticleInfos[this.language]) === null || _this$item5$Additiona === void 0 ? void 0 : (_this$item5$Additiona2 = _this$item5$Additiona.Elements) === null || _this$item5$Additiona2 === void 0 ? void 0 : _this$item5$Additiona2.personen) || '';
    },
    preparationTime: function preparationTime() {
      var _this$item6, _this$item6$Additiona, _this$item6$Additiona2;

      return ((_this$item6 = this.item) === null || _this$item6 === void 0 ? void 0 : (_this$item6$Additiona = _this$item6.AdditionalArticleInfos[this.language]) === null || _this$item6$Additiona === void 0 ? void 0 : (_this$item6$Additiona2 = _this$item6$Additiona.Elements) === null || _this$item6$Additiona2 === void 0 ? void 0 : _this$item6$Additiona2.zeit) || '-';
    },
    ingredients: function ingredients() {
      var _this$item7, _this$item7$Additiona, _this$item7$Additiona2;

      return (_this$item7 = this.item) === null || _this$item7 === void 0 ? void 0 : (_this$item7$Additiona = _this$item7.AdditionalArticleInfos[this.language]) === null || _this$item7$Additiona === void 0 ? void 0 : (_this$item7$Additiona2 = _this$item7$Additiona.Elements) === null || _this$item7$Additiona2 === void 0 ? void 0 : _this$item7$Additiona2.zutat1;
    },
    tags: function tags() {
      var _this$item8,
          _this = this;

      return (_this$item8 = this.item) === null || _this$item8 === void 0 ? void 0 : _this$item8.ODHTags.map(function (e) {
        var _this$odhTags$find, _this$odhTags$find$Ta;

        return ((_this$odhTags$find = _this.odhTags.find(function (x) {
          return x.Id === e.Id;
        })) === null || _this$odhTags$find === void 0 ? void 0 : (_this$odhTags$find$Ta = _this$odhTags$find.TagName) === null || _this$odhTags$find$Ta === void 0 ? void 0 : _this$odhTags$find$Ta[_this.language]) || '';
      });
    }
  },
  created: function created() {
    this.isLoading = true;
    this.loadRecipeItem();
    this.loadODHTags(this.language);
  },
  filters: {
    dateFormat: function dateFormat(dateString) {
      var d = new Date(dateString);
      var day = d.getDate() < 10 ? "0" + d.getDate() : d.getDate();
      var month = d.getMonth() + 1;
      month = month < 10 ? "0" + month : month;
      return "".concat(day, "/").concat(month, "/").concat(d.getFullYear());
    }
  },
  methods: {
    loadODHTags: function loadODHTags(language) {
      var _this2 = this;

      new odhtag_api_ODHTagApi().oDHTagGetODHTags(language, null, null, []).then(function (value) {
        _this2.odhTags = value.data;
      });
    },
    loadRecipeItem: function loadRecipeItem() {
      var _this3 = this;

      new article_api_ArticleApi().articleGetActivitySingle(this.contentId, '', this.language).then(function (value) {
        _this3.item = value.data;
        _this3.isLoading = false;
      });
    },
    close: function close() {
      this.$emit('close');
    },
    openImageDetail: function openImageDetail(image) {
      this.imageUrl = image.ImageUrl;
      this.selectedImage = image;
      this.showImage = true;
    },
    closeImageDetail: function closeImageDetail() {
      this.showImage = false;
    },
    nextImage: function nextImage() {
      var currentIndex = this.imageGallery.indexOf(this.selectedImage);

      if (currentIndex + 1 < this.imageGallery.length) {
        this.selectedImage = this.imageGallery[currentIndex + 1];
        this.imageUrl = this.selectedImage.ImageUrl;
      } else {
        this.selectedImage = this.imageGallery[0];
        this.imageUrl = this.selectedImage.ImageUrl;
      }
    },
    lastImage: function lastImage() {
      var currentIndex = this.imageGallery.indexOf(this.selectedImage);

      if (currentIndex - 1 >= 0) {
        this.selectedImage = this.imageGallery[currentIndex - 1];
        this.imageUrl = this.selectedImage.ImageUrl;
      } else {
        this.selectedImage = this.imageGallery[this.imageGallery.length - 1];
        this.imageUrl = this.selectedImage.ImageUrl;
      }
    }
  }
});
// CONCATENATED MODULE: ./src/components/ItemDetail.vue?vue&type=script&lang=js&
 /* harmony default export */ var components_ItemDetailvue_type_script_lang_js_ = (ItemDetailvue_type_script_lang_js_); 
// CONCATENATED MODULE: ./src/components/ItemDetail.vue



function ItemDetail_injectStyles (context) {
  
  var style0 = __webpack_require__("f39c")
if (style0.__inject__) style0.__inject__(context)

}

/* normalize component */

var ItemDetail_component = normalizeComponent(
  components_ItemDetailvue_type_script_lang_js_,
  ItemDetailvue_type_template_id_e28a940e_scoped_true_render,
  ItemDetailvue_type_template_id_e28a940e_scoped_true_staticRenderFns,
  false,
  ItemDetail_injectStyles,
  "e28a940e",
  null
  ,true
)

/* harmony default export */ var ItemDetail = (ItemDetail_component.exports);
// CONCATENATED MODULE: ./node_modules/vue-i18n/dist/vue-i18n.esm.js
/*!
 * vue-i18n v8.22.2 
 * (c) 2020 kazuya kawaguchi
 * Released under the MIT License.
 */
/*  */

/**
 * constants
 */

var numberFormatKeys = [
  'compactDisplay',
  'currency',
  'currencyDisplay',
  'currencySign',
  'localeMatcher',
  'notation',
  'numberingSystem',
  'signDisplay',
  'style',
  'unit',
  'unitDisplay',
  'useGrouping',
  'minimumIntegerDigits',
  'minimumFractionDigits',
  'maximumFractionDigits',
  'minimumSignificantDigits',
  'maximumSignificantDigits'
];

/**
 * utilities
 */

function warn (msg, err) {
  if (typeof console !== 'undefined') {
    console.warn('[vue-i18n] ' + msg);
    /* istanbul ignore if */
    if (err) {
      console.warn(err.stack);
    }
  }
}

function error (msg, err) {
  if (typeof console !== 'undefined') {
    console.error('[vue-i18n] ' + msg);
    /* istanbul ignore if */
    if (err) {
      console.error(err.stack);
    }
  }
}

var isArray = Array.isArray;

function isObject (obj) {
  return obj !== null && typeof obj === 'object'
}

function vue_i18n_esm_isBoolean (val) {
  return typeof val === 'boolean'
}

function isString (val) {
  return typeof val === 'string'
}

var vue_i18n_esm_toString = Object.prototype.toString;
var OBJECT_STRING = '[object Object]';
function isPlainObject (obj) {
  return vue_i18n_esm_toString.call(obj) === OBJECT_STRING
}

function isNull (val) {
  return val === null || val === undefined
}

function isFunction (val) {
  return typeof val === 'function'
}

function parseArgs () {
  var args = [], len = arguments.length;
  while ( len-- ) args[ len ] = arguments[ len ];

  var locale = null;
  var params = null;
  if (args.length === 1) {
    if (isObject(args[0]) || isArray(args[0])) {
      params = args[0];
    } else if (typeof args[0] === 'string') {
      locale = args[0];
    }
  } else if (args.length === 2) {
    if (typeof args[0] === 'string') {
      locale = args[0];
    }
    /* istanbul ignore if */
    if (isObject(args[1]) || isArray(args[1])) {
      params = args[1];
    }
  }

  return { locale: locale, params: params }
}

function looseClone (obj) {
  return JSON.parse(JSON.stringify(obj))
}

function remove (arr, item) {
  if (arr.length) {
    var index = arr.indexOf(item);
    if (index > -1) {
      return arr.splice(index, 1)
    }
  }
}

function includes (arr, item) {
  return !!~arr.indexOf(item)
}

var vue_i18n_esm_hasOwnProperty = Object.prototype.hasOwnProperty;
function hasOwn (obj, key) {
  return vue_i18n_esm_hasOwnProperty.call(obj, key)
}

function merge (target) {
  var arguments$1 = arguments;

  var output = Object(target);
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments$1[i];
    if (source !== undefined && source !== null) {
      var key = (void 0);
      for (key in source) {
        if (hasOwn(source, key)) {
          if (isObject(source[key])) {
            output[key] = merge(output[key], source[key]);
          } else {
            output[key] = source[key];
          }
        }
      }
    }
  }
  return output
}

function looseEqual (a, b) {
  if (a === b) { return true }
  var isObjectA = isObject(a);
  var isObjectB = isObject(b);
  if (isObjectA && isObjectB) {
    try {
      var isArrayA = isArray(a);
      var isArrayB = isArray(b);
      if (isArrayA && isArrayB) {
        return a.length === b.length && a.every(function (e, i) {
          return looseEqual(e, b[i])
        })
      } else if (!isArrayA && !isArrayB) {
        var keysA = Object.keys(a);
        var keysB = Object.keys(b);
        return keysA.length === keysB.length && keysA.every(function (key) {
          return looseEqual(a[key], b[key])
        })
      } else {
        /* istanbul ignore next */
        return false
      }
    } catch (e) {
      /* istanbul ignore next */
      return false
    }
  } else if (!isObjectA && !isObjectB) {
    return String(a) === String(b)
  } else {
    return false
  }
}

/**
 * Sanitizes html special characters from input strings. For mitigating risk of XSS attacks.
 * @param rawText The raw input from the user that should be escaped.
 */
function escapeHtml(rawText) {
  return rawText
    .replace(/</g, '&lt;')
    .replace(/>/g, '&gt;')
    .replace(/"/g, '&quot;')
    .replace(/'/g, '&apos;')
}

/**
 * Escapes html tags and special symbols from all provided params which were returned from parseArgs().params.
 * This method performs an in-place operation on the params object.
 *
 * @param {any} params Parameters as provided from `parseArgs().params`.
 *                     May be either an array of strings or a string->any map.
 *
 * @returns The manipulated `params` object.
 */
function escapeParams(params) {
  if(params != null) {
    Object.keys(params).forEach(function (key) {
      if(typeof(params[key]) == 'string') {
        params[key] = escapeHtml(params[key]);
      }
    });
  }
  return params
}

/*  */

function extend (Vue) {
  if (!Vue.prototype.hasOwnProperty('$i18n')) {
    // $FlowFixMe
    Object.defineProperty(Vue.prototype, '$i18n', {
      get: function get () { return this._i18n }
    });
  }

  Vue.prototype.$t = function (key) {
    var values = [], len = arguments.length - 1;
    while ( len-- > 0 ) values[ len ] = arguments[ len + 1 ];

    var i18n = this.$i18n;
    return i18n._t.apply(i18n, [ key, i18n.locale, i18n._getMessages(), this ].concat( values ))
  };

  Vue.prototype.$tc = function (key, choice) {
    var values = [], len = arguments.length - 2;
    while ( len-- > 0 ) values[ len ] = arguments[ len + 2 ];

    var i18n = this.$i18n;
    return i18n._tc.apply(i18n, [ key, i18n.locale, i18n._getMessages(), this, choice ].concat( values ))
  };

  Vue.prototype.$te = function (key, locale) {
    var i18n = this.$i18n;
    return i18n._te(key, i18n.locale, i18n._getMessages(), locale)
  };

  Vue.prototype.$d = function (value) {
    var ref;

    var args = [], len = arguments.length - 1;
    while ( len-- > 0 ) args[ len ] = arguments[ len + 1 ];
    return (ref = this.$i18n).d.apply(ref, [ value ].concat( args ))
  };

  Vue.prototype.$n = function (value) {
    var ref;

    var args = [], len = arguments.length - 1;
    while ( len-- > 0 ) args[ len ] = arguments[ len + 1 ];
    return (ref = this.$i18n).n.apply(ref, [ value ].concat( args ))
  };
}

/*  */

var mixin = {
  beforeCreate: function beforeCreate () {
    var options = this.$options;
    options.i18n = options.i18n || (options.__i18n ? {} : null);

    if (options.i18n) {
      if (options.i18n instanceof VueI18n) {
        // init locale messages via custom blocks
        if (options.__i18n) {
          try {
            var localeMessages = options.i18n && options.i18n.messages ? options.i18n.messages : {};
            options.__i18n.forEach(function (resource) {
              localeMessages = merge(localeMessages, JSON.parse(resource));
            });
            Object.keys(localeMessages).forEach(function (locale) {
              options.i18n.mergeLocaleMessage(locale, localeMessages[locale]);
            });
          } catch (e) {
            if (false) {}
          }
        }
        this._i18n = options.i18n;
        this._i18nWatcher = this._i18n.watchI18nData();
      } else if (isPlainObject(options.i18n)) {
        var rootI18n = this.$root && this.$root.$i18n && this.$root.$i18n instanceof VueI18n
          ? this.$root.$i18n
          : null;
        // component local i18n
        if (rootI18n) {
          options.i18n.root = this.$root;
          options.i18n.formatter = rootI18n.formatter;
          options.i18n.fallbackLocale = rootI18n.fallbackLocale;
          options.i18n.formatFallbackMessages = rootI18n.formatFallbackMessages;
          options.i18n.silentTranslationWarn = rootI18n.silentTranslationWarn;
          options.i18n.silentFallbackWarn = rootI18n.silentFallbackWarn;
          options.i18n.pluralizationRules = rootI18n.pluralizationRules;
          options.i18n.preserveDirectiveContent = rootI18n.preserveDirectiveContent;
        }

        // init locale messages via custom blocks
        if (options.__i18n) {
          try {
            var localeMessages$1 = options.i18n && options.i18n.messages ? options.i18n.messages : {};
            options.__i18n.forEach(function (resource) {
              localeMessages$1 = merge(localeMessages$1, JSON.parse(resource));
            });
            options.i18n.messages = localeMessages$1;
          } catch (e) {
            if (false) {}
          }
        }

        var ref = options.i18n;
        var sharedMessages = ref.sharedMessages;
        if (sharedMessages && isPlainObject(sharedMessages)) {
          options.i18n.messages = merge(options.i18n.messages, sharedMessages);
        }

        this._i18n = new VueI18n(options.i18n);
        this._i18nWatcher = this._i18n.watchI18nData();

        if (options.i18n.sync === undefined || !!options.i18n.sync) {
          this._localeWatcher = this.$i18n.watchLocale();
        }

        if (rootI18n) {
          rootI18n.onComponentInstanceCreated(this._i18n);
        }
      } else {
        if (false) {}
      }
    } else if (this.$root && this.$root.$i18n && this.$root.$i18n instanceof VueI18n) {
      // root i18n
      this._i18n = this.$root.$i18n;
    } else if (options.parent && options.parent.$i18n && options.parent.$i18n instanceof VueI18n) {
      // parent i18n
      this._i18n = options.parent.$i18n;
    }
  },

  beforeMount: function beforeMount () {
    var options = this.$options;
    options.i18n = options.i18n || (options.__i18n ? {} : null);

    if (options.i18n) {
      if (options.i18n instanceof VueI18n) {
        // init locale messages via custom blocks
        this._i18n.subscribeDataChanging(this);
        this._subscribing = true;
      } else if (isPlainObject(options.i18n)) {
        this._i18n.subscribeDataChanging(this);
        this._subscribing = true;
      } else {
        if (false) {}
      }
    } else if (this.$root && this.$root.$i18n && this.$root.$i18n instanceof VueI18n) {
      this._i18n.subscribeDataChanging(this);
      this._subscribing = true;
    } else if (options.parent && options.parent.$i18n && options.parent.$i18n instanceof VueI18n) {
      this._i18n.subscribeDataChanging(this);
      this._subscribing = true;
    }
  },

  beforeDestroy: function beforeDestroy () {
    if (!this._i18n) { return }

    var self = this;
    this.$nextTick(function () {
      if (self._subscribing) {
        self._i18n.unsubscribeDataChanging(self);
        delete self._subscribing;
      }

      if (self._i18nWatcher) {
        self._i18nWatcher();
        self._i18n.destroyVM();
        delete self._i18nWatcher;
      }

      if (self._localeWatcher) {
        self._localeWatcher();
        delete self._localeWatcher;
      }
    });
  }
};

/*  */

var interpolationComponent = {
  name: 'i18n',
  functional: true,
  props: {
    tag: {
      type: [String, Boolean, Object],
      default: 'span'
    },
    path: {
      type: String,
      required: true
    },
    locale: {
      type: String
    },
    places: {
      type: [Array, Object]
    }
  },
  render: function render (h, ref) {
    var data = ref.data;
    var parent = ref.parent;
    var props = ref.props;
    var slots = ref.slots;

    var $i18n = parent.$i18n;
    if (!$i18n) {
      if (false) {}
      return
    }

    var path = props.path;
    var locale = props.locale;
    var places = props.places;
    var params = slots();
    var children = $i18n.i(
      path,
      locale,
      onlyHasDefaultPlace(params) || places
        ? useLegacyPlaces(params.default, places)
        : params
    );

    var tag = (!!props.tag && props.tag !== true) || props.tag === false ? props.tag : 'span';
    return tag ? h(tag, data, children) : children
  }
};

function onlyHasDefaultPlace (params) {
  var prop;
  for (prop in params) {
    if (prop !== 'default') { return false }
  }
  return Boolean(prop)
}

function useLegacyPlaces (children, places) {
  var params = places ? createParamsFromPlaces(places) : {};

  if (!children) { return params }

  // Filter empty text nodes
  children = children.filter(function (child) {
    return child.tag || child.text.trim() !== ''
  });

  var everyPlace = children.every(vnodeHasPlaceAttribute);
  if (false) {}

  return children.reduce(
    everyPlace ? assignChildPlace : assignChildIndex,
    params
  )
}

function createParamsFromPlaces (places) {
  if (false) {}

  return Array.isArray(places)
    ? places.reduce(assignChildIndex, {})
    : Object.assign({}, places)
}

function assignChildPlace (params, child) {
  if (child.data && child.data.attrs && child.data.attrs.place) {
    params[child.data.attrs.place] = child;
  }
  return params
}

function assignChildIndex (params, child, index) {
  params[index] = child;
  return params
}

function vnodeHasPlaceAttribute (vnode) {
  return Boolean(vnode.data && vnode.data.attrs && vnode.data.attrs.place)
}

/*  */

var numberComponent = {
  name: 'i18n-n',
  functional: true,
  props: {
    tag: {
      type: [String, Boolean, Object],
      default: 'span'
    },
    value: {
      type: Number,
      required: true
    },
    format: {
      type: [String, Object]
    },
    locale: {
      type: String
    }
  },
  render: function render (h, ref) {
    var props = ref.props;
    var parent = ref.parent;
    var data = ref.data;

    var i18n = parent.$i18n;

    if (!i18n) {
      if (false) {}
      return null
    }

    var key = null;
    var options = null;

    if (isString(props.format)) {
      key = props.format;
    } else if (isObject(props.format)) {
      if (props.format.key) {
        key = props.format.key;
      }

      // Filter out number format options only
      options = Object.keys(props.format).reduce(function (acc, prop) {
        var obj;

        if (includes(numberFormatKeys, prop)) {
          return Object.assign({}, acc, ( obj = {}, obj[prop] = props.format[prop], obj ))
        }
        return acc
      }, null);
    }

    var locale = props.locale || i18n.locale;
    var parts = i18n._ntp(props.value, locale, key, options);

    var values = parts.map(function (part, index) {
      var obj;

      var slot = data.scopedSlots && data.scopedSlots[part.type];
      return slot ? slot(( obj = {}, obj[part.type] = part.value, obj.index = index, obj.parts = parts, obj )) : part.value
    });

    var tag = (!!props.tag && props.tag !== true) || props.tag === false ? props.tag : 'span';
    return tag
      ? h(tag, {
        attrs: data.attrs,
        'class': data['class'],
        staticClass: data.staticClass
      }, values)
      : values
  }
};

/*  */

function bind (el, binding, vnode) {
  if (!assert(el, vnode)) { return }

  t(el, binding, vnode);
}

function update (el, binding, vnode, oldVNode) {
  if (!assert(el, vnode)) { return }

  var i18n = vnode.context.$i18n;
  if (localeEqual(el, vnode) &&
    (looseEqual(binding.value, binding.oldValue) &&
     looseEqual(el._localeMessage, i18n.getLocaleMessage(i18n.locale)))) { return }

  t(el, binding, vnode);
}

function unbind (el, binding, vnode, oldVNode) {
  var vm = vnode.context;
  if (!vm) {
    warn('Vue instance does not exists in VNode context');
    return
  }

  var i18n = vnode.context.$i18n || {};
  if (!binding.modifiers.preserve && !i18n.preserveDirectiveContent) {
    el.textContent = '';
  }
  el._vt = undefined;
  delete el['_vt'];
  el._locale = undefined;
  delete el['_locale'];
  el._localeMessage = undefined;
  delete el['_localeMessage'];
}

function assert (el, vnode) {
  var vm = vnode.context;
  if (!vm) {
    warn('Vue instance does not exists in VNode context');
    return false
  }

  if (!vm.$i18n) {
    warn('VueI18n instance does not exists in Vue instance');
    return false
  }

  return true
}

function localeEqual (el, vnode) {
  var vm = vnode.context;
  return el._locale === vm.$i18n.locale
}

function t (el, binding, vnode) {
  var ref$1, ref$2;

  var value = binding.value;

  var ref = parseValue(value);
  var path = ref.path;
  var locale = ref.locale;
  var args = ref.args;
  var choice = ref.choice;
  if (!path && !locale && !args) {
    warn('value type not supported');
    return
  }

  if (!path) {
    warn('`path` is required in v-t directive');
    return
  }

  var vm = vnode.context;
  if (choice != null) {
    el._vt = el.textContent = (ref$1 = vm.$i18n).tc.apply(ref$1, [ path, choice ].concat( makeParams(locale, args) ));
  } else {
    el._vt = el.textContent = (ref$2 = vm.$i18n).t.apply(ref$2, [ path ].concat( makeParams(locale, args) ));
  }
  el._locale = vm.$i18n.locale;
  el._localeMessage = vm.$i18n.getLocaleMessage(vm.$i18n.locale);
}

function parseValue (value) {
  var path;
  var locale;
  var args;
  var choice;

  if (isString(value)) {
    path = value;
  } else if (isPlainObject(value)) {
    path = value.path;
    locale = value.locale;
    args = value.args;
    choice = value.choice;
  }

  return { path: path, locale: locale, args: args, choice: choice }
}

function makeParams (locale, args) {
  var params = [];

  locale && params.push(locale);
  if (args && (Array.isArray(args) || isPlainObject(args))) {
    params.push(args);
  }

  return params
}

var Vue;

function install (_Vue) {
  /* istanbul ignore if */
  if (false) {}
  install.installed = true;

  Vue = _Vue;

  var version = (Vue.version && Number(Vue.version.split('.')[0])) || -1;
  /* istanbul ignore if */
  if (false) {}

  extend(Vue);
  Vue.mixin(mixin);
  Vue.directive('t', { bind: bind, update: update, unbind: unbind });
  Vue.component(interpolationComponent.name, interpolationComponent);
  Vue.component(numberComponent.name, numberComponent);

  // use simple mergeStrategies to prevent i18n instance lose '__proto__'
  var strats = Vue.config.optionMergeStrategies;
  strats.i18n = function (parentVal, childVal) {
    return childVal === undefined
      ? parentVal
      : childVal
  };
}

/*  */

var BaseFormatter = function BaseFormatter () {
  this._caches = Object.create(null);
};

BaseFormatter.prototype.interpolate = function interpolate (message, values) {
  if (!values) {
    return [message]
  }
  var tokens = this._caches[message];
  if (!tokens) {
    tokens = parse(message);
    this._caches[message] = tokens;
  }
  return compile(tokens, values)
};



var RE_TOKEN_LIST_VALUE = /^(?:\d)+/;
var RE_TOKEN_NAMED_VALUE = /^(?:\w)+/;

function parse (format) {
  var tokens = [];
  var position = 0;

  var text = '';
  while (position < format.length) {
    var char = format[position++];
    if (char === '{') {
      if (text) {
        tokens.push({ type: 'text', value: text });
      }

      text = '';
      var sub = '';
      char = format[position++];
      while (char !== undefined && char !== '}') {
        sub += char;
        char = format[position++];
      }
      var isClosed = char === '}';

      var type = RE_TOKEN_LIST_VALUE.test(sub)
        ? 'list'
        : isClosed && RE_TOKEN_NAMED_VALUE.test(sub)
          ? 'named'
          : 'unknown';
      tokens.push({ value: sub, type: type });
    } else if (char === '%') {
      // when found rails i18n syntax, skip text capture
      if (format[(position)] !== '{') {
        text += char;
      }
    } else {
      text += char;
    }
  }

  text && tokens.push({ type: 'text', value: text });

  return tokens
}

function compile (tokens, values) {
  var compiled = [];
  var index = 0;

  var mode = Array.isArray(values)
    ? 'list'
    : isObject(values)
      ? 'named'
      : 'unknown';
  if (mode === 'unknown') { return compiled }

  while (index < tokens.length) {
    var token = tokens[index];
    switch (token.type) {
      case 'text':
        compiled.push(token.value);
        break
      case 'list':
        compiled.push(values[parseInt(token.value, 10)]);
        break
      case 'named':
        if (mode === 'named') {
          compiled.push((values)[token.value]);
        } else {
          if (false) {}
        }
        break
      case 'unknown':
        if (false) {}
        break
    }
    index++;
  }

  return compiled
}

/*  */

/**
 *  Path parser
 *  - Inspired:
 *    Vue.js Path parser
 */

// actions
var APPEND = 0;
var PUSH = 1;
var INC_SUB_PATH_DEPTH = 2;
var PUSH_SUB_PATH = 3;

// states
var BEFORE_PATH = 0;
var IN_PATH = 1;
var BEFORE_IDENT = 2;
var IN_IDENT = 3;
var IN_SUB_PATH = 4;
var IN_SINGLE_QUOTE = 5;
var IN_DOUBLE_QUOTE = 6;
var AFTER_PATH = 7;
var ERROR = 8;

var pathStateMachine = [];

pathStateMachine[BEFORE_PATH] = {
  'ws': [BEFORE_PATH],
  'ident': [IN_IDENT, APPEND],
  '[': [IN_SUB_PATH],
  'eof': [AFTER_PATH]
};

pathStateMachine[IN_PATH] = {
  'ws': [IN_PATH],
  '.': [BEFORE_IDENT],
  '[': [IN_SUB_PATH],
  'eof': [AFTER_PATH]
};

pathStateMachine[BEFORE_IDENT] = {
  'ws': [BEFORE_IDENT],
  'ident': [IN_IDENT, APPEND],
  '0': [IN_IDENT, APPEND],
  'number': [IN_IDENT, APPEND]
};

pathStateMachine[IN_IDENT] = {
  'ident': [IN_IDENT, APPEND],
  '0': [IN_IDENT, APPEND],
  'number': [IN_IDENT, APPEND],
  'ws': [IN_PATH, PUSH],
  '.': [BEFORE_IDENT, PUSH],
  '[': [IN_SUB_PATH, PUSH],
  'eof': [AFTER_PATH, PUSH]
};

pathStateMachine[IN_SUB_PATH] = {
  "'": [IN_SINGLE_QUOTE, APPEND],
  '"': [IN_DOUBLE_QUOTE, APPEND],
  '[': [IN_SUB_PATH, INC_SUB_PATH_DEPTH],
  ']': [IN_PATH, PUSH_SUB_PATH],
  'eof': ERROR,
  'else': [IN_SUB_PATH, APPEND]
};

pathStateMachine[IN_SINGLE_QUOTE] = {
  "'": [IN_SUB_PATH, APPEND],
  'eof': ERROR,
  'else': [IN_SINGLE_QUOTE, APPEND]
};

pathStateMachine[IN_DOUBLE_QUOTE] = {
  '"': [IN_SUB_PATH, APPEND],
  'eof': ERROR,
  'else': [IN_DOUBLE_QUOTE, APPEND]
};

/**
 * Check if an expression is a literal value.
 */

var literalValueRE = /^\s?(?:true|false|-?[\d.]+|'[^']*'|"[^"]*")\s?$/;
function isLiteral (exp) {
  return literalValueRE.test(exp)
}

/**
 * Strip quotes from a string
 */

function stripQuotes (str) {
  var a = str.charCodeAt(0);
  var b = str.charCodeAt(str.length - 1);
  return a === b && (a === 0x22 || a === 0x27)
    ? str.slice(1, -1)
    : str
}

/**
 * Determine the type of a character in a keypath.
 */

function getPathCharType (ch) {
  if (ch === undefined || ch === null) { return 'eof' }

  var code = ch.charCodeAt(0);

  switch (code) {
    case 0x5B: // [
    case 0x5D: // ]
    case 0x2E: // .
    case 0x22: // "
    case 0x27: // '
      return ch

    case 0x5F: // _
    case 0x24: // $
    case 0x2D: // -
      return 'ident'

    case 0x09: // Tab
    case 0x0A: // Newline
    case 0x0D: // Return
    case 0xA0:  // No-break space
    case 0xFEFF:  // Byte Order Mark
    case 0x2028:  // Line Separator
    case 0x2029:  // Paragraph Separator
      return 'ws'
  }

  return 'ident'
}

/**
 * Format a subPath, return its plain form if it is
 * a literal string or number. Otherwise prepend the
 * dynamic indicator (*).
 */

function formatSubPath (path) {
  var trimmed = path.trim();
  // invalid leading 0
  if (path.charAt(0) === '0' && isNaN(path)) { return false }

  return isLiteral(trimmed) ? stripQuotes(trimmed) : '*' + trimmed
}

/**
 * Parse a string path into an array of segments
 */

function parse$1 (path) {
  var keys = [];
  var index = -1;
  var mode = BEFORE_PATH;
  var subPathDepth = 0;
  var c;
  var key;
  var newChar;
  var type;
  var transition;
  var action;
  var typeMap;
  var actions = [];

  actions[PUSH] = function () {
    if (key !== undefined) {
      keys.push(key);
      key = undefined;
    }
  };

  actions[APPEND] = function () {
    if (key === undefined) {
      key = newChar;
    } else {
      key += newChar;
    }
  };

  actions[INC_SUB_PATH_DEPTH] = function () {
    actions[APPEND]();
    subPathDepth++;
  };

  actions[PUSH_SUB_PATH] = function () {
    if (subPathDepth > 0) {
      subPathDepth--;
      mode = IN_SUB_PATH;
      actions[APPEND]();
    } else {
      subPathDepth = 0;
      if (key === undefined) { return false }
      key = formatSubPath(key);
      if (key === false) {
        return false
      } else {
        actions[PUSH]();
      }
    }
  };

  function maybeUnescapeQuote () {
    var nextChar = path[index + 1];
    if ((mode === IN_SINGLE_QUOTE && nextChar === "'") ||
      (mode === IN_DOUBLE_QUOTE && nextChar === '"')) {
      index++;
      newChar = '\\' + nextChar;
      actions[APPEND]();
      return true
    }
  }

  while (mode !== null) {
    index++;
    c = path[index];

    if (c === '\\' && maybeUnescapeQuote()) {
      continue
    }

    type = getPathCharType(c);
    typeMap = pathStateMachine[mode];
    transition = typeMap[type] || typeMap['else'] || ERROR;

    if (transition === ERROR) {
      return // parse error
    }

    mode = transition[0];
    action = actions[transition[1]];
    if (action) {
      newChar = transition[2];
      newChar = newChar === undefined
        ? c
        : newChar;
      if (action() === false) {
        return
      }
    }

    if (mode === AFTER_PATH) {
      return keys
    }
  }
}





var I18nPath = function I18nPath () {
  this._cache = Object.create(null);
};

/**
 * External parse that check for a cache hit first
 */
I18nPath.prototype.parsePath = function parsePath (path) {
  var hit = this._cache[path];
  if (!hit) {
    hit = parse$1(path);
    if (hit) {
      this._cache[path] = hit;
    }
  }
  return hit || []
};

/**
 * Get path value from path string
 */
I18nPath.prototype.getPathValue = function getPathValue (obj, path) {
  if (!isObject(obj)) { return null }

  var paths = this.parsePath(path);
  if (paths.length === 0) {
    return null
  } else {
    var length = paths.length;
    var last = obj;
    var i = 0;
    while (i < length) {
      var value = last[paths[i]];
      if (value === undefined) {
        return null
      }
      last = value;
      i++;
    }

    return last
  }
};

/*  */



var htmlTagMatcher = /<\/?[\w\s="/.':;#-\/]+>/;
var linkKeyMatcher = /(?:@(?:\.[a-z]+)?:(?:[\w\-_|.]+|\([\w\-_|.]+\)))/g;
var linkKeyPrefixMatcher = /^@(?:\.([a-z]+))?:/;
var bracketsMatcher = /[()]/g;
var defaultModifiers = {
  'upper': function (str) { return str.toLocaleUpperCase(); },
  'lower': function (str) { return str.toLocaleLowerCase(); },
  'capitalize': function (str) { return ("" + (str.charAt(0).toLocaleUpperCase()) + (str.substr(1))); }
};

var defaultFormatter = new BaseFormatter();

var VueI18n = function VueI18n (options) {
  var this$1 = this;
  if ( options === void 0 ) options = {};

  // Auto install if it is not done yet and `window` has `Vue`.
  // To allow users to avoid auto-installation in some cases,
  // this code should be placed here. See #290
  /* istanbul ignore if */
  if (!Vue && typeof window !== 'undefined' && window.Vue) {
    install(window.Vue);
  }

  var locale = options.locale || 'en-US';
  var fallbackLocale = options.fallbackLocale === false
    ? false
    : options.fallbackLocale || 'en-US';
  var messages = options.messages || {};
  var dateTimeFormats = options.dateTimeFormats || {};
  var numberFormats = options.numberFormats || {};

  this._vm = null;
  this._formatter = options.formatter || defaultFormatter;
  this._modifiers = options.modifiers || {};
  this._missing = options.missing || null;
  this._root = options.root || null;
  this._sync = options.sync === undefined ? true : !!options.sync;
  this._fallbackRoot = options.fallbackRoot === undefined
    ? true
    : !!options.fallbackRoot;
  this._formatFallbackMessages = options.formatFallbackMessages === undefined
    ? false
    : !!options.formatFallbackMessages;
  this._silentTranslationWarn = options.silentTranslationWarn === undefined
    ? false
    : options.silentTranslationWarn;
  this._silentFallbackWarn = options.silentFallbackWarn === undefined
    ? false
    : !!options.silentFallbackWarn;
  this._dateTimeFormatters = {};
  this._numberFormatters = {};
  this._path = new I18nPath();
  this._dataListeners = [];
  this._componentInstanceCreatedListener = options.componentInstanceCreatedListener || null;
  this._preserveDirectiveContent = options.preserveDirectiveContent === undefined
    ? false
    : !!options.preserveDirectiveContent;
  this.pluralizationRules = options.pluralizationRules || {};
  this._warnHtmlInMessage = options.warnHtmlInMessage || 'off';
  this._postTranslation = options.postTranslation || null;
  this._escapeParameterHtml = options.escapeParameterHtml || false;

  /**
   * @param choice {number} a choice index given by the input to $tc: `$tc('path.to.rule', choiceIndex)`
   * @param choicesLength {number} an overall amount of available choices
   * @returns a final choice index
  */
  this.getChoiceIndex = function (choice, choicesLength) {
    var thisPrototype = Object.getPrototypeOf(this$1);
    if (thisPrototype && thisPrototype.getChoiceIndex) {
      var prototypeGetChoiceIndex = (thisPrototype.getChoiceIndex);
      return (prototypeGetChoiceIndex).call(this$1, choice, choicesLength)
    }

    // Default (old) getChoiceIndex implementation - english-compatible
    var defaultImpl = function (_choice, _choicesLength) {
      _choice = Math.abs(_choice);

      if (_choicesLength === 2) {
        return _choice
          ? _choice > 1
            ? 1
            : 0
          : 1
      }

      return _choice ? Math.min(_choice, 2) : 0
    };

    if (this$1.locale in this$1.pluralizationRules) {
      return this$1.pluralizationRules[this$1.locale].apply(this$1, [choice, choicesLength])
    } else {
      return defaultImpl(choice, choicesLength)
    }
  };


  this._exist = function (message, key) {
    if (!message || !key) { return false }
    if (!isNull(this$1._path.getPathValue(message, key))) { return true }
    // fallback for flat key
    if (message[key]) { return true }
    return false
  };

  if (this._warnHtmlInMessage === 'warn' || this._warnHtmlInMessage === 'error') {
    Object.keys(messages).forEach(function (locale) {
      this$1._checkLocaleMessage(locale, this$1._warnHtmlInMessage, messages[locale]);
    });
  }

  this._initVM({
    locale: locale,
    fallbackLocale: fallbackLocale,
    messages: messages,
    dateTimeFormats: dateTimeFormats,
    numberFormats: numberFormats
  });
};

var prototypeAccessors = { vm: { configurable: true },messages: { configurable: true },dateTimeFormats: { configurable: true },numberFormats: { configurable: true },availableLocales: { configurable: true },locale: { configurable: true },fallbackLocale: { configurable: true },formatFallbackMessages: { configurable: true },missing: { configurable: true },formatter: { configurable: true },silentTranslationWarn: { configurable: true },silentFallbackWarn: { configurable: true },preserveDirectiveContent: { configurable: true },warnHtmlInMessage: { configurable: true },postTranslation: { configurable: true } };

VueI18n.prototype._checkLocaleMessage = function _checkLocaleMessage (locale, level, message) {
  var paths = [];

  var fn = function (level, locale, message, paths) {
    if (isPlainObject(message)) {
      Object.keys(message).forEach(function (key) {
        var val = message[key];
        if (isPlainObject(val)) {
          paths.push(key);
          paths.push('.');
          fn(level, locale, val, paths);
          paths.pop();
          paths.pop();
        } else {
          paths.push(key);
          fn(level, locale, val, paths);
          paths.pop();
        }
      });
    } else if (isArray(message)) {
      message.forEach(function (item, index) {
        if (isPlainObject(item)) {
          paths.push(("[" + index + "]"));
          paths.push('.');
          fn(level, locale, item, paths);
          paths.pop();
          paths.pop();
        } else {
          paths.push(("[" + index + "]"));
          fn(level, locale, item, paths);
          paths.pop();
        }
      });
    } else if (isString(message)) {
      var ret = htmlTagMatcher.test(message);
      if (ret) {
        var msg = "Detected HTML in message '" + message + "' of keypath '" + (paths.join('')) + "' at '" + locale + "'. Consider component interpolation with '<i18n>' to avoid XSS. See https://bit.ly/2ZqJzkp";
        if (level === 'warn') {
          warn(msg);
        } else if (level === 'error') {
          error(msg);
        }
      }
    }
  };

  fn(level, locale, message, paths);
};

VueI18n.prototype._initVM = function _initVM (data) {
  var silent = Vue.config.silent;
  Vue.config.silent = true;
  this._vm = new Vue({ data: data });
  Vue.config.silent = silent;
};

VueI18n.prototype.destroyVM = function destroyVM () {
  this._vm.$destroy();
};

VueI18n.prototype.subscribeDataChanging = function subscribeDataChanging (vm) {
  this._dataListeners.push(vm);
};

VueI18n.prototype.unsubscribeDataChanging = function unsubscribeDataChanging (vm) {
  remove(this._dataListeners, vm);
};

VueI18n.prototype.watchI18nData = function watchI18nData () {
  var self = this;
  return this._vm.$watch('$data', function () {
    var i = self._dataListeners.length;
    while (i--) {
      Vue.nextTick(function () {
        self._dataListeners[i] && self._dataListeners[i].$forceUpdate();
      });
    }
  }, { deep: true })
};

VueI18n.prototype.watchLocale = function watchLocale () {
  /* istanbul ignore if */
  if (!this._sync || !this._root) { return null }
  var target = this._vm;
  return this._root.$i18n.vm.$watch('locale', function (val) {
    target.$set(target, 'locale', val);
    target.$forceUpdate();
  }, { immediate: true })
};

VueI18n.prototype.onComponentInstanceCreated = function onComponentInstanceCreated (newI18n) {
  if (this._componentInstanceCreatedListener) {
    this._componentInstanceCreatedListener(newI18n, this);
  }
};

prototypeAccessors.vm.get = function () { return this._vm };

prototypeAccessors.messages.get = function () { return looseClone(this._getMessages()) };
prototypeAccessors.dateTimeFormats.get = function () { return looseClone(this._getDateTimeFormats()) };
prototypeAccessors.numberFormats.get = function () { return looseClone(this._getNumberFormats()) };
prototypeAccessors.availableLocales.get = function () { return Object.keys(this.messages).sort() };

prototypeAccessors.locale.get = function () { return this._vm.locale };
prototypeAccessors.locale.set = function (locale) {
  this._vm.$set(this._vm, 'locale', locale);
};

prototypeAccessors.fallbackLocale.get = function () { return this._vm.fallbackLocale };
prototypeAccessors.fallbackLocale.set = function (locale) {
  this._localeChainCache = {};
  this._vm.$set(this._vm, 'fallbackLocale', locale);
};

prototypeAccessors.formatFallbackMessages.get = function () { return this._formatFallbackMessages };
prototypeAccessors.formatFallbackMessages.set = function (fallback) { this._formatFallbackMessages = fallback; };

prototypeAccessors.missing.get = function () { return this._missing };
prototypeAccessors.missing.set = function (handler) { this._missing = handler; };

prototypeAccessors.formatter.get = function () { return this._formatter };
prototypeAccessors.formatter.set = function (formatter) { this._formatter = formatter; };

prototypeAccessors.silentTranslationWarn.get = function () { return this._silentTranslationWarn };
prototypeAccessors.silentTranslationWarn.set = function (silent) { this._silentTranslationWarn = silent; };

prototypeAccessors.silentFallbackWarn.get = function () { return this._silentFallbackWarn };
prototypeAccessors.silentFallbackWarn.set = function (silent) { this._silentFallbackWarn = silent; };

prototypeAccessors.preserveDirectiveContent.get = function () { return this._preserveDirectiveContent };
prototypeAccessors.preserveDirectiveContent.set = function (preserve) { this._preserveDirectiveContent = preserve; };

prototypeAccessors.warnHtmlInMessage.get = function () { return this._warnHtmlInMessage };
prototypeAccessors.warnHtmlInMessage.set = function (level) {
    var this$1 = this;

  var orgLevel = this._warnHtmlInMessage;
  this._warnHtmlInMessage = level;
  if (orgLevel !== level && (level === 'warn' || level === 'error')) {
    var messages = this._getMessages();
    Object.keys(messages).forEach(function (locale) {
      this$1._checkLocaleMessage(locale, this$1._warnHtmlInMessage, messages[locale]);
    });
  }
};

prototypeAccessors.postTranslation.get = function () { return this._postTranslation };
prototypeAccessors.postTranslation.set = function (handler) { this._postTranslation = handler; };

VueI18n.prototype._getMessages = function _getMessages () { return this._vm.messages };
VueI18n.prototype._getDateTimeFormats = function _getDateTimeFormats () { return this._vm.dateTimeFormats };
VueI18n.prototype._getNumberFormats = function _getNumberFormats () { return this._vm.numberFormats };

VueI18n.prototype._warnDefault = function _warnDefault (locale, key, result, vm, values, interpolateMode) {
  if (!isNull(result)) { return result }
  if (this._missing) {
    var missingRet = this._missing.apply(null, [locale, key, vm, values]);
    if (isString(missingRet)) {
      return missingRet
    }
  } else {
    if (false) {}
  }

  if (this._formatFallbackMessages) {
    var parsedArgs = parseArgs.apply(void 0, values);
    return this._render(key, interpolateMode, parsedArgs.params, key)
  } else {
    return key
  }
};

VueI18n.prototype._isFallbackRoot = function _isFallbackRoot (val) {
  return !val && !isNull(this._root) && this._fallbackRoot
};

VueI18n.prototype._isSilentFallbackWarn = function _isSilentFallbackWarn (key) {
  return this._silentFallbackWarn instanceof RegExp
    ? this._silentFallbackWarn.test(key)
    : this._silentFallbackWarn
};

VueI18n.prototype._isSilentFallback = function _isSilentFallback (locale, key) {
  return this._isSilentFallbackWarn(key) && (this._isFallbackRoot() || locale !== this.fallbackLocale)
};

VueI18n.prototype._isSilentTranslationWarn = function _isSilentTranslationWarn (key) {
  return this._silentTranslationWarn instanceof RegExp
    ? this._silentTranslationWarn.test(key)
    : this._silentTranslationWarn
};

VueI18n.prototype._interpolate = function _interpolate (
  locale,
  message,
  key,
  host,
  interpolateMode,
  values,
  visitedLinkStack
) {
  if (!message) { return null }

  var pathRet = this._path.getPathValue(message, key);
  if (isArray(pathRet) || isPlainObject(pathRet)) { return pathRet }

  var ret;
  if (isNull(pathRet)) {
    /* istanbul ignore else */
    if (isPlainObject(message)) {
      ret = message[key];
      if (!(isString(ret) || isFunction(ret))) {
        if (false) {}
        return null
      }
    } else {
      return null
    }
  } else {
    /* istanbul ignore else */
    if (isString(pathRet) || isFunction(pathRet)) {
      ret = pathRet;
    } else {
      if (false) {}
      return null
    }
  }

  // Check for the existence of links within the translated string
  if (isString(ret) && (ret.indexOf('@:') >= 0 || ret.indexOf('@.') >= 0)) {
    ret = this._link(locale, message, ret, host, 'raw', values, visitedLinkStack);
  }

  return this._render(ret, interpolateMode, values, key)
};

VueI18n.prototype._link = function _link (
  locale,
  message,
  str,
  host,
  interpolateMode,
  values,
  visitedLinkStack
) {
  var ret = str;

  // Match all the links within the local
  // We are going to replace each of
  // them with its translation
  var matches = ret.match(linkKeyMatcher);
  for (var idx in matches) {
    // ie compatible: filter custom array
    // prototype method
    if (!matches.hasOwnProperty(idx)) {
      continue
    }
    var link = matches[idx];
    var linkKeyPrefixMatches = link.match(linkKeyPrefixMatcher);
    var linkPrefix = linkKeyPrefixMatches[0];
      var formatterName = linkKeyPrefixMatches[1];

    // Remove the leading @:, @.case: and the brackets
    var linkPlaceholder = link.replace(linkPrefix, '').replace(bracketsMatcher, '');

    if (includes(visitedLinkStack, linkPlaceholder)) {
      if (false) {}
      return ret
    }
    visitedLinkStack.push(linkPlaceholder);

    // Translate the link
    var translated = this._interpolate(
      locale, message, linkPlaceholder, host,
      interpolateMode === 'raw' ? 'string' : interpolateMode,
      interpolateMode === 'raw' ? undefined : values,
      visitedLinkStack
    );

    if (this._isFallbackRoot(translated)) {
      if (false) {}
      /* istanbul ignore if */
      if (!this._root) { throw Error('unexpected error') }
      var root = this._root.$i18n;
      translated = root._translate(
        root._getMessages(), root.locale, root.fallbackLocale,
        linkPlaceholder, host, interpolateMode, values
      );
    }
    translated = this._warnDefault(
      locale, linkPlaceholder, translated, host,
      isArray(values) ? values : [values],
      interpolateMode
    );

    if (this._modifiers.hasOwnProperty(formatterName)) {
      translated = this._modifiers[formatterName](translated);
    } else if (defaultModifiers.hasOwnProperty(formatterName)) {
      translated = defaultModifiers[formatterName](translated);
    }

    visitedLinkStack.pop();

    // Replace the link with the translated
    ret = !translated ? ret : ret.replace(link, translated);
  }

  return ret
};

VueI18n.prototype._createMessageContext = function _createMessageContext (values) {
  var _list = isArray(values) ? values : [];
  var _named = isObject(values) ? values : {};
  var list = function (index) { return _list[index]; };
  var named = function (key) { return _named[key]; };
  return {
    list: list,
    named: named
  }
};

VueI18n.prototype._render = function _render (message, interpolateMode, values, path) {
  if (isFunction(message)) {
    return message(this._createMessageContext(values))
  }

  var ret = this._formatter.interpolate(message, values, path);

  // If the custom formatter refuses to work - apply the default one
  if (!ret) {
    ret = defaultFormatter.interpolate(message, values, path);
  }

  // if interpolateMode is **not** 'string' ('row'),
  // return the compiled data (e.g. ['foo', VNode, 'bar']) with formatter
  return interpolateMode === 'string' && !isString(ret) ? ret.join('') : ret
};

VueI18n.prototype._appendItemToChain = function _appendItemToChain (chain, item, blocks) {
  var follow = false;
  if (!includes(chain, item)) {
    follow = true;
    if (item) {
      follow = item[item.length - 1] !== '!';
      item = item.replace(/!/g, '');
      chain.push(item);
      if (blocks && blocks[item]) {
        follow = blocks[item];
      }
    }
  }
  return follow
};

VueI18n.prototype._appendLocaleToChain = function _appendLocaleToChain (chain, locale, blocks) {
  var follow;
  var tokens = locale.split('-');
  do {
    var item = tokens.join('-');
    follow = this._appendItemToChain(chain, item, blocks);
    tokens.splice(-1, 1);
  } while (tokens.length && (follow === true))
  return follow
};

VueI18n.prototype._appendBlockToChain = function _appendBlockToChain (chain, block, blocks) {
  var follow = true;
  for (var i = 0; (i < block.length) && (vue_i18n_esm_isBoolean(follow)); i++) {
    var locale = block[i];
    if (isString(locale)) {
      follow = this._appendLocaleToChain(chain, locale, blocks);
    }
  }
  return follow
};

VueI18n.prototype._getLocaleChain = function _getLocaleChain (start, fallbackLocale) {
  if (start === '') { return [] }

  if (!this._localeChainCache) {
    this._localeChainCache = {};
  }

  var chain = this._localeChainCache[start];
  if (!chain) {
    if (!fallbackLocale) {
      fallbackLocale = this.fallbackLocale;
    }
    chain = [];

    // first block defined by start
    var block = [start];

    // while any intervening block found
    while (isArray(block)) {
      block = this._appendBlockToChain(
        chain,
        block,
        fallbackLocale
      );
    }

    // last block defined by default
    var defaults;
    if (isArray(fallbackLocale)) {
      defaults = fallbackLocale;
    } else if (isObject(fallbackLocale)) {
      /* $FlowFixMe */
      if (fallbackLocale['default']) {
        defaults = fallbackLocale['default'];
      } else {
        defaults = null;
      }
    } else {
      defaults = fallbackLocale;
    }

    // convert defaults to array
    if (isString(defaults)) {
      block = [defaults];
    } else {
      block = defaults;
    }
    if (block) {
      this._appendBlockToChain(
        chain,
        block,
        null
      );
    }
    this._localeChainCache[start] = chain;
  }
  return chain
};

VueI18n.prototype._translate = function _translate (
  messages,
  locale,
  fallback,
  key,
  host,
  interpolateMode,
  args
) {
  var chain = this._getLocaleChain(locale, fallback);
  var res;
  for (var i = 0; i < chain.length; i++) {
    var step = chain[i];
    res =
      this._interpolate(step, messages[step], key, host, interpolateMode, args, [key]);
    if (!isNull(res)) {
      if (step !== locale && "production" !== 'production' && !this._isSilentTranslationWarn(key) && !this._isSilentFallbackWarn(key)) {
        warn(("Fall back to translate the keypath '" + key + "' with '" + step + "' locale."));
      }
      return res
    }
  }
  return null
};

VueI18n.prototype._t = function _t (key, _locale, messages, host) {
    var ref;

    var values = [], len = arguments.length - 4;
    while ( len-- > 0 ) values[ len ] = arguments[ len + 4 ];
  if (!key) { return '' }

  var parsedArgs = parseArgs.apply(void 0, values);
  if(this._escapeParameterHtml) {
    parsedArgs.params = escapeParams(parsedArgs.params);
  }

  var locale = parsedArgs.locale || _locale;

  var ret = this._translate(
    messages, locale, this.fallbackLocale, key,
    host, 'string', parsedArgs.params
  );
  if (this._isFallbackRoot(ret)) {
    if (false) {}
    /* istanbul ignore if */
    if (!this._root) { throw Error('unexpected error') }
    return (ref = this._root).$t.apply(ref, [ key ].concat( values ))
  } else {
    ret = this._warnDefault(locale, key, ret, host, values, 'string');
    if (this._postTranslation && ret !== null && ret !== undefined) {
      ret = this._postTranslation(ret, key);
    }
    return ret
  }
};

VueI18n.prototype.t = function t (key) {
    var ref;

    var values = [], len = arguments.length - 1;
    while ( len-- > 0 ) values[ len ] = arguments[ len + 1 ];
  return (ref = this)._t.apply(ref, [ key, this.locale, this._getMessages(), null ].concat( values ))
};

VueI18n.prototype._i = function _i (key, locale, messages, host, values) {
  var ret =
    this._translate(messages, locale, this.fallbackLocale, key, host, 'raw', values);
  if (this._isFallbackRoot(ret)) {
    if (false) {}
    if (!this._root) { throw Error('unexpected error') }
    return this._root.$i18n.i(key, locale, values)
  } else {
    return this._warnDefault(locale, key, ret, host, [values], 'raw')
  }
};

VueI18n.prototype.i = function i (key, locale, values) {
  /* istanbul ignore if */
  if (!key) { return '' }

  if (!isString(locale)) {
    locale = this.locale;
  }

  return this._i(key, locale, this._getMessages(), null, values)
};

VueI18n.prototype._tc = function _tc (
  key,
  _locale,
  messages,
  host,
  choice
) {
    var ref;

    var values = [], len = arguments.length - 5;
    while ( len-- > 0 ) values[ len ] = arguments[ len + 5 ];
  if (!key) { return '' }
  if (choice === undefined) {
    choice = 1;
  }

  var predefined = { 'count': choice, 'n': choice };
  var parsedArgs = parseArgs.apply(void 0, values);
  parsedArgs.params = Object.assign(predefined, parsedArgs.params);
  values = parsedArgs.locale === null ? [parsedArgs.params] : [parsedArgs.locale, parsedArgs.params];
  return this.fetchChoice((ref = this)._t.apply(ref, [ key, _locale, messages, host ].concat( values )), choice)
};

VueI18n.prototype.fetchChoice = function fetchChoice (message, choice) {
  /* istanbul ignore if */
  if (!message || !isString(message)) { return null }
  var choices = message.split('|');

  choice = this.getChoiceIndex(choice, choices.length);
  if (!choices[choice]) { return message }
  return choices[choice].trim()
};

VueI18n.prototype.tc = function tc (key, choice) {
    var ref;

    var values = [], len = arguments.length - 2;
    while ( len-- > 0 ) values[ len ] = arguments[ len + 2 ];
  return (ref = this)._tc.apply(ref, [ key, this.locale, this._getMessages(), null, choice ].concat( values ))
};

VueI18n.prototype._te = function _te (key, locale, messages) {
    var args = [], len = arguments.length - 3;
    while ( len-- > 0 ) args[ len ] = arguments[ len + 3 ];

  var _locale = parseArgs.apply(void 0, args).locale || locale;
  return this._exist(messages[_locale], key)
};

VueI18n.prototype.te = function te (key, locale) {
  return this._te(key, this.locale, this._getMessages(), locale)
};

VueI18n.prototype.getLocaleMessage = function getLocaleMessage (locale) {
  return looseClone(this._vm.messages[locale] || {})
};

VueI18n.prototype.setLocaleMessage = function setLocaleMessage (locale, message) {
  if (this._warnHtmlInMessage === 'warn' || this._warnHtmlInMessage === 'error') {
    this._checkLocaleMessage(locale, this._warnHtmlInMessage, message);
  }
  this._vm.$set(this._vm.messages, locale, message);
};

VueI18n.prototype.mergeLocaleMessage = function mergeLocaleMessage (locale, message) {
  if (this._warnHtmlInMessage === 'warn' || this._warnHtmlInMessage === 'error') {
    this._checkLocaleMessage(locale, this._warnHtmlInMessage, message);
  }
  this._vm.$set(this._vm.messages, locale, merge({}, this._vm.messages[locale] || {}, message));
};

VueI18n.prototype.getDateTimeFormat = function getDateTimeFormat (locale) {
  return looseClone(this._vm.dateTimeFormats[locale] || {})
};

VueI18n.prototype.setDateTimeFormat = function setDateTimeFormat (locale, format) {
  this._vm.$set(this._vm.dateTimeFormats, locale, format);
  this._clearDateTimeFormat(locale, format);
};

VueI18n.prototype.mergeDateTimeFormat = function mergeDateTimeFormat (locale, format) {
  this._vm.$set(this._vm.dateTimeFormats, locale, merge(this._vm.dateTimeFormats[locale] || {}, format));
  this._clearDateTimeFormat(locale, format);
};

VueI18n.prototype._clearDateTimeFormat = function _clearDateTimeFormat (locale, format) {
  for (var key in format) {
    var id = locale + "__" + key;

    if (!this._dateTimeFormatters.hasOwnProperty(id)) {
      continue
    }

    delete this._dateTimeFormatters[id];
  }
};

VueI18n.prototype._localizeDateTime = function _localizeDateTime (
  value,
  locale,
  fallback,
  dateTimeFormats,
  key
) {
  var _locale = locale;
  var formats = dateTimeFormats[_locale];

  var chain = this._getLocaleChain(locale, fallback);
  for (var i = 0; i < chain.length; i++) {
    var current = _locale;
    var step = chain[i];
    formats = dateTimeFormats[step];
    _locale = step;
    // fallback locale
    if (isNull(formats) || isNull(formats[key])) {
      if (step !== locale && "production" !== 'production' && !this._isSilentTranslationWarn(key) && !this._isSilentFallbackWarn(key)) {
        warn(("Fall back to '" + step + "' datetime formats from '" + current + "' datetime formats."));
      }
    } else {
      break
    }
  }

  if (isNull(formats) || isNull(formats[key])) {
    return null
  } else {
    var format = formats[key];
    var id = _locale + "__" + key;
    var formatter = this._dateTimeFormatters[id];
    if (!formatter) {
      formatter = this._dateTimeFormatters[id] = new Intl.DateTimeFormat(_locale, format);
    }
    return formatter.format(value)
  }
};

VueI18n.prototype._d = function _d (value, locale, key) {
  /* istanbul ignore if */
  if (false) {}

  if (!key) {
    return new Intl.DateTimeFormat(locale).format(value)
  }

  var ret =
    this._localizeDateTime(value, locale, this.fallbackLocale, this._getDateTimeFormats(), key);
  if (this._isFallbackRoot(ret)) {
    if (false) {}
    /* istanbul ignore if */
    if (!this._root) { throw Error('unexpected error') }
    return this._root.$i18n.d(value, key, locale)
  } else {
    return ret || ''
  }
};

VueI18n.prototype.d = function d (value) {
    var args = [], len = arguments.length - 1;
    while ( len-- > 0 ) args[ len ] = arguments[ len + 1 ];

  var locale = this.locale;
  var key = null;

  if (args.length === 1) {
    if (isString(args[0])) {
      key = args[0];
    } else if (isObject(args[0])) {
      if (args[0].locale) {
        locale = args[0].locale;
      }
      if (args[0].key) {
        key = args[0].key;
      }
    }
  } else if (args.length === 2) {
    if (isString(args[0])) {
      key = args[0];
    }
    if (isString(args[1])) {
      locale = args[1];
    }
  }

  return this._d(value, locale, key)
};

VueI18n.prototype.getNumberFormat = function getNumberFormat (locale) {
  return looseClone(this._vm.numberFormats[locale] || {})
};

VueI18n.prototype.setNumberFormat = function setNumberFormat (locale, format) {
  this._vm.$set(this._vm.numberFormats, locale, format);
  this._clearNumberFormat(locale, format);
};

VueI18n.prototype.mergeNumberFormat = function mergeNumberFormat (locale, format) {
  this._vm.$set(this._vm.numberFormats, locale, merge(this._vm.numberFormats[locale] || {}, format));
  this._clearNumberFormat(locale, format);
};

VueI18n.prototype._clearNumberFormat = function _clearNumberFormat (locale, format) {
  for (var key in format) {
    var id = locale + "__" + key;

    if (!this._numberFormatters.hasOwnProperty(id)) {
      continue
    }

    delete this._numberFormatters[id];
  }
};

VueI18n.prototype._getNumberFormatter = function _getNumberFormatter (
  value,
  locale,
  fallback,
  numberFormats,
  key,
  options
) {
  var _locale = locale;
  var formats = numberFormats[_locale];

  var chain = this._getLocaleChain(locale, fallback);
  for (var i = 0; i < chain.length; i++) {
    var current = _locale;
    var step = chain[i];
    formats = numberFormats[step];
    _locale = step;
    // fallback locale
    if (isNull(formats) || isNull(formats[key])) {
      if (step !== locale && "production" !== 'production' && !this._isSilentTranslationWarn(key) && !this._isSilentFallbackWarn(key)) {
        warn(("Fall back to '" + step + "' number formats from '" + current + "' number formats."));
      }
    } else {
      break
    }
  }

  if (isNull(formats) || isNull(formats[key])) {
    return null
  } else {
    var format = formats[key];

    var formatter;
    if (options) {
      // If options specified - create one time number formatter
      formatter = new Intl.NumberFormat(_locale, Object.assign({}, format, options));
    } else {
      var id = _locale + "__" + key;
      formatter = this._numberFormatters[id];
      if (!formatter) {
        formatter = this._numberFormatters[id] = new Intl.NumberFormat(_locale, format);
      }
    }
    return formatter
  }
};

VueI18n.prototype._n = function _n (value, locale, key, options) {
  /* istanbul ignore if */
  if (!VueI18n.availabilities.numberFormat) {
    if (false) {}
    return ''
  }

  if (!key) {
    var nf = !options ? new Intl.NumberFormat(locale) : new Intl.NumberFormat(locale, options);
    return nf.format(value)
  }

  var formatter = this._getNumberFormatter(value, locale, this.fallbackLocale, this._getNumberFormats(), key, options);
  var ret = formatter && formatter.format(value);
  if (this._isFallbackRoot(ret)) {
    if (false) {}
    /* istanbul ignore if */
    if (!this._root) { throw Error('unexpected error') }
    return this._root.$i18n.n(value, Object.assign({}, { key: key, locale: locale }, options))
  } else {
    return ret || ''
  }
};

VueI18n.prototype.n = function n (value) {
    var args = [], len = arguments.length - 1;
    while ( len-- > 0 ) args[ len ] = arguments[ len + 1 ];

  var locale = this.locale;
  var key = null;
  var options = null;

  if (args.length === 1) {
    if (isString(args[0])) {
      key = args[0];
    } else if (isObject(args[0])) {
      if (args[0].locale) {
        locale = args[0].locale;
      }
      if (args[0].key) {
        key = args[0].key;
      }

      // Filter out number format options only
      options = Object.keys(args[0]).reduce(function (acc, key) {
          var obj;

        if (includes(numberFormatKeys, key)) {
          return Object.assign({}, acc, ( obj = {}, obj[key] = args[0][key], obj ))
        }
        return acc
      }, null);
    }
  } else if (args.length === 2) {
    if (isString(args[0])) {
      key = args[0];
    }
    if (isString(args[1])) {
      locale = args[1];
    }
  }

  return this._n(value, locale, key, options)
};

VueI18n.prototype._ntp = function _ntp (value, locale, key, options) {
  /* istanbul ignore if */
  if (!VueI18n.availabilities.numberFormat) {
    if (false) {}
    return []
  }

  if (!key) {
    var nf = !options ? new Intl.NumberFormat(locale) : new Intl.NumberFormat(locale, options);
    return nf.formatToParts(value)
  }

  var formatter = this._getNumberFormatter(value, locale, this.fallbackLocale, this._getNumberFormats(), key, options);
  var ret = formatter && formatter.formatToParts(value);
  if (this._isFallbackRoot(ret)) {
    if (false) {}
    /* istanbul ignore if */
    if (!this._root) { throw Error('unexpected error') }
    return this._root.$i18n._ntp(value, locale, key, options)
  } else {
    return ret || []
  }
};

Object.defineProperties( VueI18n.prototype, prototypeAccessors );

var availabilities;
// $FlowFixMe
Object.defineProperty(VueI18n, 'availabilities', {
  get: function get () {
    if (!availabilities) {
      var intlDefined = typeof Intl !== 'undefined';
      availabilities = {
        dateTimeFormat: intlDefined && typeof Intl.DateTimeFormat !== 'undefined',
        numberFormat: intlDefined && typeof Intl.NumberFormat !== 'undefined'
      };
    }

    return availabilities
  }
});

VueI18n.install = install;
VueI18n.version = '8.22.2';

/* harmony default export */ var vue_i18n_esm = (VueI18n);

// EXTERNAL MODULE: ./src/assets/locales/en.json
var en = __webpack_require__("0e40");

// EXTERNAL MODULE: ./src/assets/locales/de.json
var de = __webpack_require__("cb40");

// EXTERNAL MODULE: ./src/assets/locales/it.json
var it = __webpack_require__("274c");

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js??ref--14-0!./node_modules/thread-loader/dist/cjs.js!./node_modules/babel-loader/lib!./node_modules/ts-loader??ref--14-3!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/App.vue?vue&type=script&lang=ts&shadow











vue_runtime_esm["a" /* default */].use(vue_i18n_esm);
var i18n = new vue_i18n_esm({
  locale: 'de',
  messages: {
    en: en,
    de: de,
    it: it
  }
});
/* harmony default export */ var Appvue_type_script_lang_ts_shadow = (vue_runtime_esm["a" /* default */].extend({
  i18n: i18n,
  components: {
    ItemsList: ItemsList,
    ItemDetail: ItemDetail
  },
  props: {
    contentType: {
      type: String,
      default: 'Recipe'
    },
    contentIdList: {
      type: String,
      default: ''
    },
    category: {
      type: String,
      default: null
    },
    language: {
      type: String,
      default: 'de'
    },
    pageSize: {
      type: Number,
      default: 20
    },
    defaultPresentation: {
      type: String,
      default: 'grid'
    }
  },
  data: function data() {
    return {
      detailContentId: null,
      currentPage: 1
    };
  },
  computed: {
    contentIds: function contentIds() {
      return this.contentIdList !== null ? this.contentIdList.split(',').filter(function (e) {
        return e;
      }) : [];
    },
    islistAvailable: function islistAvailable() {
      return this.contentIds.length != 1;
    }
  },
  watch: {
    language: {
      immediate: true,
      handler: function handler(value) {
        this.$i18n.locale = value;
      }
    }
  },
  created: function created() {
    if (!this.islistAvailable) {
      this.detailContentId = this.contentIds[0];
    }
  },
  methods: {
    showDetail: function showDetail(detailContentId) {
      this.detailContentId = detailContentId;
    },
    closeDetail: function closeDetail() {
      this.detailContentId = null;
    },
    changeCurrentPage: function changeCurrentPage(pageNum) {
      this.currentPage = pageNum;
    }
  }
}));
// CONCATENATED MODULE: ./src/App.vue?vue&type=script&lang=ts&shadow
 /* harmony default export */ var src_Appvue_type_script_lang_ts_shadow = (Appvue_type_script_lang_ts_shadow); 
// CONCATENATED MODULE: ./src/App.vue?shadow



function Appshadow_injectStyles (context) {
  
  var style0 = __webpack_require__("2083")
if (style0.__inject__) style0.__inject__(context)

}

/* normalize component */

var Appshadow_component = normalizeComponent(
  src_Appvue_type_script_lang_ts_shadow,
  render,
  staticRenderFns,
  false,
  Appshadow_injectStyles,
  null,
  null
  ,true
)

/* harmony default export */ var Appshadow = (Appshadow_component.exports);
// CONCATENATED MODULE: ./node_modules/@vue/cli-service/lib/commands/build/entry-wc.js




// runtime shared by every component chunk





window.customElements.define('odh-recipe', vue_wc_wrapper(vue_runtime_esm["a" /* default */], Appshadow))

/***/ }),

/***/ "5c6c":
/***/ (function(module, exports) {

module.exports = function (bitmap, value) {
  return {
    enumerable: !(bitmap & 1),
    configurable: !(bitmap & 2),
    writable: !(bitmap & 4),
    value: value
  };
};


/***/ }),

/***/ "5dee":
/***/ (function(module, exports, __webpack_require__) {

// Imports
var ___CSS_LOADER_API_IMPORT___ = __webpack_require__("24fb");
exports = ___CSS_LOADER_API_IMPORT___(false);
// Module
exports.push([module.i, "#app{font-family:Avenir,Helvetica,Arial,sans-serif;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale}", ""]);
// Exports
module.exports = exports;


/***/ }),

/***/ "5fb2":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// based on https://github.com/bestiejs/punycode.js/blob/master/punycode.js
var maxInt = 2147483647; // aka. 0x7FFFFFFF or 2^31-1
var base = 36;
var tMin = 1;
var tMax = 26;
var skew = 38;
var damp = 700;
var initialBias = 72;
var initialN = 128; // 0x80
var delimiter = '-'; // '\x2D'
var regexNonASCII = /[^\0-\u007E]/; // non-ASCII chars
var regexSeparators = /[.\u3002\uFF0E\uFF61]/g; // RFC 3490 separators
var OVERFLOW_ERROR = 'Overflow: input needs wider integers to process';
var baseMinusTMin = base - tMin;
var floor = Math.floor;
var stringFromCharCode = String.fromCharCode;

/**
 * Creates an array containing the numeric code points of each Unicode
 * character in the string. While JavaScript uses UCS-2 internally,
 * this function will convert a pair of surrogate halves (each of which
 * UCS-2 exposes as separate characters) into a single code point,
 * matching UTF-16.
 */
var ucs2decode = function (string) {
  var output = [];
  var counter = 0;
  var length = string.length;
  while (counter < length) {
    var value = string.charCodeAt(counter++);
    if (value >= 0xD800 && value <= 0xDBFF && counter < length) {
      // It's a high surrogate, and there is a next character.
      var extra = string.charCodeAt(counter++);
      if ((extra & 0xFC00) == 0xDC00) { // Low surrogate.
        output.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);
      } else {
        // It's an unmatched surrogate; only append this code unit, in case the
        // next code unit is the high surrogate of a surrogate pair.
        output.push(value);
        counter--;
      }
    } else {
      output.push(value);
    }
  }
  return output;
};

/**
 * Converts a digit/integer into a basic code point.
 */
var digitToBasic = function (digit) {
  //  0..25 map to ASCII a..z or A..Z
  // 26..35 map to ASCII 0..9
  return digit + 22 + 75 * (digit < 26);
};

/**
 * Bias adaptation function as per section 3.4 of RFC 3492.
 * https://tools.ietf.org/html/rfc3492#section-3.4
 */
var adapt = function (delta, numPoints, firstTime) {
  var k = 0;
  delta = firstTime ? floor(delta / damp) : delta >> 1;
  delta += floor(delta / numPoints);
  for (; delta > baseMinusTMin * tMax >> 1; k += base) {
    delta = floor(delta / baseMinusTMin);
  }
  return floor(k + (baseMinusTMin + 1) * delta / (delta + skew));
};

/**
 * Converts a string of Unicode symbols (e.g. a domain name label) to a
 * Punycode string of ASCII-only symbols.
 */
// eslint-disable-next-line  max-statements
var encode = function (input) {
  var output = [];

  // Convert the input in UCS-2 to an array of Unicode code points.
  input = ucs2decode(input);

  // Cache the length.
  var inputLength = input.length;

  // Initialize the state.
  var n = initialN;
  var delta = 0;
  var bias = initialBias;
  var i, currentValue;

  // Handle the basic code points.
  for (i = 0; i < input.length; i++) {
    currentValue = input[i];
    if (currentValue < 0x80) {
      output.push(stringFromCharCode(currentValue));
    }
  }

  var basicLength = output.length; // number of basic code points.
  var handledCPCount = basicLength; // number of code points that have been handled;

  // Finish the basic string with a delimiter unless it's empty.
  if (basicLength) {
    output.push(delimiter);
  }

  // Main encoding loop:
  while (handledCPCount < inputLength) {
    // All non-basic code points < n have been handled already. Find the next larger one:
    var m = maxInt;
    for (i = 0; i < input.length; i++) {
      currentValue = input[i];
      if (currentValue >= n && currentValue < m) {
        m = currentValue;
      }
    }

    // Increase `delta` enough to advance the decoder's <n,i> state to <m,0>, but guard against overflow.
    var handledCPCountPlusOne = handledCPCount + 1;
    if (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {
      throw RangeError(OVERFLOW_ERROR);
    }

    delta += (m - n) * handledCPCountPlusOne;
    n = m;

    for (i = 0; i < input.length; i++) {
      currentValue = input[i];
      if (currentValue < n && ++delta > maxInt) {
        throw RangeError(OVERFLOW_ERROR);
      }
      if (currentValue == n) {
        // Represent delta as a generalized variable-length integer.
        var q = delta;
        for (var k = base; /* no condition */; k += base) {
          var t = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);
          if (q < t) break;
          var qMinusT = q - t;
          var baseMinusT = base - t;
          output.push(stringFromCharCode(digitToBasic(t + qMinusT % baseMinusT)));
          q = floor(qMinusT / baseMinusT);
        }

        output.push(stringFromCharCode(digitToBasic(q)));
        bias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength);
        delta = 0;
        ++handledCPCount;
      }
    }

    ++delta;
    ++n;
  }
  return output.join('');
};

module.exports = function (input) {
  var encoded = [];
  var labels = input.toLowerCase().replace(regexSeparators, '\u002E').split('.');
  var i, label;
  for (i = 0; i < labels.length; i++) {
    label = labels[i];
    encoded.push(regexNonASCII.test(label) ? 'xn--' + encode(label) : label);
  }
  return encoded.join('.');
};


/***/ }),

/***/ "605d":
/***/ (function(module, exports, __webpack_require__) {

var classof = __webpack_require__("c6b6");
var global = __webpack_require__("da84");

module.exports = classof(global.process) == 'process';


/***/ }),

/***/ "60da":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var DESCRIPTORS = __webpack_require__("83ab");
var fails = __webpack_require__("d039");
var objectKeys = __webpack_require__("df75");
var getOwnPropertySymbolsModule = __webpack_require__("7418");
var propertyIsEnumerableModule = __webpack_require__("d1e7");
var toObject = __webpack_require__("7b0b");
var IndexedObject = __webpack_require__("44ad");

var nativeAssign = Object.assign;
var defineProperty = Object.defineProperty;

// `Object.assign` method
// https://tc39.github.io/ecma262/#sec-object.assign
module.exports = !nativeAssign || fails(function () {
  // should have correct order of operations (Edge bug)
  if (DESCRIPTORS && nativeAssign({ b: 1 }, nativeAssign(defineProperty({}, 'a', {
    enumerable: true,
    get: function () {
      defineProperty(this, 'b', {
        value: 3,
        enumerable: false
      });
    }
  }), { b: 2 })).b !== 1) return true;
  // should work with symbols and should have deterministic property order (V8 bug)
  var A = {};
  var B = {};
  // eslint-disable-next-line no-undef
  var symbol = Symbol();
  var alphabet = 'abcdefghijklmnopqrst';
  A[symbol] = 7;
  alphabet.split('').forEach(function (chr) { B[chr] = chr; });
  return nativeAssign({}, A)[symbol] != 7 || objectKeys(nativeAssign({}, B)).join('') != alphabet;
}) ? function assign(target, source) { // eslint-disable-line no-unused-vars
  var T = toObject(target);
  var argumentsLength = arguments.length;
  var index = 1;
  var getOwnPropertySymbols = getOwnPropertySymbolsModule.f;
  var propertyIsEnumerable = propertyIsEnumerableModule.f;
  while (argumentsLength > index) {
    var S = IndexedObject(arguments[index++]);
    var keys = getOwnPropertySymbols ? objectKeys(S).concat(getOwnPropertySymbols(S)) : objectKeys(S);
    var length = keys.length;
    var j = 0;
    var key;
    while (length > j) {
      key = keys[j++];
      if (!DESCRIPTORS || propertyIsEnumerable.call(S, key)) T[key] = S[key];
    }
  } return T;
} : nativeAssign;


/***/ }),

/***/ "6547":
/***/ (function(module, exports, __webpack_require__) {

var toInteger = __webpack_require__("a691");
var requireObjectCoercible = __webpack_require__("1d80");

// `String.prototype.{ codePointAt, at }` methods implementation
var createMethod = function (CONVERT_TO_STRING) {
  return function ($this, pos) {
    var S = String(requireObjectCoercible($this));
    var position = toInteger(pos);
    var size = S.length;
    var first, second;
    if (position < 0 || position >= size) return CONVERT_TO_STRING ? '' : undefined;
    first = S.charCodeAt(position);
    return first < 0xD800 || first > 0xDBFF || position + 1 === size
      || (second = S.charCodeAt(position + 1)) < 0xDC00 || second > 0xDFFF
        ? CONVERT_TO_STRING ? S.charAt(position) : first
        : CONVERT_TO_STRING ? S.slice(position, position + 2) : (first - 0xD800 << 10) + (second - 0xDC00) + 0x10000;
  };
};

module.exports = {
  // `String.prototype.codePointAt` method
  // https://tc39.github.io/ecma262/#sec-string.prototype.codepointat
  codeAt: createMethod(false),
  // `String.prototype.at` method
  // https://github.com/mathiasbynens/String.prototype.at
  charAt: createMethod(true)
};


/***/ }),

/***/ "6566":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var defineProperty = __webpack_require__("9bf2").f;
var create = __webpack_require__("7c73");
var redefineAll = __webpack_require__("e2cc");
var bind = __webpack_require__("0366");
var anInstance = __webpack_require__("19aa");
var iterate = __webpack_require__("2266");
var defineIterator = __webpack_require__("7dd0");
var setSpecies = __webpack_require__("2626");
var DESCRIPTORS = __webpack_require__("83ab");
var fastKey = __webpack_require__("f183").fastKey;
var InternalStateModule = __webpack_require__("69f3");

var setInternalState = InternalStateModule.set;
var internalStateGetterFor = InternalStateModule.getterFor;

module.exports = {
  getConstructor: function (wrapper, CONSTRUCTOR_NAME, IS_MAP, ADDER) {
    var C = wrapper(function (that, iterable) {
      anInstance(that, C, CONSTRUCTOR_NAME);
      setInternalState(that, {
        type: CONSTRUCTOR_NAME,
        index: create(null),
        first: undefined,
        last: undefined,
        size: 0
      });
      if (!DESCRIPTORS) that.size = 0;
      if (iterable != undefined) iterate(iterable, that[ADDER], { that: that, AS_ENTRIES: IS_MAP });
    });

    var getInternalState = internalStateGetterFor(CONSTRUCTOR_NAME);

    var define = function (that, key, value) {
      var state = getInternalState(that);
      var entry = getEntry(that, key);
      var previous, index;
      // change existing entry
      if (entry) {
        entry.value = value;
      // create new entry
      } else {
        state.last = entry = {
          index: index = fastKey(key, true),
          key: key,
          value: value,
          previous: previous = state.last,
          next: undefined,
          removed: false
        };
        if (!state.first) state.first = entry;
        if (previous) previous.next = entry;
        if (DESCRIPTORS) state.size++;
        else that.size++;
        // add to index
        if (index !== 'F') state.index[index] = entry;
      } return that;
    };

    var getEntry = function (that, key) {
      var state = getInternalState(that);
      // fast case
      var index = fastKey(key);
      var entry;
      if (index !== 'F') return state.index[index];
      // frozen object case
      for (entry = state.first; entry; entry = entry.next) {
        if (entry.key == key) return entry;
      }
    };

    redefineAll(C.prototype, {
      // 23.1.3.1 Map.prototype.clear()
      // 23.2.3.2 Set.prototype.clear()
      clear: function clear() {
        var that = this;
        var state = getInternalState(that);
        var data = state.index;
        var entry = state.first;
        while (entry) {
          entry.removed = true;
          if (entry.previous) entry.previous = entry.previous.next = undefined;
          delete data[entry.index];
          entry = entry.next;
        }
        state.first = state.last = undefined;
        if (DESCRIPTORS) state.size = 0;
        else that.size = 0;
      },
      // 23.1.3.3 Map.prototype.delete(key)
      // 23.2.3.4 Set.prototype.delete(value)
      'delete': function (key) {
        var that = this;
        var state = getInternalState(that);
        var entry = getEntry(that, key);
        if (entry) {
          var next = entry.next;
          var prev = entry.previous;
          delete state.index[entry.index];
          entry.removed = true;
          if (prev) prev.next = next;
          if (next) next.previous = prev;
          if (state.first == entry) state.first = next;
          if (state.last == entry) state.last = prev;
          if (DESCRIPTORS) state.size--;
          else that.size--;
        } return !!entry;
      },
      // 23.2.3.6 Set.prototype.forEach(callbackfn, thisArg = undefined)
      // 23.1.3.5 Map.prototype.forEach(callbackfn, thisArg = undefined)
      forEach: function forEach(callbackfn /* , that = undefined */) {
        var state = getInternalState(this);
        var boundFunction = bind(callbackfn, arguments.length > 1 ? arguments[1] : undefined, 3);
        var entry;
        while (entry = entry ? entry.next : state.first) {
          boundFunction(entry.value, entry.key, this);
          // revert to the last existing entry
          while (entry && entry.removed) entry = entry.previous;
        }
      },
      // 23.1.3.7 Map.prototype.has(key)
      // 23.2.3.7 Set.prototype.has(value)
      has: function has(key) {
        return !!getEntry(this, key);
      }
    });

    redefineAll(C.prototype, IS_MAP ? {
      // 23.1.3.6 Map.prototype.get(key)
      get: function get(key) {
        var entry = getEntry(this, key);
        return entry && entry.value;
      },
      // 23.1.3.9 Map.prototype.set(key, value)
      set: function set(key, value) {
        return define(this, key === 0 ? 0 : key, value);
      }
    } : {
      // 23.2.3.1 Set.prototype.add(value)
      add: function add(value) {
        return define(this, value = value === 0 ? 0 : value, value);
      }
    });
    if (DESCRIPTORS) defineProperty(C.prototype, 'size', {
      get: function () {
        return getInternalState(this).size;
      }
    });
    return C;
  },
  setStrong: function (C, CONSTRUCTOR_NAME, IS_MAP) {
    var ITERATOR_NAME = CONSTRUCTOR_NAME + ' Iterator';
    var getInternalCollectionState = internalStateGetterFor(CONSTRUCTOR_NAME);
    var getInternalIteratorState = internalStateGetterFor(ITERATOR_NAME);
    // add .keys, .values, .entries, [@@iterator]
    // 23.1.3.4, 23.1.3.8, 23.1.3.11, 23.1.3.12, 23.2.3.5, 23.2.3.8, 23.2.3.10, 23.2.3.11
    defineIterator(C, CONSTRUCTOR_NAME, function (iterated, kind) {
      setInternalState(this, {
        type: ITERATOR_NAME,
        target: iterated,
        state: getInternalCollectionState(iterated),
        kind: kind,
        last: undefined
      });
    }, function () {
      var state = getInternalIteratorState(this);
      var kind = state.kind;
      var entry = state.last;
      // revert to the last existing entry
      while (entry && entry.removed) entry = entry.previous;
      // get next entry
      if (!state.target || !(state.last = entry = entry ? entry.next : state.state.first)) {
        // or finish the iteration
        state.target = undefined;
        return { value: undefined, done: true };
      }
      // return step by kind
      if (kind == 'keys') return { value: entry.key, done: false };
      if (kind == 'values') return { value: entry.value, done: false };
      return { value: [entry.key, entry.value], done: false };
    }, IS_MAP ? 'entries' : 'values', !IS_MAP, true);

    // add [@@species], 23.1.2.2, 23.2.2.2
    setSpecies(CONSTRUCTOR_NAME);
  }
};


/***/ }),

/***/ "65f0":
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__("861d");
var isArray = __webpack_require__("e8b5");
var wellKnownSymbol = __webpack_require__("b622");

var SPECIES = wellKnownSymbol('species');

// `ArraySpeciesCreate` abstract operation
// https://tc39.github.io/ecma262/#sec-arrayspeciescreate
module.exports = function (originalArray, length) {
  var C;
  if (isArray(originalArray)) {
    C = originalArray.constructor;
    // cross-realm fallback
    if (typeof C == 'function' && (C === Array || isArray(C.prototype))) C = undefined;
    else if (isObject(C)) {
      C = C[SPECIES];
      if (C === null) C = undefined;
    }
  } return new (C === undefined ? Array : C)(length === 0 ? 0 : length);
};


/***/ }),

/***/ "69f3":
/***/ (function(module, exports, __webpack_require__) {

var NATIVE_WEAK_MAP = __webpack_require__("7f9a");
var global = __webpack_require__("da84");
var isObject = __webpack_require__("861d");
var createNonEnumerableProperty = __webpack_require__("9112");
var objectHas = __webpack_require__("5135");
var shared = __webpack_require__("c6cd");
var sharedKey = __webpack_require__("f772");
var hiddenKeys = __webpack_require__("d012");

var WeakMap = global.WeakMap;
var set, get, has;

var enforce = function (it) {
  return has(it) ? get(it) : set(it, {});
};

var getterFor = function (TYPE) {
  return function (it) {
    var state;
    if (!isObject(it) || (state = get(it)).type !== TYPE) {
      throw TypeError('Incompatible receiver, ' + TYPE + ' required');
    } return state;
  };
};

if (NATIVE_WEAK_MAP) {
  var store = shared.state || (shared.state = new WeakMap());
  var wmget = store.get;
  var wmhas = store.has;
  var wmset = store.set;
  set = function (it, metadata) {
    metadata.facade = it;
    wmset.call(store, it, metadata);
    return metadata;
  };
  get = function (it) {
    return wmget.call(store, it) || {};
  };
  has = function (it) {
    return wmhas.call(store, it);
  };
} else {
  var STATE = sharedKey('state');
  hiddenKeys[STATE] = true;
  set = function (it, metadata) {
    metadata.facade = it;
    createNonEnumerableProperty(it, STATE, metadata);
    return metadata;
  };
  get = function (it) {
    return objectHas(it, STATE) ? it[STATE] : {};
  };
  has = function (it) {
    return objectHas(it, STATE);
  };
}

module.exports = {
  set: set,
  get: get,
  has: has,
  enforce: enforce,
  getterFor: getterFor
};


/***/ }),

/***/ "6a2d":
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__("6a89");
if(typeof content === 'string') content = [[module.i, content, '']];
if(content.locals) module.exports = content.locals;
// add CSS to Shadow Root
var add = __webpack_require__("35d6").default
module.exports.__inject__ = function (shadowRoot) {
  add("41cfe839", content, shadowRoot)
};

/***/ }),

/***/ "6a89":
/***/ (function(module, exports, __webpack_require__) {

// Imports
var ___CSS_LOADER_API_IMPORT___ = __webpack_require__("24fb");
exports = ___CSS_LOADER_API_IMPORT___(false);
// Module
exports.push([module.i, ".item>div[data-v-e28a940e]{margin-bottom:1.5rem}.title[data-v-e28a940e]{background-color:#e8ecf1;padding:2rem;opacity:.8;max-width:100%;max-height:400px}h2[data-v-e28a940e]{margin-bottom:2px}.detail-box[data-v-e28a940e]{border:1px solid #e8ecf1;height:40px;border-radius:20px;padding-left:30px;padding-right:30px;display:flex;flex-direction:row}.additional-props-box[data-v-e28a940e]{padding:2rem;background-color:#e8ecf1}.props[data-v-e28a940e]{list-style:none;padding:0;margin:0;font-style:italic}.props[data-v-e28a940e]:not(.single){-moz-columns:1;columns:1}@media(min-width:768px){.props[data-v-e28a940e]:not(.single){-moz-columns:2;columns:2}}@media(min-width:992px){.props[data-v-e28a940e]:not(.single){-moz-columns:3;columns:3}}.props>li[data-v-e28a940e]{padding:.2rem 0}.props img[data-v-e28a940e]{height:16px;width:16px;margin-right:.7em}.props a[data-v-e28a940e]{color:#2980b9;text-decoration:none}.props .prop-key[data-v-e28a940e]{color:#888}.subtitle[data-v-e28a940e]{color:#212529;font-size:18px;font-weight:700;padding-top:4px;padding-bottom:4px}.subtype[data-v-e28a940e]{padding-top:4px}.categories[data-v-e28a940e],.subtype[data-v-e28a940e]{padding-bottom:8px}.category[data-v-e28a940e]{border:1px solid #cfcfcf}ul[data-v-e28a940e]{-webkit-padding-start:0;padding-inline-start:0}.text[data-v-e28a940e]{color:#2e3131}.text-id[data-v-e28a940e]{color:#939699;float:right}.text-dark[data-v-e28a940e]{color:#2e3131}.image[data-v-e28a940e]{padding-right:8px;padding-top:8px}.image[data-v-e28a940e],.title-image[data-v-e28a940e]{-o-object-fit:cover;object-fit:cover}.title-image[data-v-e28a940e]{max-height:400px;width:100%}.title-container[data-v-e28a940e]{display:flex;flex-direction:column;justify-content:flex-end;margin-bottom:0!important;overflow:hidden}.back-button[data-v-e28a940e]{display:flex;align-items:center;padding-bottom:4px;cursor:pointer}h1[data-v-e28a940e]{font-size:36px;overflow-wrap:break-word;-webkit-hyphens:auto;-ms-hyphens:auto;hyphens:auto}.recipe-info-group[data-v-e28a940e]{display:flex;width:50%;align-items:center}.recipe-info-text[data-v-e28a940e]{padding-left:8px;font-size:14px;color:#212529;overflow-wrap:break-word}.ingredient-title[data-v-e28a940e]{font-size:28px;font-weight:700;color:#2e3131}.ingredients-container[data-v-e28a940e]{width:100%;margin-top:16px}.ingredients-box[data-v-e28a940e]{background-color:#e8ecf1;padding:25px 16px 25px 25px}.content-box[data-v-e28a940e]{width:100%}@media(min-width:768px){.ingredients-container[data-v-e28a940e]{width:33%;margin-top:0}.ingredients-box[data-v-e28a940e]{margin-left:32px}.content-box[data-v-e28a940e]{width:66%}}.category[data-v-e28a940e]{padding:4px 12px 4px 12px;margin-right:8px;margin-top:8px;margin-bottom:8px;height:30px;border:1px solid #e8ecf1;border-radius:30px;opacity:1;text-align:center;align-items:center;display:flex;color:#212529}.tags[data-v-e28a940e]{display:flex;flex-direction:row;flex-wrap:wrap;justify-content:center}.divider[data-v-e28a940e]{background-color:#e8ecf1;height:1px;width:300px;margin-top:16px;margin-bottom:16px}.header-image[data-v-e28a940e]{height:430px;max-width:100%}div[data-v-e28a940e]  ul{-webkit-padding-start:20px;padding-inline-start:20px}.item-empty[data-v-e28a940e]{display:flex;flex-direction:row;justify-content:center;align-items:center;height:300px}", ""]);
// Exports
module.exports = exports;


/***/ }),

/***/ "6d61":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__("23e7");
var global = __webpack_require__("da84");
var isForced = __webpack_require__("94ca");
var redefine = __webpack_require__("6eeb");
var InternalMetadataModule = __webpack_require__("f183");
var iterate = __webpack_require__("2266");
var anInstance = __webpack_require__("19aa");
var isObject = __webpack_require__("861d");
var fails = __webpack_require__("d039");
var checkCorrectnessOfIteration = __webpack_require__("1c7e");
var setToStringTag = __webpack_require__("d44e");
var inheritIfRequired = __webpack_require__("7156");

module.exports = function (CONSTRUCTOR_NAME, wrapper, common) {
  var IS_MAP = CONSTRUCTOR_NAME.indexOf('Map') !== -1;
  var IS_WEAK = CONSTRUCTOR_NAME.indexOf('Weak') !== -1;
  var ADDER = IS_MAP ? 'set' : 'add';
  var NativeConstructor = global[CONSTRUCTOR_NAME];
  var NativePrototype = NativeConstructor && NativeConstructor.prototype;
  var Constructor = NativeConstructor;
  var exported = {};

  var fixMethod = function (KEY) {
    var nativeMethod = NativePrototype[KEY];
    redefine(NativePrototype, KEY,
      KEY == 'add' ? function add(value) {
        nativeMethod.call(this, value === 0 ? 0 : value);
        return this;
      } : KEY == 'delete' ? function (key) {
        return IS_WEAK && !isObject(key) ? false : nativeMethod.call(this, key === 0 ? 0 : key);
      } : KEY == 'get' ? function get(key) {
        return IS_WEAK && !isObject(key) ? undefined : nativeMethod.call(this, key === 0 ? 0 : key);
      } : KEY == 'has' ? function has(key) {
        return IS_WEAK && !isObject(key) ? false : nativeMethod.call(this, key === 0 ? 0 : key);
      } : function set(key, value) {
        nativeMethod.call(this, key === 0 ? 0 : key, value);
        return this;
      }
    );
  };

  // eslint-disable-next-line max-len
  if (isForced(CONSTRUCTOR_NAME, typeof NativeConstructor != 'function' || !(IS_WEAK || NativePrototype.forEach && !fails(function () {
    new NativeConstructor().entries().next();
  })))) {
    // create collection constructor
    Constructor = common.getConstructor(wrapper, CONSTRUCTOR_NAME, IS_MAP, ADDER);
    InternalMetadataModule.REQUIRED = true;
  } else if (isForced(CONSTRUCTOR_NAME, true)) {
    var instance = new Constructor();
    // early implementations not supports chaining
    var HASNT_CHAINING = instance[ADDER](IS_WEAK ? {} : -0, 1) != instance;
    // V8 ~ Chromium 40- weak-collections throws on primitives, but should return false
    var THROWS_ON_PRIMITIVES = fails(function () { instance.has(1); });
    // most early implementations doesn't supports iterables, most modern - not close it correctly
    // eslint-disable-next-line no-new
    var ACCEPT_ITERABLES = checkCorrectnessOfIteration(function (iterable) { new NativeConstructor(iterable); });
    // for early implementations -0 and +0 not the same
    var BUGGY_ZERO = !IS_WEAK && fails(function () {
      // V8 ~ Chromium 42- fails only with 5+ elements
      var $instance = new NativeConstructor();
      var index = 5;
      while (index--) $instance[ADDER](index, index);
      return !$instance.has(-0);
    });

    if (!ACCEPT_ITERABLES) {
      Constructor = wrapper(function (dummy, iterable) {
        anInstance(dummy, Constructor, CONSTRUCTOR_NAME);
        var that = inheritIfRequired(new NativeConstructor(), dummy, Constructor);
        if (iterable != undefined) iterate(iterable, that[ADDER], { that: that, AS_ENTRIES: IS_MAP });
        return that;
      });
      Constructor.prototype = NativePrototype;
      NativePrototype.constructor = Constructor;
    }

    if (THROWS_ON_PRIMITIVES || BUGGY_ZERO) {
      fixMethod('delete');
      fixMethod('has');
      IS_MAP && fixMethod('get');
    }

    if (BUGGY_ZERO || HASNT_CHAINING) fixMethod(ADDER);

    // weak collections should not contains .clear method
    if (IS_WEAK && NativePrototype.clear) delete NativePrototype.clear;
  }

  exported[CONSTRUCTOR_NAME] = Constructor;
  $({ global: true, forced: Constructor != NativeConstructor }, exported);

  setToStringTag(Constructor, CONSTRUCTOR_NAME);

  if (!IS_WEAK) common.setStrong(Constructor, CONSTRUCTOR_NAME, IS_MAP);

  return Constructor;
};


/***/ }),

/***/ "6eeb":
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__("da84");
var createNonEnumerableProperty = __webpack_require__("9112");
var has = __webpack_require__("5135");
var setGlobal = __webpack_require__("ce4e");
var inspectSource = __webpack_require__("8925");
var InternalStateModule = __webpack_require__("69f3");

var getInternalState = InternalStateModule.get;
var enforceInternalState = InternalStateModule.enforce;
var TEMPLATE = String(String).split('String');

(module.exports = function (O, key, value, options) {
  var unsafe = options ? !!options.unsafe : false;
  var simple = options ? !!options.enumerable : false;
  var noTargetGet = options ? !!options.noTargetGet : false;
  var state;
  if (typeof value == 'function') {
    if (typeof key == 'string' && !has(value, 'name')) {
      createNonEnumerableProperty(value, 'name', key);
    }
    state = enforceInternalState(value);
    if (!state.source) {
      state.source = TEMPLATE.join(typeof key == 'string' ? key : '');
    }
  }
  if (O === global) {
    if (simple) O[key] = value;
    else setGlobal(key, value);
    return;
  } else if (!unsafe) {
    delete O[key];
  } else if (!noTargetGet && O[key]) {
    simple = true;
  }
  if (simple) O[key] = value;
  else createNonEnumerableProperty(O, key, value);
// add fake Function#toString for correct work wrapped methods / constructors with methods like LoDash isNative
})(Function.prototype, 'toString', function toString() {
  return typeof this == 'function' && getInternalState(this).source || inspectSource(this);
});


/***/ }),

/***/ "7156":
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__("861d");
var setPrototypeOf = __webpack_require__("d2bb");

// makes subclassing work correct for wrapped built-ins
module.exports = function ($this, dummy, Wrapper) {
  var NewTarget, NewTargetPrototype;
  if (
    // it can work only with native `setPrototypeOf`
    setPrototypeOf &&
    // we haven't completely correct pre-ES6 way for getting `new.target`, so use this
    typeof (NewTarget = dummy.constructor) == 'function' &&
    NewTarget !== Wrapper &&
    isObject(NewTargetPrototype = NewTarget.prototype) &&
    NewTargetPrototype !== Wrapper.prototype
  ) setPrototypeOf($this, NewTargetPrototype);
  return $this;
};


/***/ }),

/***/ "723d":
/***/ (function(module, exports, __webpack_require__) {

// Imports
var ___CSS_LOADER_API_IMPORT___ = __webpack_require__("24fb");
exports = ___CSS_LOADER_API_IMPORT___(false);
// Module
exports.push([module.i, "svg.spinner[data-v-60a53922]{width:40px;height:40px;x:0;y:0;viewbox:0 0 40 40}svg.spinner circle[data-v-60a53922]{fill:transparent;stroke:#212121;stroke-width:4;stroke-linecap:round;stroke-dasharray:125.6;transform-origin:20px 20px 0;-webkit-animation:spinner-data-v-60a53922 2s linear infinite;animation:spinner-data-v-60a53922 2s linear infinite}@-webkit-keyframes spinner-data-v-60a53922{0%{-webkit-transform:rotate(0deg);stroke-dashoffset:26.4}50%{-webkit-transform:rotate(2turn);stroke-dashoffset:125.6}to{-webkit-transform:rotate(3turn);stroke-dashoffset:26.4}}@keyframes spinner-data-v-60a53922{0%{transform:rotate(0deg);stroke-dashoffset:26.4}50%{transform:rotate(2turn);stroke-dashoffset:125.6}to{transform:rotate(3turn);stroke-dashoffset:26.4}}body[data-v-60a53922]{padding:60px 0;margin:0}body svg[data-v-60a53922]{display:block;margin:0 auto}", ""]);
// Exports
module.exports = exports;


/***/ }),

/***/ "7418":
/***/ (function(module, exports) {

exports.f = Object.getOwnPropertySymbols;


/***/ }),

/***/ "746f":
/***/ (function(module, exports, __webpack_require__) {

var path = __webpack_require__("428f");
var has = __webpack_require__("5135");
var wrappedWellKnownSymbolModule = __webpack_require__("e538");
var defineProperty = __webpack_require__("9bf2").f;

module.exports = function (NAME) {
  var Symbol = path.Symbol || (path.Symbol = {});
  if (!has(Symbol, NAME)) defineProperty(Symbol, NAME, {
    value: wrappedWellKnownSymbolModule.f(NAME)
  });
};


/***/ }),

/***/ "764e":
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__("99af");

__webpack_require__("cca6");

var _objectSpread = __webpack_require__("ded3");

var _objectWithoutProperties = __webpack_require__("4082");

module.exports = {
  functional: true,
  render: function render(_h, _vm) {
    var _c = _vm._c,
        _v = _vm._v,
        data = _vm.data,
        _vm$children = _vm.children,
        children = _vm$children === void 0 ? [] : _vm$children;

    var classNames = data.class,
        staticClass = data.staticClass,
        style = data.style,
        staticStyle = data.staticStyle,
        _data$attrs = data.attrs,
        attrs = _data$attrs === void 0 ? {} : _data$attrs,
        rest = _objectWithoutProperties(data, ["class", "staticClass", "style", "staticStyle", "attrs"]);

    return _c('svg', _objectSpread({
      class: [classNames, staticClass],
      style: [style, staticStyle],
      attrs: Object.assign({
        "xmlns": "http://www.w3.org/2000/svg",
        "width": "18.922",
        "height": "11.734"
      }, attrs)
    }, rest), children.concat([_c('path', {
      attrs: {
        "d": "M0 0v5h5V0zm6.665 0v1.666h12.257V0zm0 3.333V5h8.257V3.333zM0 6.665v5h5v-5zm6.665 0v1.666h9.882V6.665zm0 3.333v1.666l6.96.07v-1.666z",
        "fill": "#888"
      }
    })]));
  }
};

/***/ }),

/***/ "7839":
/***/ (function(module, exports) {

// IE8- don't enum bug keys
module.exports = [
  'constructor',
  'hasOwnProperty',
  'isPrototypeOf',
  'propertyIsEnumerable',
  'toLocaleString',
  'toString',
  'valueOf'
];


/***/ }),

/***/ "7a77":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
 * A `Cancel` is an object that is thrown when an operation is canceled.
 *
 * @class
 * @param {string=} message The message.
 */
function Cancel(message) {
  this.message = message;
}

Cancel.prototype.toString = function toString() {
  return 'Cancel' + (this.message ? ': ' + this.message : '');
};

Cancel.prototype.__CANCEL__ = true;

module.exports = Cancel;


/***/ }),

/***/ "7aac":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__("c532");

module.exports = (
  utils.isStandardBrowserEnv() ?

  // Standard browser envs support document.cookie
    (function standardBrowserEnv() {
      return {
        write: function write(name, value, expires, path, domain, secure) {
          var cookie = [];
          cookie.push(name + '=' + encodeURIComponent(value));

          if (utils.isNumber(expires)) {
            cookie.push('expires=' + new Date(expires).toGMTString());
          }

          if (utils.isString(path)) {
            cookie.push('path=' + path);
          }

          if (utils.isString(domain)) {
            cookie.push('domain=' + domain);
          }

          if (secure === true) {
            cookie.push('secure');
          }

          document.cookie = cookie.join('; ');
        },

        read: function read(name) {
          var match = document.cookie.match(new RegExp('(^|;\\s*)(' + name + ')=([^;]*)'));
          return (match ? decodeURIComponent(match[3]) : null);
        },

        remove: function remove(name) {
          this.write(name, '', Date.now() - 86400000);
        }
      };
    })() :

  // Non standard browser env (web workers, react-native) lack needed support.
    (function nonStandardBrowserEnv() {
      return {
        write: function write() {},
        read: function read() { return null; },
        remove: function remove() {}
      };
    })()
);


/***/ }),

/***/ "7b0b":
/***/ (function(module, exports, __webpack_require__) {

var requireObjectCoercible = __webpack_require__("1d80");

// `ToObject` abstract operation
// https://tc39.github.io/ecma262/#sec-toobject
module.exports = function (argument) {
  return Object(requireObjectCoercible(argument));
};


/***/ }),

/***/ "7c73":
/***/ (function(module, exports, __webpack_require__) {

var anObject = __webpack_require__("825a");
var defineProperties = __webpack_require__("37e8");
var enumBugKeys = __webpack_require__("7839");
var hiddenKeys = __webpack_require__("d012");
var html = __webpack_require__("1be4");
var documentCreateElement = __webpack_require__("cc12");
var sharedKey = __webpack_require__("f772");

var GT = '>';
var LT = '<';
var PROTOTYPE = 'prototype';
var SCRIPT = 'script';
var IE_PROTO = sharedKey('IE_PROTO');

var EmptyConstructor = function () { /* empty */ };

var scriptTag = function (content) {
  return LT + SCRIPT + GT + content + LT + '/' + SCRIPT + GT;
};

// Create object with fake `null` prototype: use ActiveX Object with cleared prototype
var NullProtoObjectViaActiveX = function (activeXDocument) {
  activeXDocument.write(scriptTag(''));
  activeXDocument.close();
  var temp = activeXDocument.parentWindow.Object;
  activeXDocument = null; // avoid memory leak
  return temp;
};

// Create object with fake `null` prototype: use iframe Object with cleared prototype
var NullProtoObjectViaIFrame = function () {
  // Thrash, waste and sodomy: IE GC bug
  var iframe = documentCreateElement('iframe');
  var JS = 'java' + SCRIPT + ':';
  var iframeDocument;
  iframe.style.display = 'none';
  html.appendChild(iframe);
  // https://github.com/zloirock/core-js/issues/475
  iframe.src = String(JS);
  iframeDocument = iframe.contentWindow.document;
  iframeDocument.open();
  iframeDocument.write(scriptTag('document.F=Object'));
  iframeDocument.close();
  return iframeDocument.F;
};

// Check for document.domain and active x support
// No need to use active x approach when document.domain is not set
// see https://github.com/es-shims/es5-shim/issues/150
// variation of https://github.com/kitcambridge/es5-shim/commit/4f738ac066346
// avoid IE GC bug
var activeXDocument;
var NullProtoObject = function () {
  try {
    /* global ActiveXObject */
    activeXDocument = document.domain && new ActiveXObject('htmlfile');
  } catch (error) { /* ignore */ }
  NullProtoObject = activeXDocument ? NullProtoObjectViaActiveX(activeXDocument) : NullProtoObjectViaIFrame();
  var length = enumBugKeys.length;
  while (length--) delete NullProtoObject[PROTOTYPE][enumBugKeys[length]];
  return NullProtoObject();
};

hiddenKeys[IE_PROTO] = true;

// `Object.create` method
// https://tc39.github.io/ecma262/#sec-object.create
module.exports = Object.create || function create(O, Properties) {
  var result;
  if (O !== null) {
    EmptyConstructor[PROTOTYPE] = anObject(O);
    result = new EmptyConstructor();
    EmptyConstructor[PROTOTYPE] = null;
    // add "__proto__" for Object.getPrototypeOf polyfill
    result[IE_PROTO] = O;
  } else result = NullProtoObject();
  return Properties === undefined ? result : defineProperties(result, Properties);
};


/***/ }),

/***/ "7db0":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__("23e7");
var $find = __webpack_require__("b727").find;
var addToUnscopables = __webpack_require__("44d2");
var arrayMethodUsesToLength = __webpack_require__("ae40");

var FIND = 'find';
var SKIPS_HOLES = true;

var USES_TO_LENGTH = arrayMethodUsesToLength(FIND);

// Shouldn't skip holes
if (FIND in []) Array(1)[FIND](function () { SKIPS_HOLES = false; });

// `Array.prototype.find` method
// https://tc39.github.io/ecma262/#sec-array.prototype.find
$({ target: 'Array', proto: true, forced: SKIPS_HOLES || !USES_TO_LENGTH }, {
  find: function find(callbackfn /* , that = undefined */) {
    return $find(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);
  }
});

// https://tc39.github.io/ecma262/#sec-array.prototype-@@unscopables
addToUnscopables(FIND);


/***/ }),

/***/ "7dd0":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__("23e7");
var createIteratorConstructor = __webpack_require__("9ed3");
var getPrototypeOf = __webpack_require__("e163");
var setPrototypeOf = __webpack_require__("d2bb");
var setToStringTag = __webpack_require__("d44e");
var createNonEnumerableProperty = __webpack_require__("9112");
var redefine = __webpack_require__("6eeb");
var wellKnownSymbol = __webpack_require__("b622");
var IS_PURE = __webpack_require__("c430");
var Iterators = __webpack_require__("3f8c");
var IteratorsCore = __webpack_require__("ae93");

var IteratorPrototype = IteratorsCore.IteratorPrototype;
var BUGGY_SAFARI_ITERATORS = IteratorsCore.BUGGY_SAFARI_ITERATORS;
var ITERATOR = wellKnownSymbol('iterator');
var KEYS = 'keys';
var VALUES = 'values';
var ENTRIES = 'entries';

var returnThis = function () { return this; };

module.exports = function (Iterable, NAME, IteratorConstructor, next, DEFAULT, IS_SET, FORCED) {
  createIteratorConstructor(IteratorConstructor, NAME, next);

  var getIterationMethod = function (KIND) {
    if (KIND === DEFAULT && defaultIterator) return defaultIterator;
    if (!BUGGY_SAFARI_ITERATORS && KIND in IterablePrototype) return IterablePrototype[KIND];
    switch (KIND) {
      case KEYS: return function keys() { return new IteratorConstructor(this, KIND); };
      case VALUES: return function values() { return new IteratorConstructor(this, KIND); };
      case ENTRIES: return function entries() { return new IteratorConstructor(this, KIND); };
    } return function () { return new IteratorConstructor(this); };
  };

  var TO_STRING_TAG = NAME + ' Iterator';
  var INCORRECT_VALUES_NAME = false;
  var IterablePrototype = Iterable.prototype;
  var nativeIterator = IterablePrototype[ITERATOR]
    || IterablePrototype['@@iterator']
    || DEFAULT && IterablePrototype[DEFAULT];
  var defaultIterator = !BUGGY_SAFARI_ITERATORS && nativeIterator || getIterationMethod(DEFAULT);
  var anyNativeIterator = NAME == 'Array' ? IterablePrototype.entries || nativeIterator : nativeIterator;
  var CurrentIteratorPrototype, methods, KEY;

  // fix native
  if (anyNativeIterator) {
    CurrentIteratorPrototype = getPrototypeOf(anyNativeIterator.call(new Iterable()));
    if (IteratorPrototype !== Object.prototype && CurrentIteratorPrototype.next) {
      if (!IS_PURE && getPrototypeOf(CurrentIteratorPrototype) !== IteratorPrototype) {
        if (setPrototypeOf) {
          setPrototypeOf(CurrentIteratorPrototype, IteratorPrototype);
        } else if (typeof CurrentIteratorPrototype[ITERATOR] != 'function') {
          createNonEnumerableProperty(CurrentIteratorPrototype, ITERATOR, returnThis);
        }
      }
      // Set @@toStringTag to native iterators
      setToStringTag(CurrentIteratorPrototype, TO_STRING_TAG, true, true);
      if (IS_PURE) Iterators[TO_STRING_TAG] = returnThis;
    }
  }

  // fix Array#{values, @@iterator}.name in V8 / FF
  if (DEFAULT == VALUES && nativeIterator && nativeIterator.name !== VALUES) {
    INCORRECT_VALUES_NAME = true;
    defaultIterator = function values() { return nativeIterator.call(this); };
  }

  // define iterator
  if ((!IS_PURE || FORCED) && IterablePrototype[ITERATOR] !== defaultIterator) {
    createNonEnumerableProperty(IterablePrototype, ITERATOR, defaultIterator);
  }
  Iterators[NAME] = defaultIterator;

  // export additional methods
  if (DEFAULT) {
    methods = {
      values: getIterationMethod(VALUES),
      keys: IS_SET ? defaultIterator : getIterationMethod(KEYS),
      entries: getIterationMethod(ENTRIES)
    };
    if (FORCED) for (KEY in methods) {
      if (BUGGY_SAFARI_ITERATORS || INCORRECT_VALUES_NAME || !(KEY in IterablePrototype)) {
        redefine(IterablePrototype, KEY, methods[KEY]);
      }
    } else $({ target: NAME, proto: true, forced: BUGGY_SAFARI_ITERATORS || INCORRECT_VALUES_NAME }, methods);
  }

  return methods;
};


/***/ }),

/***/ "7f9a":
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__("da84");
var inspectSource = __webpack_require__("8925");

var WeakMap = global.WeakMap;

module.exports = typeof WeakMap === 'function' && /native code/.test(inspectSource(WeakMap));


/***/ }),

/***/ "7fd6":
/***/ (function(module, exports, __webpack_require__) {

// Imports
var ___CSS_LOADER_API_IMPORT___ = __webpack_require__("24fb");
exports = ___CSS_LOADER_API_IMPORT___(false);
// Module
exports.push([module.i, ".paging[data-v-356619ac]{display:flex;width:100%;justify-content:center;margin-top:40px;margin-bottom:40px}.item[data-v-356619ac]{padding-right:4px;padding-left:4px}.item[data-v-356619ac]:hover{cursor:pointer}.selected-item[data-v-356619ac]{color:#2980b9}.back[data-v-356619ac]{margin-right:20px}.back[data-v-356619ac]:hover,.next[data-v-356619ac]:hover{cursor:pointer}.next[data-v-356619ac]{margin-left:20px}", ""]);
// Exports
module.exports = exports;


/***/ }),

/***/ "825a":
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__("861d");

module.exports = function (it) {
  if (!isObject(it)) {
    throw TypeError(String(it) + ' is not an object');
  } return it;
};


/***/ }),

/***/ "83ab":
/***/ (function(module, exports, __webpack_require__) {

var fails = __webpack_require__("d039");

// Thank's IE8 for his funny defineProperty
module.exports = !fails(function () {
  return Object.defineProperty({}, 1, { get: function () { return 7; } })[1] != 7;
});


/***/ }),

/***/ "83b9":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var isAbsoluteURL = __webpack_require__("d925");
var combineURLs = __webpack_require__("e683");

/**
 * Creates a new URL by combining the baseURL with the requestedURL,
 * only when the requestedURL is not already an absolute URL.
 * If the requestURL is absolute, this function returns the requestedURL untouched.
 *
 * @param {string} baseURL The base URL
 * @param {string} requestedURL Absolute or relative URL to combine
 * @returns {string} The combined full path
 */
module.exports = function buildFullPath(baseURL, requestedURL) {
  if (baseURL && !isAbsoluteURL(requestedURL)) {
    return combineURLs(baseURL, requestedURL);
  }
  return requestedURL;
};


/***/ }),

/***/ "83d3":
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__("99af");

__webpack_require__("cca6");

var _objectSpread = __webpack_require__("ded3");

var _objectWithoutProperties = __webpack_require__("4082");

module.exports = {
  functional: true,
  render: function render(_h, _vm) {
    var _c = _vm._c,
        _v = _vm._v,
        data = _vm.data,
        _vm$children = _vm.children,
        children = _vm$children === void 0 ? [] : _vm$children;

    var classNames = data.class,
        staticClass = data.staticClass,
        style = data.style,
        staticStyle = data.staticStyle,
        _data$attrs = data.attrs,
        attrs = _data$attrs === void 0 ? {} : _data$attrs,
        rest = _objectWithoutProperties(data, ["class", "staticClass", "style", "staticStyle", "attrs"]);

    return _c('svg', _objectSpread({
      class: [classNames, staticClass],
      style: [style, staticStyle],
      attrs: Object.assign({
        "xmlns": "http://www.w3.org/2000/svg",
        "width": "18.922",
        "height": "11.734"
      }, attrs)
    }, rest), children.concat([_c('path', {
      attrs: {
        "d": "M0 0v5h5V0zm6.665 0v1.666h12.257V0zm0 3.333V5h8.257V3.333zM0 6.665v5h5v-5zm6.665 0v1.666h9.882V6.665zm0 3.333v1.666l6.96.07v-1.666z",
        "fill": "#2980b9"
      }
    })]));
  }
};

/***/ }),

/***/ "8418":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var toPrimitive = __webpack_require__("c04e");
var definePropertyModule = __webpack_require__("9bf2");
var createPropertyDescriptor = __webpack_require__("5c6c");

module.exports = function (object, key, value) {
  var propertyKey = toPrimitive(key);
  if (propertyKey in object) definePropertyModule.f(object, propertyKey, createPropertyDescriptor(0, value));
  else object[propertyKey] = value;
};


/***/ }),

/***/ "841c":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var fixRegExpWellKnownSymbolLogic = __webpack_require__("d784");
var anObject = __webpack_require__("825a");
var requireObjectCoercible = __webpack_require__("1d80");
var sameValue = __webpack_require__("129f");
var regExpExec = __webpack_require__("14c3");

// @@search logic
fixRegExpWellKnownSymbolLogic('search', 1, function (SEARCH, nativeSearch, maybeCallNative) {
  return [
    // `String.prototype.search` method
    // https://tc39.github.io/ecma262/#sec-string.prototype.search
    function search(regexp) {
      var O = requireObjectCoercible(this);
      var searcher = regexp == undefined ? undefined : regexp[SEARCH];
      return searcher !== undefined ? searcher.call(regexp, O) : new RegExp(regexp)[SEARCH](String(O));
    },
    // `RegExp.prototype[@@search]` method
    // https://tc39.github.io/ecma262/#sec-regexp.prototype-@@search
    function (regexp) {
      var res = maybeCallNative(nativeSearch, regexp, this);
      if (res.done) return res.value;

      var rx = anObject(regexp);
      var S = String(this);

      var previousLastIndex = rx.lastIndex;
      if (!sameValue(previousLastIndex, 0)) rx.lastIndex = 0;
      var result = regExpExec(rx, S);
      if (!sameValue(rx.lastIndex, previousLastIndex)) rx.lastIndex = previousLastIndex;
      return result === null ? -1 : result.index;
    }
  ];
});


/***/ }),

/***/ "861d":
/***/ (function(module, exports) {

module.exports = function (it) {
  return typeof it === 'object' ? it !== null : typeof it === 'function';
};


/***/ }),

/***/ "8875":
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;// addapted from the document.currentScript polyfill by Adam Miller
// MIT license
// source: https://github.com/amiller-gh/currentScript-polyfill

// added support for Firefox https://bugzilla.mozilla.org/show_bug.cgi?id=1620505

(function (root, factory) {
  if (true) {
    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
				__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
				(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
  } else {}
}(typeof self !== 'undefined' ? self : this, function () {
  function getCurrentScript () {
    var descriptor = Object.getOwnPropertyDescriptor(document, 'currentScript')
    // for chrome
    if (!descriptor && 'currentScript' in document && document.currentScript) {
      return document.currentScript
    }

    // for other browsers with native support for currentScript
    if (descriptor && descriptor.get !== getCurrentScript && document.currentScript) {
      return document.currentScript
    }
  
    // IE 8-10 support script readyState
    // IE 11+ & Firefox support stack trace
    try {
      throw new Error();
    }
    catch (err) {
      // Find the second match for the "at" string to get file src url from stack.
      var ieStackRegExp = /.*at [^(]*\((.*):(.+):(.+)\)$/ig,
        ffStackRegExp = /@([^@]*):(\d+):(\d+)\s*$/ig,
        stackDetails = ieStackRegExp.exec(err.stack) || ffStackRegExp.exec(err.stack),
        scriptLocation = (stackDetails && stackDetails[1]) || false,
        line = (stackDetails && stackDetails[2]) || false,
        currentLocation = document.location.href.replace(document.location.hash, ''),
        pageSource,
        inlineScriptSourceRegExp,
        inlineScriptSource,
        scripts = document.getElementsByTagName('script'); // Live NodeList collection
  
      if (scriptLocation === currentLocation) {
        pageSource = document.documentElement.outerHTML;
        inlineScriptSourceRegExp = new RegExp('(?:[^\\n]+?\\n){0,' + (line - 2) + '}[^<]*<script>([\\d\\D]*?)<\\/script>[\\d\\D]*', 'i');
        inlineScriptSource = pageSource.replace(inlineScriptSourceRegExp, '$1').trim();
      }
  
      for (var i = 0; i < scripts.length; i++) {
        // If ready state is interactive, return the script tag
        if (scripts[i].readyState === 'interactive') {
          return scripts[i];
        }
  
        // If src matches, return the script tag
        if (scripts[i].src === scriptLocation) {
          return scripts[i];
        }
  
        // If inline source matches, return the script tag
        if (
          scriptLocation === currentLocation &&
          scripts[i].innerHTML &&
          scripts[i].innerHTML.trim() === inlineScriptSource
        ) {
          return scripts[i];
        }
      }
  
      // If no match, return null
      return null;
    }
  };

  return getCurrentScript
}));


/***/ }),

/***/ "8925":
/***/ (function(module, exports, __webpack_require__) {

var store = __webpack_require__("c6cd");

var functionToString = Function.toString;

// this helper broken in `3.4.1-3.4.4`, so we can't use `shared` helper
if (typeof store.inspectSource != 'function') {
  store.inspectSource = function (it) {
    return functionToString.call(it);
  };
}

module.exports = store.inspectSource;


/***/ }),

/***/ "8aa5":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var charAt = __webpack_require__("6547").charAt;

// `AdvanceStringIndex` abstract operation
// https://tc39.github.io/ecma262/#sec-advancestringindex
module.exports = function (S, index, unicode) {
  return index + (unicode ? charAt(S, index).length : 1);
};


/***/ }),

/***/ "8df4":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var Cancel = __webpack_require__("7a77");

/**
 * A `CancelToken` is an object that can be used to request cancellation of an operation.
 *
 * @class
 * @param {Function} executor The executor function.
 */
function CancelToken(executor) {
  if (typeof executor !== 'function') {
    throw new TypeError('executor must be a function.');
  }

  var resolvePromise;
  this.promise = new Promise(function promiseExecutor(resolve) {
    resolvePromise = resolve;
  });

  var token = this;
  executor(function cancel(message) {
    if (token.reason) {
      // Cancellation has already been requested
      return;
    }

    token.reason = new Cancel(message);
    resolvePromise(token.reason);
  });
}

/**
 * Throws a `Cancel` if cancellation has been requested.
 */
CancelToken.prototype.throwIfRequested = function throwIfRequested() {
  if (this.reason) {
    throw this.reason;
  }
};

/**
 * Returns an object that contains a new `CancelToken` and a function that, when called,
 * cancels the `CancelToken`.
 */
CancelToken.source = function source() {
  var cancel;
  var token = new CancelToken(function executor(c) {
    cancel = c;
  });
  return {
    token: token,
    cancel: cancel
  };
};

module.exports = CancelToken;


/***/ }),

/***/ "90e3":
/***/ (function(module, exports) {

var id = 0;
var postfix = Math.random();

module.exports = function (key) {
  return 'Symbol(' + String(key === undefined ? '' : key) + ')_' + (++id + postfix).toString(36);
};


/***/ }),

/***/ "9112":
/***/ (function(module, exports, __webpack_require__) {

var DESCRIPTORS = __webpack_require__("83ab");
var definePropertyModule = __webpack_require__("9bf2");
var createPropertyDescriptor = __webpack_require__("5c6c");

module.exports = DESCRIPTORS ? function (object, key, value) {
  return definePropertyModule.f(object, key, createPropertyDescriptor(1, value));
} : function (object, key, value) {
  object[key] = value;
  return object;
};


/***/ }),

/***/ "9263":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var regexpFlags = __webpack_require__("ad6d");
var stickyHelpers = __webpack_require__("9f7f");

var nativeExec = RegExp.prototype.exec;
// This always refers to the native implementation, because the
// String#replace polyfill uses ./fix-regexp-well-known-symbol-logic.js,
// which loads this file before patching the method.
var nativeReplace = String.prototype.replace;

var patchedExec = nativeExec;

var UPDATES_LAST_INDEX_WRONG = (function () {
  var re1 = /a/;
  var re2 = /b*/g;
  nativeExec.call(re1, 'a');
  nativeExec.call(re2, 'a');
  return re1.lastIndex !== 0 || re2.lastIndex !== 0;
})();

var UNSUPPORTED_Y = stickyHelpers.UNSUPPORTED_Y || stickyHelpers.BROKEN_CARET;

// nonparticipating capturing group, copied from es5-shim's String#split patch.
var NPCG_INCLUDED = /()??/.exec('')[1] !== undefined;

var PATCH = UPDATES_LAST_INDEX_WRONG || NPCG_INCLUDED || UNSUPPORTED_Y;

if (PATCH) {
  patchedExec = function exec(str) {
    var re = this;
    var lastIndex, reCopy, match, i;
    var sticky = UNSUPPORTED_Y && re.sticky;
    var flags = regexpFlags.call(re);
    var source = re.source;
    var charsAdded = 0;
    var strCopy = str;

    if (sticky) {
      flags = flags.replace('y', '');
      if (flags.indexOf('g') === -1) {
        flags += 'g';
      }

      strCopy = String(str).slice(re.lastIndex);
      // Support anchored sticky behavior.
      if (re.lastIndex > 0 && (!re.multiline || re.multiline && str[re.lastIndex - 1] !== '\n')) {
        source = '(?: ' + source + ')';
        strCopy = ' ' + strCopy;
        charsAdded++;
      }
      // ^(? + rx + ) is needed, in combination with some str slicing, to
      // simulate the 'y' flag.
      reCopy = new RegExp('^(?:' + source + ')', flags);
    }

    if (NPCG_INCLUDED) {
      reCopy = new RegExp('^' + source + '$(?!\\s)', flags);
    }
    if (UPDATES_LAST_INDEX_WRONG) lastIndex = re.lastIndex;

    match = nativeExec.call(sticky ? reCopy : re, strCopy);

    if (sticky) {
      if (match) {
        match.input = match.input.slice(charsAdded);
        match[0] = match[0].slice(charsAdded);
        match.index = re.lastIndex;
        re.lastIndex += match[0].length;
      } else re.lastIndex = 0;
    } else if (UPDATES_LAST_INDEX_WRONG && match) {
      re.lastIndex = re.global ? match.index + match[0].length : lastIndex;
    }
    if (NPCG_INCLUDED && match && match.length > 1) {
      // Fix browsers whose `exec` methods don't consistently return `undefined`
      // for NPCG, like IE8. NOTE: This doesn' work for /(.?)?/
      nativeReplace.call(match[0], reCopy, function () {
        for (i = 1; i < arguments.length - 2; i++) {
          if (arguments[i] === undefined) match[i] = undefined;
        }
      });
    }

    return match;
  };
}

module.exports = patchedExec;


/***/ }),

/***/ "94ca":
/***/ (function(module, exports, __webpack_require__) {

var fails = __webpack_require__("d039");

var replacement = /#|\.prototype\./;

var isForced = function (feature, detection) {
  var value = data[normalize(feature)];
  return value == POLYFILL ? true
    : value == NATIVE ? false
    : typeof detection == 'function' ? fails(detection)
    : !!detection;
};

var normalize = isForced.normalize = function (string) {
  return String(string).replace(replacement, '.').toLowerCase();
};

var data = isForced.data = {};
var NATIVE = isForced.NATIVE = 'N';
var POLYFILL = isForced.POLYFILL = 'P';

module.exports = isForced;


/***/ }),

/***/ "9523":
/***/ (function(module, exports) {

function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}

module.exports = _defineProperty;

/***/ }),

/***/ "96cf":
/***/ (function(module, exports, __webpack_require__) {

/**
 * Copyright (c) 2014-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

var runtime = (function (exports) {
  "use strict";

  var Op = Object.prototype;
  var hasOwn = Op.hasOwnProperty;
  var undefined; // More compressible than void 0.
  var $Symbol = typeof Symbol === "function" ? Symbol : {};
  var iteratorSymbol = $Symbol.iterator || "@@iterator";
  var asyncIteratorSymbol = $Symbol.asyncIterator || "@@asyncIterator";
  var toStringTagSymbol = $Symbol.toStringTag || "@@toStringTag";

  function define(obj, key, value) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
    return obj[key];
  }
  try {
    // IE 8 has a broken Object.defineProperty that only works on DOM objects.
    define({}, "");
  } catch (err) {
    define = function(obj, key, value) {
      return obj[key] = value;
    };
  }

  function wrap(innerFn, outerFn, self, tryLocsList) {
    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.
    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;
    var generator = Object.create(protoGenerator.prototype);
    var context = new Context(tryLocsList || []);

    // The ._invoke method unifies the implementations of the .next,
    // .throw, and .return methods.
    generator._invoke = makeInvokeMethod(innerFn, self, context);

    return generator;
  }
  exports.wrap = wrap;

  // Try/catch helper to minimize deoptimizations. Returns a completion
  // record like context.tryEntries[i].completion. This interface could
  // have been (and was previously) designed to take a closure to be
  // invoked without arguments, but in all the cases we care about we
  // already have an existing method we want to call, so there's no need
  // to create a new function object. We can even get away with assuming
  // the method takes exactly one argument, since that happens to be true
  // in every case, so we don't have to touch the arguments object. The
  // only additional allocation required is the completion record, which
  // has a stable shape and so hopefully should be cheap to allocate.
  function tryCatch(fn, obj, arg) {
    try {
      return { type: "normal", arg: fn.call(obj, arg) };
    } catch (err) {
      return { type: "throw", arg: err };
    }
  }

  var GenStateSuspendedStart = "suspendedStart";
  var GenStateSuspendedYield = "suspendedYield";
  var GenStateExecuting = "executing";
  var GenStateCompleted = "completed";

  // Returning this object from the innerFn has the same effect as
  // breaking out of the dispatch switch statement.
  var ContinueSentinel = {};

  // Dummy constructor functions that we use as the .constructor and
  // .constructor.prototype properties for functions that return Generator
  // objects. For full spec compliance, you may wish to configure your
  // minifier not to mangle the names of these two functions.
  function Generator() {}
  function GeneratorFunction() {}
  function GeneratorFunctionPrototype() {}

  // This is a polyfill for %IteratorPrototype% for environments that
  // don't natively support it.
  var IteratorPrototype = {};
  IteratorPrototype[iteratorSymbol] = function () {
    return this;
  };

  var getProto = Object.getPrototypeOf;
  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));
  if (NativeIteratorPrototype &&
      NativeIteratorPrototype !== Op &&
      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {
    // This environment has a native %IteratorPrototype%; use it instead
    // of the polyfill.
    IteratorPrototype = NativeIteratorPrototype;
  }

  var Gp = GeneratorFunctionPrototype.prototype =
    Generator.prototype = Object.create(IteratorPrototype);
  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;
  GeneratorFunctionPrototype.constructor = GeneratorFunction;
  GeneratorFunction.displayName = define(
    GeneratorFunctionPrototype,
    toStringTagSymbol,
    "GeneratorFunction"
  );

  // Helper for defining the .next, .throw, and .return methods of the
  // Iterator interface in terms of a single ._invoke method.
  function defineIteratorMethods(prototype) {
    ["next", "throw", "return"].forEach(function(method) {
      define(prototype, method, function(arg) {
        return this._invoke(method, arg);
      });
    });
  }

  exports.isGeneratorFunction = function(genFun) {
    var ctor = typeof genFun === "function" && genFun.constructor;
    return ctor
      ? ctor === GeneratorFunction ||
        // For the native GeneratorFunction constructor, the best we can
        // do is to check its .name property.
        (ctor.displayName || ctor.name) === "GeneratorFunction"
      : false;
  };

  exports.mark = function(genFun) {
    if (Object.setPrototypeOf) {
      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);
    } else {
      genFun.__proto__ = GeneratorFunctionPrototype;
      define(genFun, toStringTagSymbol, "GeneratorFunction");
    }
    genFun.prototype = Object.create(Gp);
    return genFun;
  };

  // Within the body of any async function, `await x` is transformed to
  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test
  // `hasOwn.call(value, "__await")` to determine if the yielded value is
  // meant to be awaited.
  exports.awrap = function(arg) {
    return { __await: arg };
  };

  function AsyncIterator(generator, PromiseImpl) {
    function invoke(method, arg, resolve, reject) {
      var record = tryCatch(generator[method], generator, arg);
      if (record.type === "throw") {
        reject(record.arg);
      } else {
        var result = record.arg;
        var value = result.value;
        if (value &&
            typeof value === "object" &&
            hasOwn.call(value, "__await")) {
          return PromiseImpl.resolve(value.__await).then(function(value) {
            invoke("next", value, resolve, reject);
          }, function(err) {
            invoke("throw", err, resolve, reject);
          });
        }

        return PromiseImpl.resolve(value).then(function(unwrapped) {
          // When a yielded Promise is resolved, its final value becomes
          // the .value of the Promise<{value,done}> result for the
          // current iteration.
          result.value = unwrapped;
          resolve(result);
        }, function(error) {
          // If a rejected Promise was yielded, throw the rejection back
          // into the async generator function so it can be handled there.
          return invoke("throw", error, resolve, reject);
        });
      }
    }

    var previousPromise;

    function enqueue(method, arg) {
      function callInvokeWithMethodAndArg() {
        return new PromiseImpl(function(resolve, reject) {
          invoke(method, arg, resolve, reject);
        });
      }

      return previousPromise =
        // If enqueue has been called before, then we want to wait until
        // all previous Promises have been resolved before calling invoke,
        // so that results are always delivered in the correct order. If
        // enqueue has not been called before, then it is important to
        // call invoke immediately, without waiting on a callback to fire,
        // so that the async generator function has the opportunity to do
        // any necessary setup in a predictable way. This predictability
        // is why the Promise constructor synchronously invokes its
        // executor callback, and why async functions synchronously
        // execute code before the first await. Since we implement simple
        // async functions in terms of async generators, it is especially
        // important to get this right, even though it requires care.
        previousPromise ? previousPromise.then(
          callInvokeWithMethodAndArg,
          // Avoid propagating failures to Promises returned by later
          // invocations of the iterator.
          callInvokeWithMethodAndArg
        ) : callInvokeWithMethodAndArg();
    }

    // Define the unified helper method that is used to implement .next,
    // .throw, and .return (see defineIteratorMethods).
    this._invoke = enqueue;
  }

  defineIteratorMethods(AsyncIterator.prototype);
  AsyncIterator.prototype[asyncIteratorSymbol] = function () {
    return this;
  };
  exports.AsyncIterator = AsyncIterator;

  // Note that simple async functions are implemented on top of
  // AsyncIterator objects; they just return a Promise for the value of
  // the final result produced by the iterator.
  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {
    if (PromiseImpl === void 0) PromiseImpl = Promise;

    var iter = new AsyncIterator(
      wrap(innerFn, outerFn, self, tryLocsList),
      PromiseImpl
    );

    return exports.isGeneratorFunction(outerFn)
      ? iter // If outerFn is a generator, return the full iterator.
      : iter.next().then(function(result) {
          return result.done ? result.value : iter.next();
        });
  };

  function makeInvokeMethod(innerFn, self, context) {
    var state = GenStateSuspendedStart;

    return function invoke(method, arg) {
      if (state === GenStateExecuting) {
        throw new Error("Generator is already running");
      }

      if (state === GenStateCompleted) {
        if (method === "throw") {
          throw arg;
        }

        // Be forgiving, per 25.3.3.3.3 of the spec:
        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume
        return doneResult();
      }

      context.method = method;
      context.arg = arg;

      while (true) {
        var delegate = context.delegate;
        if (delegate) {
          var delegateResult = maybeInvokeDelegate(delegate, context);
          if (delegateResult) {
            if (delegateResult === ContinueSentinel) continue;
            return delegateResult;
          }
        }

        if (context.method === "next") {
          // Setting context._sent for legacy support of Babel's
          // function.sent implementation.
          context.sent = context._sent = context.arg;

        } else if (context.method === "throw") {
          if (state === GenStateSuspendedStart) {
            state = GenStateCompleted;
            throw context.arg;
          }

          context.dispatchException(context.arg);

        } else if (context.method === "return") {
          context.abrupt("return", context.arg);
        }

        state = GenStateExecuting;

        var record = tryCatch(innerFn, self, context);
        if (record.type === "normal") {
          // If an exception is thrown from innerFn, we leave state ===
          // GenStateExecuting and loop back for another invocation.
          state = context.done
            ? GenStateCompleted
            : GenStateSuspendedYield;

          if (record.arg === ContinueSentinel) {
            continue;
          }

          return {
            value: record.arg,
            done: context.done
          };

        } else if (record.type === "throw") {
          state = GenStateCompleted;
          // Dispatch the exception by looping back around to the
          // context.dispatchException(context.arg) call above.
          context.method = "throw";
          context.arg = record.arg;
        }
      }
    };
  }

  // Call delegate.iterator[context.method](context.arg) and handle the
  // result, either by returning a { value, done } result from the
  // delegate iterator, or by modifying context.method and context.arg,
  // setting context.delegate to null, and returning the ContinueSentinel.
  function maybeInvokeDelegate(delegate, context) {
    var method = delegate.iterator[context.method];
    if (method === undefined) {
      // A .throw or .return when the delegate iterator has no .throw
      // method always terminates the yield* loop.
      context.delegate = null;

      if (context.method === "throw") {
        // Note: ["return"] must be used for ES3 parsing compatibility.
        if (delegate.iterator["return"]) {
          // If the delegate iterator has a return method, give it a
          // chance to clean up.
          context.method = "return";
          context.arg = undefined;
          maybeInvokeDelegate(delegate, context);

          if (context.method === "throw") {
            // If maybeInvokeDelegate(context) changed context.method from
            // "return" to "throw", let that override the TypeError below.
            return ContinueSentinel;
          }
        }

        context.method = "throw";
        context.arg = new TypeError(
          "The iterator does not provide a 'throw' method");
      }

      return ContinueSentinel;
    }

    var record = tryCatch(method, delegate.iterator, context.arg);

    if (record.type === "throw") {
      context.method = "throw";
      context.arg = record.arg;
      context.delegate = null;
      return ContinueSentinel;
    }

    var info = record.arg;

    if (! info) {
      context.method = "throw";
      context.arg = new TypeError("iterator result is not an object");
      context.delegate = null;
      return ContinueSentinel;
    }

    if (info.done) {
      // Assign the result of the finished delegate to the temporary
      // variable specified by delegate.resultName (see delegateYield).
      context[delegate.resultName] = info.value;

      // Resume execution at the desired location (see delegateYield).
      context.next = delegate.nextLoc;

      // If context.method was "throw" but the delegate handled the
      // exception, let the outer generator proceed normally. If
      // context.method was "next", forget context.arg since it has been
      // "consumed" by the delegate iterator. If context.method was
      // "return", allow the original .return call to continue in the
      // outer generator.
      if (context.method !== "return") {
        context.method = "next";
        context.arg = undefined;
      }

    } else {
      // Re-yield the result returned by the delegate method.
      return info;
    }

    // The delegate iterator is finished, so forget it and continue with
    // the outer generator.
    context.delegate = null;
    return ContinueSentinel;
  }

  // Define Generator.prototype.{next,throw,return} in terms of the
  // unified ._invoke helper method.
  defineIteratorMethods(Gp);

  define(Gp, toStringTagSymbol, "Generator");

  // A Generator should always return itself as the iterator object when the
  // @@iterator function is called on it. Some browsers' implementations of the
  // iterator prototype chain incorrectly implement this, causing the Generator
  // object to not be returned from this call. This ensures that doesn't happen.
  // See https://github.com/facebook/regenerator/issues/274 for more details.
  Gp[iteratorSymbol] = function() {
    return this;
  };

  Gp.toString = function() {
    return "[object Generator]";
  };

  function pushTryEntry(locs) {
    var entry = { tryLoc: locs[0] };

    if (1 in locs) {
      entry.catchLoc = locs[1];
    }

    if (2 in locs) {
      entry.finallyLoc = locs[2];
      entry.afterLoc = locs[3];
    }

    this.tryEntries.push(entry);
  }

  function resetTryEntry(entry) {
    var record = entry.completion || {};
    record.type = "normal";
    delete record.arg;
    entry.completion = record;
  }

  function Context(tryLocsList) {
    // The root entry object (effectively a try statement without a catch
    // or a finally block) gives us a place to store values thrown from
    // locations where there is no enclosing try statement.
    this.tryEntries = [{ tryLoc: "root" }];
    tryLocsList.forEach(pushTryEntry, this);
    this.reset(true);
  }

  exports.keys = function(object) {
    var keys = [];
    for (var key in object) {
      keys.push(key);
    }
    keys.reverse();

    // Rather than returning an object with a next method, we keep
    // things simple and return the next function itself.
    return function next() {
      while (keys.length) {
        var key = keys.pop();
        if (key in object) {
          next.value = key;
          next.done = false;
          return next;
        }
      }

      // To avoid creating an additional object, we just hang the .value
      // and .done properties off the next function object itself. This
      // also ensures that the minifier will not anonymize the function.
      next.done = true;
      return next;
    };
  };

  function values(iterable) {
    if (iterable) {
      var iteratorMethod = iterable[iteratorSymbol];
      if (iteratorMethod) {
        return iteratorMethod.call(iterable);
      }

      if (typeof iterable.next === "function") {
        return iterable;
      }

      if (!isNaN(iterable.length)) {
        var i = -1, next = function next() {
          while (++i < iterable.length) {
            if (hasOwn.call(iterable, i)) {
              next.value = iterable[i];
              next.done = false;
              return next;
            }
          }

          next.value = undefined;
          next.done = true;

          return next;
        };

        return next.next = next;
      }
    }

    // Return an iterator with no values.
    return { next: doneResult };
  }
  exports.values = values;

  function doneResult() {
    return { value: undefined, done: true };
  }

  Context.prototype = {
    constructor: Context,

    reset: function(skipTempReset) {
      this.prev = 0;
      this.next = 0;
      // Resetting context._sent for legacy support of Babel's
      // function.sent implementation.
      this.sent = this._sent = undefined;
      this.done = false;
      this.delegate = null;

      this.method = "next";
      this.arg = undefined;

      this.tryEntries.forEach(resetTryEntry);

      if (!skipTempReset) {
        for (var name in this) {
          // Not sure about the optimal order of these conditions:
          if (name.charAt(0) === "t" &&
              hasOwn.call(this, name) &&
              !isNaN(+name.slice(1))) {
            this[name] = undefined;
          }
        }
      }
    },

    stop: function() {
      this.done = true;

      var rootEntry = this.tryEntries[0];
      var rootRecord = rootEntry.completion;
      if (rootRecord.type === "throw") {
        throw rootRecord.arg;
      }

      return this.rval;
    },

    dispatchException: function(exception) {
      if (this.done) {
        throw exception;
      }

      var context = this;
      function handle(loc, caught) {
        record.type = "throw";
        record.arg = exception;
        context.next = loc;

        if (caught) {
          // If the dispatched exception was caught by a catch block,
          // then let that catch block handle the exception normally.
          context.method = "next";
          context.arg = undefined;
        }

        return !! caught;
      }

      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        var record = entry.completion;

        if (entry.tryLoc === "root") {
          // Exception thrown outside of any try block that could handle
          // it, so set the completion value of the entire function to
          // throw the exception.
          return handle("end");
        }

        if (entry.tryLoc <= this.prev) {
          var hasCatch = hasOwn.call(entry, "catchLoc");
          var hasFinally = hasOwn.call(entry, "finallyLoc");

          if (hasCatch && hasFinally) {
            if (this.prev < entry.catchLoc) {
              return handle(entry.catchLoc, true);
            } else if (this.prev < entry.finallyLoc) {
              return handle(entry.finallyLoc);
            }

          } else if (hasCatch) {
            if (this.prev < entry.catchLoc) {
              return handle(entry.catchLoc, true);
            }

          } else if (hasFinally) {
            if (this.prev < entry.finallyLoc) {
              return handle(entry.finallyLoc);
            }

          } else {
            throw new Error("try statement without catch or finally");
          }
        }
      }
    },

    abrupt: function(type, arg) {
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        if (entry.tryLoc <= this.prev &&
            hasOwn.call(entry, "finallyLoc") &&
            this.prev < entry.finallyLoc) {
          var finallyEntry = entry;
          break;
        }
      }

      if (finallyEntry &&
          (type === "break" ||
           type === "continue") &&
          finallyEntry.tryLoc <= arg &&
          arg <= finallyEntry.finallyLoc) {
        // Ignore the finally entry if control is not jumping to a
        // location outside the try/catch block.
        finallyEntry = null;
      }

      var record = finallyEntry ? finallyEntry.completion : {};
      record.type = type;
      record.arg = arg;

      if (finallyEntry) {
        this.method = "next";
        this.next = finallyEntry.finallyLoc;
        return ContinueSentinel;
      }

      return this.complete(record);
    },

    complete: function(record, afterLoc) {
      if (record.type === "throw") {
        throw record.arg;
      }

      if (record.type === "break" ||
          record.type === "continue") {
        this.next = record.arg;
      } else if (record.type === "return") {
        this.rval = this.arg = record.arg;
        this.method = "return";
        this.next = "end";
      } else if (record.type === "normal" && afterLoc) {
        this.next = afterLoc;
      }

      return ContinueSentinel;
    },

    finish: function(finallyLoc) {
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        if (entry.finallyLoc === finallyLoc) {
          this.complete(entry.completion, entry.afterLoc);
          resetTryEntry(entry);
          return ContinueSentinel;
        }
      }
    },

    "catch": function(tryLoc) {
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        if (entry.tryLoc === tryLoc) {
          var record = entry.completion;
          if (record.type === "throw") {
            var thrown = record.arg;
            resetTryEntry(entry);
          }
          return thrown;
        }
      }

      // The context.catch method must only be called with a location
      // argument that corresponds to a known catch block.
      throw new Error("illegal catch attempt");
    },

    delegateYield: function(iterable, resultName, nextLoc) {
      this.delegate = {
        iterator: values(iterable),
        resultName: resultName,
        nextLoc: nextLoc
      };

      if (this.method === "next") {
        // Deliberately forget the last sent value so that we don't
        // accidentally pass it on to the delegate.
        this.arg = undefined;
      }

      return ContinueSentinel;
    }
  };

  // Regardless of whether this script is executing as a CommonJS module
  // or not, return the runtime object so that we can declare the variable
  // regeneratorRuntime in the outer scope, which allows this module to be
  // injected easily by `bin/regenerator --include-runtime script.js`.
  return exports;

}(
  // If this script is executing as a CommonJS module, use module.exports
  // as the regeneratorRuntime namespace. Otherwise create a new empty
  // object. Either way, the resulting object will be used to initialize
  // the regeneratorRuntime variable at the top of this file.
   true ? module.exports : undefined
));

try {
  regeneratorRuntime = runtime;
} catch (accidentalStrictMode) {
  // This module should not be running in strict mode, so the above
  // assignment should always work unless something is misconfigured. Just
  // in case runtime.js accidentally runs in strict mode, we can escape
  // strict mode using a global Function call. This could conceivably fail
  // if a Content Security Policy forbids using Function, but in that case
  // the proper solution is to fix the accidental strict mode problem. If
  // you've misconfigured your bundler to force strict mode and applied a
  // CSP to forbid Function, and you're not willing to fix either of those
  // problems, please detail your unique predicament in a GitHub issue.
  Function("r", "regeneratorRuntime = r")(runtime);
}


/***/ }),

/***/ "9861":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// TODO: in core-js@4, move /modules/ dependencies to public entries for better optimization by tools like `preset-env`
__webpack_require__("e260");
var $ = __webpack_require__("23e7");
var getBuiltIn = __webpack_require__("d066");
var USE_NATIVE_URL = __webpack_require__("0d3b");
var redefine = __webpack_require__("6eeb");
var redefineAll = __webpack_require__("e2cc");
var setToStringTag = __webpack_require__("d44e");
var createIteratorConstructor = __webpack_require__("9ed3");
var InternalStateModule = __webpack_require__("69f3");
var anInstance = __webpack_require__("19aa");
var hasOwn = __webpack_require__("5135");
var bind = __webpack_require__("0366");
var classof = __webpack_require__("f5df");
var anObject = __webpack_require__("825a");
var isObject = __webpack_require__("861d");
var create = __webpack_require__("7c73");
var createPropertyDescriptor = __webpack_require__("5c6c");
var getIterator = __webpack_require__("9a1f");
var getIteratorMethod = __webpack_require__("35a1");
var wellKnownSymbol = __webpack_require__("b622");

var $fetch = getBuiltIn('fetch');
var Headers = getBuiltIn('Headers');
var ITERATOR = wellKnownSymbol('iterator');
var URL_SEARCH_PARAMS = 'URLSearchParams';
var URL_SEARCH_PARAMS_ITERATOR = URL_SEARCH_PARAMS + 'Iterator';
var setInternalState = InternalStateModule.set;
var getInternalParamsState = InternalStateModule.getterFor(URL_SEARCH_PARAMS);
var getInternalIteratorState = InternalStateModule.getterFor(URL_SEARCH_PARAMS_ITERATOR);

var plus = /\+/g;
var sequences = Array(4);

var percentSequence = function (bytes) {
  return sequences[bytes - 1] || (sequences[bytes - 1] = RegExp('((?:%[\\da-f]{2}){' + bytes + '})', 'gi'));
};

var percentDecode = function (sequence) {
  try {
    return decodeURIComponent(sequence);
  } catch (error) {
    return sequence;
  }
};

var deserialize = function (it) {
  var result = it.replace(plus, ' ');
  var bytes = 4;
  try {
    return decodeURIComponent(result);
  } catch (error) {
    while (bytes) {
      result = result.replace(percentSequence(bytes--), percentDecode);
    }
    return result;
  }
};

var find = /[!'()~]|%20/g;

var replace = {
  '!': '%21',
  "'": '%27',
  '(': '%28',
  ')': '%29',
  '~': '%7E',
  '%20': '+'
};

var replacer = function (match) {
  return replace[match];
};

var serialize = function (it) {
  return encodeURIComponent(it).replace(find, replacer);
};

var parseSearchParams = function (result, query) {
  if (query) {
    var attributes = query.split('&');
    var index = 0;
    var attribute, entry;
    while (index < attributes.length) {
      attribute = attributes[index++];
      if (attribute.length) {
        entry = attribute.split('=');
        result.push({
          key: deserialize(entry.shift()),
          value: deserialize(entry.join('='))
        });
      }
    }
  }
};

var updateSearchParams = function (query) {
  this.entries.length = 0;
  parseSearchParams(this.entries, query);
};

var validateArgumentsLength = function (passed, required) {
  if (passed < required) throw TypeError('Not enough arguments');
};

var URLSearchParamsIterator = createIteratorConstructor(function Iterator(params, kind) {
  setInternalState(this, {
    type: URL_SEARCH_PARAMS_ITERATOR,
    iterator: getIterator(getInternalParamsState(params).entries),
    kind: kind
  });
}, 'Iterator', function next() {
  var state = getInternalIteratorState(this);
  var kind = state.kind;
  var step = state.iterator.next();
  var entry = step.value;
  if (!step.done) {
    step.value = kind === 'keys' ? entry.key : kind === 'values' ? entry.value : [entry.key, entry.value];
  } return step;
});

// `URLSearchParams` constructor
// https://url.spec.whatwg.org/#interface-urlsearchparams
var URLSearchParamsConstructor = function URLSearchParams(/* init */) {
  anInstance(this, URLSearchParamsConstructor, URL_SEARCH_PARAMS);
  var init = arguments.length > 0 ? arguments[0] : undefined;
  var that = this;
  var entries = [];
  var iteratorMethod, iterator, next, step, entryIterator, entryNext, first, second, key;

  setInternalState(that, {
    type: URL_SEARCH_PARAMS,
    entries: entries,
    updateURL: function () { /* empty */ },
    updateSearchParams: updateSearchParams
  });

  if (init !== undefined) {
    if (isObject(init)) {
      iteratorMethod = getIteratorMethod(init);
      if (typeof iteratorMethod === 'function') {
        iterator = iteratorMethod.call(init);
        next = iterator.next;
        while (!(step = next.call(iterator)).done) {
          entryIterator = getIterator(anObject(step.value));
          entryNext = entryIterator.next;
          if (
            (first = entryNext.call(entryIterator)).done ||
            (second = entryNext.call(entryIterator)).done ||
            !entryNext.call(entryIterator).done
          ) throw TypeError('Expected sequence with length 2');
          entries.push({ key: first.value + '', value: second.value + '' });
        }
      } else for (key in init) if (hasOwn(init, key)) entries.push({ key: key, value: init[key] + '' });
    } else {
      parseSearchParams(entries, typeof init === 'string' ? init.charAt(0) === '?' ? init.slice(1) : init : init + '');
    }
  }
};

var URLSearchParamsPrototype = URLSearchParamsConstructor.prototype;

redefineAll(URLSearchParamsPrototype, {
  // `URLSearchParams.prototype.append` method
  // https://url.spec.whatwg.org/#dom-urlsearchparams-append
  append: function append(name, value) {
    validateArgumentsLength(arguments.length, 2);
    var state = getInternalParamsState(this);
    state.entries.push({ key: name + '', value: value + '' });
    state.updateURL();
  },
  // `URLSearchParams.prototype.delete` method
  // https://url.spec.whatwg.org/#dom-urlsearchparams-delete
  'delete': function (name) {
    validateArgumentsLength(arguments.length, 1);
    var state = getInternalParamsState(this);
    var entries = state.entries;
    var key = name + '';
    var index = 0;
    while (index < entries.length) {
      if (entries[index].key === key) entries.splice(index, 1);
      else index++;
    }
    state.updateURL();
  },
  // `URLSearchParams.prototype.get` method
  // https://url.spec.whatwg.org/#dom-urlsearchparams-get
  get: function get(name) {
    validateArgumentsLength(arguments.length, 1);
    var entries = getInternalParamsState(this).entries;
    var key = name + '';
    var index = 0;
    for (; index < entries.length; index++) {
      if (entries[index].key === key) return entries[index].value;
    }
    return null;
  },
  // `URLSearchParams.prototype.getAll` method
  // https://url.spec.whatwg.org/#dom-urlsearchparams-getall
  getAll: function getAll(name) {
    validateArgumentsLength(arguments.length, 1);
    var entries = getInternalParamsState(this).entries;
    var key = name + '';
    var result = [];
    var index = 0;
    for (; index < entries.length; index++) {
      if (entries[index].key === key) result.push(entries[index].value);
    }
    return result;
  },
  // `URLSearchParams.prototype.has` method
  // https://url.spec.whatwg.org/#dom-urlsearchparams-has
  has: function has(name) {
    validateArgumentsLength(arguments.length, 1);
    var entries = getInternalParamsState(this).entries;
    var key = name + '';
    var index = 0;
    while (index < entries.length) {
      if (entries[index++].key === key) return true;
    }
    return false;
  },
  // `URLSearchParams.prototype.set` method
  // https://url.spec.whatwg.org/#dom-urlsearchparams-set
  set: function set(name, value) {
    validateArgumentsLength(arguments.length, 1);
    var state = getInternalParamsState(this);
    var entries = state.entries;
    var found = false;
    var key = name + '';
    var val = value + '';
    var index = 0;
    var entry;
    for (; index < entries.length; index++) {
      entry = entries[index];
      if (entry.key === key) {
        if (found) entries.splice(index--, 1);
        else {
          found = true;
          entry.value = val;
        }
      }
    }
    if (!found) entries.push({ key: key, value: val });
    state.updateURL();
  },
  // `URLSearchParams.prototype.sort` method
  // https://url.spec.whatwg.org/#dom-urlsearchparams-sort
  sort: function sort() {
    var state = getInternalParamsState(this);
    var entries = state.entries;
    // Array#sort is not stable in some engines
    var slice = entries.slice();
    var entry, entriesIndex, sliceIndex;
    entries.length = 0;
    for (sliceIndex = 0; sliceIndex < slice.length; sliceIndex++) {
      entry = slice[sliceIndex];
      for (entriesIndex = 0; entriesIndex < sliceIndex; entriesIndex++) {
        if (entries[entriesIndex].key > entry.key) {
          entries.splice(entriesIndex, 0, entry);
          break;
        }
      }
      if (entriesIndex === sliceIndex) entries.push(entry);
    }
    state.updateURL();
  },
  // `URLSearchParams.prototype.forEach` method
  forEach: function forEach(callback /* , thisArg */) {
    var entries = getInternalParamsState(this).entries;
    var boundFunction = bind(callback, arguments.length > 1 ? arguments[1] : undefined, 3);
    var index = 0;
    var entry;
    while (index < entries.length) {
      entry = entries[index++];
      boundFunction(entry.value, entry.key, this);
    }
  },
  // `URLSearchParams.prototype.keys` method
  keys: function keys() {
    return new URLSearchParamsIterator(this, 'keys');
  },
  // `URLSearchParams.prototype.values` method
  values: function values() {
    return new URLSearchParamsIterator(this, 'values');
  },
  // `URLSearchParams.prototype.entries` method
  entries: function entries() {
    return new URLSearchParamsIterator(this, 'entries');
  }
}, { enumerable: true });

// `URLSearchParams.prototype[@@iterator]` method
redefine(URLSearchParamsPrototype, ITERATOR, URLSearchParamsPrototype.entries);

// `URLSearchParams.prototype.toString` method
// https://url.spec.whatwg.org/#urlsearchparams-stringification-behavior
redefine(URLSearchParamsPrototype, 'toString', function toString() {
  var entries = getInternalParamsState(this).entries;
  var result = [];
  var index = 0;
  var entry;
  while (index < entries.length) {
    entry = entries[index++];
    result.push(serialize(entry.key) + '=' + serialize(entry.value));
  } return result.join('&');
}, { enumerable: true });

setToStringTag(URLSearchParamsConstructor, URL_SEARCH_PARAMS);

$({ global: true, forced: !USE_NATIVE_URL }, {
  URLSearchParams: URLSearchParamsConstructor
});

// Wrap `fetch` for correct work with polyfilled `URLSearchParams`
// https://github.com/zloirock/core-js/issues/674
if (!USE_NATIVE_URL && typeof $fetch == 'function' && typeof Headers == 'function') {
  $({ global: true, enumerable: true, forced: true }, {
    fetch: function fetch(input /* , init */) {
      var args = [input];
      var init, body, headers;
      if (arguments.length > 1) {
        init = arguments[1];
        if (isObject(init)) {
          body = init.body;
          if (classof(body) === URL_SEARCH_PARAMS) {
            headers = init.headers ? new Headers(init.headers) : new Headers();
            if (!headers.has('content-type')) {
              headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8');
            }
            init = create(init, {
              body: createPropertyDescriptor(0, String(body)),
              headers: createPropertyDescriptor(0, headers)
            });
          }
        }
        args.push(init);
      } return $fetch.apply(this, args);
    }
  });
}

module.exports = {
  URLSearchParams: URLSearchParamsConstructor,
  getState: getInternalParamsState
};


/***/ }),

/***/ "99af":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__("23e7");
var fails = __webpack_require__("d039");
var isArray = __webpack_require__("e8b5");
var isObject = __webpack_require__("861d");
var toObject = __webpack_require__("7b0b");
var toLength = __webpack_require__("50c4");
var createProperty = __webpack_require__("8418");
var arraySpeciesCreate = __webpack_require__("65f0");
var arrayMethodHasSpeciesSupport = __webpack_require__("1dde");
var wellKnownSymbol = __webpack_require__("b622");
var V8_VERSION = __webpack_require__("2d00");

var IS_CONCAT_SPREADABLE = wellKnownSymbol('isConcatSpreadable');
var MAX_SAFE_INTEGER = 0x1FFFFFFFFFFFFF;
var MAXIMUM_ALLOWED_INDEX_EXCEEDED = 'Maximum allowed index exceeded';

// We can't use this feature detection in V8 since it causes
// deoptimization and serious performance degradation
// https://github.com/zloirock/core-js/issues/679
var IS_CONCAT_SPREADABLE_SUPPORT = V8_VERSION >= 51 || !fails(function () {
  var array = [];
  array[IS_CONCAT_SPREADABLE] = false;
  return array.concat()[0] !== array;
});

var SPECIES_SUPPORT = arrayMethodHasSpeciesSupport('concat');

var isConcatSpreadable = function (O) {
  if (!isObject(O)) return false;
  var spreadable = O[IS_CONCAT_SPREADABLE];
  return spreadable !== undefined ? !!spreadable : isArray(O);
};

var FORCED = !IS_CONCAT_SPREADABLE_SUPPORT || !SPECIES_SUPPORT;

// `Array.prototype.concat` method
// https://tc39.github.io/ecma262/#sec-array.prototype.concat
// with adding support of @@isConcatSpreadable and @@species
$({ target: 'Array', proto: true, forced: FORCED }, {
  concat: function concat(arg) { // eslint-disable-line no-unused-vars
    var O = toObject(this);
    var A = arraySpeciesCreate(O, 0);
    var n = 0;
    var i, k, length, len, E;
    for (i = -1, length = arguments.length; i < length; i++) {
      E = i === -1 ? O : arguments[i];
      if (isConcatSpreadable(E)) {
        len = toLength(E.length);
        if (n + len > MAX_SAFE_INTEGER) throw TypeError(MAXIMUM_ALLOWED_INDEX_EXCEEDED);
        for (k = 0; k < len; k++, n++) if (k in E) createProperty(A, n, E[k]);
      } else {
        if (n >= MAX_SAFE_INTEGER) throw TypeError(MAXIMUM_ALLOWED_INDEX_EXCEEDED);
        createProperty(A, n++, E);
      }
    }
    A.length = n;
    return A;
  }
});


/***/ }),

/***/ "9a1f":
/***/ (function(module, exports, __webpack_require__) {

var anObject = __webpack_require__("825a");
var getIteratorMethod = __webpack_require__("35a1");

module.exports = function (it) {
  var iteratorMethod = getIteratorMethod(it);
  if (typeof iteratorMethod != 'function') {
    throw TypeError(String(it) + ' is not iterable');
  } return anObject(iteratorMethod.call(it));
};


/***/ }),

/***/ "9bdd":
/***/ (function(module, exports, __webpack_require__) {

var anObject = __webpack_require__("825a");
var iteratorClose = __webpack_require__("2a62");

// call something on iterator step with safe closing on error
module.exports = function (iterator, fn, value, ENTRIES) {
  try {
    return ENTRIES ? fn(anObject(value)[0], value[1]) : fn(value);
  // 7.4.6 IteratorClose(iterator, completion)
  } catch (error) {
    iteratorClose(iterator);
    throw error;
  }
};


/***/ }),

/***/ "9bf2":
/***/ (function(module, exports, __webpack_require__) {

var DESCRIPTORS = __webpack_require__("83ab");
var IE8_DOM_DEFINE = __webpack_require__("0cfb");
var anObject = __webpack_require__("825a");
var toPrimitive = __webpack_require__("c04e");

var nativeDefineProperty = Object.defineProperty;

// `Object.defineProperty` method
// https://tc39.github.io/ecma262/#sec-object.defineproperty
exports.f = DESCRIPTORS ? nativeDefineProperty : function defineProperty(O, P, Attributes) {
  anObject(O);
  P = toPrimitive(P, true);
  anObject(Attributes);
  if (IE8_DOM_DEFINE) try {
    return nativeDefineProperty(O, P, Attributes);
  } catch (error) { /* empty */ }
  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported');
  if ('value' in Attributes) O[P] = Attributes.value;
  return O;
};


/***/ }),

/***/ "9ed3":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var IteratorPrototype = __webpack_require__("ae93").IteratorPrototype;
var create = __webpack_require__("7c73");
var createPropertyDescriptor = __webpack_require__("5c6c");
var setToStringTag = __webpack_require__("d44e");
var Iterators = __webpack_require__("3f8c");

var returnThis = function () { return this; };

module.exports = function (IteratorConstructor, NAME, next) {
  var TO_STRING_TAG = NAME + ' Iterator';
  IteratorConstructor.prototype = create(IteratorPrototype, { next: createPropertyDescriptor(1, next) });
  setToStringTag(IteratorConstructor, TO_STRING_TAG, false, true);
  Iterators[TO_STRING_TAG] = returnThis;
  return IteratorConstructor;
};


/***/ }),

/***/ "9f7f":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var fails = __webpack_require__("d039");

// babel-minify transpiles RegExp('a', 'y') -> /a/y and it causes SyntaxError,
// so we use an intermediate function.
function RE(s, f) {
  return RegExp(s, f);
}

exports.UNSUPPORTED_Y = fails(function () {
  // babel-minify transpiles RegExp('a', 'y') -> /a/y and it causes SyntaxError
  var re = RE('a', 'y');
  re.lastIndex = 2;
  return re.exec('abcd') != null;
});

exports.BROKEN_CARET = fails(function () {
  // https://bugzilla.mozilla.org/show_bug.cgi?id=773687
  var re = RE('^r', 'gy');
  re.lastIndex = 2;
  return re.exec('str') != null;
});


/***/ }),

/***/ "a4d3":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__("23e7");
var global = __webpack_require__("da84");
var getBuiltIn = __webpack_require__("d066");
var IS_PURE = __webpack_require__("c430");
var DESCRIPTORS = __webpack_require__("83ab");
var NATIVE_SYMBOL = __webpack_require__("4930");
var USE_SYMBOL_AS_UID = __webpack_require__("fdbf");
var fails = __webpack_require__("d039");
var has = __webpack_require__("5135");
var isArray = __webpack_require__("e8b5");
var isObject = __webpack_require__("861d");
var anObject = __webpack_require__("825a");
var toObject = __webpack_require__("7b0b");
var toIndexedObject = __webpack_require__("fc6a");
var toPrimitive = __webpack_require__("c04e");
var createPropertyDescriptor = __webpack_require__("5c6c");
var nativeObjectCreate = __webpack_require__("7c73");
var objectKeys = __webpack_require__("df75");
var getOwnPropertyNamesModule = __webpack_require__("241c");
var getOwnPropertyNamesExternal = __webpack_require__("057f");
var getOwnPropertySymbolsModule = __webpack_require__("7418");
var getOwnPropertyDescriptorModule = __webpack_require__("06cf");
var definePropertyModule = __webpack_require__("9bf2");
var propertyIsEnumerableModule = __webpack_require__("d1e7");
var createNonEnumerableProperty = __webpack_require__("9112");
var redefine = __webpack_require__("6eeb");
var shared = __webpack_require__("5692");
var sharedKey = __webpack_require__("f772");
var hiddenKeys = __webpack_require__("d012");
var uid = __webpack_require__("90e3");
var wellKnownSymbol = __webpack_require__("b622");
var wrappedWellKnownSymbolModule = __webpack_require__("e538");
var defineWellKnownSymbol = __webpack_require__("746f");
var setToStringTag = __webpack_require__("d44e");
var InternalStateModule = __webpack_require__("69f3");
var $forEach = __webpack_require__("b727").forEach;

var HIDDEN = sharedKey('hidden');
var SYMBOL = 'Symbol';
var PROTOTYPE = 'prototype';
var TO_PRIMITIVE = wellKnownSymbol('toPrimitive');
var setInternalState = InternalStateModule.set;
var getInternalState = InternalStateModule.getterFor(SYMBOL);
var ObjectPrototype = Object[PROTOTYPE];
var $Symbol = global.Symbol;
var $stringify = getBuiltIn('JSON', 'stringify');
var nativeGetOwnPropertyDescriptor = getOwnPropertyDescriptorModule.f;
var nativeDefineProperty = definePropertyModule.f;
var nativeGetOwnPropertyNames = getOwnPropertyNamesExternal.f;
var nativePropertyIsEnumerable = propertyIsEnumerableModule.f;
var AllSymbols = shared('symbols');
var ObjectPrototypeSymbols = shared('op-symbols');
var StringToSymbolRegistry = shared('string-to-symbol-registry');
var SymbolToStringRegistry = shared('symbol-to-string-registry');
var WellKnownSymbolsStore = shared('wks');
var QObject = global.QObject;
// Don't use setters in Qt Script, https://github.com/zloirock/core-js/issues/173
var USE_SETTER = !QObject || !QObject[PROTOTYPE] || !QObject[PROTOTYPE].findChild;

// fallback for old Android, https://code.google.com/p/v8/issues/detail?id=687
var setSymbolDescriptor = DESCRIPTORS && fails(function () {
  return nativeObjectCreate(nativeDefineProperty({}, 'a', {
    get: function () { return nativeDefineProperty(this, 'a', { value: 7 }).a; }
  })).a != 7;
}) ? function (O, P, Attributes) {
  var ObjectPrototypeDescriptor = nativeGetOwnPropertyDescriptor(ObjectPrototype, P);
  if (ObjectPrototypeDescriptor) delete ObjectPrototype[P];
  nativeDefineProperty(O, P, Attributes);
  if (ObjectPrototypeDescriptor && O !== ObjectPrototype) {
    nativeDefineProperty(ObjectPrototype, P, ObjectPrototypeDescriptor);
  }
} : nativeDefineProperty;

var wrap = function (tag, description) {
  var symbol = AllSymbols[tag] = nativeObjectCreate($Symbol[PROTOTYPE]);
  setInternalState(symbol, {
    type: SYMBOL,
    tag: tag,
    description: description
  });
  if (!DESCRIPTORS) symbol.description = description;
  return symbol;
};

var isSymbol = USE_SYMBOL_AS_UID ? function (it) {
  return typeof it == 'symbol';
} : function (it) {
  return Object(it) instanceof $Symbol;
};

var $defineProperty = function defineProperty(O, P, Attributes) {
  if (O === ObjectPrototype) $defineProperty(ObjectPrototypeSymbols, P, Attributes);
  anObject(O);
  var key = toPrimitive(P, true);
  anObject(Attributes);
  if (has(AllSymbols, key)) {
    if (!Attributes.enumerable) {
      if (!has(O, HIDDEN)) nativeDefineProperty(O, HIDDEN, createPropertyDescriptor(1, {}));
      O[HIDDEN][key] = true;
    } else {
      if (has(O, HIDDEN) && O[HIDDEN][key]) O[HIDDEN][key] = false;
      Attributes = nativeObjectCreate(Attributes, { enumerable: createPropertyDescriptor(0, false) });
    } return setSymbolDescriptor(O, key, Attributes);
  } return nativeDefineProperty(O, key, Attributes);
};

var $defineProperties = function defineProperties(O, Properties) {
  anObject(O);
  var properties = toIndexedObject(Properties);
  var keys = objectKeys(properties).concat($getOwnPropertySymbols(properties));
  $forEach(keys, function (key) {
    if (!DESCRIPTORS || $propertyIsEnumerable.call(properties, key)) $defineProperty(O, key, properties[key]);
  });
  return O;
};

var $create = function create(O, Properties) {
  return Properties === undefined ? nativeObjectCreate(O) : $defineProperties(nativeObjectCreate(O), Properties);
};

var $propertyIsEnumerable = function propertyIsEnumerable(V) {
  var P = toPrimitive(V, true);
  var enumerable = nativePropertyIsEnumerable.call(this, P);
  if (this === ObjectPrototype && has(AllSymbols, P) && !has(ObjectPrototypeSymbols, P)) return false;
  return enumerable || !has(this, P) || !has(AllSymbols, P) || has(this, HIDDEN) && this[HIDDEN][P] ? enumerable : true;
};

var $getOwnPropertyDescriptor = function getOwnPropertyDescriptor(O, P) {
  var it = toIndexedObject(O);
  var key = toPrimitive(P, true);
  if (it === ObjectPrototype && has(AllSymbols, key) && !has(ObjectPrototypeSymbols, key)) return;
  var descriptor = nativeGetOwnPropertyDescriptor(it, key);
  if (descriptor && has(AllSymbols, key) && !(has(it, HIDDEN) && it[HIDDEN][key])) {
    descriptor.enumerable = true;
  }
  return descriptor;
};

var $getOwnPropertyNames = function getOwnPropertyNames(O) {
  var names = nativeGetOwnPropertyNames(toIndexedObject(O));
  var result = [];
  $forEach(names, function (key) {
    if (!has(AllSymbols, key) && !has(hiddenKeys, key)) result.push(key);
  });
  return result;
};

var $getOwnPropertySymbols = function getOwnPropertySymbols(O) {
  var IS_OBJECT_PROTOTYPE = O === ObjectPrototype;
  var names = nativeGetOwnPropertyNames(IS_OBJECT_PROTOTYPE ? ObjectPrototypeSymbols : toIndexedObject(O));
  var result = [];
  $forEach(names, function (key) {
    if (has(AllSymbols, key) && (!IS_OBJECT_PROTOTYPE || has(ObjectPrototype, key))) {
      result.push(AllSymbols[key]);
    }
  });
  return result;
};

// `Symbol` constructor
// https://tc39.github.io/ecma262/#sec-symbol-constructor
if (!NATIVE_SYMBOL) {
  $Symbol = function Symbol() {
    if (this instanceof $Symbol) throw TypeError('Symbol is not a constructor');
    var description = !arguments.length || arguments[0] === undefined ? undefined : String(arguments[0]);
    var tag = uid(description);
    var setter = function (value) {
      if (this === ObjectPrototype) setter.call(ObjectPrototypeSymbols, value);
      if (has(this, HIDDEN) && has(this[HIDDEN], tag)) this[HIDDEN][tag] = false;
      setSymbolDescriptor(this, tag, createPropertyDescriptor(1, value));
    };
    if (DESCRIPTORS && USE_SETTER) setSymbolDescriptor(ObjectPrototype, tag, { configurable: true, set: setter });
    return wrap(tag, description);
  };

  redefine($Symbol[PROTOTYPE], 'toString', function toString() {
    return getInternalState(this).tag;
  });

  redefine($Symbol, 'withoutSetter', function (description) {
    return wrap(uid(description), description);
  });

  propertyIsEnumerableModule.f = $propertyIsEnumerable;
  definePropertyModule.f = $defineProperty;
  getOwnPropertyDescriptorModule.f = $getOwnPropertyDescriptor;
  getOwnPropertyNamesModule.f = getOwnPropertyNamesExternal.f = $getOwnPropertyNames;
  getOwnPropertySymbolsModule.f = $getOwnPropertySymbols;

  wrappedWellKnownSymbolModule.f = function (name) {
    return wrap(wellKnownSymbol(name), name);
  };

  if (DESCRIPTORS) {
    // https://github.com/tc39/proposal-Symbol-description
    nativeDefineProperty($Symbol[PROTOTYPE], 'description', {
      configurable: true,
      get: function description() {
        return getInternalState(this).description;
      }
    });
    if (!IS_PURE) {
      redefine(ObjectPrototype, 'propertyIsEnumerable', $propertyIsEnumerable, { unsafe: true });
    }
  }
}

$({ global: true, wrap: true, forced: !NATIVE_SYMBOL, sham: !NATIVE_SYMBOL }, {
  Symbol: $Symbol
});

$forEach(objectKeys(WellKnownSymbolsStore), function (name) {
  defineWellKnownSymbol(name);
});

$({ target: SYMBOL, stat: true, forced: !NATIVE_SYMBOL }, {
  // `Symbol.for` method
  // https://tc39.github.io/ecma262/#sec-symbol.for
  'for': function (key) {
    var string = String(key);
    if (has(StringToSymbolRegistry, string)) return StringToSymbolRegistry[string];
    var symbol = $Symbol(string);
    StringToSymbolRegistry[string] = symbol;
    SymbolToStringRegistry[symbol] = string;
    return symbol;
  },
  // `Symbol.keyFor` method
  // https://tc39.github.io/ecma262/#sec-symbol.keyfor
  keyFor: function keyFor(sym) {
    if (!isSymbol(sym)) throw TypeError(sym + ' is not a symbol');
    if (has(SymbolToStringRegistry, sym)) return SymbolToStringRegistry[sym];
  },
  useSetter: function () { USE_SETTER = true; },
  useSimple: function () { USE_SETTER = false; }
});

$({ target: 'Object', stat: true, forced: !NATIVE_SYMBOL, sham: !DESCRIPTORS }, {
  // `Object.create` method
  // https://tc39.github.io/ecma262/#sec-object.create
  create: $create,
  // `Object.defineProperty` method
  // https://tc39.github.io/ecma262/#sec-object.defineproperty
  defineProperty: $defineProperty,
  // `Object.defineProperties` method
  // https://tc39.github.io/ecma262/#sec-object.defineproperties
  defineProperties: $defineProperties,
  // `Object.getOwnPropertyDescriptor` method
  // https://tc39.github.io/ecma262/#sec-object.getownpropertydescriptors
  getOwnPropertyDescriptor: $getOwnPropertyDescriptor
});

$({ target: 'Object', stat: true, forced: !NATIVE_SYMBOL }, {
  // `Object.getOwnPropertyNames` method
  // https://tc39.github.io/ecma262/#sec-object.getownpropertynames
  getOwnPropertyNames: $getOwnPropertyNames,
  // `Object.getOwnPropertySymbols` method
  // https://tc39.github.io/ecma262/#sec-object.getownpropertysymbols
  getOwnPropertySymbols: $getOwnPropertySymbols
});

// Chrome 38 and 39 `Object.getOwnPropertySymbols` fails on primitives
// https://bugs.chromium.org/p/v8/issues/detail?id=3443
$({ target: 'Object', stat: true, forced: fails(function () { getOwnPropertySymbolsModule.f(1); }) }, {
  getOwnPropertySymbols: function getOwnPropertySymbols(it) {
    return getOwnPropertySymbolsModule.f(toObject(it));
  }
});

// `JSON.stringify` method behavior with symbols
// https://tc39.github.io/ecma262/#sec-json.stringify
if ($stringify) {
  var FORCED_JSON_STRINGIFY = !NATIVE_SYMBOL || fails(function () {
    var symbol = $Symbol();
    // MS Edge converts symbol values to JSON as {}
    return $stringify([symbol]) != '[null]'
      // WebKit converts symbol values to JSON as null
      || $stringify({ a: symbol }) != '{}'
      // V8 throws on boxed symbols
      || $stringify(Object(symbol)) != '{}';
  });

  $({ target: 'JSON', stat: true, forced: FORCED_JSON_STRINGIFY }, {
    // eslint-disable-next-line no-unused-vars
    stringify: function stringify(it, replacer, space) {
      var args = [it];
      var index = 1;
      var $replacer;
      while (arguments.length > index) args.push(arguments[index++]);
      $replacer = replacer;
      if (!isObject(replacer) && it === undefined || isSymbol(it)) return; // IE8 returns string on undefined
      if (!isArray(replacer)) replacer = function (key, value) {
        if (typeof $replacer == 'function') value = $replacer.call(this, key, value);
        if (!isSymbol(value)) return value;
      };
      args[1] = replacer;
      return $stringify.apply(null, args);
    }
  });
}

// `Symbol.prototype[@@toPrimitive]` method
// https://tc39.github.io/ecma262/#sec-symbol.prototype-@@toprimitive
if (!$Symbol[PROTOTYPE][TO_PRIMITIVE]) {
  createNonEnumerableProperty($Symbol[PROTOTYPE], TO_PRIMITIVE, $Symbol[PROTOTYPE].valueOf);
}
// `Symbol.prototype[@@toStringTag]` property
// https://tc39.github.io/ecma262/#sec-symbol.prototype-@@tostringtag
setToStringTag($Symbol, SYMBOL);

hiddenKeys[HIDDEN] = true;


/***/ }),

/***/ "a640":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var fails = __webpack_require__("d039");

module.exports = function (METHOD_NAME, argument) {
  var method = [][METHOD_NAME];
  return !!method && fails(function () {
    // eslint-disable-next-line no-useless-call,no-throw-literal
    method.call(null, argument || function () { throw 1; }, 1);
  });
};


/***/ }),

/***/ "a691":
/***/ (function(module, exports) {

var ceil = Math.ceil;
var floor = Math.floor;

// `ToInteger` abstract operation
// https://tc39.github.io/ecma262/#sec-tointeger
module.exports = function (argument) {
  return isNaN(argument = +argument) ? 0 : (argument > 0 ? floor : ceil)(argument);
};


/***/ }),

/***/ "a9e3":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var DESCRIPTORS = __webpack_require__("83ab");
var global = __webpack_require__("da84");
var isForced = __webpack_require__("94ca");
var redefine = __webpack_require__("6eeb");
var has = __webpack_require__("5135");
var classof = __webpack_require__("c6b6");
var inheritIfRequired = __webpack_require__("7156");
var toPrimitive = __webpack_require__("c04e");
var fails = __webpack_require__("d039");
var create = __webpack_require__("7c73");
var getOwnPropertyNames = __webpack_require__("241c").f;
var getOwnPropertyDescriptor = __webpack_require__("06cf").f;
var defineProperty = __webpack_require__("9bf2").f;
var trim = __webpack_require__("58a8").trim;

var NUMBER = 'Number';
var NativeNumber = global[NUMBER];
var NumberPrototype = NativeNumber.prototype;

// Opera ~12 has broken Object#toString
var BROKEN_CLASSOF = classof(create(NumberPrototype)) == NUMBER;

// `ToNumber` abstract operation
// https://tc39.github.io/ecma262/#sec-tonumber
var toNumber = function (argument) {
  var it = toPrimitive(argument, false);
  var first, third, radix, maxCode, digits, length, index, code;
  if (typeof it == 'string' && it.length > 2) {
    it = trim(it);
    first = it.charCodeAt(0);
    if (first === 43 || first === 45) {
      third = it.charCodeAt(2);
      if (third === 88 || third === 120) return NaN; // Number('+0x1') should be NaN, old V8 fix
    } else if (first === 48) {
      switch (it.charCodeAt(1)) {
        case 66: case 98: radix = 2; maxCode = 49; break; // fast equal of /^0b[01]+$/i
        case 79: case 111: radix = 8; maxCode = 55; break; // fast equal of /^0o[0-7]+$/i
        default: return +it;
      }
      digits = it.slice(2);
      length = digits.length;
      for (index = 0; index < length; index++) {
        code = digits.charCodeAt(index);
        // parseInt parses a string to a first unavailable symbol
        // but ToNumber should return NaN if a string contains unavailable symbols
        if (code < 48 || code > maxCode) return NaN;
      } return parseInt(digits, radix);
    }
  } return +it;
};

// `Number` constructor
// https://tc39.github.io/ecma262/#sec-number-constructor
if (isForced(NUMBER, !NativeNumber(' 0o1') || !NativeNumber('0b1') || NativeNumber('+0x1'))) {
  var NumberWrapper = function Number(value) {
    var it = arguments.length < 1 ? 0 : value;
    var dummy = this;
    return dummy instanceof NumberWrapper
      // check on 1..constructor(foo) case
      && (BROKEN_CLASSOF ? fails(function () { NumberPrototype.valueOf.call(dummy); }) : classof(dummy) != NUMBER)
        ? inheritIfRequired(new NativeNumber(toNumber(it)), dummy, NumberWrapper) : toNumber(it);
  };
  for (var keys = DESCRIPTORS ? getOwnPropertyNames(NativeNumber) : (
    // ES3:
    'MAX_VALUE,MIN_VALUE,NaN,NEGATIVE_INFINITY,POSITIVE_INFINITY,' +
    // ES2015 (in case, if modules with ES2015 Number statics required before):
    'EPSILON,isFinite,isInteger,isNaN,isSafeInteger,MAX_SAFE_INTEGER,' +
    'MIN_SAFE_INTEGER,parseFloat,parseInt,isInteger,' +
    // ESNext
    'fromString,range'
  ).split(','), j = 0, key; keys.length > j; j++) {
    if (has(NativeNumber, key = keys[j]) && !has(NumberWrapper, key)) {
      defineProperty(NumberWrapper, key, getOwnPropertyDescriptor(NativeNumber, key));
    }
  }
  NumberWrapper.prototype = NumberPrototype;
  NumberPrototype.constructor = NumberWrapper;
  redefine(global, NUMBER, NumberWrapper);
}


/***/ }),

/***/ "aae9":
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__("eb7e");
if(typeof content === 'string') content = [[module.i, content, '']];
if(content.locals) module.exports = content.locals;
// add CSS to Shadow Root
var add = __webpack_require__("35d6").default
module.exports.__inject__ = function (shadowRoot) {
  add("772c1297", content, shadowRoot)
};

/***/ }),

/***/ "ac1f":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__("23e7");
var exec = __webpack_require__("9263");

$({ target: 'RegExp', proto: true, forced: /./.exec !== exec }, {
  exec: exec
});


/***/ }),

/***/ "ac9e":
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__("99af");

__webpack_require__("cca6");

var _objectSpread = __webpack_require__("ded3");

var _objectWithoutProperties = __webpack_require__("4082");

module.exports = {
  functional: true,
  render: function render(_h, _vm) {
    var _c = _vm._c,
        _v = _vm._v,
        data = _vm.data,
        _vm$children = _vm.children,
        children = _vm$children === void 0 ? [] : _vm$children;

    var classNames = data.class,
        staticClass = data.staticClass,
        style = data.style,
        staticStyle = data.staticStyle,
        _data$attrs = data.attrs,
        attrs = _data$attrs === void 0 ? {} : _data$attrs,
        rest = _objectWithoutProperties(data, ["class", "staticClass", "style", "staticStyle", "attrs"]);

    return _c('svg', _objectSpread({
      class: [classNames, staticClass],
      style: [style, staticStyle],
      attrs: Object.assign({
        "xmlns": "http://www.w3.org/2000/svg",
        "height": "24",
        "width": "24"
      }, attrs)
    }, rest), children.concat([_c('path', {
      attrs: {
        "d": "M0 0h24v24H0V0z",
        "fill": "none"
      }
    }), _c('path', {
      attrs: {
        "fill": "#CFCFCF",
        "d": "M8.59 16.59L13.17 12 8.59 7.41 10 6l6 6-6 6-1.41-1.41z"
      }
    })]));
  }
};

/***/ }),

/***/ "ad6d":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var anObject = __webpack_require__("825a");

// `RegExp.prototype.flags` getter implementation
// https://tc39.github.io/ecma262/#sec-get-regexp.prototype.flags
module.exports = function () {
  var that = anObject(this);
  var result = '';
  if (that.global) result += 'g';
  if (that.ignoreCase) result += 'i';
  if (that.multiline) result += 'm';
  if (that.dotAll) result += 's';
  if (that.unicode) result += 'u';
  if (that.sticky) result += 'y';
  return result;
};


/***/ }),

/***/ "ae40":
/***/ (function(module, exports, __webpack_require__) {

var DESCRIPTORS = __webpack_require__("83ab");
var fails = __webpack_require__("d039");
var has = __webpack_require__("5135");

var defineProperty = Object.defineProperty;
var cache = {};

var thrower = function (it) { throw it; };

module.exports = function (METHOD_NAME, options) {
  if (has(cache, METHOD_NAME)) return cache[METHOD_NAME];
  if (!options) options = {};
  var method = [][METHOD_NAME];
  var ACCESSORS = has(options, 'ACCESSORS') ? options.ACCESSORS : false;
  var argument0 = has(options, 0) ? options[0] : thrower;
  var argument1 = has(options, 1) ? options[1] : undefined;

  return cache[METHOD_NAME] = !!method && !fails(function () {
    if (ACCESSORS && !DESCRIPTORS) return true;
    var O = { length: -1 };

    if (ACCESSORS) defineProperty(O, 1, { enumerable: true, get: thrower });
    else O[1] = 1;

    method.call(O, argument0, argument1);
  });
};


/***/ }),

/***/ "ae93":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var getPrototypeOf = __webpack_require__("e163");
var createNonEnumerableProperty = __webpack_require__("9112");
var has = __webpack_require__("5135");
var wellKnownSymbol = __webpack_require__("b622");
var IS_PURE = __webpack_require__("c430");

var ITERATOR = wellKnownSymbol('iterator');
var BUGGY_SAFARI_ITERATORS = false;

var returnThis = function () { return this; };

// `%IteratorPrototype%` object
// https://tc39.github.io/ecma262/#sec-%iteratorprototype%-object
var IteratorPrototype, PrototypeOfArrayIteratorPrototype, arrayIterator;

if ([].keys) {
  arrayIterator = [].keys();
  // Safari 8 has buggy iterators w/o `next`
  if (!('next' in arrayIterator)) BUGGY_SAFARI_ITERATORS = true;
  else {
    PrototypeOfArrayIteratorPrototype = getPrototypeOf(getPrototypeOf(arrayIterator));
    if (PrototypeOfArrayIteratorPrototype !== Object.prototype) IteratorPrototype = PrototypeOfArrayIteratorPrototype;
  }
}

if (IteratorPrototype == undefined) IteratorPrototype = {};

// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()
if (!IS_PURE && !has(IteratorPrototype, ITERATOR)) {
  createNonEnumerableProperty(IteratorPrototype, ITERATOR, returnThis);
}

module.exports = {
  IteratorPrototype: IteratorPrototype,
  BUGGY_SAFARI_ITERATORS: BUGGY_SAFARI_ITERATORS
};


/***/ }),

/***/ "b041":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var TO_STRING_TAG_SUPPORT = __webpack_require__("00ee");
var classof = __webpack_require__("f5df");

// `Object.prototype.toString` method implementation
// https://tc39.github.io/ecma262/#sec-object.prototype.tostring
module.exports = TO_STRING_TAG_SUPPORT ? {}.toString : function toString() {
  return '[object ' + classof(this) + ']';
};


/***/ }),

/***/ "b0c0":
/***/ (function(module, exports, __webpack_require__) {

var DESCRIPTORS = __webpack_require__("83ab");
var defineProperty = __webpack_require__("9bf2").f;

var FunctionPrototype = Function.prototype;
var FunctionPrototypeToString = FunctionPrototype.toString;
var nameRE = /^\s*function ([^ (]*)/;
var NAME = 'name';

// Function instances `.name` property
// https://tc39.github.io/ecma262/#sec-function-instances-name
if (DESCRIPTORS && !(NAME in FunctionPrototype)) {
  defineProperty(FunctionPrototype, NAME, {
    configurable: true,
    get: function () {
      try {
        return FunctionPrototypeToString.call(this).match(nameRE)[1];
      } catch (error) {
        return '';
      }
    }
  });
}


/***/ }),

/***/ "b50d":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__("c532");
var settle = __webpack_require__("467f");
var buildURL = __webpack_require__("30b5");
var buildFullPath = __webpack_require__("83b9");
var parseHeaders = __webpack_require__("c345");
var isURLSameOrigin = __webpack_require__("3934");
var createError = __webpack_require__("2d83");

module.exports = function xhrAdapter(config) {
  return new Promise(function dispatchXhrRequest(resolve, reject) {
    var requestData = config.data;
    var requestHeaders = config.headers;

    if (utils.isFormData(requestData)) {
      delete requestHeaders['Content-Type']; // Let the browser set it
    }

    var request = new XMLHttpRequest();

    // HTTP basic authentication
    if (config.auth) {
      var username = config.auth.username || '';
      var password = config.auth.password || '';
      requestHeaders.Authorization = 'Basic ' + btoa(username + ':' + password);
    }

    var fullPath = buildFullPath(config.baseURL, config.url);
    request.open(config.method.toUpperCase(), buildURL(fullPath, config.params, config.paramsSerializer), true);

    // Set the request timeout in MS
    request.timeout = config.timeout;

    // Listen for ready state
    request.onreadystatechange = function handleLoad() {
      if (!request || request.readyState !== 4) {
        return;
      }

      // The request errored out and we didn't get a response, this will be
      // handled by onerror instead
      // With one exception: request that using file: protocol, most browsers
      // will return status as 0 even though it's a successful request
      if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {
        return;
      }

      // Prepare the response
      var responseHeaders = 'getAllResponseHeaders' in request ? parseHeaders(request.getAllResponseHeaders()) : null;
      var responseData = !config.responseType || config.responseType === 'text' ? request.responseText : request.response;
      var response = {
        data: responseData,
        status: request.status,
        statusText: request.statusText,
        headers: responseHeaders,
        config: config,
        request: request
      };

      settle(resolve, reject, response);

      // Clean up request
      request = null;
    };

    // Handle browser request cancellation (as opposed to a manual cancellation)
    request.onabort = function handleAbort() {
      if (!request) {
        return;
      }

      reject(createError('Request aborted', config, 'ECONNABORTED', request));

      // Clean up request
      request = null;
    };

    // Handle low level network errors
    request.onerror = function handleError() {
      // Real errors are hidden from us by the browser
      // onerror should only fire if it's a network error
      reject(createError('Network Error', config, null, request));

      // Clean up request
      request = null;
    };

    // Handle timeout
    request.ontimeout = function handleTimeout() {
      var timeoutErrorMessage = 'timeout of ' + config.timeout + 'ms exceeded';
      if (config.timeoutErrorMessage) {
        timeoutErrorMessage = config.timeoutErrorMessage;
      }
      reject(createError(timeoutErrorMessage, config, 'ECONNABORTED',
        request));

      // Clean up request
      request = null;
    };

    // Add xsrf header
    // This is only done if running in a standard browser environment.
    // Specifically not if we're in a web worker, or react-native.
    if (utils.isStandardBrowserEnv()) {
      var cookies = __webpack_require__("7aac");

      // Add xsrf header
      var xsrfValue = (config.withCredentials || isURLSameOrigin(fullPath)) && config.xsrfCookieName ?
        cookies.read(config.xsrfCookieName) :
        undefined;

      if (xsrfValue) {
        requestHeaders[config.xsrfHeaderName] = xsrfValue;
      }
    }

    // Add headers to the request
    if ('setRequestHeader' in request) {
      utils.forEach(requestHeaders, function setRequestHeader(val, key) {
        if (typeof requestData === 'undefined' && key.toLowerCase() === 'content-type') {
          // Remove Content-Type if data is undefined
          delete requestHeaders[key];
        } else {
          // Otherwise add header to the request
          request.setRequestHeader(key, val);
        }
      });
    }

    // Add withCredentials to request if needed
    if (!utils.isUndefined(config.withCredentials)) {
      request.withCredentials = !!config.withCredentials;
    }

    // Add responseType to request if needed
    if (config.responseType) {
      try {
        request.responseType = config.responseType;
      } catch (e) {
        // Expected DOMException thrown by browsers not compatible XMLHttpRequest Level 2.
        // But, this can be suppressed for 'json' type as it can be parsed by default 'transformResponse' function.
        if (config.responseType !== 'json') {
          throw e;
        }
      }
    }

    // Handle progress if needed
    if (typeof config.onDownloadProgress === 'function') {
      request.addEventListener('progress', config.onDownloadProgress);
    }

    // Not all browsers support upload events
    if (typeof config.onUploadProgress === 'function' && request.upload) {
      request.upload.addEventListener('progress', config.onUploadProgress);
    }

    if (config.cancelToken) {
      // Handle cancellation
      config.cancelToken.promise.then(function onCanceled(cancel) {
        if (!request) {
          return;
        }

        request.abort();
        reject(cancel);
        // Clean up request
        request = null;
      });
    }

    if (requestData === undefined) {
      requestData = null;
    }

    // Send the request
    request.send(requestData);
  });
};


/***/ }),

/***/ "b575":
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__("da84");
var getOwnPropertyDescriptor = __webpack_require__("06cf").f;
var macrotask = __webpack_require__("2cf4").set;
var IS_IOS = __webpack_require__("1cdc");
var IS_NODE = __webpack_require__("605d");

var MutationObserver = global.MutationObserver || global.WebKitMutationObserver;
var document = global.document;
var process = global.process;
var Promise = global.Promise;
// Node.js 11 shows ExperimentalWarning on getting `queueMicrotask`
var queueMicrotaskDescriptor = getOwnPropertyDescriptor(global, 'queueMicrotask');
var queueMicrotask = queueMicrotaskDescriptor && queueMicrotaskDescriptor.value;

var flush, head, last, notify, toggle, node, promise, then;

// modern engines have queueMicrotask method
if (!queueMicrotask) {
  flush = function () {
    var parent, fn;
    if (IS_NODE && (parent = process.domain)) parent.exit();
    while (head) {
      fn = head.fn;
      head = head.next;
      try {
        fn();
      } catch (error) {
        if (head) notify();
        else last = undefined;
        throw error;
      }
    } last = undefined;
    if (parent) parent.enter();
  };

  // browsers with MutationObserver, except iOS - https://github.com/zloirock/core-js/issues/339
  if (!IS_IOS && !IS_NODE && MutationObserver && document) {
    toggle = true;
    node = document.createTextNode('');
    new MutationObserver(flush).observe(node, { characterData: true });
    notify = function () {
      node.data = toggle = !toggle;
    };
  // environments with maybe non-completely correct, but existent Promise
  } else if (Promise && Promise.resolve) {
    // Promise.resolve without an argument throws an error in LG WebOS 2
    promise = Promise.resolve(undefined);
    then = promise.then;
    notify = function () {
      then.call(promise, flush);
    };
  // Node.js without promises
  } else if (IS_NODE) {
    notify = function () {
      process.nextTick(flush);
    };
  // for other environments - macrotask based on:
  // - setImmediate
  // - MessageChannel
  // - window.postMessag
  // - onreadystatechange
  // - setTimeout
  } else {
    notify = function () {
      // strange IE + webpack dev server bug - use .call(global)
      macrotask.call(global, flush);
    };
  }
}

module.exports = queueMicrotask || function (fn) {
  var task = { fn: fn, next: undefined };
  if (last) last.next = task;
  if (!head) {
    head = task;
    notify();
  } last = task;
};


/***/ }),

/***/ "b622":
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__("da84");
var shared = __webpack_require__("5692");
var has = __webpack_require__("5135");
var uid = __webpack_require__("90e3");
var NATIVE_SYMBOL = __webpack_require__("4930");
var USE_SYMBOL_AS_UID = __webpack_require__("fdbf");

var WellKnownSymbolsStore = shared('wks');
var Symbol = global.Symbol;
var createWellKnownSymbol = USE_SYMBOL_AS_UID ? Symbol : Symbol && Symbol.withoutSetter || uid;

module.exports = function (name) {
  if (!has(WellKnownSymbolsStore, name)) {
    if (NATIVE_SYMBOL && has(Symbol, name)) WellKnownSymbolsStore[name] = Symbol[name];
    else WellKnownSymbolsStore[name] = createWellKnownSymbol('Symbol.' + name);
  } return WellKnownSymbolsStore[name];
};


/***/ }),

/***/ "b64b":
/***/ (function(module, exports, __webpack_require__) {

var $ = __webpack_require__("23e7");
var toObject = __webpack_require__("7b0b");
var nativeKeys = __webpack_require__("df75");
var fails = __webpack_require__("d039");

var FAILS_ON_PRIMITIVES = fails(function () { nativeKeys(1); });

// `Object.keys` method
// https://tc39.github.io/ecma262/#sec-object.keys
$({ target: 'Object', stat: true, forced: FAILS_ON_PRIMITIVES }, {
  keys: function keys(it) {
    return nativeKeys(toObject(it));
  }
});


/***/ }),

/***/ "b727":
/***/ (function(module, exports, __webpack_require__) {

var bind = __webpack_require__("0366");
var IndexedObject = __webpack_require__("44ad");
var toObject = __webpack_require__("7b0b");
var toLength = __webpack_require__("50c4");
var arraySpeciesCreate = __webpack_require__("65f0");

var push = [].push;

// `Array.prototype.{ forEach, map, filter, some, every, find, findIndex, filterOut }` methods implementation
var createMethod = function (TYPE) {
  var IS_MAP = TYPE == 1;
  var IS_FILTER = TYPE == 2;
  var IS_SOME = TYPE == 3;
  var IS_EVERY = TYPE == 4;
  var IS_FIND_INDEX = TYPE == 6;
  var IS_FILTER_OUT = TYPE == 7;
  var NO_HOLES = TYPE == 5 || IS_FIND_INDEX;
  return function ($this, callbackfn, that, specificCreate) {
    var O = toObject($this);
    var self = IndexedObject(O);
    var boundFunction = bind(callbackfn, that, 3);
    var length = toLength(self.length);
    var index = 0;
    var create = specificCreate || arraySpeciesCreate;
    var target = IS_MAP ? create($this, length) : IS_FILTER || IS_FILTER_OUT ? create($this, 0) : undefined;
    var value, result;
    for (;length > index; index++) if (NO_HOLES || index in self) {
      value = self[index];
      result = boundFunction(value, index, O);
      if (TYPE) {
        if (IS_MAP) target[index] = result; // map
        else if (result) switch (TYPE) {
          case 3: return true;              // some
          case 5: return value;             // find
          case 6: return index;             // findIndex
          case 2: push.call(target, value); // filter
        } else switch (TYPE) {
          case 4: return false;             // every
          case 7: push.call(target, value); // filterOut
        }
      }
    }
    return IS_FIND_INDEX ? -1 : IS_SOME || IS_EVERY ? IS_EVERY : target;
  };
};

module.exports = {
  // `Array.prototype.forEach` method
  // https://tc39.github.io/ecma262/#sec-array.prototype.foreach
  forEach: createMethod(0),
  // `Array.prototype.map` method
  // https://tc39.github.io/ecma262/#sec-array.prototype.map
  map: createMethod(1),
  // `Array.prototype.filter` method
  // https://tc39.github.io/ecma262/#sec-array.prototype.filter
  filter: createMethod(2),
  // `Array.prototype.some` method
  // https://tc39.github.io/ecma262/#sec-array.prototype.some
  some: createMethod(3),
  // `Array.prototype.every` method
  // https://tc39.github.io/ecma262/#sec-array.prototype.every
  every: createMethod(4),
  // `Array.prototype.find` method
  // https://tc39.github.io/ecma262/#sec-array.prototype.find
  find: createMethod(5),
  // `Array.prototype.findIndex` method
  // https://tc39.github.io/ecma262/#sec-array.prototype.findIndex
  findIndex: createMethod(6),
  // `Array.prototype.filterOut` method
  // https://github.com/tc39/proposal-array-filtering
  filterOut: createMethod(7)
};


/***/ }),

/***/ "b8b6":
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__("99af");

__webpack_require__("cca6");

var _objectSpread = __webpack_require__("ded3");

var _objectWithoutProperties = __webpack_require__("4082");

module.exports = {
  functional: true,
  render: function render(_h, _vm) {
    var _c = _vm._c,
        _v = _vm._v,
        data = _vm.data,
        _vm$children = _vm.children,
        children = _vm$children === void 0 ? [] : _vm$children;

    var classNames = data.class,
        staticClass = data.staticClass,
        style = data.style,
        staticStyle = data.staticStyle,
        _data$attrs = data.attrs,
        attrs = _data$attrs === void 0 ? {} : _data$attrs,
        rest = _objectWithoutProperties(data, ["class", "staticClass", "style", "staticStyle", "attrs"]);

    return _c('svg', _objectSpread({
      class: [classNames, staticClass],
      style: [style, staticStyle],
      attrs: Object.assign({
        "xmlns": "http://www.w3.org/2000/svg",
        "height": "24",
        "width": "24"
      }, attrs)
    }, rest), children.concat([_c('path', {
      attrs: {
        "d": "M0 0h24v24H0V0z",
        "fill": "none"
      }
    }), _c('path', {
      attrs: {
        "fill": "#CFCFCF",
        "d": "M15.41 16.59L10.83 12l4.58-4.59L14 6l-6 6 6 6 1.41-1.41z"
      }
    })]));
  }
};

/***/ }),

/***/ "bb2f":
/***/ (function(module, exports, __webpack_require__) {

var fails = __webpack_require__("d039");

module.exports = !fails(function () {
  return Object.isExtensible(Object.preventExtensions({}));
});


/***/ }),

/***/ "bb83":
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__("723d");
if(typeof content === 'string') content = [[module.i, content, '']];
if(content.locals) module.exports = content.locals;
// add CSS to Shadow Root
var add = __webpack_require__("35d6").default
module.exports.__inject__ = function (shadowRoot) {
  add("6be7b163", content, shadowRoot)
};

/***/ }),

/***/ "bc3a":
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__("cee4");

/***/ }),

/***/ "c04e":
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__("861d");

// `ToPrimitive` abstract operation
// https://tc39.github.io/ecma262/#sec-toprimitive
// instead of the ES6 spec version, we didn't implement @@toPrimitive case
// and the second argument - flag - preferred type is a string
module.exports = function (input, PREFERRED_STRING) {
  if (!isObject(input)) return input;
  var fn, val;
  if (PREFERRED_STRING && typeof (fn = input.toString) == 'function' && !isObject(val = fn.call(input))) return val;
  if (typeof (fn = input.valueOf) == 'function' && !isObject(val = fn.call(input))) return val;
  if (!PREFERRED_STRING && typeof (fn = input.toString) == 'function' && !isObject(val = fn.call(input))) return val;
  throw TypeError("Can't convert object to primitive value");
};


/***/ }),

/***/ "c345":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__("c532");

// Headers whose duplicates are ignored by node
// c.f. https://nodejs.org/api/http.html#http_message_headers
var ignoreDuplicateOf = [
  'age', 'authorization', 'content-length', 'content-type', 'etag',
  'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since',
  'last-modified', 'location', 'max-forwards', 'proxy-authorization',
  'referer', 'retry-after', 'user-agent'
];

/**
 * Parse headers into an object
 *
 * ```
 * Date: Wed, 27 Aug 2014 08:58:49 GMT
 * Content-Type: application/json
 * Connection: keep-alive
 * Transfer-Encoding: chunked
 * ```
 *
 * @param {String} headers Headers needing to be parsed
 * @returns {Object} Headers parsed into an object
 */
module.exports = function parseHeaders(headers) {
  var parsed = {};
  var key;
  var val;
  var i;

  if (!headers) { return parsed; }

  utils.forEach(headers.split('\n'), function parser(line) {
    i = line.indexOf(':');
    key = utils.trim(line.substr(0, i)).toLowerCase();
    val = utils.trim(line.substr(i + 1));

    if (key) {
      if (parsed[key] && ignoreDuplicateOf.indexOf(key) >= 0) {
        return;
      }
      if (key === 'set-cookie') {
        parsed[key] = (parsed[key] ? parsed[key] : []).concat([val]);
      } else {
        parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;
      }
    }
  });

  return parsed;
};


/***/ }),

/***/ "c401":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__("c532");

/**
 * Transform the data for a request or a response
 *
 * @param {Object|String} data The data to be transformed
 * @param {Array} headers The headers for the request or response
 * @param {Array|Function} fns A single function or Array of functions
 * @returns {*} The resulting transformed data
 */
module.exports = function transformData(data, headers, fns) {
  /*eslint no-param-reassign:0*/
  utils.forEach(fns, function transform(fn) {
    data = fn(data, headers);
  });

  return data;
};


/***/ }),

/***/ "c430":
/***/ (function(module, exports) {

module.exports = false;


/***/ }),

/***/ "c532":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var bind = __webpack_require__("1d2b");

/*global toString:true*/

// utils is a library of generic helper functions non-specific to axios

var toString = Object.prototype.toString;

/**
 * Determine if a value is an Array
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is an Array, otherwise false
 */
function isArray(val) {
  return toString.call(val) === '[object Array]';
}

/**
 * Determine if a value is undefined
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if the value is undefined, otherwise false
 */
function isUndefined(val) {
  return typeof val === 'undefined';
}

/**
 * Determine if a value is a Buffer
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a Buffer, otherwise false
 */
function isBuffer(val) {
  return val !== null && !isUndefined(val) && val.constructor !== null && !isUndefined(val.constructor)
    && typeof val.constructor.isBuffer === 'function' && val.constructor.isBuffer(val);
}

/**
 * Determine if a value is an ArrayBuffer
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is an ArrayBuffer, otherwise false
 */
function isArrayBuffer(val) {
  return toString.call(val) === '[object ArrayBuffer]';
}

/**
 * Determine if a value is a FormData
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is an FormData, otherwise false
 */
function isFormData(val) {
  return (typeof FormData !== 'undefined') && (val instanceof FormData);
}

/**
 * Determine if a value is a view on an ArrayBuffer
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false
 */
function isArrayBufferView(val) {
  var result;
  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {
    result = ArrayBuffer.isView(val);
  } else {
    result = (val) && (val.buffer) && (val.buffer instanceof ArrayBuffer);
  }
  return result;
}

/**
 * Determine if a value is a String
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a String, otherwise false
 */
function isString(val) {
  return typeof val === 'string';
}

/**
 * Determine if a value is a Number
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a Number, otherwise false
 */
function isNumber(val) {
  return typeof val === 'number';
}

/**
 * Determine if a value is an Object
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is an Object, otherwise false
 */
function isObject(val) {
  return val !== null && typeof val === 'object';
}

/**
 * Determine if a value is a Date
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a Date, otherwise false
 */
function isDate(val) {
  return toString.call(val) === '[object Date]';
}

/**
 * Determine if a value is a File
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a File, otherwise false
 */
function isFile(val) {
  return toString.call(val) === '[object File]';
}

/**
 * Determine if a value is a Blob
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a Blob, otherwise false
 */
function isBlob(val) {
  return toString.call(val) === '[object Blob]';
}

/**
 * Determine if a value is a Function
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a Function, otherwise false
 */
function isFunction(val) {
  return toString.call(val) === '[object Function]';
}

/**
 * Determine if a value is a Stream
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a Stream, otherwise false
 */
function isStream(val) {
  return isObject(val) && isFunction(val.pipe);
}

/**
 * Determine if a value is a URLSearchParams object
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a URLSearchParams object, otherwise false
 */
function isURLSearchParams(val) {
  return typeof URLSearchParams !== 'undefined' && val instanceof URLSearchParams;
}

/**
 * Trim excess whitespace off the beginning and end of a string
 *
 * @param {String} str The String to trim
 * @returns {String} The String freed of excess whitespace
 */
function trim(str) {
  return str.replace(/^\s*/, '').replace(/\s*$/, '');
}

/**
 * Determine if we're running in a standard browser environment
 *
 * This allows axios to run in a web worker, and react-native.
 * Both environments support XMLHttpRequest, but not fully standard globals.
 *
 * web workers:
 *  typeof window -> undefined
 *  typeof document -> undefined
 *
 * react-native:
 *  navigator.product -> 'ReactNative'
 * nativescript
 *  navigator.product -> 'NativeScript' or 'NS'
 */
function isStandardBrowserEnv() {
  if (typeof navigator !== 'undefined' && (navigator.product === 'ReactNative' ||
                                           navigator.product === 'NativeScript' ||
                                           navigator.product === 'NS')) {
    return false;
  }
  return (
    typeof window !== 'undefined' &&
    typeof document !== 'undefined'
  );
}

/**
 * Iterate over an Array or an Object invoking a function for each item.
 *
 * If `obj` is an Array callback will be called passing
 * the value, index, and complete array for each item.
 *
 * If 'obj' is an Object callback will be called passing
 * the value, key, and complete object for each property.
 *
 * @param {Object|Array} obj The object to iterate
 * @param {Function} fn The callback to invoke for each item
 */
function forEach(obj, fn) {
  // Don't bother if no value provided
  if (obj === null || typeof obj === 'undefined') {
    return;
  }

  // Force an array if not already something iterable
  if (typeof obj !== 'object') {
    /*eslint no-param-reassign:0*/
    obj = [obj];
  }

  if (isArray(obj)) {
    // Iterate over array values
    for (var i = 0, l = obj.length; i < l; i++) {
      fn.call(null, obj[i], i, obj);
    }
  } else {
    // Iterate over object keys
    for (var key in obj) {
      if (Object.prototype.hasOwnProperty.call(obj, key)) {
        fn.call(null, obj[key], key, obj);
      }
    }
  }
}

/**
 * Accepts varargs expecting each argument to be an object, then
 * immutably merges the properties of each object and returns result.
 *
 * When multiple objects contain the same key the later object in
 * the arguments list will take precedence.
 *
 * Example:
 *
 * ```js
 * var result = merge({foo: 123}, {foo: 456});
 * console.log(result.foo); // outputs 456
 * ```
 *
 * @param {Object} obj1 Object to merge
 * @returns {Object} Result of all merge properties
 */
function merge(/* obj1, obj2, obj3, ... */) {
  var result = {};
  function assignValue(val, key) {
    if (typeof result[key] === 'object' && typeof val === 'object') {
      result[key] = merge(result[key], val);
    } else {
      result[key] = val;
    }
  }

  for (var i = 0, l = arguments.length; i < l; i++) {
    forEach(arguments[i], assignValue);
  }
  return result;
}

/**
 * Function equal to merge with the difference being that no reference
 * to original objects is kept.
 *
 * @see merge
 * @param {Object} obj1 Object to merge
 * @returns {Object} Result of all merge properties
 */
function deepMerge(/* obj1, obj2, obj3, ... */) {
  var result = {};
  function assignValue(val, key) {
    if (typeof result[key] === 'object' && typeof val === 'object') {
      result[key] = deepMerge(result[key], val);
    } else if (typeof val === 'object') {
      result[key] = deepMerge({}, val);
    } else {
      result[key] = val;
    }
  }

  for (var i = 0, l = arguments.length; i < l; i++) {
    forEach(arguments[i], assignValue);
  }
  return result;
}

/**
 * Extends object a by mutably adding to it the properties of object b.
 *
 * @param {Object} a The object to be extended
 * @param {Object} b The object to copy properties from
 * @param {Object} thisArg The object to bind function to
 * @return {Object} The resulting value of object a
 */
function extend(a, b, thisArg) {
  forEach(b, function assignValue(val, key) {
    if (thisArg && typeof val === 'function') {
      a[key] = bind(val, thisArg);
    } else {
      a[key] = val;
    }
  });
  return a;
}

module.exports = {
  isArray: isArray,
  isArrayBuffer: isArrayBuffer,
  isBuffer: isBuffer,
  isFormData: isFormData,
  isArrayBufferView: isArrayBufferView,
  isString: isString,
  isNumber: isNumber,
  isObject: isObject,
  isUndefined: isUndefined,
  isDate: isDate,
  isFile: isFile,
  isBlob: isBlob,
  isFunction: isFunction,
  isStream: isStream,
  isURLSearchParams: isURLSearchParams,
  isStandardBrowserEnv: isStandardBrowserEnv,
  forEach: forEach,
  merge: merge,
  deepMerge: deepMerge,
  extend: extend,
  trim: trim
};


/***/ }),

/***/ "c69d":
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__("99af");

__webpack_require__("cca6");

var _objectSpread = __webpack_require__("ded3");

var _objectWithoutProperties = __webpack_require__("4082");

module.exports = {
  functional: true,
  render: function render(_h, _vm) {
    var _c = _vm._c,
        _v = _vm._v,
        data = _vm.data,
        _vm$children = _vm.children,
        children = _vm$children === void 0 ? [] : _vm$children;

    var classNames = data.class,
        staticClass = data.staticClass,
        style = data.style,
        staticStyle = data.staticStyle,
        _data$attrs = data.attrs,
        attrs = _data$attrs === void 0 ? {} : _data$attrs,
        rest = _objectWithoutProperties(data, ["class", "staticClass", "style", "staticStyle", "attrs"]);

    return _c('svg', _objectSpread({
      class: [classNames, staticClass],
      style: [style, staticStyle],
      attrs: Object.assign({
        "xmlns": "http://www.w3.org/2000/svg",
        "width": "18.999",
        "height": "11.664"
      }, attrs)
    }, rest), children.concat([_c('defs'), _c('path', {
      staticClass: "a",
      attrs: {
        "d": "M0 0v5h5V0zm0 6.665v5h5v-5zM7 0v5h5V0zm0 6.665v5h5v-5zM14 0v5h5V0zm0 6.665v5h5v-5z"
      }
    })]));
  }
};

/***/ }),

/***/ "c6b6":
/***/ (function(module, exports) {

var toString = {}.toString;

module.exports = function (it) {
  return toString.call(it).slice(8, -1);
};


/***/ }),

/***/ "c6cd":
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__("da84");
var setGlobal = __webpack_require__("ce4e");

var SHARED = '__core-js_shared__';
var store = global[SHARED] || setGlobal(SHARED, {});

module.exports = store;


/***/ }),

/***/ "c8af":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__("c532");

module.exports = function normalizeHeaderName(headers, normalizedName) {
  utils.forEach(headers, function processHeader(value, name) {
    if (name !== normalizedName && name.toUpperCase() === normalizedName.toUpperCase()) {
      headers[normalizedName] = value;
      delete headers[name];
    }
  });
};


/***/ }),

/***/ "c8ba":
/***/ (function(module, exports) {

var g;

// This works in non-strict mode
g = (function() {
	return this;
})();

try {
	// This works if eval is allowed (see CSP)
	g = g || new Function("return this")();
} catch (e) {
	// This works if the window reference is available
	if (typeof window === "object") g = window;
}

// g can still be undefined, but nothing to do about it...
// We return undefined, instead of nothing here, so it's
// easier to handle this case. if(!global) { ...}

module.exports = g;


/***/ }),

/***/ "c975":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__("23e7");
var $indexOf = __webpack_require__("4d64").indexOf;
var arrayMethodIsStrict = __webpack_require__("a640");
var arrayMethodUsesToLength = __webpack_require__("ae40");

var nativeIndexOf = [].indexOf;

var NEGATIVE_ZERO = !!nativeIndexOf && 1 / [1].indexOf(1, -0) < 0;
var STRICT_METHOD = arrayMethodIsStrict('indexOf');
var USES_TO_LENGTH = arrayMethodUsesToLength('indexOf', { ACCESSORS: true, 1: 0 });

// `Array.prototype.indexOf` method
// https://tc39.github.io/ecma262/#sec-array.prototype.indexof
$({ target: 'Array', proto: true, forced: NEGATIVE_ZERO || !STRICT_METHOD || !USES_TO_LENGTH }, {
  indexOf: function indexOf(searchElement /* , fromIndex = 0 */) {
    return NEGATIVE_ZERO
      // convert -0 to +0
      ? nativeIndexOf.apply(this, arguments) || 0
      : $indexOf(this, searchElement, arguments.length > 1 ? arguments[1] : undefined);
  }
});


/***/ }),

/***/ "ca84":
/***/ (function(module, exports, __webpack_require__) {

var has = __webpack_require__("5135");
var toIndexedObject = __webpack_require__("fc6a");
var indexOf = __webpack_require__("4d64").indexOf;
var hiddenKeys = __webpack_require__("d012");

module.exports = function (object, names) {
  var O = toIndexedObject(object);
  var i = 0;
  var result = [];
  var key;
  for (key in O) !has(hiddenKeys, key) && has(O, key) && result.push(key);
  // Don't enum bug & hidden keys
  while (names.length > i) if (has(O, key = names[i++])) {
    ~indexOf(result, key) || result.push(key);
  }
  return result;
};


/***/ }),

/***/ "cb40":
/***/ (function(module) {

module.exports = JSON.parse("{\"altitude\":\"Höhe\",\"difficulty\":\"Schwierigkeit\",\"location\":\"Ort\",\"phone\":\"Telefon\",\"web\":\"Web\",\"categories\":\"Kategorien\",\"lastChange\":\"Letzte Aktualisierung\",\"scheduleTypes\":{\"1\":\"Geöffnet\",\"2\":\"Geschlossen\"},\"timeCodes\":{\"1\":\"Allgemeine Öffnungszeiten\",\"2\":\"Warme Mahlzeiten\",\"3\":\"Pizza\",\"4\":\"Snacks\"},\"scheduleDays\":{\"Monday\":\"Mo\",\"Tuesday\":\"Di\",\"Wednesday\":\"Mi\",\"Thuresday\":\"Do\",\"Friday\":\"Fr\",\"Saturday\":\"Sa\",\"Sunday\":\"So\"},\"mainType\":\"Hauptkategorie\",\"subType\":\"Unterkategorie\",\"altitudeDifference\":\"Höhenunterschied\",\"altitudeHighestPoint\":\"Höchster Punkt\",\"altitudeLowestPoint\":\"Niedrigster Punkt\",\"Gastronomy\":\"Gastronomie\",\"Activity\":\"Aktivitäten\",\"props\":{},\"yes\":\"Ja\",\"paging\":{\"next\":\"weiter\",\"back\":\"zurück\"},\"noResults\":\"Es konnte nichts gefunden werden. Verfeinern Sie Ihre Suche\",\"recipes\":\"Rezepte\",\"preparationTime\":\"Zubereitungszeit\",\"persons\":\"Personen\",\"back\":\"Zurück\",\"searchRecipe\":\"Rezept suchen\",\"ingredients\":\"Zutaten\",\"noItemData\":\"Keine Daten für die eingestellte Sprache vorhanden\"}");

/***/ }),

/***/ "cc12":
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__("da84");
var isObject = __webpack_require__("861d");

var document = global.document;
// typeof document.createElement is 'object' in old IE
var EXISTS = isObject(document) && isObject(document.createElement);

module.exports = function (it) {
  return EXISTS ? document.createElement(it) : {};
};


/***/ }),

/***/ "cca6":
/***/ (function(module, exports, __webpack_require__) {

var $ = __webpack_require__("23e7");
var assign = __webpack_require__("60da");

// `Object.assign` method
// https://tc39.github.io/ecma262/#sec-object.assign
$({ target: 'Object', stat: true, forced: Object.assign !== assign }, {
  assign: assign
});


/***/ }),

/***/ "cdf9":
/***/ (function(module, exports, __webpack_require__) {

var anObject = __webpack_require__("825a");
var isObject = __webpack_require__("861d");
var newPromiseCapability = __webpack_require__("f069");

module.exports = function (C, x) {
  anObject(C);
  if (isObject(x) && x.constructor === C) return x;
  var promiseCapability = newPromiseCapability.f(C);
  var resolve = promiseCapability.resolve;
  resolve(x);
  return promiseCapability.promise;
};


/***/ }),

/***/ "ce4e":
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__("da84");
var createNonEnumerableProperty = __webpack_require__("9112");

module.exports = function (key, value) {
  try {
    createNonEnumerableProperty(global, key, value);
  } catch (error) {
    global[key] = value;
  } return value;
};


/***/ }),

/***/ "cee4":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__("c532");
var bind = __webpack_require__("1d2b");
var Axios = __webpack_require__("0a06");
var mergeConfig = __webpack_require__("4a7b");
var defaults = __webpack_require__("2444");

/**
 * Create an instance of Axios
 *
 * @param {Object} defaultConfig The default config for the instance
 * @return {Axios} A new instance of Axios
 */
function createInstance(defaultConfig) {
  var context = new Axios(defaultConfig);
  var instance = bind(Axios.prototype.request, context);

  // Copy axios.prototype to instance
  utils.extend(instance, Axios.prototype, context);

  // Copy context to instance
  utils.extend(instance, context);

  return instance;
}

// Create the default instance to be exported
var axios = createInstance(defaults);

// Expose Axios class to allow class inheritance
axios.Axios = Axios;

// Factory for creating new instances
axios.create = function create(instanceConfig) {
  return createInstance(mergeConfig(axios.defaults, instanceConfig));
};

// Expose Cancel & CancelToken
axios.Cancel = __webpack_require__("7a77");
axios.CancelToken = __webpack_require__("8df4");
axios.isCancel = __webpack_require__("2e67");

// Expose all/spread
axios.all = function all(promises) {
  return Promise.all(promises);
};
axios.spread = __webpack_require__("0df6");

module.exports = axios;

// Allow use of default import syntax in TypeScript
module.exports.default = axios;


/***/ }),

/***/ "d012":
/***/ (function(module, exports) {

module.exports = {};


/***/ }),

/***/ "d039":
/***/ (function(module, exports) {

module.exports = function (exec) {
  try {
    return !!exec();
  } catch (error) {
    return true;
  }
};


/***/ }),

/***/ "d066":
/***/ (function(module, exports, __webpack_require__) {

var path = __webpack_require__("428f");
var global = __webpack_require__("da84");

var aFunction = function (variable) {
  return typeof variable == 'function' ? variable : undefined;
};

module.exports = function (namespace, method) {
  return arguments.length < 2 ? aFunction(path[namespace]) || aFunction(global[namespace])
    : path[namespace] && path[namespace][method] || global[namespace] && global[namespace][method];
};


/***/ }),

/***/ "d0bd":
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__("2c93");
if(typeof content === 'string') content = [[module.i, content, '']];
if(content.locals) module.exports = content.locals;
// add CSS to Shadow Root
var add = __webpack_require__("35d6").default
module.exports.__inject__ = function (shadowRoot) {
  add("2e5ad9be", content, shadowRoot)
};

/***/ }),

/***/ "d1e7":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var nativePropertyIsEnumerable = {}.propertyIsEnumerable;
var getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;

// Nashorn ~ JDK8 bug
var NASHORN_BUG = getOwnPropertyDescriptor && !nativePropertyIsEnumerable.call({ 1: 2 }, 1);

// `Object.prototype.propertyIsEnumerable` method implementation
// https://tc39.github.io/ecma262/#sec-object.prototype.propertyisenumerable
exports.f = NASHORN_BUG ? function propertyIsEnumerable(V) {
  var descriptor = getOwnPropertyDescriptor(this, V);
  return !!descriptor && descriptor.enumerable;
} : nativePropertyIsEnumerable;


/***/ }),

/***/ "d28b":
/***/ (function(module, exports, __webpack_require__) {

var defineWellKnownSymbol = __webpack_require__("746f");

// `Symbol.iterator` well-known symbol
// https://tc39.github.io/ecma262/#sec-symbol.iterator
defineWellKnownSymbol('iterator');


/***/ }),

/***/ "d2bb":
/***/ (function(module, exports, __webpack_require__) {

var anObject = __webpack_require__("825a");
var aPossiblePrototype = __webpack_require__("3bbe");

// `Object.setPrototypeOf` method
// https://tc39.github.io/ecma262/#sec-object.setprototypeof
// Works with __proto__ only. Old v8 can't work with null proto objects.
/* eslint-disable no-proto */
module.exports = Object.setPrototypeOf || ('__proto__' in {} ? function () {
  var CORRECT_SETTER = false;
  var test = {};
  var setter;
  try {
    setter = Object.getOwnPropertyDescriptor(Object.prototype, '__proto__').set;
    setter.call(test, []);
    CORRECT_SETTER = test instanceof Array;
  } catch (error) { /* empty */ }
  return function setPrototypeOf(O, proto) {
    anObject(O);
    aPossiblePrototype(proto);
    if (CORRECT_SETTER) setter.call(O, proto);
    else O.__proto__ = proto;
    return O;
  };
}() : undefined);


/***/ }),

/***/ "d3b7":
/***/ (function(module, exports, __webpack_require__) {

var TO_STRING_TAG_SUPPORT = __webpack_require__("00ee");
var redefine = __webpack_require__("6eeb");
var toString = __webpack_require__("b041");

// `Object.prototype.toString` method
// https://tc39.github.io/ecma262/#sec-object.prototype.tostring
if (!TO_STRING_TAG_SUPPORT) {
  redefine(Object.prototype, 'toString', toString, { unsafe: true });
}


/***/ }),

/***/ "d44e":
/***/ (function(module, exports, __webpack_require__) {

var defineProperty = __webpack_require__("9bf2").f;
var has = __webpack_require__("5135");
var wellKnownSymbol = __webpack_require__("b622");

var TO_STRING_TAG = wellKnownSymbol('toStringTag');

module.exports = function (it, TAG, STATIC) {
  if (it && !has(it = STATIC ? it : it.prototype, TO_STRING_TAG)) {
    defineProperty(it, TO_STRING_TAG, { configurable: true, value: TAG });
  }
};


/***/ }),

/***/ "d784":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// TODO: Remove from `core-js@4` since it's moved to entry points
__webpack_require__("ac1f");
var redefine = __webpack_require__("6eeb");
var fails = __webpack_require__("d039");
var wellKnownSymbol = __webpack_require__("b622");
var regexpExec = __webpack_require__("9263");
var createNonEnumerableProperty = __webpack_require__("9112");

var SPECIES = wellKnownSymbol('species');

var REPLACE_SUPPORTS_NAMED_GROUPS = !fails(function () {
  // #replace needs built-in support for named groups.
  // #match works fine because it just return the exec results, even if it has
  // a "grops" property.
  var re = /./;
  re.exec = function () {
    var result = [];
    result.groups = { a: '7' };
    return result;
  };
  return ''.replace(re, '$<a>') !== '7';
});

// IE <= 11 replaces $0 with the whole match, as if it was $&
// https://stackoverflow.com/questions/6024666/getting-ie-to-replace-a-regex-with-the-literal-string-0
var REPLACE_KEEPS_$0 = (function () {
  return 'a'.replace(/./, '$0') === '$0';
})();

var REPLACE = wellKnownSymbol('replace');
// Safari <= 13.0.3(?) substitutes nth capture where n>m with an empty string
var REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE = (function () {
  if (/./[REPLACE]) {
    return /./[REPLACE]('a', '$0') === '';
  }
  return false;
})();

// Chrome 51 has a buggy "split" implementation when RegExp#exec !== nativeExec
// Weex JS has frozen built-in prototypes, so use try / catch wrapper
var SPLIT_WORKS_WITH_OVERWRITTEN_EXEC = !fails(function () {
  var re = /(?:)/;
  var originalExec = re.exec;
  re.exec = function () { return originalExec.apply(this, arguments); };
  var result = 'ab'.split(re);
  return result.length !== 2 || result[0] !== 'a' || result[1] !== 'b';
});

module.exports = function (KEY, length, exec, sham) {
  var SYMBOL = wellKnownSymbol(KEY);

  var DELEGATES_TO_SYMBOL = !fails(function () {
    // String methods call symbol-named RegEp methods
    var O = {};
    O[SYMBOL] = function () { return 7; };
    return ''[KEY](O) != 7;
  });

  var DELEGATES_TO_EXEC = DELEGATES_TO_SYMBOL && !fails(function () {
    // Symbol-named RegExp methods call .exec
    var execCalled = false;
    var re = /a/;

    if (KEY === 'split') {
      // We can't use real regex here since it causes deoptimization
      // and serious performance degradation in V8
      // https://github.com/zloirock/core-js/issues/306
      re = {};
      // RegExp[@@split] doesn't call the regex's exec method, but first creates
      // a new one. We need to return the patched regex when creating the new one.
      re.constructor = {};
      re.constructor[SPECIES] = function () { return re; };
      re.flags = '';
      re[SYMBOL] = /./[SYMBOL];
    }

    re.exec = function () { execCalled = true; return null; };

    re[SYMBOL]('');
    return !execCalled;
  });

  if (
    !DELEGATES_TO_SYMBOL ||
    !DELEGATES_TO_EXEC ||
    (KEY === 'replace' && !(
      REPLACE_SUPPORTS_NAMED_GROUPS &&
      REPLACE_KEEPS_$0 &&
      !REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE
    )) ||
    (KEY === 'split' && !SPLIT_WORKS_WITH_OVERWRITTEN_EXEC)
  ) {
    var nativeRegExpMethod = /./[SYMBOL];
    var methods = exec(SYMBOL, ''[KEY], function (nativeMethod, regexp, str, arg2, forceStringMethod) {
      if (regexp.exec === regexpExec) {
        if (DELEGATES_TO_SYMBOL && !forceStringMethod) {
          // The native String method already delegates to @@method (this
          // polyfilled function), leasing to infinite recursion.
          // We avoid it by directly calling the native @@method method.
          return { done: true, value: nativeRegExpMethod.call(regexp, str, arg2) };
        }
        return { done: true, value: nativeMethod.call(str, regexp, arg2) };
      }
      return { done: false };
    }, {
      REPLACE_KEEPS_$0: REPLACE_KEEPS_$0,
      REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE: REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE
    });
    var stringMethod = methods[0];
    var regexMethod = methods[1];

    redefine(String.prototype, KEY, stringMethod);
    redefine(RegExp.prototype, SYMBOL, length == 2
      // 21.2.5.8 RegExp.prototype[@@replace](string, replaceValue)
      // 21.2.5.11 RegExp.prototype[@@split](string, limit)
      ? function (string, arg) { return regexMethod.call(string, this, arg); }
      // 21.2.5.6 RegExp.prototype[@@match](string)
      // 21.2.5.9 RegExp.prototype[@@search](string)
      : function (string) { return regexMethod.call(string, this); }
    );
  }

  if (sham) createNonEnumerableProperty(RegExp.prototype[SYMBOL], 'sham', true);
};


/***/ }),

/***/ "d81d":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__("23e7");
var $map = __webpack_require__("b727").map;
var arrayMethodHasSpeciesSupport = __webpack_require__("1dde");
var arrayMethodUsesToLength = __webpack_require__("ae40");

var HAS_SPECIES_SUPPORT = arrayMethodHasSpeciesSupport('map');
// FF49- issue
var USES_TO_LENGTH = arrayMethodUsesToLength('map');

// `Array.prototype.map` method
// https://tc39.github.io/ecma262/#sec-array.prototype.map
// with adding support of @@species
$({ target: 'Array', proto: true, forced: !HAS_SPECIES_SUPPORT || !USES_TO_LENGTH }, {
  map: function map(callbackfn /* , thisArg */) {
    return $map(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);
  }
});


/***/ }),

/***/ "d925":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
 * Determines whether the specified URL is absolute
 *
 * @param {string} url The URL to test
 * @returns {boolean} True if the specified URL is absolute, otherwise false
 */
module.exports = function isAbsoluteURL(url) {
  // A URL is considered absolute if it begins with "<scheme>://" or "//" (protocol-relative URL).
  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed
  // by any combination of letters, digits, plus, period, or hyphen.
  return /^([a-z][a-z\d\+\-\.]*:)?\/\//i.test(url);
};


/***/ }),

/***/ "da84":
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(global) {var check = function (it) {
  return it && it.Math == Math && it;
};

// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028
module.exports =
  // eslint-disable-next-line no-undef
  check(typeof globalThis == 'object' && globalThis) ||
  check(typeof window == 'object' && window) ||
  check(typeof self == 'object' && self) ||
  check(typeof global == 'object' && global) ||
  // eslint-disable-next-line no-new-func
  (function () { return this; })() || Function('return this')();

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__("c8ba")))

/***/ }),

/***/ "dbb4":
/***/ (function(module, exports, __webpack_require__) {

var $ = __webpack_require__("23e7");
var DESCRIPTORS = __webpack_require__("83ab");
var ownKeys = __webpack_require__("56ef");
var toIndexedObject = __webpack_require__("fc6a");
var getOwnPropertyDescriptorModule = __webpack_require__("06cf");
var createProperty = __webpack_require__("8418");

// `Object.getOwnPropertyDescriptors` method
// https://tc39.github.io/ecma262/#sec-object.getownpropertydescriptors
$({ target: 'Object', stat: true, sham: !DESCRIPTORS }, {
  getOwnPropertyDescriptors: function getOwnPropertyDescriptors(object) {
    var O = toIndexedObject(object);
    var getOwnPropertyDescriptor = getOwnPropertyDescriptorModule.f;
    var keys = ownKeys(O);
    var result = {};
    var index = 0;
    var key, descriptor;
    while (keys.length > index) {
      descriptor = getOwnPropertyDescriptor(O, key = keys[index++]);
      if (descriptor !== undefined) createProperty(result, key, descriptor);
    }
    return result;
  }
});


/***/ }),

/***/ "ddb0":
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__("da84");
var DOMIterables = __webpack_require__("fdbc");
var ArrayIteratorMethods = __webpack_require__("e260");
var createNonEnumerableProperty = __webpack_require__("9112");
var wellKnownSymbol = __webpack_require__("b622");

var ITERATOR = wellKnownSymbol('iterator');
var TO_STRING_TAG = wellKnownSymbol('toStringTag');
var ArrayValues = ArrayIteratorMethods.values;

for (var COLLECTION_NAME in DOMIterables) {
  var Collection = global[COLLECTION_NAME];
  var CollectionPrototype = Collection && Collection.prototype;
  if (CollectionPrototype) {
    // some Chrome versions have non-configurable methods on DOMTokenList
    if (CollectionPrototype[ITERATOR] !== ArrayValues) try {
      createNonEnumerableProperty(CollectionPrototype, ITERATOR, ArrayValues);
    } catch (error) {
      CollectionPrototype[ITERATOR] = ArrayValues;
    }
    if (!CollectionPrototype[TO_STRING_TAG]) {
      createNonEnumerableProperty(CollectionPrototype, TO_STRING_TAG, COLLECTION_NAME);
    }
    if (DOMIterables[COLLECTION_NAME]) for (var METHOD_NAME in ArrayIteratorMethods) {
      // some Chrome versions have non-configurable methods on DOMTokenList
      if (CollectionPrototype[METHOD_NAME] !== ArrayIteratorMethods[METHOD_NAME]) try {
        createNonEnumerableProperty(CollectionPrototype, METHOD_NAME, ArrayIteratorMethods[METHOD_NAME]);
      } catch (error) {
        CollectionPrototype[METHOD_NAME] = ArrayIteratorMethods[METHOD_NAME];
      }
    }
  }
}


/***/ }),

/***/ "ded3":
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__("a4d3");

__webpack_require__("4de4");

__webpack_require__("4160");

__webpack_require__("e439");

__webpack_require__("dbb4");

__webpack_require__("b64b");

__webpack_require__("159b");

var defineProperty = __webpack_require__("9523");

function ownKeys(object, enumerableOnly) {
  var keys = Object.keys(object);

  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    if (enumerableOnly) symbols = symbols.filter(function (sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    });
    keys.push.apply(keys, symbols);
  }

  return keys;
}

function _objectSpread2(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};

    if (i % 2) {
      ownKeys(Object(source), true).forEach(function (key) {
        defineProperty(target, key, source[key]);
      });
    } else if (Object.getOwnPropertyDescriptors) {
      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
      ownKeys(Object(source)).forEach(function (key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      });
    }
  }

  return target;
}

module.exports = _objectSpread2;

/***/ }),

/***/ "df75":
/***/ (function(module, exports, __webpack_require__) {

var internalObjectKeys = __webpack_require__("ca84");
var enumBugKeys = __webpack_require__("7839");

// `Object.keys` method
// https://tc39.github.io/ecma262/#sec-object.keys
module.exports = Object.keys || function keys(O) {
  return internalObjectKeys(O, enumBugKeys);
};


/***/ }),

/***/ "df7c":
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(process) {// .dirname, .basename, and .extname methods are extracted from Node.js v8.11.1,
// backported and transplited with Babel, with backwards-compat fixes

// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

// resolves . and .. elements in a path array with directory names there
// must be no slashes, empty elements, or device names (c:\) in the array
// (so also no leading and trailing slashes - it does not distinguish
// relative and absolute paths)
function normalizeArray(parts, allowAboveRoot) {
  // if the path tries to go above the root, `up` ends up > 0
  var up = 0;
  for (var i = parts.length - 1; i >= 0; i--) {
    var last = parts[i];
    if (last === '.') {
      parts.splice(i, 1);
    } else if (last === '..') {
      parts.splice(i, 1);
      up++;
    } else if (up) {
      parts.splice(i, 1);
      up--;
    }
  }

  // if the path is allowed to go above the root, restore leading ..s
  if (allowAboveRoot) {
    for (; up--; up) {
      parts.unshift('..');
    }
  }

  return parts;
}

// path.resolve([from ...], to)
// posix version
exports.resolve = function() {
  var resolvedPath = '',
      resolvedAbsolute = false;

  for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {
    var path = (i >= 0) ? arguments[i] : process.cwd();

    // Skip empty and invalid entries
    if (typeof path !== 'string') {
      throw new TypeError('Arguments to path.resolve must be strings');
    } else if (!path) {
      continue;
    }

    resolvedPath = path + '/' + resolvedPath;
    resolvedAbsolute = path.charAt(0) === '/';
  }

  // At this point the path should be resolved to a full absolute path, but
  // handle relative paths to be safe (might happen when process.cwd() fails)

  // Normalize the path
  resolvedPath = normalizeArray(filter(resolvedPath.split('/'), function(p) {
    return !!p;
  }), !resolvedAbsolute).join('/');

  return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';
};

// path.normalize(path)
// posix version
exports.normalize = function(path) {
  var isAbsolute = exports.isAbsolute(path),
      trailingSlash = substr(path, -1) === '/';

  // Normalize the path
  path = normalizeArray(filter(path.split('/'), function(p) {
    return !!p;
  }), !isAbsolute).join('/');

  if (!path && !isAbsolute) {
    path = '.';
  }
  if (path && trailingSlash) {
    path += '/';
  }

  return (isAbsolute ? '/' : '') + path;
};

// posix version
exports.isAbsolute = function(path) {
  return path.charAt(0) === '/';
};

// posix version
exports.join = function() {
  var paths = Array.prototype.slice.call(arguments, 0);
  return exports.normalize(filter(paths, function(p, index) {
    if (typeof p !== 'string') {
      throw new TypeError('Arguments to path.join must be strings');
    }
    return p;
  }).join('/'));
};


// path.relative(from, to)
// posix version
exports.relative = function(from, to) {
  from = exports.resolve(from).substr(1);
  to = exports.resolve(to).substr(1);

  function trim(arr) {
    var start = 0;
    for (; start < arr.length; start++) {
      if (arr[start] !== '') break;
    }

    var end = arr.length - 1;
    for (; end >= 0; end--) {
      if (arr[end] !== '') break;
    }

    if (start > end) return [];
    return arr.slice(start, end - start + 1);
  }

  var fromParts = trim(from.split('/'));
  var toParts = trim(to.split('/'));

  var length = Math.min(fromParts.length, toParts.length);
  var samePartsLength = length;
  for (var i = 0; i < length; i++) {
    if (fromParts[i] !== toParts[i]) {
      samePartsLength = i;
      break;
    }
  }

  var outputParts = [];
  for (var i = samePartsLength; i < fromParts.length; i++) {
    outputParts.push('..');
  }

  outputParts = outputParts.concat(toParts.slice(samePartsLength));

  return outputParts.join('/');
};

exports.sep = '/';
exports.delimiter = ':';

exports.dirname = function (path) {
  if (typeof path !== 'string') path = path + '';
  if (path.length === 0) return '.';
  var code = path.charCodeAt(0);
  var hasRoot = code === 47 /*/*/;
  var end = -1;
  var matchedSlash = true;
  for (var i = path.length - 1; i >= 1; --i) {
    code = path.charCodeAt(i);
    if (code === 47 /*/*/) {
        if (!matchedSlash) {
          end = i;
          break;
        }
      } else {
      // We saw the first non-path separator
      matchedSlash = false;
    }
  }

  if (end === -1) return hasRoot ? '/' : '.';
  if (hasRoot && end === 1) {
    // return '//';
    // Backwards-compat fix:
    return '/';
  }
  return path.slice(0, end);
};

function basename(path) {
  if (typeof path !== 'string') path = path + '';

  var start = 0;
  var end = -1;
  var matchedSlash = true;
  var i;

  for (i = path.length - 1; i >= 0; --i) {
    if (path.charCodeAt(i) === 47 /*/*/) {
        // If we reached a path separator that was not part of a set of path
        // separators at the end of the string, stop now
        if (!matchedSlash) {
          start = i + 1;
          break;
        }
      } else if (end === -1) {
      // We saw the first non-path separator, mark this as the end of our
      // path component
      matchedSlash = false;
      end = i + 1;
    }
  }

  if (end === -1) return '';
  return path.slice(start, end);
}

// Uses a mixed approach for backwards-compatibility, as ext behavior changed
// in new Node.js versions, so only basename() above is backported here
exports.basename = function (path, ext) {
  var f = basename(path);
  if (ext && f.substr(-1 * ext.length) === ext) {
    f = f.substr(0, f.length - ext.length);
  }
  return f;
};

exports.extname = function (path) {
  if (typeof path !== 'string') path = path + '';
  var startDot = -1;
  var startPart = 0;
  var end = -1;
  var matchedSlash = true;
  // Track the state of characters (if any) we see before our first dot and
  // after any path separator we find
  var preDotState = 0;
  for (var i = path.length - 1; i >= 0; --i) {
    var code = path.charCodeAt(i);
    if (code === 47 /*/*/) {
        // If we reached a path separator that was not part of a set of path
        // separators at the end of the string, stop now
        if (!matchedSlash) {
          startPart = i + 1;
          break;
        }
        continue;
      }
    if (end === -1) {
      // We saw the first non-path separator, mark this as the end of our
      // extension
      matchedSlash = false;
      end = i + 1;
    }
    if (code === 46 /*.*/) {
        // If this is our first dot, mark it as the start of our extension
        if (startDot === -1)
          startDot = i;
        else if (preDotState !== 1)
          preDotState = 1;
    } else if (startDot !== -1) {
      // We saw a non-dot and non-path separator before our dot, so we should
      // have a good chance at having a non-empty extension
      preDotState = -1;
    }
  }

  if (startDot === -1 || end === -1 ||
      // We saw a non-dot character immediately before the dot
      preDotState === 0 ||
      // The (right-most) trimmed path component is exactly '..'
      preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {
    return '';
  }
  return path.slice(startDot, end);
};

function filter (xs, f) {
    if (xs.filter) return xs.filter(f);
    var res = [];
    for (var i = 0; i < xs.length; i++) {
        if (f(xs[i], i, xs)) res.push(xs[i]);
    }
    return res;
}

// String.prototype.substr - negative index don't work in IE8
var substr = 'ab'.substr(-1) === 'b'
    ? function (str, start, len) { return str.substr(start, len) }
    : function (str, start, len) {
        if (start < 0) start = str.length + start;
        return str.substr(start, len);
    }
;

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__("4362")))

/***/ }),

/***/ "e01a":
/***/ (function(module, exports, __webpack_require__) {

"use strict";
// `Symbol.prototype.description` getter
// https://tc39.github.io/ecma262/#sec-symbol.prototype.description

var $ = __webpack_require__("23e7");
var DESCRIPTORS = __webpack_require__("83ab");
var global = __webpack_require__("da84");
var has = __webpack_require__("5135");
var isObject = __webpack_require__("861d");
var defineProperty = __webpack_require__("9bf2").f;
var copyConstructorProperties = __webpack_require__("e893");

var NativeSymbol = global.Symbol;

if (DESCRIPTORS && typeof NativeSymbol == 'function' && (!('description' in NativeSymbol.prototype) ||
  // Safari 12 bug
  NativeSymbol().description !== undefined
)) {
  var EmptyStringDescriptionStore = {};
  // wrap Symbol constructor for correct work with undefined description
  var SymbolWrapper = function Symbol() {
    var description = arguments.length < 1 || arguments[0] === undefined ? undefined : String(arguments[0]);
    var result = this instanceof SymbolWrapper
      ? new NativeSymbol(description)
      // in Edge 13, String(Symbol(undefined)) === 'Symbol(undefined)'
      : description === undefined ? NativeSymbol() : NativeSymbol(description);
    if (description === '') EmptyStringDescriptionStore[result] = true;
    return result;
  };
  copyConstructorProperties(SymbolWrapper, NativeSymbol);
  var symbolPrototype = SymbolWrapper.prototype = NativeSymbol.prototype;
  symbolPrototype.constructor = SymbolWrapper;

  var symbolToString = symbolPrototype.toString;
  var native = String(NativeSymbol('test')) == 'Symbol(test)';
  var regexp = /^Symbol\((.*)\)[^)]+$/;
  defineProperty(symbolPrototype, 'description', {
    configurable: true,
    get: function description() {
      var symbol = isObject(this) ? this.valueOf() : this;
      var string = symbolToString.call(symbol);
      if (has(EmptyStringDescriptionStore, symbol)) return '';
      var desc = native ? string.slice(7, -1) : string.replace(regexp, '$1');
      return desc === '' ? undefined : desc;
    }
  });

  $({ global: true, forced: true }, {
    Symbol: SymbolWrapper
  });
}


/***/ }),

/***/ "e163":
/***/ (function(module, exports, __webpack_require__) {

var has = __webpack_require__("5135");
var toObject = __webpack_require__("7b0b");
var sharedKey = __webpack_require__("f772");
var CORRECT_PROTOTYPE_GETTER = __webpack_require__("e177");

var IE_PROTO = sharedKey('IE_PROTO');
var ObjectPrototype = Object.prototype;

// `Object.getPrototypeOf` method
// https://tc39.github.io/ecma262/#sec-object.getprototypeof
module.exports = CORRECT_PROTOTYPE_GETTER ? Object.getPrototypeOf : function (O) {
  O = toObject(O);
  if (has(O, IE_PROTO)) return O[IE_PROTO];
  if (typeof O.constructor == 'function' && O instanceof O.constructor) {
    return O.constructor.prototype;
  } return O instanceof Object ? ObjectPrototype : null;
};


/***/ }),

/***/ "e177":
/***/ (function(module, exports, __webpack_require__) {

var fails = __webpack_require__("d039");

module.exports = !fails(function () {
  function F() { /* empty */ }
  F.prototype.constructor = null;
  return Object.getPrototypeOf(new F()) !== F.prototype;
});


/***/ }),

/***/ "e260":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var toIndexedObject = __webpack_require__("fc6a");
var addToUnscopables = __webpack_require__("44d2");
var Iterators = __webpack_require__("3f8c");
var InternalStateModule = __webpack_require__("69f3");
var defineIterator = __webpack_require__("7dd0");

var ARRAY_ITERATOR = 'Array Iterator';
var setInternalState = InternalStateModule.set;
var getInternalState = InternalStateModule.getterFor(ARRAY_ITERATOR);

// `Array.prototype.entries` method
// https://tc39.github.io/ecma262/#sec-array.prototype.entries
// `Array.prototype.keys` method
// https://tc39.github.io/ecma262/#sec-array.prototype.keys
// `Array.prototype.values` method
// https://tc39.github.io/ecma262/#sec-array.prototype.values
// `Array.prototype[@@iterator]` method
// https://tc39.github.io/ecma262/#sec-array.prototype-@@iterator
// `CreateArrayIterator` internal method
// https://tc39.github.io/ecma262/#sec-createarrayiterator
module.exports = defineIterator(Array, 'Array', function (iterated, kind) {
  setInternalState(this, {
    type: ARRAY_ITERATOR,
    target: toIndexedObject(iterated), // target
    index: 0,                          // next index
    kind: kind                         // kind
  });
// `%ArrayIteratorPrototype%.next` method
// https://tc39.github.io/ecma262/#sec-%arrayiteratorprototype%.next
}, function () {
  var state = getInternalState(this);
  var target = state.target;
  var kind = state.kind;
  var index = state.index++;
  if (!target || index >= target.length) {
    state.target = undefined;
    return { value: undefined, done: true };
  }
  if (kind == 'keys') return { value: index, done: false };
  if (kind == 'values') return { value: target[index], done: false };
  return { value: [index, target[index]], done: false };
}, 'values');

// argumentsList[@@iterator] is %ArrayProto_values%
// https://tc39.github.io/ecma262/#sec-createunmappedargumentsobject
// https://tc39.github.io/ecma262/#sec-createmappedargumentsobject
Iterators.Arguments = Iterators.Array;

// https://tc39.github.io/ecma262/#sec-array.prototype-@@unscopables
addToUnscopables('keys');
addToUnscopables('values');
addToUnscopables('entries');


/***/ }),

/***/ "e2cc":
/***/ (function(module, exports, __webpack_require__) {

var redefine = __webpack_require__("6eeb");

module.exports = function (target, src, options) {
  for (var key in src) redefine(target, key, src[key], options);
  return target;
};


/***/ }),

/***/ "e439":
/***/ (function(module, exports, __webpack_require__) {

var $ = __webpack_require__("23e7");
var fails = __webpack_require__("d039");
var toIndexedObject = __webpack_require__("fc6a");
var nativeGetOwnPropertyDescriptor = __webpack_require__("06cf").f;
var DESCRIPTORS = __webpack_require__("83ab");

var FAILS_ON_PRIMITIVES = fails(function () { nativeGetOwnPropertyDescriptor(1); });
var FORCED = !DESCRIPTORS || FAILS_ON_PRIMITIVES;

// `Object.getOwnPropertyDescriptor` method
// https://tc39.github.io/ecma262/#sec-object.getownpropertydescriptor
$({ target: 'Object', stat: true, forced: FORCED, sham: !DESCRIPTORS }, {
  getOwnPropertyDescriptor: function getOwnPropertyDescriptor(it, key) {
    return nativeGetOwnPropertyDescriptor(toIndexedObject(it), key);
  }
});


/***/ }),

/***/ "e538":
/***/ (function(module, exports, __webpack_require__) {

var wellKnownSymbol = __webpack_require__("b622");

exports.f = wellKnownSymbol;


/***/ }),

/***/ "e667":
/***/ (function(module, exports) {

module.exports = function (exec) {
  try {
    return { error: false, value: exec() };
  } catch (error) {
    return { error: true, value: error };
  }
};


/***/ }),

/***/ "e683":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
 * Creates a new URL by combining the specified URLs
 *
 * @param {string} baseURL The base URL
 * @param {string} relativeURL The relative URL
 * @returns {string} The combined URL
 */
module.exports = function combineURLs(baseURL, relativeURL) {
  return relativeURL
    ? baseURL.replace(/\/+$/, '') + '/' + relativeURL.replace(/^\/+/, '')
    : baseURL;
};


/***/ }),

/***/ "e6cf":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__("23e7");
var IS_PURE = __webpack_require__("c430");
var global = __webpack_require__("da84");
var getBuiltIn = __webpack_require__("d066");
var NativePromise = __webpack_require__("fea9");
var redefine = __webpack_require__("6eeb");
var redefineAll = __webpack_require__("e2cc");
var setToStringTag = __webpack_require__("d44e");
var setSpecies = __webpack_require__("2626");
var isObject = __webpack_require__("861d");
var aFunction = __webpack_require__("1c0b");
var anInstance = __webpack_require__("19aa");
var inspectSource = __webpack_require__("8925");
var iterate = __webpack_require__("2266");
var checkCorrectnessOfIteration = __webpack_require__("1c7e");
var speciesConstructor = __webpack_require__("4840");
var task = __webpack_require__("2cf4").set;
var microtask = __webpack_require__("b575");
var promiseResolve = __webpack_require__("cdf9");
var hostReportErrors = __webpack_require__("44de");
var newPromiseCapabilityModule = __webpack_require__("f069");
var perform = __webpack_require__("e667");
var InternalStateModule = __webpack_require__("69f3");
var isForced = __webpack_require__("94ca");
var wellKnownSymbol = __webpack_require__("b622");
var IS_NODE = __webpack_require__("605d");
var V8_VERSION = __webpack_require__("2d00");

var SPECIES = wellKnownSymbol('species');
var PROMISE = 'Promise';
var getInternalState = InternalStateModule.get;
var setInternalState = InternalStateModule.set;
var getInternalPromiseState = InternalStateModule.getterFor(PROMISE);
var PromiseConstructor = NativePromise;
var TypeError = global.TypeError;
var document = global.document;
var process = global.process;
var $fetch = getBuiltIn('fetch');
var newPromiseCapability = newPromiseCapabilityModule.f;
var newGenericPromiseCapability = newPromiseCapability;
var DISPATCH_EVENT = !!(document && document.createEvent && global.dispatchEvent);
var NATIVE_REJECTION_EVENT = typeof PromiseRejectionEvent == 'function';
var UNHANDLED_REJECTION = 'unhandledrejection';
var REJECTION_HANDLED = 'rejectionhandled';
var PENDING = 0;
var FULFILLED = 1;
var REJECTED = 2;
var HANDLED = 1;
var UNHANDLED = 2;
var Internal, OwnPromiseCapability, PromiseWrapper, nativeThen;

var FORCED = isForced(PROMISE, function () {
  var GLOBAL_CORE_JS_PROMISE = inspectSource(PromiseConstructor) !== String(PromiseConstructor);
  if (!GLOBAL_CORE_JS_PROMISE) {
    // V8 6.6 (Node 10 and Chrome 66) have a bug with resolving custom thenables
    // https://bugs.chromium.org/p/chromium/issues/detail?id=830565
    // We can't detect it synchronously, so just check versions
    if (V8_VERSION === 66) return true;
    // Unhandled rejections tracking support, NodeJS Promise without it fails @@species test
    if (!IS_NODE && !NATIVE_REJECTION_EVENT) return true;
  }
  // We need Promise#finally in the pure version for preventing prototype pollution
  if (IS_PURE && !PromiseConstructor.prototype['finally']) return true;
  // We can't use @@species feature detection in V8 since it causes
  // deoptimization and performance degradation
  // https://github.com/zloirock/core-js/issues/679
  if (V8_VERSION >= 51 && /native code/.test(PromiseConstructor)) return false;
  // Detect correctness of subclassing with @@species support
  var promise = PromiseConstructor.resolve(1);
  var FakePromise = function (exec) {
    exec(function () { /* empty */ }, function () { /* empty */ });
  };
  var constructor = promise.constructor = {};
  constructor[SPECIES] = FakePromise;
  return !(promise.then(function () { /* empty */ }) instanceof FakePromise);
});

var INCORRECT_ITERATION = FORCED || !checkCorrectnessOfIteration(function (iterable) {
  PromiseConstructor.all(iterable)['catch'](function () { /* empty */ });
});

// helpers
var isThenable = function (it) {
  var then;
  return isObject(it) && typeof (then = it.then) == 'function' ? then : false;
};

var notify = function (state, isReject) {
  if (state.notified) return;
  state.notified = true;
  var chain = state.reactions;
  microtask(function () {
    var value = state.value;
    var ok = state.state == FULFILLED;
    var index = 0;
    // variable length - can't use forEach
    while (chain.length > index) {
      var reaction = chain[index++];
      var handler = ok ? reaction.ok : reaction.fail;
      var resolve = reaction.resolve;
      var reject = reaction.reject;
      var domain = reaction.domain;
      var result, then, exited;
      try {
        if (handler) {
          if (!ok) {
            if (state.rejection === UNHANDLED) onHandleUnhandled(state);
            state.rejection = HANDLED;
          }
          if (handler === true) result = value;
          else {
            if (domain) domain.enter();
            result = handler(value); // can throw
            if (domain) {
              domain.exit();
              exited = true;
            }
          }
          if (result === reaction.promise) {
            reject(TypeError('Promise-chain cycle'));
          } else if (then = isThenable(result)) {
            then.call(result, resolve, reject);
          } else resolve(result);
        } else reject(value);
      } catch (error) {
        if (domain && !exited) domain.exit();
        reject(error);
      }
    }
    state.reactions = [];
    state.notified = false;
    if (isReject && !state.rejection) onUnhandled(state);
  });
};

var dispatchEvent = function (name, promise, reason) {
  var event, handler;
  if (DISPATCH_EVENT) {
    event = document.createEvent('Event');
    event.promise = promise;
    event.reason = reason;
    event.initEvent(name, false, true);
    global.dispatchEvent(event);
  } else event = { promise: promise, reason: reason };
  if (!NATIVE_REJECTION_EVENT && (handler = global['on' + name])) handler(event);
  else if (name === UNHANDLED_REJECTION) hostReportErrors('Unhandled promise rejection', reason);
};

var onUnhandled = function (state) {
  task.call(global, function () {
    var promise = state.facade;
    var value = state.value;
    var IS_UNHANDLED = isUnhandled(state);
    var result;
    if (IS_UNHANDLED) {
      result = perform(function () {
        if (IS_NODE) {
          process.emit('unhandledRejection', value, promise);
        } else dispatchEvent(UNHANDLED_REJECTION, promise, value);
      });
      // Browsers should not trigger `rejectionHandled` event if it was handled here, NodeJS - should
      state.rejection = IS_NODE || isUnhandled(state) ? UNHANDLED : HANDLED;
      if (result.error) throw result.value;
    }
  });
};

var isUnhandled = function (state) {
  return state.rejection !== HANDLED && !state.parent;
};

var onHandleUnhandled = function (state) {
  task.call(global, function () {
    var promise = state.facade;
    if (IS_NODE) {
      process.emit('rejectionHandled', promise);
    } else dispatchEvent(REJECTION_HANDLED, promise, state.value);
  });
};

var bind = function (fn, state, unwrap) {
  return function (value) {
    fn(state, value, unwrap);
  };
};

var internalReject = function (state, value, unwrap) {
  if (state.done) return;
  state.done = true;
  if (unwrap) state = unwrap;
  state.value = value;
  state.state = REJECTED;
  notify(state, true);
};

var internalResolve = function (state, value, unwrap) {
  if (state.done) return;
  state.done = true;
  if (unwrap) state = unwrap;
  try {
    if (state.facade === value) throw TypeError("Promise can't be resolved itself");
    var then = isThenable(value);
    if (then) {
      microtask(function () {
        var wrapper = { done: false };
        try {
          then.call(value,
            bind(internalResolve, wrapper, state),
            bind(internalReject, wrapper, state)
          );
        } catch (error) {
          internalReject(wrapper, error, state);
        }
      });
    } else {
      state.value = value;
      state.state = FULFILLED;
      notify(state, false);
    }
  } catch (error) {
    internalReject({ done: false }, error, state);
  }
};

// constructor polyfill
if (FORCED) {
  // 25.4.3.1 Promise(executor)
  PromiseConstructor = function Promise(executor) {
    anInstance(this, PromiseConstructor, PROMISE);
    aFunction(executor);
    Internal.call(this);
    var state = getInternalState(this);
    try {
      executor(bind(internalResolve, state), bind(internalReject, state));
    } catch (error) {
      internalReject(state, error);
    }
  };
  // eslint-disable-next-line no-unused-vars
  Internal = function Promise(executor) {
    setInternalState(this, {
      type: PROMISE,
      done: false,
      notified: false,
      parent: false,
      reactions: [],
      rejection: false,
      state: PENDING,
      value: undefined
    });
  };
  Internal.prototype = redefineAll(PromiseConstructor.prototype, {
    // `Promise.prototype.then` method
    // https://tc39.github.io/ecma262/#sec-promise.prototype.then
    then: function then(onFulfilled, onRejected) {
      var state = getInternalPromiseState(this);
      var reaction = newPromiseCapability(speciesConstructor(this, PromiseConstructor));
      reaction.ok = typeof onFulfilled == 'function' ? onFulfilled : true;
      reaction.fail = typeof onRejected == 'function' && onRejected;
      reaction.domain = IS_NODE ? process.domain : undefined;
      state.parent = true;
      state.reactions.push(reaction);
      if (state.state != PENDING) notify(state, false);
      return reaction.promise;
    },
    // `Promise.prototype.catch` method
    // https://tc39.github.io/ecma262/#sec-promise.prototype.catch
    'catch': function (onRejected) {
      return this.then(undefined, onRejected);
    }
  });
  OwnPromiseCapability = function () {
    var promise = new Internal();
    var state = getInternalState(promise);
    this.promise = promise;
    this.resolve = bind(internalResolve, state);
    this.reject = bind(internalReject, state);
  };
  newPromiseCapabilityModule.f = newPromiseCapability = function (C) {
    return C === PromiseConstructor || C === PromiseWrapper
      ? new OwnPromiseCapability(C)
      : newGenericPromiseCapability(C);
  };

  if (!IS_PURE && typeof NativePromise == 'function') {
    nativeThen = NativePromise.prototype.then;

    // wrap native Promise#then for native async functions
    redefine(NativePromise.prototype, 'then', function then(onFulfilled, onRejected) {
      var that = this;
      return new PromiseConstructor(function (resolve, reject) {
        nativeThen.call(that, resolve, reject);
      }).then(onFulfilled, onRejected);
    // https://github.com/zloirock/core-js/issues/640
    }, { unsafe: true });

    // wrap fetch result
    if (typeof $fetch == 'function') $({ global: true, enumerable: true, forced: true }, {
      // eslint-disable-next-line no-unused-vars
      fetch: function fetch(input /* , init */) {
        return promiseResolve(PromiseConstructor, $fetch.apply(global, arguments));
      }
    });
  }
}

$({ global: true, wrap: true, forced: FORCED }, {
  Promise: PromiseConstructor
});

setToStringTag(PromiseConstructor, PROMISE, false, true);
setSpecies(PROMISE);

PromiseWrapper = getBuiltIn(PROMISE);

// statics
$({ target: PROMISE, stat: true, forced: FORCED }, {
  // `Promise.reject` method
  // https://tc39.github.io/ecma262/#sec-promise.reject
  reject: function reject(r) {
    var capability = newPromiseCapability(this);
    capability.reject.call(undefined, r);
    return capability.promise;
  }
});

$({ target: PROMISE, stat: true, forced: IS_PURE || FORCED }, {
  // `Promise.resolve` method
  // https://tc39.github.io/ecma262/#sec-promise.resolve
  resolve: function resolve(x) {
    return promiseResolve(IS_PURE && this === PromiseWrapper ? PromiseConstructor : this, x);
  }
});

$({ target: PROMISE, stat: true, forced: INCORRECT_ITERATION }, {
  // `Promise.all` method
  // https://tc39.github.io/ecma262/#sec-promise.all
  all: function all(iterable) {
    var C = this;
    var capability = newPromiseCapability(C);
    var resolve = capability.resolve;
    var reject = capability.reject;
    var result = perform(function () {
      var $promiseResolve = aFunction(C.resolve);
      var values = [];
      var counter = 0;
      var remaining = 1;
      iterate(iterable, function (promise) {
        var index = counter++;
        var alreadyCalled = false;
        values.push(undefined);
        remaining++;
        $promiseResolve.call(C, promise).then(function (value) {
          if (alreadyCalled) return;
          alreadyCalled = true;
          values[index] = value;
          --remaining || resolve(values);
        }, reject);
      });
      --remaining || resolve(values);
    });
    if (result.error) reject(result.value);
    return capability.promise;
  },
  // `Promise.race` method
  // https://tc39.github.io/ecma262/#sec-promise.race
  race: function race(iterable) {
    var C = this;
    var capability = newPromiseCapability(C);
    var reject = capability.reject;
    var result = perform(function () {
      var $promiseResolve = aFunction(C.resolve);
      iterate(iterable, function (promise) {
        $promiseResolve.call(C, promise).then(capability.resolve, reject);
      });
    });
    if (result.error) reject(result.value);
    return capability.promise;
  }
});


/***/ }),

/***/ "e6fd":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_vue_style_loader_index_js_ref_6_oneOf_1_0_node_modules_css_loader_dist_cjs_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_2_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_3_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_ImageDetail_vue_vue_type_style_index_0_id_3ef6f208_scoped_true_lang_css___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("aae9");
/* harmony import */ var _node_modules_vue_style_loader_index_js_ref_6_oneOf_1_0_node_modules_css_loader_dist_cjs_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_2_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_3_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_ImageDetail_vue_vue_type_style_index_0_id_3ef6f208_scoped_true_lang_css___WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_vue_style_loader_index_js_ref_6_oneOf_1_0_node_modules_css_loader_dist_cjs_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_2_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_3_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_ImageDetail_vue_vue_type_style_index_0_id_3ef6f208_scoped_true_lang_css___WEBPACK_IMPORTED_MODULE_0__);
/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _node_modules_vue_style_loader_index_js_ref_6_oneOf_1_0_node_modules_css_loader_dist_cjs_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_2_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_3_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_ImageDetail_vue_vue_type_style_index_0_id_3ef6f208_scoped_true_lang_css___WEBPACK_IMPORTED_MODULE_0__) if(["default"].indexOf(__WEBPACK_IMPORT_KEY__) < 0) (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _node_modules_vue_style_loader_index_js_ref_6_oneOf_1_0_node_modules_css_loader_dist_cjs_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_2_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_3_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_ImageDetail_vue_vue_type_style_index_0_id_3ef6f208_scoped_true_lang_css___WEBPACK_IMPORTED_MODULE_0__[key]; }) }(__WEBPACK_IMPORT_KEY__));


/***/ }),

/***/ "e835":
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__("99af");

__webpack_require__("cca6");

var _objectSpread = __webpack_require__("ded3");

var _objectWithoutProperties = __webpack_require__("4082");

module.exports = {
  functional: true,
  render: function render(_h, _vm) {
    var _c = _vm._c,
        _v = _vm._v,
        data = _vm.data,
        _vm$children = _vm.children,
        children = _vm$children === void 0 ? [] : _vm$children;

    var classNames = data.class,
        staticClass = data.staticClass,
        style = data.style,
        staticStyle = data.staticStyle,
        _data$attrs = data.attrs,
        attrs = _data$attrs === void 0 ? {} : _data$attrs,
        rest = _objectWithoutProperties(data, ["class", "staticClass", "style", "staticStyle", "attrs"]);

    return _c('svg', _objectSpread({
      class: [classNames, staticClass],
      style: [style, staticStyle],
      attrs: Object.assign({
        "xmlns": "http://www.w3.org/2000/svg",
        "width": "18.999",
        "height": "11.664"
      }, attrs)
    }, rest), children.concat([_c('defs'), _c('path', {
      staticClass: "a",
      attrs: {
        "d": "M0 0v5h5V0zm0 6.665v5h5v-5zM7 0v5h5V0zm0 6.665v5h5v-5zM14 0v5h5V0zm0 6.665v5h5v-5z"
      }
    })]));
  }
};

/***/ }),

/***/ "e893":
/***/ (function(module, exports, __webpack_require__) {

var has = __webpack_require__("5135");
var ownKeys = __webpack_require__("56ef");
var getOwnPropertyDescriptorModule = __webpack_require__("06cf");
var definePropertyModule = __webpack_require__("9bf2");

module.exports = function (target, source) {
  var keys = ownKeys(source);
  var defineProperty = definePropertyModule.f;
  var getOwnPropertyDescriptor = getOwnPropertyDescriptorModule.f;
  for (var i = 0; i < keys.length; i++) {
    var key = keys[i];
    if (!has(target, key)) defineProperty(target, key, getOwnPropertyDescriptor(source, key));
  }
};


/***/ }),

/***/ "e8b5":
/***/ (function(module, exports, __webpack_require__) {

var classof = __webpack_require__("c6b6");

// `IsArray` abstract operation
// https://tc39.github.io/ecma262/#sec-isarray
module.exports = Array.isArray || function isArray(arg) {
  return classof(arg) == 'Array';
};


/***/ }),

/***/ "e92b":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_vue_style_loader_index_js_ref_8_oneOf_1_0_node_modules_css_loader_dist_cjs_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_2_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_3_node_modules_sass_loader_dist_cjs_js_ref_8_oneOf_1_4_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_ItemsList_vue_vue_type_style_index_0_id_11f9ef97_scoped_true_lang_scss___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("d0bd");
/* harmony import */ var _node_modules_vue_style_loader_index_js_ref_8_oneOf_1_0_node_modules_css_loader_dist_cjs_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_2_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_3_node_modules_sass_loader_dist_cjs_js_ref_8_oneOf_1_4_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_ItemsList_vue_vue_type_style_index_0_id_11f9ef97_scoped_true_lang_scss___WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_vue_style_loader_index_js_ref_8_oneOf_1_0_node_modules_css_loader_dist_cjs_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_2_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_3_node_modules_sass_loader_dist_cjs_js_ref_8_oneOf_1_4_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_ItemsList_vue_vue_type_style_index_0_id_11f9ef97_scoped_true_lang_scss___WEBPACK_IMPORTED_MODULE_0__);
/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _node_modules_vue_style_loader_index_js_ref_8_oneOf_1_0_node_modules_css_loader_dist_cjs_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_2_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_3_node_modules_sass_loader_dist_cjs_js_ref_8_oneOf_1_4_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_ItemsList_vue_vue_type_style_index_0_id_11f9ef97_scoped_true_lang_scss___WEBPACK_IMPORTED_MODULE_0__) if(["default"].indexOf(__WEBPACK_IMPORT_KEY__) < 0) (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _node_modules_vue_style_loader_index_js_ref_8_oneOf_1_0_node_modules_css_loader_dist_cjs_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_2_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_3_node_modules_sass_loader_dist_cjs_js_ref_8_oneOf_1_4_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_ItemsList_vue_vue_type_style_index_0_id_11f9ef97_scoped_true_lang_scss___WEBPACK_IMPORTED_MODULE_0__[key]; }) }(__WEBPACK_IMPORT_KEY__));


/***/ }),

/***/ "e95a":
/***/ (function(module, exports, __webpack_require__) {

var wellKnownSymbol = __webpack_require__("b622");
var Iterators = __webpack_require__("3f8c");

var ITERATOR = wellKnownSymbol('iterator');
var ArrayPrototype = Array.prototype;

// check on default Array iterator
module.exports = function (it) {
  return it !== undefined && (Iterators.Array === it || ArrayPrototype[ITERATOR] === it);
};


/***/ }),

/***/ "eb7e":
/***/ (function(module, exports, __webpack_require__) {

// Imports
var ___CSS_LOADER_API_IMPORT___ = __webpack_require__("24fb");
exports = ___CSS_LOADER_API_IMPORT___(false);
// Module
exports.push([module.i, ".modal[data-v-3ef6f208]{display:flex;position:fixed;z-index:1;left:0;top:0;width:100%;height:100%;overflow:auto;background-color:#000;background-color:rgba(0,0,0,.9)}.modal-content[data-v-3ef6f208]{margin:auto;display:block;width:80%;max-width:1200px;height:100%}.img-content[data-v-3ef6f208]{max-width:80%}.modal-content[data-v-3ef6f208]{-webkit-animation-name:zoom-data-v-3ef6f208;-webkit-animation-duration:.6s;animation-name:zoom-data-v-3ef6f208;animation-duration:.6s}@-webkit-keyframes zoom-data-v-3ef6f208{0%{-webkit-transform:scale(0)}to{-webkit-transform:scale(1)}}@keyframes zoom-data-v-3ef6f208{0%{transform:scale(0)}to{transform:scale(1)}}.close[data-v-3ef6f208]{position:absolute;top:15px;right:35px;color:#f1f1f1;font-size:40px;font-weight:700;transition:.3s}.close[data-v-3ef6f208]:focus,.close[data-v-3ef6f208]:hover{color:#bbb;text-decoration:none;cursor:pointer}@media only screen and (max-width:700px){.modal-content[data-v-3ef6f208]{width:100%}.img-content[data-v-3ef6f208]{max-width:100%}}.img-button[data-v-3ef6f208]{width:50px;text-align:center;background-color:rgba(0,0,0,.3);height:50px;border-radius:25px;margin:8px}.img-button[data-v-3ef6f208]:hover{background-color:rgba(0,0,0,.7);cursor:pointer}", ""]);
// Exports
module.exports = exports;


/***/ }),

/***/ "f069":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var aFunction = __webpack_require__("1c0b");

var PromiseCapability = function (C) {
  var resolve, reject;
  this.promise = new C(function ($$resolve, $$reject) {
    if (resolve !== undefined || reject !== undefined) throw TypeError('Bad Promise constructor');
    resolve = $$resolve;
    reject = $$reject;
  });
  this.resolve = aFunction(resolve);
  this.reject = aFunction(reject);
};

// 25.4.1.5 NewPromiseCapability(C)
module.exports.f = function (C) {
  return new PromiseCapability(C);
};


/***/ }),

/***/ "f0e4":
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__("c975");

__webpack_require__("b64b");

function _objectWithoutPropertiesLoose(source, excluded) {
  if (source == null) return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;

  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0) continue;
    target[key] = source[key];
  }

  return target;
}

module.exports = _objectWithoutPropertiesLoose;

/***/ }),

/***/ "f183":
/***/ (function(module, exports, __webpack_require__) {

var hiddenKeys = __webpack_require__("d012");
var isObject = __webpack_require__("861d");
var has = __webpack_require__("5135");
var defineProperty = __webpack_require__("9bf2").f;
var uid = __webpack_require__("90e3");
var FREEZING = __webpack_require__("bb2f");

var METADATA = uid('meta');
var id = 0;

var isExtensible = Object.isExtensible || function () {
  return true;
};

var setMetadata = function (it) {
  defineProperty(it, METADATA, { value: {
    objectID: 'O' + ++id, // object ID
    weakData: {}          // weak collections IDs
  } });
};

var fastKey = function (it, create) {
  // return a primitive with prefix
  if (!isObject(it)) return typeof it == 'symbol' ? it : (typeof it == 'string' ? 'S' : 'P') + it;
  if (!has(it, METADATA)) {
    // can't set metadata to uncaught frozen object
    if (!isExtensible(it)) return 'F';
    // not necessary to add metadata
    if (!create) return 'E';
    // add missing metadata
    setMetadata(it);
  // return object ID
  } return it[METADATA].objectID;
};

var getWeakData = function (it, create) {
  if (!has(it, METADATA)) {
    // can't set metadata to uncaught frozen object
    if (!isExtensible(it)) return true;
    // not necessary to add metadata
    if (!create) return false;
    // add missing metadata
    setMetadata(it);
  // return the store of weak collections IDs
  } return it[METADATA].weakData;
};

// add metadata on freeze-family methods calling
var onFreeze = function (it) {
  if (FREEZING && meta.REQUIRED && isExtensible(it) && !has(it, METADATA)) setMetadata(it);
  return it;
};

var meta = module.exports = {
  REQUIRED: false,
  fastKey: fastKey,
  getWeakData: getWeakData,
  onFreeze: onFreeze
};

hiddenKeys[METADATA] = true;


/***/ }),

/***/ "f39c":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_vue_style_loader_index_js_ref_8_oneOf_1_0_node_modules_css_loader_dist_cjs_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_2_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_3_node_modules_sass_loader_dist_cjs_js_ref_8_oneOf_1_4_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_ItemDetail_vue_vue_type_style_index_0_id_e28a940e_lang_scss_scoped_true___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("6a2d");
/* harmony import */ var _node_modules_vue_style_loader_index_js_ref_8_oneOf_1_0_node_modules_css_loader_dist_cjs_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_2_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_3_node_modules_sass_loader_dist_cjs_js_ref_8_oneOf_1_4_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_ItemDetail_vue_vue_type_style_index_0_id_e28a940e_lang_scss_scoped_true___WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_vue_style_loader_index_js_ref_8_oneOf_1_0_node_modules_css_loader_dist_cjs_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_2_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_3_node_modules_sass_loader_dist_cjs_js_ref_8_oneOf_1_4_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_ItemDetail_vue_vue_type_style_index_0_id_e28a940e_lang_scss_scoped_true___WEBPACK_IMPORTED_MODULE_0__);
/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _node_modules_vue_style_loader_index_js_ref_8_oneOf_1_0_node_modules_css_loader_dist_cjs_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_2_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_3_node_modules_sass_loader_dist_cjs_js_ref_8_oneOf_1_4_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_ItemDetail_vue_vue_type_style_index_0_id_e28a940e_lang_scss_scoped_true___WEBPACK_IMPORTED_MODULE_0__) if(["default"].indexOf(__WEBPACK_IMPORT_KEY__) < 0) (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _node_modules_vue_style_loader_index_js_ref_8_oneOf_1_0_node_modules_css_loader_dist_cjs_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_2_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_3_node_modules_sass_loader_dist_cjs_js_ref_8_oneOf_1_4_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_ItemDetail_vue_vue_type_style_index_0_id_e28a940e_lang_scss_scoped_true___WEBPACK_IMPORTED_MODULE_0__[key]; }) }(__WEBPACK_IMPORT_KEY__));


/***/ }),

/***/ "f457":
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__("5dee");
if(typeof content === 'string') content = [[module.i, content, '']];
if(content.locals) module.exports = content.locals;
// add CSS to Shadow Root
var add = __webpack_require__("35d6").default
module.exports.__inject__ = function (shadowRoot) {
  add("fc0952da", content, shadowRoot)
};

/***/ }),

/***/ "f5df":
/***/ (function(module, exports, __webpack_require__) {

var TO_STRING_TAG_SUPPORT = __webpack_require__("00ee");
var classofRaw = __webpack_require__("c6b6");
var wellKnownSymbol = __webpack_require__("b622");

var TO_STRING_TAG = wellKnownSymbol('toStringTag');
// ES3 wrong here
var CORRECT_ARGUMENTS = classofRaw(function () { return arguments; }()) == 'Arguments';

// fallback for IE11 Script Access Denied error
var tryGet = function (it, key) {
  try {
    return it[key];
  } catch (error) { /* empty */ }
};

// getting tag from ES6+ `Object.prototype.toString`
module.exports = TO_STRING_TAG_SUPPORT ? classofRaw : function (it) {
  var O, tag, result;
  return it === undefined ? 'Undefined' : it === null ? 'Null'
    // @@toStringTag case
    : typeof (tag = tryGet(O = Object(it), TO_STRING_TAG)) == 'string' ? tag
    // builtinTag case
    : CORRECT_ARGUMENTS ? classofRaw(O)
    // ES3 arguments fallback
    : (result = classofRaw(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : result;
};


/***/ }),

/***/ "f6b4":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__("c532");

function InterceptorManager() {
  this.handlers = [];
}

/**
 * Add a new interceptor to the stack
 *
 * @param {Function} fulfilled The function to handle `then` for a `Promise`
 * @param {Function} rejected The function to handle `reject` for a `Promise`
 *
 * @return {Number} An ID used to remove interceptor later
 */
InterceptorManager.prototype.use = function use(fulfilled, rejected) {
  this.handlers.push({
    fulfilled: fulfilled,
    rejected: rejected
  });
  return this.handlers.length - 1;
};

/**
 * Remove an interceptor from the stack
 *
 * @param {Number} id The ID that was returned by `use`
 */
InterceptorManager.prototype.eject = function eject(id) {
  if (this.handlers[id]) {
    this.handlers[id] = null;
  }
};

/**
 * Iterate over all the registered interceptors
 *
 * This method is particularly useful for skipping over any
 * interceptors that may have become `null` calling `eject`.
 *
 * @param {Function} fn The function to call for each interceptor
 */
InterceptorManager.prototype.forEach = function forEach(fn) {
  utils.forEach(this.handlers, function forEachHandler(h) {
    if (h !== null) {
      fn(h);
    }
  });
};

module.exports = InterceptorManager;


/***/ }),

/***/ "f772":
/***/ (function(module, exports, __webpack_require__) {

var shared = __webpack_require__("5692");
var uid = __webpack_require__("90e3");

var keys = shared('keys');

module.exports = function (key) {
  return keys[key] || (keys[key] = uid(key));
};


/***/ }),

/***/ "fc6a":
/***/ (function(module, exports, __webpack_require__) {

// toObject with fallback for non-array-like ES3 strings
var IndexedObject = __webpack_require__("44ad");
var requireObjectCoercible = __webpack_require__("1d80");

module.exports = function (it) {
  return IndexedObject(requireObjectCoercible(it));
};


/***/ }),

/***/ "fdbc":
/***/ (function(module, exports) {

// iterable DOM collections
// flag - `iterable` interface - 'entries', 'keys', 'values', 'forEach' methods
module.exports = {
  CSSRuleList: 0,
  CSSStyleDeclaration: 0,
  CSSValueList: 0,
  ClientRectList: 0,
  DOMRectList: 0,
  DOMStringList: 0,
  DOMTokenList: 1,
  DataTransferItemList: 0,
  FileList: 0,
  HTMLAllCollection: 0,
  HTMLCollection: 0,
  HTMLFormElement: 0,
  HTMLSelectElement: 0,
  MediaList: 0,
  MimeTypeArray: 0,
  NamedNodeMap: 0,
  NodeList: 1,
  PaintRequestList: 0,
  Plugin: 0,
  PluginArray: 0,
  SVGLengthList: 0,
  SVGNumberList: 0,
  SVGPathSegList: 0,
  SVGPointList: 0,
  SVGStringList: 0,
  SVGTransformList: 0,
  SourceBufferList: 0,
  StyleSheetList: 0,
  TextTrackCueList: 0,
  TextTrackList: 0,
  TouchList: 0
};


/***/ }),

/***/ "fdbf":
/***/ (function(module, exports, __webpack_require__) {

var NATIVE_SYMBOL = __webpack_require__("4930");

module.exports = NATIVE_SYMBOL
  // eslint-disable-next-line no-undef
  && !Symbol.sham
  // eslint-disable-next-line no-undef
  && typeof Symbol.iterator == 'symbol';


/***/ }),

/***/ "fea9":
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__("da84");

module.exports = global.Promise;


/***/ })

/******/ });
//# sourceMappingURL=odh-recipe.js.map